import{bo as l,bp as i,ag as c,L as n,bq as u,br as A}from"./index-e8217573.js";class d{isFormDirty(){const e=Object.keys(sessionStorage);console.log(e);let o=!1;for(const t of e)if(o=t.includes(l.ACL_GUARD_DIRTY_STATUS_PREFIX),o)break;return o}isAclApplicable(){return i()}isRouteHasAccess(e){var t;const o=JSON.parse(c(n.MENU_LIST_MAPPING)||"[]");if(o.length>0){console.log("path",e);let s={};const r=o.find(a=>e.includes(a.path));if(r){s=r;const a={path:e,create:s.roleFeature.create,update:s.roleFeature.update,read:s.roleFeature.read,delete:s.roleFeature.delete,softDelete:!1,approve:s.roleFeature.approve};u(a)}if((t=r==null?void 0:r.roleFeature)!=null&&t.read)return!0}return!1}async getRouteAccessModel(e){const o=JSON.parse(c(n.MENU_LIST_MAPPING)||"[]");let t={};if(o.length>0){const r=o.find(a=>e.includes(a.path));r&&(t=r)}return{path:e,create:t.roleFeature.create,update:t.roleFeature.update,read:t.roleFeature.read,delete:t.roleFeature.delete,softDelete:!1,approve:t.roleFeature.approve}}saveRouteAccessControl(e){u(e)}getRouteAccessControl(){return A()}clearFormDirty(){const e=Object.keys(sessionStorage);console.log(e);let o=!1;for(const t of e){const s=t;o=s.includes(l.ACL_GUARD_DIRTY_STATUS_PREFIX),o&&sessionStorage.removeItem(s)}}}const p=new d;export{p as A};
//# sourceMappingURL=ACLService-e19daf7c.js.map
