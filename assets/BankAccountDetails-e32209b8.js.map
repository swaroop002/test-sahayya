{"version":3,"file":"BankAccountDetails-e32209b8.js","sources":["../../src/views/transaction/PageDDE/Login/PageApplicant/BankAccountDetails/BankAccountDetails.tsx"],"sourcesContent":["import { RouteProps } from \"hoc/withRouter\";\nimport { ChangeEvent, forwardRef, useImperativeHandle, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport DocumentUploader, { IDocumentUploaderRef } from \"components/DocumentUploader\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport { ToastPositionType } from \"primereact/toast\";\n\n// --------- ---------- //\nimport AutoComplete from \"components/AutoComplete\";\nimport TextData from \"components/TextData\";\n\n// --------- ---------- //\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { initialBankAccountDetailsData } from \"../../Helper\";\n\n// --------- ---------- //\nimport BankAccountDetailsService from \"services/transaction/DDE/BankAccountDetailsService\";\n\n// --------- ---------- //\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\n\n// --------- ---------- //\n\nimport { IOcrRelatedData } from \"interface/common\";\nimport {\n  DOCUMENT_CATEGORY,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  PAGE_TYPE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n} from \"utils/Constant\";\n\ntype PageType = keyof typeof PAGE_TYPE;\n\nexport interface IBankAccountDetailsRef {\n  save: () => IBankAccountDetails | undefined;\n  remove: () => IBankAccountDetails | undefined;\n  onSaveSuccess: () => void;\n  resetValidator: () => any;\n}\n\nexport interface IBankAccountDetails {\n  uid?: string;\n  isActive?: boolean;\n  accountHolderName?: string;\n  IFSCCode?: any;\n  bankName?: string;\n  branchName?: string;\n  accountType?: string;\n  accountNumber?: string;\n  loanDocuments: any;\n}\ninterface IProps extends RouteProps {\n  data: IBankAccountDetails;\n  isLoading?: boolean;\n  disabled?: boolean;\n  disabledSaveMenu?: boolean;\n  cardNumber?: number;\n  pageType?: PageType;\n  dropDownOptions: any;\n  documentCategory?: string;\n  ocrRelatedData?: IOcrRelatedData;\n  onSaveBankAccountDetails: () => void;\n  onRemoveBankAccountDetails?: () => void;\n}\n\nconst BankAccountDetails = forwardRef<IBankAccountDetailsRef, IProps>((props, ref) => {\n  const {\n    data = initialBankAccountDetailsData,\n    isLoading,\n    disabled,\n    disabledSaveMenu,\n    cardNumber,\n    pageType,\n    ocrRelatedData,\n    dropDownOptions,\n    documentCategory = DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BANK_ACCOUNT_DOCUMENT,\n    onSaveBankAccountDetails,\n    onRemoveBankAccountDetails,\n  } = props;\n\n  // ----------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IBankAccountDetails>(data);\n  const [pageMode, setPageMode] = useState<string>(PAGE_MODE.VIEW);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [isSuggestionLoading, setIsSuggestionLoading] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\"); //NOSONAR\n  const [triggerToast, setTriggerToast] = useState(false);\n\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<\n    {\n      name: string | undefined;\n      code: string | undefined;\n    }[]\n  >([]);\n\n  const [renderConfig, setRenderConfig] = useState<any>({\n    isBankProofMandatory: !pageType,\n  });\n\n  // --------------------- ref ---------------------------- //\n\n  const documentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = [\n    {\n      className: \"\",\n      label: \"Remove\",\n      command: () => {\n        onRemoveBankAccountDetails?.();\n      },\n      disabled: cardNumber === 0,\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  // initial rendering callback without conditions and dependency\n  // do not add dependency for this useEffect - create new useEffect if needed\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    onSaveSuccess: onSaveSuccess,\n    remove: onRemove,\n    resetValidator: resetValidator,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n  const handleChange = (e: any) => {\n    setPageObj({\n      ...pageObj,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleFilterIFSCCodeChange = (event: any) => {\n    const { name, value } = event.target;\n    if (typeof value === \"object\") {\n      setPageObj((prevPageObj: any) => ({\n        ...prevPageObj,\n        [name]: { name: value?.ifscCode, uid: value?.uid },\n        bankName: value?.bank?.name,\n        branchName: value?.branch,\n      }));\n    } else {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        [name]: { name: value },\n        bankName: \"\",\n        branchName: \"\",\n      }));\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n  const onSaveSuccess = () => setPageMode(PAGE_MODE.VIEW);\n\n  const onRemove = () => {\n    const preparedPageObj: IBankAccountDetails = {\n      ...pageObj,\n    };\n\n    return { ...preparedPageObj, isActive: false };\n  };\n\n  const onSave = () => {\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n\n    if (!validateForm() || !uploadedDocsInfo) {\n      return;\n    }\n\n    setPageObj({ ...pageObj });\n\n    return getFinalData();\n  };\n\n  const onCancel = () => {\n    resetValidator();\n    documentUploaderRef?.current?.resetValidator();\n\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const getFinalData = () => {\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n    return { ...pageObj, loanDocumentsProof: uploadedDocsInfo };\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const searchAutoCompleteIFSC = async (event: any) => {\n    let suggestionsTemplate = [];\n    setIsSuggestionLoading(true);\n    try {\n      await BankAccountDetailsService.findByIFSCCode(0, 10, event.query).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data.results];\n          setIsSuggestionLoading(false);\n        }\n      });\n    } catch (error) {\n      setPosition(\"top-right\");\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: undefined, code: undefined, uid: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const itemIFSCTemplate = (item: any) => {\n    if (item?.ifscCode === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item?.ifscCode} />\n      </div>\n    );\n  };\n\n  const renderDocumentUploader = () => {\n    const { isBankProofMandatory } = renderConfig;\n\n    return (\n      <div className=\"flex flex-col space-y-4\">\n        <TextData\n          label={\"label.dde.bankAccountDetails.file.proof\"}\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n\n        <div>\n          <DocumentUploader\n            mandatoryDocUpload={isBankProofMandatory}\n            ref={documentUploaderRef}\n            savedDocument={data.loanDocuments?.[0] ? data.loanDocuments[0] : {}}\n            mode={pageMode}\n            queryParamForDocList={documentCategory}\n            ocrStageName={ocrRelatedData?.ocrStageName}\n            ocrSubstageName={ocrRelatedData?.ocrSubstageName}\n            ocrPayloadData={{\n              loanUid: ocrRelatedData?.ocrPayloadData?.loanUid ?? \"\",\n              applicant: {\n                uid: ocrRelatedData?.ocrPayloadData?.applicant?.uid ?? \"\",\n              },\n            }}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    const { accountHolderName, IFSCCode, bankName, branchName, accountType, accountNumber } =\n      pageObj;\n    return (\n      <>\n        <Text\n          label={\"label.dde.bankDetails\"}\n          className=\"text-primary-gray-700 text-sm font-bold mb-1\"\n        />\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.bankDetails.accountHolderName\"\n              placeholder=\"Enter Name of Account Holder\"\n              name=\"accountHolderName\"\n              value={accountHolderName}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                \"accountHolderName\",\n                accountHolderName,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <AutoComplete\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              label=\"label.bankDetails.IFSCCode\"\n              placeholder=\"Enter IFSC Code\"\n              name=\"IFSCCode\"\n              value={IFSCCode.name}\n              suggestions={suggestionsTemplate}\n              completeMethod={searchAutoCompleteIFSC}\n              onChange={handleFilterIFSCCodeChange}\n              itemTemplate={itemIFSCTemplate}\n              loader={isSuggestionLoading}\n              validation={simpleValidator?.current?.message(\"IFSCCode\", IFSCCode.uid, \"mandatory\")}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.bankDetails.bankName\"\n              placeholder=\"Enter Bank Name\"\n              name=\"bankName\"\n              value={bankName}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\"bankName\", bankName, \"mandatory\")}\n              onBlur={validate}\n              disabled\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.bankDetails.branchName\"\n              placeholder=\"Enter Branch Name\"\n              name=\"branchName\"\n              value={branchName}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\"branchName\", branchName, \"mandatory\")}\n              onBlur={validate}\n              disabled\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label=\"label.bankDetails.accountType\"\n              placeholder=\"Select Account Type\"\n              name=\"accountType\"\n              value={accountType}\n              onChange={handleChange}\n              options={dropDownOptions.ACCOUNT_OPTION}\n              validation={simpleValidator?.current?.message(\n                \"accountType\",\n                accountType,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.bankDetails.accountNumber\"\n              placeholder=\"Enter Account Number\"\n              name=\"accountNumber\"\n              className=\"text-right\"\n              value={accountNumber}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                \"accountNumber\",\n                accountNumber,\n                \"mandatory|accountNumber\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n        </div>\n\n        {renderDocumentUploader()}\n      </>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className=\"\">\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <SaveComponent\n          disabled={disabled}\n          title={\"label.dde.bankAccount\"}\n          titleArgs={{ count: cardNumber }}\n          pageMode={pageMode}\n          onCancel={onCancel}\n          onEdit={onEdit}\n          onSave={onSaveBankAccountDetails}\n          kebabModel={menuModel}\n          disabledMenu={disabledSaveMenu}\n        >\n          {renderContent()}\n        </SaveComponent>\n      )}\n    </div>\n  );\n});\n\nexport default BankAccountDetails;\n"],"names":["BankAccountDetails","forwardRef","props","ref","data","initialBankAccountDetailsData","isLoading","disabled","disabledSaveMenu","cardNumber","pageType","ocrRelatedData","dropDownOptions","documentCategory","DOCUMENT_CATEGORY","onSaveBankAccountDetails","onRemoveBankAccountDetails","pageObj","setPageObj","useState","pageMode","setPageMode","PAGE_MODE","position","setPosition","isSuggestionLoading","setIsSuggestionLoading","toastMessage","setToastMessage","triggerToast","setTriggerToast","suggestionsTemplate","setSuggestionsTemplate","renderConfig","setRenderConfig","documentUploaderRef","useRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","menuModel","useImperativeHandle","onSave","onSaveSuccess","onRemove","resetValidator","validate","_b","_a","validateForm","isValid","handleChange","handleFilterIFSCCodeChange","event","name","value","prevPageObj","uploadedDocsInfo","getFinalData","onCancel","onEdit","searchAutoCompleteIFSC","BankAccountDetailsService","res","STATIC_MASTER_TYPE_TOAST_TEXT","itemIFSCTemplate","item","jsx","Text","renderDocumentUploader","isBankProofMandatory","jsxs","TextData","DocumentUploader","_d","_c","renderContent","accountHolderName","IFSCCode","bankName","branchName","accountType","accountNumber","Fragment","InputBox","INPUT_STYLE_TYPE","AutoComplete","SimpleDropDown","_e","_f","SkeletonCustom","SaveComponent"],"mappings":"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"}