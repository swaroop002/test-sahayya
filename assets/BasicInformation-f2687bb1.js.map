{"version":3,"file":"BasicInformation-f2687bb1.js","sources":["../../src/assets/img/buttonIcons/Validate_Mob_Num_Disabled_Icon.svg","../../src/assets/img/buttonIcons/Validate_Mob_Num_Icon.svg","../../src/services/OTPService.ts","../../src/components/BasicInformation/BasicInformation.tsx"],"sourcesContent":["export default \"__VITE_ASSET__fac912c6__\"","export default \"__VITE_ASSET__bc71c944__\"","import BaseApiService from \"./BaseApiService\";\nconst DEFAULT_PATH = \"/identity/api/integration\";\nconst DEFAUL_PATH_CUSTOM = \"/custom/api\";\nclass OTPService extends BaseApiService {\n  sendMobNumberValidationOTP = (payload: { mobile: string; consent: string }) => {\n    const url = `${DEFAULT_PATH}/karza/mobile/authentication/otp`;\n    return this.makePostRequestWithAuth(url, payload);\n  };\n\n  validateMobNumViaOTP = (payload: any) => {\n    const url = `${DEFAUL_PATH_CUSTOM}/karza`;\n    return this.makePostRequestWithAuth(url, payload);\n  };\n}\n\nexport default new OTPService();\n","import ValidateMobNumIconDisabled from \"assets/img/buttonIcons/Validate_Mob_Num_Disabled_Icon.svg\";\nimport ValidateMobNumIcon from \"assets/img/buttonIcons/Validate_Mob_Num_Icon.svg\";\nimport VerifiedIcon from \"assets/img/fileUploadIcons/Verified_Tick.svg\";\nimport React, {\n  forwardRef,\n  Fragment,\n  ReactNode,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\n// --------- ---------- //\nimport ErrorDialog from \"components/ErrorDialog\";\nimport InputAddon from \"components/InputAddon\";\nimport InputBox from \"components/InputBox\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\n\nimport { ToastPositionType } from \"primereact/toast\";\n\n// --------- ---------- //\nimport ProfilePictureUpload, { IProfilePictureInfo } from \"components/ProfilePictureUpload\";\nimport TextData from \"components/TextData\";\n\n// --------- ---------- //\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\n\n// --------- ---------- //\nimport SimpleReactValidator from \"simple-react-validator\";\n\n// --------- ---------- //\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  YearMonthDayDifference,\n} from \"utils/CommonUtil\";\n\n// --------- ---------- //\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport DialogBox from \"components/Dialog/Dialog\";\nimport DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentInfo,\n  IDocumentUploaderRef,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\nimport TextButton from \"components/TextButton/TextButton\";\nimport { IOcrRelatedData } from \"interface/common\";\nimport OTPService from \"services/OTPService\";\nimport {\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  DROPDOWN_STYLE_TYPE,\n  INPUT_STYLE_TYPE,\n  OCR_STAGE_NAMES,\n  PAGE_MODE,\n  PAGE_TYPE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\ntype Stage = \"DDE\" | \"QDE\";\ntype PageType = keyof typeof PAGE_TYPE;\n\nexport interface IBasicInformationData {\n  uid?: string;\n  isActive?: boolean;\n  isMobileNoValidated: boolean;\n  smSalutation: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  smGender: string;\n  dateOfBirth: any;\n  mobileCountryCode: string;\n  mobileNo: string;\n  stdCode: string;\n  phoneNo: string;\n  ageAsOfLoanCreation: string;\n  applicantUrl: string;\n  applicantThumbUrl: string;\n  smRelationship: string;\n  loanDocumentsInfo: IDocumentInfo;\n  resetDocumentData?: boolean;\n}\n\ninterface IMobileNumberOTP {\n  otp: string;\n  requestId: string;\n  message: string;\n  validatedMobNumber: string;\n  verified: boolean;\n}\ninterface IProps {\n  pageMode: string;\n  children?: React.ReactNode;\n  type: Stage;\n  pageType?: PageType;\n  data?: any;\n  prePopulated?: any;\n  relationship?: boolean | undefined;\n  isLoading?: boolean;\n  ocrRelatedData?: IOcrRelatedData;\n}\n\nexport interface IBasicInformationRef {\n  save: () => any;\n  cancel: () => void;\n  getData: () => any;\n  resetData: () => void;\n  resetValidator: () => any;\n}\n\nconst initialLoanDocsInfo = {\n  documentUid: \"\",\n  documentName: \"\",\n  documentCode: \"\",\n  documentCategory: \"\",\n  sectionMetaDropdownOptions: [],\n  documentSectionUrls: [],\n  isActive: true,\n};\n\nexport const initialBasicInformationData: IBasicInformationData = {\n  uid: \"\",\n  isActive: true,\n  isMobileNoValidated: false,\n  smSalutation: \"\",\n  firstName: \"\",\n  middleName: \"\",\n  lastName: \"\",\n  smGender: \"\",\n  dateOfBirth: \"\",\n  mobileCountryCode: \"+91\",\n  mobileNo: \"\",\n  stdCode: \"\",\n  phoneNo: \"\",\n  ageAsOfLoanCreation: \"\",\n  applicantUrl: \"\",\n  applicantThumbUrl: \"\",\n  smRelationship: \"\",\n  loanDocumentsInfo: initialLoanDocsInfo,\n  resetDocumentData: false,\n};\n\nconst initialMobileValidationInfo: IMobileNumberOTP = {\n  otp: \"\",\n  message: \"\",\n  requestId: \"\",\n  validatedMobNumber: \"\",\n  verified: false,\n};\n\nconst BasicInformation = forwardRef<IBasicInformationRef, IProps>((props, ref) => {\n  const {\n    pageMode = PAGE_MODE.VIEW,\n    children,\n    data = initialBasicInformationData,\n    type,\n    pageType,\n    isLoading,\n    prePopulated,\n    relationship,\n    ocrRelatedData,\n  } = props;\n\n  const [pageObj, setPageObj] = useState<IBasicInformationData>(data);\n\n  const [shouldRunEffect, setShouldRunEffect] = useState(false);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [salutations, setSalutations] = useState([{ name: \"\", code: \"\" }]);\n  const [genders, setGenders] = useState([{ name: \"\", code: \"\" }]);\n  const [relation, setRelation] = useState([{ name: \"\", code: \"\" }]);\n  const [isProfileUploaded, setIsProfileUploaded] = useState<boolean>(true);\n  const [mobNumberFieldMode, setMobNumberFieldMode] = useState(PAGE_MODE.VIEW);\n  const [mobileValidationInfo, setMobileValidationInfo] = useState<IMobileNumberOTP>(\n    initialMobileValidationInfo\n  );\n  //control visibility of validation dialog/popup for mobile number\n  const [showValidationPopUp, setShowValidationPopUp] = useState<boolean>(false);\n  // toast states\n  const [triggerToast, setTriggerToast] = useState(false);\n  const toastMessageRef = useRef(null);\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n\n  // error handling states\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  const documentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<undefined | boolean>(undefined); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n  const renderConfig = {\n    profilePicValidationEnabled: !pageType || pageType !== PAGE_TYPE.DEPENDANT,\n    mobileValidationEnabled: !pageType || pageType !== PAGE_TYPE.DEPENDANT,\n    dobValidationEnabled: !pageType || pageType !== PAGE_TYPE.DEPENDANT,\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  // to display service error pop up\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (prePopulated && Object.keys(prePopulated).length > 0) {\n      setPageObj((previous) => ({\n        ...previous,\n        firstName: prePopulated?.firstName ?? \"\",\n        middleName: prePopulated?.middleName ?? \"\",\n        lastName: prePopulated?.lastName ?? \"\",\n        dateOfBirth: prePopulated?.dob,\n        mobileCountryCode: \"+91\",\n        mobileNo: prePopulated?.mobile ?? \"\",\n        smGender: prePopulated?.gender ? `GENDER_${prePopulated?.gender}` : \"\",\n        ageAsOfLoanCreation: YearMonthDayDifference(new Date(), new Date(prePopulated?.dob)),\n      }));\n    }\n  }, [prePopulated]);\n\n  useEffect(() => {\n    if (data && Object.keys(data)?.length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n          ageAsOfLoanCreation: YearMonthDayDifference(new Date(), new Date(data?.dateOfBirth)),\n        };\n      });\n\n      if (data?.isMobileNoValidated) {\n        setMobileValidationInfo({\n          ...initialMobileValidationInfo,\n          validatedMobNumber: data.mobileNo ?? \"\",\n          verified: true,\n        });\n      }\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (shouldRunEffect && typeof pageObj?.applicantUrl === \"string\") {\n      setIsProfileUploaded(!!pageObj?.applicantUrl?.length);\n    } else {\n      setShouldRunEffect(true);\n    }\n  }, [pageObj?.applicantUrl]);\n\n  //effect to default mobNumberFieldMode to VIEW if pageMode changes to VIEW\n  useEffect(() => {\n    if (pageMode === PAGE_MODE.VIEW) {\n      setMobNumberFieldMode(PAGE_MODE.VIEW);\n    }\n  }, [pageMode]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    cancel: onCancel,\n    getData: getData,\n    resetValidator: resetValidator,\n    resetData: resetData,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getGender = () => {\n    const start = 0;\n    const limit = 50;\n    StaticMasterDataService.getAll(start, limit, \"staticMasterType.code=GENDER\").then((res) => {\n      if (res.status === 200) {\n        setGenders(res.data.results);\n      }\n    });\n  };\n\n  const getSalutation = () => {\n    const start = 0;\n    const limit = 50;\n    StaticMasterDataService.getAll(\n      start,\n      limit,\n      \"staticMasterType.code=SALUTATION&\"\n    ).then((res) => {\n      if (res.status === 200) {\n        setSalutations(res.data.results);\n      }\n    });\n  };\n\n  const getRelationShip = () => {\n    const start = 0;\n    const limit = 200;\n    StaticMasterDataService.getAll(\n      start,\n      limit,\n      \"staticMasterType.code=RELATION_TYPE&\"\n    ).then((res) => {\n      if (res.status === 200) {\n        setRelation(res.data.results);\n      }\n    });\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------------\n    Validators:\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = renderConfig?.profilePicValidationEnabled\n      ? simpleValidator?.current?.allValid() && !!pageObj.applicantUrl.length\n      : simpleValidator?.current?.allValid();\n\n    if (isValid) {\n      return isValid;\n    } else {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setErrorMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj: any) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  const handleUpdateDob = (event: any) => {\n    const { value } = event.target;\n\n    const age = YearMonthDayDifference(new Date(), value);\n    setPageObj((prevPageObj: any) => ({\n      ...prevPageObj,\n      dateOfBirth: value,\n      ageAsOfLoanCreation: age,\n    }));\n  };\n\n  const handleOtpInputChange = (e: React.BaseSyntheticEvent) => {\n    setMobileValidationInfo((prev) => {\n      return {\n        ...prev,\n        otp: e.target.value,\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSave = () => {\n    setIsProfileUploaded(!!pageObj?.applicantUrl?.length);\n    if (!genders?.some((gender) => gender?.code === pageObj?.smGender)) {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        smGender: \"\",\n      }));\n    }\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n    if (!validateForm() || !uploadedDocsInfo) {\n      return;\n    }\n    return getData();\n  };\n\n  const onCancel = () => {\n    documentUploaderRef?.current?.resetValidator();\n    documentUploaderRef?.current?.resetDocUpload();\n    resetValidator();\n    setIsProfileUploaded(true);\n  };\n\n  const onEditMobileNumber = () => {\n    setMobNumberFieldMode(PAGE_MODE.EDIT);\n  };\n\n  const OnCancelMobileNumberEdit = () => {\n    if (\n      mobileValidationInfo.validatedMobNumber === pageObj.mobileNo &&\n      pageObj.isMobileNoValidated\n    ) {\n      setMobileValidationInfo({\n        ...mobileValidationInfo,\n        verified: true,\n      });\n    } else {\n      setMobileValidationInfo({\n        ...mobileValidationInfo,\n        verified: false,\n      });\n      setPageObj((prev: IBasicInformationData) => ({ ...prev, isMobileNoValidated: false }));\n    }\n    resetValidator();\n    setMobNumberFieldMode(PAGE_MODE.VIEW);\n  };\n\n  const onValidateMobNum = () => {\n    //show error state for mob number field if its not present\n    if (!simpleValidator.current?.fields?.mobileNo) {\n      simpleValidator.current?.showMessageFor(\"mobileNo\");\n      return;\n    }\n    sendOTP();\n    setShowValidationPopUp(true);\n  };\n\n  const onCancelValidation = () => {\n    setMobileValidationInfo({\n      otp: \"\",\n      requestId: \"\",\n      message: \"\",\n      validatedMobNumber: \"\",\n      verified: false,\n    });\n    setShowValidationPopUp(false);\n    resetValidator();\n  };\n\n  const onResendOTP = () => {\n    resetValidator();\n    sendOTP();\n  };\n\n  const onVerify = async () => {\n    //validate otp input field for value\n    if (!simpleValidator.current?.fields?.otp) {\n      simpleValidator.current?.showMessageFor(\"otp\");\n      return;\n    }\n\n    try {\n      const payload = {\n        request_id: mobileValidationInfo.requestId,\n        otp: mobileValidationInfo.otp,\n        mobileNo: pageObj.mobileNo,\n        loan: { uid: ocrRelatedData?.ocrPayloadData.loanUid },\n        applicant: { uid: ocrRelatedData?.ocrPayloadData.applicant.uid },\n      };\n\n      if (payload.loan.uid && payload.applicant.uid) {\n        const res = await OTPService.validateMobNumViaOTP(payload);\n\n        if (\n          parseInt(res.data?.[`status-code`]) === 101 &&\n          res.data?.result?.sim_details?.otp_validated\n        ) {\n          setMobileValidationInfo((prev: IMobileNumberOTP) => ({ ...prev, verified: true }));\n          setPageObj((prev: IBasicInformationData) => ({\n            ...prev,\n            isMobileNoValidated: true,\n          }));\n        } else {\n          setErrorMessage(\"Failed to Validate\");\n          setMobileValidationInfo({\n            otp: \"\",\n            requestId: \"\",\n            message: \"\",\n            validatedMobNumber: \"\",\n            verified: false,\n          });\n          setPageObj((prev: IBasicInformationData) => ({\n            ...prev,\n            isMobileNoValidated: false,\n          }));\n        }\n      } else {\n        setErrorMessage(\"Failed to Validate\");\n      }\n    } catch (error) {\n      setMobileValidationInfo({\n        otp: \"\",\n        requestId: \"\",\n        message: \"\",\n        validatedMobNumber: \"\",\n        verified: false,\n      });\n      setPageObj((prev: IBasicInformationData) => ({\n        ...prev,\n        isMobileNoValidated: false,\n      }));\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n    resetValidator();\n    setShowValidationPopUp(false);\n    setMobNumberFieldMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getGender();\n    getSalutation();\n    getRelationShip();\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const resetData = () => {\n    setPageObj({ ...initialBasicInformationData });\n  };\n\n  const getData = () => {\n    const getMobNumberValidationStatus = (): boolean => {\n      if (\n        mobileValidationInfo.verified &&\n        pageObj.isMobileNoValidated &&\n        mobileValidationInfo.validatedMobNumber === pageObj.mobileNo\n      )\n        return true;\n      else return false;\n    };\n\n    let preparedPageObj: IBasicInformationData = {\n      ...pageObj,\n      isMobileNoValidated: getMobNumberValidationStatus(),\n    };\n\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n\n    if (uploadedDocsInfo) {\n      preparedPageObj = {\n        ...preparedPageObj,\n        loanDocumentsInfo: uploadedDocsInfo,\n      };\n    }\n    return preparedPageObj;\n  };\n\n  const getUploadedUrl = (params: IProfilePictureInfo) => {\n    setPageObj((prevPageObj: any) => ({\n      ...prevPageObj,\n      applicantUrl: params.url,\n      applicantThumbUrl: params.thumbUrl,\n    }));\n  };\n\n  const sendOTP = async () => {\n    try {\n      const payload = {\n        mobile: pageObj.mobileNo,\n        consent: \"Y\",\n      };\n\n      const res = await OTPService.sendMobNumberValidationOTP(payload);\n\n      if (parseInt(res.data?.[\"status-code\"]) === 101) {\n        setMobileValidationInfo({\n          otp: \"\",\n          requestId: res.data.request_id ?? \"\",\n          message: res.data.result?.message ?? \"\",\n          validatedMobNumber: pageObj.mobileNo,\n          verified: false,\n        });\n      } else {\n        setErrorMessage(\"Failed to send OTP\");\n      }\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const renderProfilePicUploader = (): ReactNode => {\n    const { applicantUrl } = pageObj;\n    const { profilePicValidationEnabled } = renderConfig;\n\n    return (\n      <div className=\"w-40 flex-1 justify-end\">\n        <ProfilePictureUpload\n          className=\"w-40\"\n          editMode={pageMode === PAGE_MODE.CREATE}\n          getUrl={getUploadedUrl}\n          sourceURL={applicantUrl}\n          isMandatory={profilePicValidationEnabled}\n        />\n        {profilePicValidationEnabled ? (\n          <div className=\"text-red-500 text-sm\">\n            {isProfileUploaded ? \"\" : \"Upload profile picture\"}\n          </div>\n        ) : null}\n      </div>\n    );\n  };\n\n  const renderMain = (): ReactNode => {\n    const {\n      smSalutation,\n      firstName,\n      middleName,\n      lastName,\n      smGender,\n      dateOfBirth,\n      phoneNo,\n      smRelationship,\n      ageAsOfLoanCreation,\n    } = pageObj;\n\n    const { dobValidationEnabled } = renderConfig;\n    console.log(ageAsOfLoanCreation, \"ageAsOfLoanCreation\");\n\n    return (\n      <div className=\"w-full\">\n        <div className=\"grid grid-cols-3 gap-3 w-full\">\n          <div>\n            <SimpleDropDown\n              disabled={pageMode === PAGE_MODE.VIEW}\n              label={\"input.basicInformation.salutation\"}\n              name=\"smSalutation\"\n              variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              value={smSalutation}\n              options={salutations}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                \"smSalutation\",\n                smSalutation,\n                \"mandatory\"\n              )}\n            />\n          </div>\n          <div>\n            <SimpleDropDown\n              disabled={pageMode === PAGE_MODE.VIEW}\n              label={\"input.basicInformation.gender\"}\n              name=\"smGender\"\n              value={smGender}\n              options={genders}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\"smGender\", smGender, \"mandatory\")}\n            />\n          </div>\n          <div />\n          <div>\n            <InputBox\n              disabled={pageMode === PAGE_MODE.VIEW}\n              label={\"input.basicInformation.firstName\"}\n              name=\"firstName\"\n              value={firstName}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\"firstName\", firstName, \"mandatory\")}\n            />\n          </div>\n          <div>\n            <InputBox\n              disabled={pageMode === PAGE_MODE.VIEW}\n              label={\"input.basicInformation.middleName\"}\n              name=\"middleName\"\n              value={middleName}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <InputBox\n              disabled={pageMode === PAGE_MODE.VIEW}\n              label={\"input.basicInformation.lastName\"}\n              name=\"lastName\"\n              value={lastName}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\"lastName\", lastName, \"mandatory\")}\n            />\n          </div>\n          <div>\n            <InputBox\n              disabled={pageMode === PAGE_MODE.VIEW}\n              label={\"input.basicInformation.phone\"}\n              name=\"phoneNo\"\n              value={phoneNo}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n            />\n          </div>\n          <div>\n            <SystemDatePicker\n              showMinMaxRange\n              disabled={pageMode === PAGE_MODE.VIEW}\n              label={\"input.basicInformation.dob.mandatory\"}\n              name=\"dateOfBirth\"\n              value={dateOfBirth ? new Date(dateOfBirth) : \"\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleUpdateDob}\n              onBlur={dobValidationEnabled ? validate : undefined}\n              placeholder=\"DD-MMM-YYYY\"\n              validation={\n                dobValidationEnabled\n                  ? simpleValidator?.current?.message(\"dateOfBirth\", dateOfBirth, \"mandatory|dob\")\n                  : simpleValidator?.current?.message(\"dateOfBirth\", dateOfBirth, \"mandatory\")\n              }\n            />\n          </div>\n          {type === \"DDE\" ? (\n            <div>\n              <TextData\n                label=\"input.basicInformation.ageAtOrigination\"\n                value={ageAsOfLoanCreation}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n          {type === \"DDE\" && relationship ? (\n            <div>\n              <SimpleDropDown\n                disabled={pageMode === PAGE_MODE.VIEW}\n                label={\"input.basicInformation.relationship\"}\n                name=\"smRelationship\"\n                value={smRelationship}\n                options={relation}\n                optionLabel=\"name\"\n                optionValue=\"code\"\n                variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(\n                  \"smRelationship\",\n                  smRelationship,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n\n          <div>{children}</div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderMobileNumber = (): ReactNode => {\n    return (\n      <div className=\"-mx-5 px-5 py-3 border border-x-0\">\n        <div className=\"flex flex-col\">\n          <div className=\"self-end\">\n            {mobNumberFieldMode === PAGE_MODE.VIEW ? (\n              <TextButton\n                label=\"Edit Mobile No.\"\n                className={`text-primary-sapphireBlue-1000 ${\n                  pageMode === PAGE_MODE.VIEW ? \"!text-secondary-steelBlue-500\" : \"\"\n                } text-sm cursor-pointer`}\n                onClick={onEditMobileNumber}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            ) : (\n              <TextButton\n                label=\"Cancel Edit\"\n                className=\"text-semantic-crimson-700 text-sm cursor-pointer\"\n                onClick={OnCancelMobileNumberEdit}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            )}\n          </div>\n\n          <div className=\"flex flex-row gap-3 items-center\">\n            <div className=\"w-61\">\n              <InputAddon\n                label={\n                  renderConfig.mobileValidationEnabled\n                    ? \"input.basicInformation.mobile.mandatory\"\n                    : \"input.basicInformation.mobile\"\n                }\n                name=\"mobileNo\"\n                value={pageObj.mobileNo}\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                onBlur={renderConfig.mobileValidationEnabled ? validate : undefined}\n                validation={\n                  renderConfig.mobileValidationEnabled\n                    ? simpleValidator?.current?.message(\n                        \"mobileNo\",\n                        pageObj.mobileNo,\n                        \"mandatory|onlyInteger|checkNumber|phoneNumber\"\n                      )\n                    : undefined\n                }\n                disabled={mobNumberFieldMode === PAGE_MODE.VIEW}\n              />\n            </div>\n\n            {pageObj.isMobileNoValidated && mobileValidationInfo.verified ? (\n              <div className=\"flex items-center gap-3 text-xs\">\n                <img src={VerifiedIcon} alt=\"verified\" />\n                <Text label={\"Verified\"} />\n              </div>\n            ) : (\n              <div className=\"flex gap-1 items-center\">\n                <TextButton\n                  label={\"Validate Mobile No.\"}\n                  className={`text-primary-sapphireBlue-800 text-sm cursor-pointer ${\n                    mobNumberFieldMode === PAGE_MODE.VIEW ? \"!text-secondary-steelBlue-500\" : \"\"\n                  }`}\n                  onClick={onValidateMobNum}\n                  disabled={mobNumberFieldMode === PAGE_MODE.VIEW}\n                />\n                <img\n                  src={\n                    mobNumberFieldMode === PAGE_MODE.VIEW\n                      ? ValidateMobNumIconDisabled\n                      : ValidateMobNumIcon\n                  }\n                  alt=\"validate mobile number\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        {showValidationPopUp && renderMobileValidationDialog()}\n      </div>\n    );\n  };\n\n  const renderMobileValidationDialog = (): ReactNode => {\n    return (\n      <DialogBox className={`w-77 pt-6 pb-4 px-6`} visible={showValidationPopUp} closable={false}>\n        <div className=\"flex flex-col\">\n          <div className=\"mb-16 select-none\">\n            <div className=\"font-bold text-primary-primaryTextColor\">\n              <Text label={\"Enter OTP\"} />\n            </div>\n            <div className=\"text-xs\">\n              <Text label={mobileValidationInfo.message} />\n            </div>\n          </div>\n\n          <div className=\"w-64 mb-8 select-none\">\n            <InputBox\n              name=\"otp\"\n              label={\"OTP\"}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                \"otp\",\n                mobileValidationInfo?.otp,\n                \"mandatory\"\n              )}\n              onChange={handleOtpInputChange}\n            />\n          </div>\n\n          <div className=\"mb-8 flex justify-center\">\n            <TextButton\n              label=\"Resend OTP\"\n              className=\"text-primary-sapphireBlue-1000 text-sm cursor-pointer underline select-none\"\n              onClick={onResendOTP}\n            />\n          </div>\n\n          <div className=\"flex gap-6 items-center justify-center text-xs text-primary-ptext-1000 select-none\">\n            <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancelValidation} />\n            <ButtonBox buttonType={BUTTON_TYPE.VERIFY} onClickWithLoader={onVerify} />\n          </div>\n        </div>\n      </DialogBox>\n    );\n  };\n\n  const renderDocumentUploader = (): ReactNode => {\n    const { dobValidationEnabled } = renderConfig;\n\n    return (\n      <div className=\"flex flex-col gap-3\">\n        <TextData\n          label={\n            dobValidationEnabled ? \"label.heading.DOB.proof.mandatory\" : \"label.heading.DOB.proof\"\n          }\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n\n        <DocumentUploader\n          ref={documentUploaderRef}\n          savedDocument={data.loanDocuments?.[0] ? data.loanDocuments[0] : {}}\n          mode={pageMode === PAGE_MODE.VIEW ? DOC_UPLOADER_MODE.VIEW : DOC_UPLOADER_MODE.EDIT}\n          queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_DOB_PROOF}\n          ocrStageName={OCR_STAGE_NAMES.LOGIN}\n          ocrSubstageName={type.toLowerCase()}\n          ocrPayloadData={{\n            loanUid: ocrRelatedData?.ocrPayloadData?.loanUid ?? \"\",\n            applicant: {\n              uid: ocrRelatedData?.ocrPayloadData?.applicant?.uid ?? \"\",\n            },\n          }}\n          mandatoryDocUpload={dobValidationEnabled}\n        />\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <SkeletonCustom height=\"19rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <Fragment>\n          <div className=\"flex flex-row gap-3 w-full\">\n            {renderMain()}\n\n            {renderProfilePicUploader()}\n          </div>\n\n          {/* mobile number and validation */}\n          {renderMobileNumber()}\n\n          {/*dob document uploader */}\n          {renderDocumentUploader()}\n        </Fragment>\n      )}\n\n      <div className=\"\">\n        <ToastCustom\n          position={position}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n        />\n      </div>\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </React.Fragment>\n  );\n});\n\nexport default BasicInformation;\n"],"names":["ValidateMobNumIconDisabled","ValidateMobNumIcon","DEFAULT_PATH","DEFAUL_PATH_CUSTOM","OTPService","BaseApiService","__publicField","payload","url","OTPService$1","initialLoanDocsInfo","initialBasicInformationData","initialMobileValidationInfo","BasicInformation","forwardRef","props","ref","pageMode","PAGE_MODE","children","data","type","pageType","isLoading","prePopulated","relationship","ocrRelatedData","pageObj","setPageObj","useState","shouldRunEffect","setShouldRunEffect","position","setPosition","toastMessage","setToastMessage","salutations","setSalutations","genders","setGenders","relation","setRelation","isProfileUploaded","setIsProfileUploaded","mobNumberFieldMode","setMobNumberFieldMode","mobileValidationInfo","setMobileValidationInfo","showValidationPopUp","setShowValidationPopUp","triggerToast","setTriggerToast","toastMessageRef","useRef","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","documentUploaderRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","renderConfig","PAGE_TYPE","useEffect","init","previous","YearMonthDayDifference","_a","useImperativeHandle","onSave","onCancel","getData","resetValidator","resetData","getGender","StaticMasterDataService","res","getSalutation","getRelationShip","validate","e","_b","validateForm","isValid","STATIC_MASTER_TYPE_TOAST_TEXT","_c","handleInputChange","event","name","value","prevPageObj","handleUpdateDob","age","handleOtpInputChange","gender","uploadedDocsInfo","onEditMobileNumber","OnCancelMobileNumberEdit","onValidateMobNum","sendOTP","onCancelValidation","onResendOTP","onVerify","_d","_g","_f","_e","error","parseStandardAPIErrorMessage","preparedPageObj","getUploadedUrl","params","renderProfilePicUploader","applicantUrl","profilePicValidationEnabled","jsxs","jsx","ProfilePictureUpload","renderMain","smSalutation","firstName","middleName","lastName","smGender","dateOfBirth","phoneNo","smRelationship","ageAsOfLoanCreation","dobValidationEnabled","SimpleDropDown","DROPDOWN_STYLE_TYPE","InputBox","INPUT_STYLE_TYPE","SystemDatePicker","TextData","Fragment","renderMobileNumber","TextButton","InputAddon","VerifiedIcon","Text","renderMobileValidationDialog","DialogBox","ButtonBox","BUTTON_TYPE","renderDocumentUploader","DocumentUploader","DOC_UPLOADER_MODE","DOCUMENT_CATEGORY","OCR_STAGE_NAMES","React","SkeletonCustom","ToastCustom","ErrorDialog"],"mappings":"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"}