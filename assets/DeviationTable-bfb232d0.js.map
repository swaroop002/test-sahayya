{"version":3,"file":"DeviationTable-bfb232d0.js","sources":["../../src/components/DeviationTable/DeviationTable.tsx"],"sourcesContent":["import { DataTable, DataTableProps } from \"primereact/datatable\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\nimport ShortUniqueId from \"short-unique-id\";\nimport { parseStandardAPIErrorMessage } from \"utils/CommonUtil\";\nimport { TYPE_OF_DEVIATION } from \"utils/Constant\";\n\nexport const Column = (props: any) => {\n  return <React.Fragment />;\n};\n\nexport const MODE = {\n  CREATE: \"CREATE\",\n  UPDATE: \"UPDATE\",\n};\ninterface ITableData extends DataTableProps {\n  // [key: string]: any;\n  advanceSearch?: object;\n  search?: string;\n  standardDataFormatPromise?: any;\n  tableObj?: {\n    limit?: number;\n    loading?: boolean;\n    totalRecords?: number;\n    start?: number;\n    records?: any[];\n    search?: string;\n    page?: number;\n  };\n  isIgnoreInitialLoad?: boolean;\n  onUpdateCallback?: () => void;\n  uniqueKey: string;\n  mode?: keyof typeof MODE;\n  className?: string;\n  emptyMessage?: string | JSX.Element;\n}\n\nexport interface EditableComponentRef {\n  search: (e?: any) => void;\n  getCurrentRecords: () => any[];\n  addRow: (rowData: any) => void;\n  getAddedRecords: () => any[];\n  getUpdatedRecords: () => any[];\n  getDeletedRecords: () => any[];\n  reportDataChange: (rowDataObj: any) => void; // Adjust 'any' to the correct type\n  deleteRow: (rowDataObj: any) => void; // Adjust 'any' to the correct type\n  getTotalRecordsCount: () => void;\n  tableStatus: {\n    limit?: number;\n    loading?: boolean;\n    totalRecords?: number;\n    start?: number;\n    records?: any[];\n    search?: string;\n    page?: number;\n  };\n  loadingState: boolean;\n  clearAll: () => void;\n  getLoadingState: () => void;\n}\n\nconst DeviationTable = forwardRef<EditableComponentRef, ITableData>((props, ref) => {\n  const {\n    standardDataFormatPromise,\n    search,\n    advanceSearch,\n    isIgnoreInitialLoad,\n    onUpdateCallback,\n    uniqueKey,\n    className,\n    ...primeReactProps\n  } = props;\n\n  const [dataTable, setDataTable] = useState({\n    limit: props.tableObj?.limit ?? 10,\n    loading: props.tableObj?.loading ?? true,\n    totalRecords: props.tableObj?.totalRecords ?? 0,\n    start: props.tableObj?.start ?? 0,\n    records: [] as any[],\n    search: props.search ?? \"\",\n    page: props.tableObj?.page ?? 0,\n    errorMessage: \"\",\n  });\n\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [updatedRecords, setUpdatedRecords] = useState<any[]>([]);\n  const [addedRows, setAddedRows] = useState<any[]>([]);\n  const [deletedRows, setDeletedRows] = useState<any[]>([]);\n\n  /*\n  --------------------\n  Hooks\n  --------------------\n  */\n  useEffect(() => {\n    if (standardDataFormatPromise && !isIgnoreInitialLoad && MODE.UPDATE === props.mode) {\n      prepareParamAndCallPromise(null);\n      setIsInitialLoad(true);\n    } else {\n      setDataTable({\n        ...dataTable,\n        loading: false,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (onUpdateCallback) {\n      onUpdateCallback();\n    }\n  }, [dataTable]);\n\n  useImperativeHandle(ref, () => ({\n    search: searchFn,\n    getCurrentRecords,\n    getUpdatedRecords,\n    getAddedRecords,\n    getDeletedRecords,\n    getTotalRecordsCount: getTotalRecordsCount,\n    addRow: addRow,\n    reportDataChange,\n    deleteRow: deleteRow,\n    loadingState: dataTable.loading,\n    tableStatus: dataTable,\n    clearAll: clearAll,\n    getLoadingState,\n  }));\n\n  const getLoadingState = () => {\n    return dataTable.loading;\n  };\n\n  const searchFn = (e?: any) => {\n    if (isInitialLoad && props.mode === MODE.UPDATE) {\n      prepareParamAndCallPromise(e);\n    }\n  };\n  const prepareParamAndCallPromise = (e: any) => {\n    if (!standardDataFormatPromise) {\n      return;\n    }\n\n    setDataTable({\n      ...dataTable,\n      records: [],\n      loading: true,\n    });\n\n    return props\n      .standardDataFormatPromise(search)\n      .then((res: any) => {\n        if (res.data) {\n          setDataTable({\n            ...dataTable,\n            loading: false,\n            records: iterateOverRecords(res.data),\n            errorMessage: \"\",\n          });\n        }\n      })\n      .catch((err: any) => {\n        setDataTable({\n          ...dataTable,\n          loading: false,\n          records: [],\n          errorMessage: parseStandardAPIErrorMessage(err),\n        });\n      });\n  };\n\n  // ENHANCEMENT: TO DO\n  // Need a property to indicated updated records;\n  const reportDataChange = (rowData: any) => {\n    let updatedRecordsLocal = [];\n    updatedRecordsLocal = dataTable.records.map((record: any) => {\n      if (record[uniqueKey] === rowData[uniqueKey]) {\n        return { ...rowData, isUpdated: true };\n      } else {\n        return record;\n      }\n    });\n    setDataTable({\n      ...dataTable,\n      records: updatedRecordsLocal,\n    });\n\n    // Maintain a separate state for updated records to use in the parent component & when the tab is changed or page is changed\n    const find = updatedRecords.find((record: any) => record[uniqueKey] === rowData[uniqueKey]);\n    if (!find) {\n      setUpdatedRecords([...updatedRecords, rowData]);\n    } else {\n      setUpdatedRecords(\n        updatedRecords.map((record: any) => {\n          if (record[uniqueKey] === rowData[uniqueKey]) {\n            return { ...rowData, isUpdated: true };\n          } else {\n            return record;\n          }\n        })\n      );\n    }\n  };\n\n  // TO DO: IN FUTURE ENHANCEMENT\n  const addRow = (rowData: any) => {\n    const uid = new ShortUniqueId({ length: 5 });\n    const row = { ...rowData, uid: uid(), temp: true };\n    setAddedRows([...addedRows, row]);\n    setDataTable({\n      ...dataTable,\n      loading: false,\n      records: [row, ...dataTable.records],\n      totalRecords: dataTable.totalRecords + 1,\n    });\n  };\n\n  const deleteRow = (rowData: any) => {\n    console.log(\"deleteRow\", rowData);\n    const isTempRow = Object.hasOwnProperty.call(rowData, \"temp\");\n\n    if (isTempRow) {\n      setAddedRows(addedRows.filter((record: any) => record[uniqueKey] !== rowData[uniqueKey]));\n      setUpdatedRecords(\n        updatedRecords.filter((record: any) => record[uniqueKey] !== rowData[uniqueKey])\n      );\n      setDataTable({\n        ...dataTable,\n        records: dataTable.records.filter(\n          (record: any) => record[uniqueKey] !== rowData[uniqueKey]\n        ),\n      });\n      return;\n    }\n    // this is for existing records which are not temp\n    let deletedRecordsLocal = [];\n    deletedRecordsLocal = dataTable.records.map((record: any) => {\n      if (record[uniqueKey] === rowData[uniqueKey]) {\n        return { ...record, isActive: !rowData.isActive, isDeleted: !rowData.isDeleted };\n      } else {\n        return record;\n      }\n    });\n    setDataTable({\n      ...dataTable,\n      records: deletedRecordsLocal,\n    });\n    // Maintain a separate state for updated records to use in the parent component &\n    // when the tab is changed or page is changed\n    const find = deletedRows.find((record: any) => record[uniqueKey] === rowData[uniqueKey]);\n    if (!find) {\n      setDeletedRows([...deletedRows, { ...rowData, isActive: false, isDeleted: true }]);\n    } else {\n      const remainingRows = deletedRows.filter(\n        (record: any) => record[uniqueKey] !== rowData[uniqueKey]\n      );\n      setDeletedRows([...remainingRows]);\n    }\n  };\n\n  /*\n  --------------------\n  Helper Functions\n  --------------------\n  */\n  const clearAll = () => {\n    setUpdatedRecords([]);\n    setAddedRows([]);\n    setDeletedRows([]);\n  };\n\n  const getCurrentRecords = () => {\n    return dataTable.records;\n  };\n\n  const getUpdatedRecords = () => {\n    return updatedRecords\n      .filter((row: any) => !row.temp)\n      .map((row: any) => {\n        return row;\n      });\n  };\n\n  const getAddedRecords = () => {\n    return updatedRecords\n      .filter((row: any) => row.temp === true)\n      .map((row: any) => {\n        const { uid, temp, ...rest } = row;\n        return rest;\n      });\n  };\n\n  const getDeletedRecords = () => {\n    return deletedRows;\n  };\n\n  const iterateOverRecords = (records: any) => {\n    const uid = new ShortUniqueId({ length: 5 });\n    const enrichedRecords = records.map((record: any) => {\n      if (!record.uid && record.smDeviationType === TYPE_OF_DEVIATION.TYPE_OF_DEVIATION_AUTOMATIC) {\n        return {\n          ...record,\n          temp: true,\n          autoDeviationRow: true,\n          uid: uid(),\n        };\n      } else return record;\n    });\n\n    const updatedRecordsLocal = enrichedRecords.map((record: any) => {\n      const find = updatedRecords.find(\n        (updatedRecord: any) => updatedRecord[uniqueKey] === record[uniqueKey]\n      );\n      if (find) {\n        return find;\n      } else {\n        return record;\n      }\n    });\n    return updatedRecordsLocal;\n  };\n\n  const emptyMessageRender = () => {\n    const { errorMessage } = dataTable;\n\n    return (\n      <div className=\"absolute left-0 top-0 flex flex-col w-full h-full bg-white justify-center items-center\">\n        <div className=\"text-sm text-inputBorderColour pt-3 font-medium\">\n          {errorMessage ? (\n            <div className=\"flex justify-center mt-7 ml-4\">{errorMessage}</div>\n          ) : (\n            props.emptyMessage ?? <>No Data</>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const getTotalRecordsCount = () => {\n    return dataTable.totalRecords;\n  };\n\n  const combinedRowClassName = (rowData: any) => {\n    if (rowData?.isDeleted || (rowData?.isActive && !rowData?.isActive)) {\n      return \" !bg-semantic-crimson-100\";\n    } else if (rowData?.temp || rowData?.autoDeviationRow) {\n      return \" !bg-semantic-deepSkyBlue-100\";\n    } else if (rowData?.isUpdated) {\n      return \" !bg-semantic-yellow-100\";\n    }\n    return rowData?.uid ? { \"row-highlight\": rowData.uid % 2 } : \"\";\n  };\n\n  const { loading, records, limit, start, totalRecords } = dataTable;\n\n  const getTableStatus = () => {\n    const updateRecordsLocal = updatedRecords.filter((record: any) => !record.temp);\n    return {\n      ADDED_RECORDS: addedRows.length,\n      UPDATED_RECORDS: updateRecordsLocal.length,\n      DELETED_RECORDS: deletedRows.length,\n    };\n  };\n\n  return (\n    <div className={`investment-table`}>\n      {props.mode === MODE.UPDATE ? (\n        <div className=\"mb-2 flex flex-row justify-center w-full text-primary-ptext-1000 text-left text-xs font-bold\">\n          {/* <div>Original Records : {dataTable.totalRecords}</div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center mx-2\">\n              <div className=\"w-4 h-4 rounded-full bg-semantic-deepSkyBlue-100 border-none\" />\n              <div className=\"ml-2 \">Added : {getTableStatus().ADDED_RECORDS}</div>\n            </div>\n            <div className=\"flex items-center mx-2\">\n              <div className=\"w-4 h-4 rounded-full bg-semantic-yellow-100 border-none\" />\n              <div className=\"ml-2\">Updated : {getTableStatus().UPDATED_RECORDS}</div>\n            </div>\n            <div className=\"flex items-center mx-2\">\n              <div className=\"w-4 h-4 rounded-full bg-semantic-crimson-100 border-none\" />\n              <div className=\"ml-2\">Deleted : {getTableStatus().DELETED_RECORDS}</div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <DataTable\n        breakpoint=\"768px\"\n        dataKey={primeReactProps.dataKey}\n        emptyMessage={emptyMessageRender}\n        first={start}\n        lazy\n        loading={loading}\n        onPage={searchFn} /*prepareParamAndCallPromise*/\n        paginator={false}\n        responsiveLayout=\"scroll\"\n        rowClassName={combinedRowClassName}\n        rows={limit}\n        scrollHeight=\"556px\"\n        stripedRows\n        totalRecords={totalRecords}\n        value={records}\n        resizableColumns={false}\n        selection={props.selection}\n        selectionMode={props.selectionMode}\n        style={{ width: \"100%\" }}\n        className={`border border-secondary-concrete px-0 overflow-x-auto rounded-lg read-only-table ${className}`}\n        {...primeReactProps}\n      >\n        {props.children}\n      </DataTable>\n    </div>\n  );\n});\n\nexport default React.memo(DeviationTable);\n"],"names":["MODE","DeviationTable","forwardRef","props","ref","standardDataFormatPromise","search","advanceSearch","isIgnoreInitialLoad","onUpdateCallback","uniqueKey","className","primeReactProps","dataTable","setDataTable","useState","_a","_b","_c","_d","_e","isInitialLoad","setIsInitialLoad","updatedRecords","setUpdatedRecords","addedRows","setAddedRows","deletedRows","setDeletedRows","useEffect","prepareParamAndCallPromise","useImperativeHandle","searchFn","getCurrentRecords","getUpdatedRecords","getAddedRecords","getDeletedRecords","getTotalRecordsCount","addRow","reportDataChange","deleteRow","clearAll","getLoadingState","res","iterateOverRecords","err","parseStandardAPIErrorMessage","rowData","updatedRecordsLocal","record","find","uid","ShortUniqueId","row","deletedRecordsLocal","remainingRows","temp","rest","records","TYPE_OF_DEVIATION","updatedRecord","emptyMessageRender","errorMessage","jsx","Fragment","combinedRowClassName","loading","limit","start","totalRecords","getTableStatus","updateRecordsLocal","jsxs","DataTable","DeviationTable$1","React"],"mappings":"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"}