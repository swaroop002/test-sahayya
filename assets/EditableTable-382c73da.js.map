{"version":3,"file":"EditableTable-382c73da.js","sources":["../../src/components/EditableTable/EditableTable.tsx"],"sourcesContent":["import noData from \"assets/img/common/No_data.svg\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text/Text\";\nimport { DataTable } from \"primereact/datatable\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\nimport { EDITABLE_TABLE_ACTIONS, PAGE_MODE } from \"utils/Constant\";\n\nconst EditableTable: React.FC<any> = forwardRef((props, ref) => {\n  const [dataTable, setDataTable] = useState({\n    limit: props.tableObj?.limit ?? 10,\n    loading: props.tableObj?.loading ?? false,\n    totalRecords: props.tableObj?.totalRecords ?? 0,\n    start: props.tableObj?.start ?? 0,\n    records: [] as any[],\n    search: props.tableObj?.search ?? \"\",\n    page: props.tableObj?.page ?? 0,\n  });\n  const [startOffset] = useState(0);\n\n  const [updatedRecordsState, setUpdatedRecordsState] = useState<any>([\n    ...(props?.updatedRecords || []),\n  ]);\n\n  const [addedRecordsState, setAddedRecordsState] = useState<any>([...(props?.addedRecords || [])]);\n\n  const [deletedRecordsState, setDeletedRecordsState] = useState<any>([]);\n\n  const getDefaultDataLoaderFunction = (e: any) => {\n    const handleDataResponse = (data: any) => {\n      let results = [];\n      if (\n        props.pageMode == PAGE_MODE.EDIT ||\n        props.pageMode == PAGE_MODE.REVIEW ||\n        props.pageMode === PAGE_MODE.VIEW\n      ) {\n        results = [...updateRecordsOnTabChange([...data.results])];\n      } else {\n        results = [...data.results];\n      }\n      setDataTable({\n        ...dataTable,\n        loading: false,\n        records: [...addedRecordsState, ...results],\n        totalRecords: data.totalRecords,\n        start: searchParams.start,\n        search: searchParams.search,\n      });\n\n      if (props.onUpdateCallback) {\n        props.onUpdateCallback();\n      }\n      if (props.scrollToTopOnUpdate) {\n        const firstRow = document.querySelector(\".p-datatable-scrollable-body tr\");\n        firstRow?.scrollIntoView({ behavior: \"smooth\" });\n      }\n    };\n\n    const handleErrorResponse = () => {\n      setDataTable({\n        ...dataTable,\n        loading: false,\n        records: [],\n        start: 0,\n        totalRecords: 0,\n      });\n    };\n\n    setDataTable({\n      ...dataTable,\n      loading: true,\n    });\n\n    if (!props.standardDataFormatPromise) {\n      return;\n    }\n\n    function getStart() {\n      if (props.avoidStartOffset) {\n        return dataTable.start;\n      }\n      return dataTable.start === 0 ? startOffset : dataTable.start;\n    }\n\n    const searchParams = {\n      start: getStart(),\n      limit: props.rows ? props.rows : dataTable.limit,\n      search: \"\",\n    };\n\n    if (e) {\n      const page = e.page ? e.page : 0;\n      const rows = e.rows ? e.rows : 0;\n      let first = page * rows;\n      first = props.avoidStartOffset ? first : first + startOffset;\n      searchParams.start = first;\n    }\n    if (props.search) {\n      searchParams.search = props.search;\n    }\n\n    const searchFn =\n      props.search && props.standardDataFormatSearchPromise\n        ? props.standardDataFormatSearchPromise\n        : props.standardDataFormatPromise;\n\n    return searchFn(searchParams.start, searchParams.limit, searchParams.search)\n      .then((res: any) => {\n        if (res.data) {\n          handleDataResponse(res.data);\n        }\n      })\n      .catch(handleErrorResponse);\n  };\n\n  const addRecord = (record: any) => {\n    const addedRecords = dataTable.records.filter((record) => record.isAdded === true);\n    const remainingRecords = dataTable.records.filter((record) => record.isAdded !== true);\n\n    setDataTable({\n      ...dataTable,\n      records:\n        props.pageMode === PAGE_MODE.EDIT\n          ? [...addedRecords, { ...record }, ...remainingRecords]\n          : [...dataTable.records, { ...record }],\n    });\n  };\n  const addRecordsArray = (recordsArray: any) => {\n    const addedRecords = dataTable.records.filter((record) => record.isAdded === true);\n    const remainingRecords = dataTable.records.filter((record) => record.isAdded !== true);\n    setDataTable({\n      ...dataTable,\n      records:\n        props.pageMode === PAGE_MODE.EDIT\n          ? [...addedRecords, ...recordsArray, ...remainingRecords]\n          : [...dataTable.records, ...recordsArray],\n      //totalRecords: dataTable.totalRecords + 1,\n    });\n  };\n\n  const updateRecords = (props: any, value: any, field: any) => {\n    const records = [...props.props.value];\n    //below code is to handle pagination\n    records[props.rowIndex - dataTable.start][field] = value;\n    if (records[props.rowIndex - dataTable.start].isAdded !== true) {\n      records[props.rowIndex - dataTable.start][EDITABLE_TABLE_ACTIONS.IS_UPDATED] = true;\n    }\n\n    //const updatedRecords = records.filter((record: any) => record.isUpdated);\n\n    const updatedRecords = records.filter((record) => {\n      // Check if the 'uid' of the current 'record' exists in updatedRecordsState\n      const uidExistsInUpdatedRecordsState = updatedRecordsState.some(\n        (updatedRecordState: any) => updatedRecordState.uid === record.uid\n      );\n\n      // If 'uid' exists in updatedRecordsState, exclude it from the filter result\n      return record.isUpdated && !uidExistsInUpdatedRecordsState;\n    });\n\n    setUpdatedRecordsState([...updatedRecordsState, ...updatedRecords]);\n\n    setDataTable({\n      ...dataTable,\n      records,\n    });\n  };\n\n  const deleteRow = (props: any) => {\n    const records = [...props.props.value];\n\n    if (records[props.rowIndex - dataTable.start][EDITABLE_TABLE_ACTIONS.IS_ADDED] === true) {\n      records.splice(props.rowIndex - dataTable.start, 1);\n      const addedRecords = records.filter((record: any) => record.isAdded);\n      setAddedRecordsState(addedRecords);\n      setDataTable({\n        ...dataTable,\n        records,\n      });\n    } else {\n      if (records[props.rowIndex - dataTable.start][EDITABLE_TABLE_ACTIONS.IS_INACTIVE] === true) {\n        records[props.rowIndex - dataTable.start][EDITABLE_TABLE_ACTIONS.IS_INACTIVE] = false;\n      } else {\n        records[props.rowIndex - dataTable.start][EDITABLE_TABLE_ACTIONS.IS_INACTIVE] = true;\n      }\n      const deletedRecords = records.filter((record: any) => record.isInactive);\n\n      const addedRecords = records.filter((record: any) => record.isAdded);\n      setAddedRecordsState(addedRecords);\n\n      setDeletedRecordsState(deletedRecords);\n      setDataTable({\n        ...dataTable,\n        records,\n      });\n    }\n  };\n\n  const emptyRow = (props: any) => {\n    setDataTable({\n      ...dataTable,\n      records: [],\n    });\n    setAddedRecordsState([]);\n  };\n\n  const getAddedRecords = () => {\n    return addedRecordsState;\n  };\n\n  const getDeletedRecords = () => {\n    return deletedRecordsState;\n  };\n\n  const getUpdatedRecords = () => {\n    return updatedRecordsState;\n  };\n\n  const updateRecordsOnTabChange = (records: any) => {\n    const updatedRecords = [\n      ...records.map((obj1: any) => {\n        const obj2 = updatedRecordsState.find((obj: any) => obj[\"uid\"] === obj1[\"uid\"]);\n        return obj2 ? obj2 : obj1;\n      }),\n    ];\n\n    return updatedRecords;\n  };\n\n  const updateAddedRecords = (record: any, key: any) => {\n    const updatedRecords = [\n      ...dataTable.records.map((obj1: any) => {\n        if (record[key] == obj1[key]) {\n          return record;\n        } else {\n          return obj1;\n        }\n      }),\n    ];\n    const finalRecords = updatedRecords ? [...updatedRecords] : [...dataTable.records];\n    setDataTable({\n      ...dataTable,\n      records: finalRecords,\n    });\n  };\n\n  // useEffect(() => {\n  //   // @ts-ignore: Object is possibly 'null'.\n  //   if (ref.current) {\n  //     getDefaultDataLoaderFunction({});\n  //   }\n  // }, [ref]);\n\n  useImperativeHandle(ref, () => ({\n    search: () => {\n      getDefaultDataLoaderFunction(undefined);\n    },\n    addRecords: addRecord,\n    updateRecords,\n    deleteRow,\n    getAddedRecords,\n    getDeletedRecords,\n    addRecordsArray,\n    emptyRow,\n    getUpdatedRecords,\n    updateRecordsOnTabChange,\n    updateAddedRecords,\n  }));\n\n  const rowClass = (data: any) => {\n    return data?.uid ? { \"row-highlight\": data.uid % 2 } : \"\";\n  };\n\n  const emptyMessageRender = () => {\n    return (\n      <div className=\"flex flex-col w-full h-16 justify-center items-center\">\n        <div className=\"text-sm text-inputBorderColour pt-3 font-medium\">\n          {props.showLoader ? (\n            <div>Loading...</div>\n          ) : (\n            props.emptymessage ?? (\n              <>\n                <img src={noData} alt=\"search-icon\" className=\" w-full mt-84\" />\n                <div className=\"flex justify-center mt-7 ml-4\">\n                  <Text\n                    label=\"No Data Found\"\n                    className=\"text-primary-primaryTextColor text-h1 font-Roboto font-bold\"\n                  />\n                </div>\n              </>\n            )\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const onChange = (e: any) => {\n    setDataTable({\n      ...dataTable,\n      limit: e.value,\n    });\n  };\n\n  const RowsPerPageDropdown = (options: any) => {\n    const dropdownOptions = [\n      { label: 10, value: 10 },\n      { label: 20, value: 20 },\n      { label: 50, value: 50 },\n      //{ label: \"All\", value: options.totalRecords },\n    ];\n\n    return (\n      <div className=\"flex ml-auto\">\n        <div className=\"flex\">\n          <Text\n            label=\"Rows Per Page\"\n            className=\"text-secondary-gray-500 text-xs ml-4 flex items-center\"\n          />\n        </div>\n        <SimpleDropDown\n          value={options.value}\n          options={dropdownOptions}\n          onChange={onChange}\n          className=\"border-none !w-20 !text-primary-gray-700 !text-xss !font-Roboto\"\n        />\n      </div>\n    );\n  };\n\n  const template1 = {\n    layout: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown \",\n    RowsPerPageDropdown,\n  };\n\n  useEffect(() => {\n    console.log(props.pageMode);\n    if (\n      props.pageMode === PAGE_MODE.EDIT ||\n      props.pageMode === PAGE_MODE.REVIEW ||\n      props.pageMode === PAGE_MODE.VIEW\n    ) {\n      getDefaultDataLoaderFunction({});\n    } else {\n      setDataTable({\n        ...dataTable,\n        loading: false,\n        records: [...addedRecordsState],\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    // Add objects with isAdded=true to addedRecordsState\n    const addedRecords = dataTable.records.filter((record: any) => record.isAdded);\n    setAddedRecordsState(addedRecords);\n  }, [dataTable.records]);\n\n  return (\n    <div>\n      {props.showStatusBar ? (\n        <div className=\"mt-4 w-full flex items-center justify-center text-primary-ptext-1000 text-left text-xs font-bold\">\n          {/* <div>Original Records : {dataTable.totalRecords}</div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center mx-2\">\n              <div className=\"w-4 h-4 rounded-full bg-semantic-deepSkyBlue-100 border-none\"></div>\n              <div className=\"ml-2 \">Added : {addedRecordsState.length}</div>\n            </div>\n            <div className=\"flex items-center mx-2\">\n              <div className=\"w-4 h-4 rounded-full bg-semantic-yellow-100 border-none\"></div>\n              <div className=\"ml-2\">Updated : {updatedRecordsState.length}</div>\n            </div>\n            <div className=\"flex items-center mx-2\">\n              <div className=\"w-4 h-4 rounded-full bg-semantic-crimson-100 border-none\"></div>\n              <div className=\"ml-2\">Deleted : {deletedRecordsState.length}</div>\n            </div>\n          </div>\n          {/* <div>\n            Current Records :{\" \"}\n            {dataTable.totalRecords + addedRecordsState.length - deletedRecordsState.length}\n          </div> */}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <DataTable\n        className=\"text-primaryColour text-left align-text-top\"\n        headerClassName={props.headerClassName}\n        emptyMessage={emptyMessageRender}\n        search={\"\"}\n        style={{ width: \"100%\" }}\n        dataLoaderFunction={getDefaultDataLoaderFunction}\n        value={dataTable.records}\n        first={dataTable.start}\n        rows={dataTable.limit}\n        //totalRecords={dataTable.totalRecords}\n        totalRecords={100}\n        onPage={getDefaultDataLoaderFunction}\n        loading={dataTable.loading}\n        selection={props.selection}\n        onRowSelect={(e) => (props.onRowSelect ? props.selectThisRow(e) : \"\")}\n        selectionMode={props.selectionMode}\n        dataKey={props.dataKey}\n        resizableColumns={false}\n        paginator={dataTable.totalRecords > 0 && !props.hidePaginator}\n        paginatorTemplate={template1}\n        onsort={props.sortFunction}\n        paginatorLeft={\n          <Text\n            label={`${dataTable.start + 1}-${dataTable.start + dataTable.limit} of ${\n              dataTable.totalRecords\n            }`}\n            className=\"text-secondary-gray-500 text-xs ml-4\"\n          />\n        }\n        lazy={true}\n        rowClassName={rowClass + props.rowClassName}\n        responsiveLayout=\"scroll\"\n        breakpoint=\"768px\"\n        {...props}\n      >\n        {props.children}\n      </DataTable>\n    </div>\n  );\n});\n\nexport default React.memo(EditableTable);\n"],"names":["EditableTable","forwardRef","props","ref","dataTable","setDataTable","useState","_a","_b","_c","_d","_e","_f","startOffset","updatedRecordsState","setUpdatedRecordsState","addedRecordsState","setAddedRecordsState","deletedRecordsState","setDeletedRecordsState","getDefaultDataLoaderFunction","e","handleDataResponse","data","results","PAGE_MODE","updateRecordsOnTabChange","searchParams","firstRow","handleErrorResponse","getStart","page","rows","first","res","addRecord","record","addedRecords","remainingRecords","addRecordsArray","recordsArray","updateRecords","value","field","records","EDITABLE_TABLE_ACTIONS","updatedRecords","uidExistsInUpdatedRecordsState","updatedRecordState","deleteRow","deletedRecords","emptyRow","getAddedRecords","getDeletedRecords","getUpdatedRecords","obj1","obj2","obj","updateAddedRecords","key","finalRecords","useImperativeHandle","rowClass","emptyMessageRender","jsx","jsxs","Fragment","noData","Text","onChange","template1","options","dropdownOptions","SimpleDropDown","useEffect","DataTable","EditableTable$1","React"],"mappings":"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"}