{"version":3,"file":"Helper-03e9d878.js","sources":["../../src/components/OtherDocuments/OtherDocuments.tsx","../../src/views/transaction/PageDDE/Login/Helper.ts"],"sourcesContent":["import DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  ISavedDocumentRecords,\n} from \"components/DocumentUploader\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport React, { Fragment, forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { DOCUMENT_CATEGORY, PAGE_MODE } from \"utils/Constant\";\nimport { enrichOtherDocuments } from \"views/transaction/PageDDE/Login/Helper\";\n\ninterface IOtherDocumentsProps {\n  className?: string;\n  isLoading?: boolean;\n  otherDocumentsData: ISavedDocumentRecords[];\n  sectionMode: string;\n  payloadInfo: {\n    loanUid: string;\n    applicantUid: string;\n    loanSectionKey: T_LOAN_SECTION_KEY_DOCUMENTS | T_LOAN_SECTION_KEY_APPLICANTS;\n  };\n  onRemoveDocFromList: (docInfo: IDocumentInfo, idx: number) => void;\n}\n\nexport interface IOtherDocumentsRef {\n  save: () => void;\n  cancel: () => void;\n}\n\nexport type T_LOAN_SECTION_KEY_APPLICANTS = \"OTHER_DOCUMENTS\";\nexport type T_LOAN_SECTION_KEY_DOCUMENTS = \"LOAN_OTHER_DOCUMENTS\";\n\nexport const LOAN_SECTION_KEY_TYPES: {\n  applicants: T_LOAN_SECTION_KEY_APPLICANTS;\n  documents: T_LOAN_SECTION_KEY_DOCUMENTS;\n} = {\n  applicants: \"OTHER_DOCUMENTS\",\n  documents: \"LOAN_OTHER_DOCUMENTS\",\n};\n\n//below constant is to pass stageName to the API endpoints for otherDocuments\nexport const STAGE = {\n  LOGIN: \"login\",\n  PD: \"pd\",\n};\n\nconst OtherDocuments = forwardRef<IOtherDocumentsRef, IOtherDocumentsProps>((props, ref) => {\n  const {\n    isLoading,\n    className,\n    otherDocumentsData,\n    onRemoveDocFromList,\n    sectionMode,\n    payloadInfo,\n  } = props;\n\n  const documentUploadRef = useRef<IDocumentUploaderRef[]>([]);\n\n  useImperativeHandle(ref, () => {\n    return {\n      save: onSave,\n      cancel: onCancel,\n    };\n  });\n\n  const onSave = () => {\n    const unsavedDocuments: IDocumentInfo[] = [];\n\n    for (let idx = 0; idx < otherDocumentsData.length; idx++) {\n      if (documentUploadRef?.current?.[idx]) {\n        const unsavedDoc = documentUploadRef?.current?.[idx]?.getUploadedData();\n        if (unsavedDoc) {\n          unsavedDocuments.push(unsavedDoc);\n        } else {\n          return;\n        }\n      }\n    }\n\n    const payloadData = enrichOtherDocuments(unsavedDocuments, payloadInfo);\n\n    return payloadData;\n  };\n\n  const onCancel = () => {\n    //\n  };\n\n  /*------------------------------------Helper Functions--------------------------------- */\n\n  return (\n    <React.Fragment>\n      <div className={`w-full h-full ${className ?? \"\"}`}>\n        {isLoading ? (\n          <div className=\"flex items-center justify-center w-full h-full\">\n            <SkeletonCustom height=\"19rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          </div>\n        ) : (\n          <div className=\"flex flex-col\">\n            {otherDocumentsData.map((otherDocument: ISavedDocumentRecords, idx) => {\n              return (\n                <Fragment key={otherDocument.uid ? otherDocument.uid : otherDocument.listKey}>\n                  <DocumentUploader\n                    ref={(refValue) => {\n                      documentUploadRef.current[idx] = refValue as IDocumentUploaderRef;\n                    }}\n                    docUploaderIndex={idx}\n                    mode={\n                      sectionMode === PAGE_MODE.CREATE\n                        ? DOC_UPLOADER_MODE.EDIT\n                        : DOC_UPLOADER_MODE.VIEW\n                    }\n                    queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_OTHER_DOCUMENTS}\n                    savedDocument={otherDocument ?? {}}\n                    accessKebab\n                    onRemoveFromList={onRemoveDocFromList}\n                  />\n                </Fragment>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default OtherDocuments;\n","import { ILoginFeeReceiptData } from \"components/AddNewReceiptDialog/AddNewReceiptDialog\";\nimport { IAddressData } from \"components/Address/Address\";\nimport {\n  IDocumentInfo,\n  IUploadedDocumentSection,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport { IUploadedFile } from \"components/FileUploadCustom\";\nimport { IAadharOTP } from \"components/KYCV3\";\nimport { currencyFormatter, numberFormatter } from \"locale\";\nimport {\n  currencyFormatToNumber,\n  formatNumberToAadhaar,\n  getDateString,\n  getYear,\n} from \"utils/CommonUtil\";\nimport {\n  ADDRESS_TYPE_OBJ,\n  ADDRESS_TYPE_VALUES,\n  APPLICANT_TYPE,\n  DOCUMENT_SECTION,\n  LOAN_SECTION_KEY,\n  STORY_BOARD,\n} from \"utils/Constant\";\nimport { IKycDocuments } from \"views/transaction/PageQDE\";\nimport { IBankAccountDetails } from \"./PageApplicant/BankAccountDetails\";\nimport { IEmploymentDetailsData } from \"./PageApplicant/EmploymentDetails\";\nimport { IInvestmentInfoData } from \"./PageApplicant/InvestmentInformation\";\nimport {\n  IDocumentProofFiles,\n  IOtherDetailsPageObj,\n} from \"./PageApplicant/OtherDetails/OtherDetails\";\nimport { IReferencesData } from \"./PageApplicant/References\";\nimport { IPropertyDetailsData } from \"./PageCollateralProperty/PropertyDetails/PropertyDetails\";\nimport { IHistoricalFinInfo } from \"./PageCorporateCoApplicants/HistoricalFinancialDetail/HistoricalFinancialDetail\";\nimport { ICorpInvestmentInfoData } from \"./PageCorporateCoApplicants/InvestmentDetail/InvestmentDetail\";\nimport { ISalesRecommendationData } from \"./PageDocuments/SalesRecommendation/SalesRecommendation\";\nimport { ILoginFeeReceiptRowData } from \"./PageFees/PageFees\";\nimport {\n  LOAN_SECTION_KEY_TYPES,\n  T_LOAN_SECTION_KEY_APPLICANTS,\n  T_LOAN_SECTION_KEY_DOCUMENTS,\n} from \"components/OtherDocuments/OtherDocuments\";\nimport { IPartnerDirectorDetailsData } from \"./PageCorporateCoApplicants/PartnerDirectorDetails/PartnerDirectorDetails\";\nimport { showCurrency } from \"views/transaction/PageCAM/Helper\";\n/*\n-----------------------------------------------------------------------------------------------------------\ninterface\n-----------------------------------------------------------------------------------------------------------\n*/\nexport interface IDropDownOption {\n  uid?: string;\n  label: string;\n  value: string;\n}\n\nexport interface IDropDownOptions {\n  uid?: string;\n  label: string;\n  value: string;\n  code?: string;\n  name?: string;\n}\n\nexport interface ISavedDocumentRecords {\n  uid: string; // saved document object uid\n  attributes: { [key: string]: string | number | Date };\n  dob?: Date;\n  docCategory: string;\n  docFor?: string;\n  docNo?: string | number;\n  docType: { [key: string]: any };\n  documentSections: ISavedDocumentSections[];\n  loanSectionKey: string;\n  maskedDocNo?: string;\n  isActive: boolean;\n}\n\nexport interface ISavedDocumentSections {\n  uid: string;\n  fileName: string;\n  fileType: string;\n  isActive: boolean;\n  section: string;\n  sectionName: string;\n  thumbUrl: string;\n  url: string;\n}\n\nexport interface IDocumentProofFile extends IUploadedFile {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  docType?: { uid: string; code: string; name: string };\n  sectionCode?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\ninterface ISectionDocuments extends IUploadedFile {\n  docFor?: string;\n  docTypeUid?: string;\n  isActive?: boolean;\n  uid?: string; //individual uploaded file uid\n}\n\nexport interface IDocument {\n  fileName: string;\n  fileType: string;\n  thumbUrl: string;\n  url: string;\n  meta: string;\n  loanSectionKey?: string;\n  docType?: any;\n  section?: any;\n  isActive?: boolean;\n  signedUrl?: string;\n  contentType?: string;\n}\n\nexport interface IDocuments extends IDocument {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  signedUrl?: string;\n  docType?: { uid?: string; code?: string; name?: string };\n  sectionCode?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\nexport interface ICibilEnquiryInputData {\n  name: string;\n  dob: string;\n  gender: string;\n  father: string;\n  spouse: string;\n  mother: string;\n  phone: string;\n  emailId: string;\n  id: string;\n  address: string;\n  otherAddress: string;\n}\n\nexport interface ICibilAccountSummary {\n  accountType: string;\n  totalAccounts: string;\n  zeroBalanceAccounts: string;\n  overdueAccounts: string;\n  currentBalance: string;\n  overdueBalance: string;\n  amountDsbdHighCredit: string;\n  oldestDateOpened: string;\n  recentDateOpened: string;\n}\n\nexport interface ICRIFAccountSummary {\n  numberofAccounts: string;\n  currentBalance: string;\n  enquiriesInLast24Months: string;\n  newDelinquentAccLast6Months: string;\n  activeAccounts: string;\n  overdueAccounts: string;\n  amountDsbdHighCredit: string;\n  newAccLast6Months: string;\n}\n\n/*\n-----------------------------------------------------------------------------------------------------------\ninitial values\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const initialDoc = {\n  fileName: \"\",\n  fileType: \"\",\n  thumbUrl: \"\",\n  url: \"\",\n  meta: \"\",\n  loanSectionKey: \"\",\n};\n\nexport const initialDocInfo: ISectionDocuments = {\n  uid: \"\",\n  isActive: true,\n  fileName: \"\",\n  url: \"\",\n  thumbUrl: \"\",\n  signedUrl: \"\",\n  contentType: \"\",\n};\n\nexport const initialSectionDocInfo: IDocumentProofFile = {\n  uid: \"\",\n  fileName: \"\",\n  url: \"\",\n  thumbUrl: \"\",\n  signedUrl: \"\",\n  contentType: \"\",\n  docFor: \"\",\n  docType: { uid: \"\", code: \"\", name: \"\" },\n  sectionCode: \"\",\n  sectionName: \"\",\n  isActive: true,\n};\n\nexport const initialSavedDocumentStructure: ISavedDocumentRecords = {\n  uid: \"\", // saved document object uid\n  attributes: {},\n  dob: new Date(),\n  docCategory: \"\",\n  docFor: \"\",\n  docNo: \"\",\n  docType: {},\n  documentSections: [\n    {\n      uid: \"\",\n      fileName: \"\",\n      fileType: \"\",\n      isActive: true,\n      section: \"\",\n      sectionName: \"\",\n      thumbUrl: \"\",\n      url: \"\",\n    },\n  ],\n  loanSectionKey: \"\",\n  maskedDocNo: \"\",\n  isActive: true,\n};\n\nexport const initialKycTemplateListData = {\n  listId: \"kyc-card-1\",\n  uid: \"\",\n  docName: \"\",\n  docNo: \"\",\n  maskedDocNo: \"\",\n  dob: \"\",\n  docSections: [],\n  isVerified: false,\n};\n\nexport const initialLoanDocsInfo = {\n  documentUid: \"\",\n  documentName: \"\",\n  documentCode: \"\",\n  documentCategory: \"\",\n  sectionMetaDropdownOptions: [],\n  documentSectionUrls: [],\n  isActive: true,\n};\n\nexport const initialEmploymentData: IEmploymentDetailsData = {\n  employmentNature: \"\",\n  industry: { name: \"\", uid: \"\" },\n  occupation: \"\",\n  organizationName: \"\",\n  operationStartYear: \"\",\n  businessExperience: \"\",\n  employmentAddress: {\n    residentialAddress: false,\n    permanentAddress: false,\n    isSameAsEmploymentAddress: false,\n  },\n  monthlyIncome: \"\",\n  monthlyExpenses: \"\",\n  otherMonthlyIncome: \"\",\n  monthlyNetIncome: \"\",\n  annualNetIncome: \"\",\n  managedBy: \"\",\n  seasonality: \"\",\n  noOfEmployees: \"\",\n  address: \"\",\n  pincode: { name: \"\", uid: \"\" },\n  city: { name: \"\", uid: \"\" },\n  state: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  loanDocuments: initialLoanDocsInfo,\n};\n\nexport const initialBankAccountDetailsData: IBankAccountDetails = {\n  accountHolderName: \"\",\n  IFSCCode: \"\",\n  bankName: \"\",\n  branchName: \"\",\n  accountType: \"\",\n  accountNumber: \"\",\n  loanDocuments: initialLoanDocsInfo,\n};\n\nexport const initialAddressDocInfo: IDocuments = {\n  uid: \"\",\n  fileName: \"\",\n  url: \"\",\n  thumbUrl: \"\",\n  signedUrl: \"\",\n  contentType: \"\",\n  docFor: \"\",\n  docType: { uid: \"\", code: \"\", name: \"\" },\n  sectionCode: \"\",\n  sectionName: \"\",\n  isActive: true,\n  fileType: \"\",\n  meta: \"\",\n  loanSectionKey: LOAN_SECTION_KEY.ADDRESS_PROOF,\n};\n\nexport const initialOtherDetailsData: IOtherDetailsPageObj = {\n  emailAddress: \"\",\n  martialStatus: \"\",\n  fatherOrSpouseName: \"\",\n  noOfDependants: \"\",\n  education: \"\",\n  institute: \"\",\n  birthPlace: \"\",\n  religion: \"\",\n  category: \"\",\n  savedCategoryDocuments: [],\n  //\n  address: \"\",\n  pincode: {\n    pinCode: \"\",\n    uid: \"\",\n  },\n  city: {\n    name: \"\",\n    uid: \"\",\n  },\n  state: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  savedPermanentAddressDocuments: [],\n  isSameAsResidentialAddress: false,\n};\n\nexport const initialSalesRecommendationData: ISalesRecommendationData = {\n  uid: \"\",\n  recommendationDate: \"\",\n  recommendedBy: { name: \"\", uid: \"\" },\n  recommendationDescription: \"\",\n};\n\nexport const initialCibilEnquiryInfoData: ICibilEnquiryInputData = {\n  name: \"Mahesh Venkat\",\n  dob: \"21 - 10 - 2023\",\n  gender: \"Male\",\n  father: \"Kumar\",\n  spouse: \"Jyothi\",\n  mother: \"Vinuttha\",\n  phone: \"99930029940\",\n  emailId: \"Mahesssh@gmail.com\",\n  id: \"BBH118JJKKLH555810\",\n  address: \"#334, 9th Main, 6th cross Koramangala, 3rd Main\",\n  otherAddress: \"#334, 9th Main, 6th cross Koramangala, 3rd Main\",\n};\n\nexport const initialCibilAccountSummary: ICibilAccountSummary = {\n  accountType: \"All Accounts\",\n  totalAccounts: \"10\",\n  zeroBalanceAccounts: \"1\",\n  overdueAccounts: \"1\",\n  currentBalance: \"12,2201\",\n  overdueBalance: \"Rs 5550\",\n  amountDsbdHighCredit: \"Rs 23,000\",\n  oldestDateOpened: \"\",\n  recentDateOpened: \"\",\n};\n\nexport const initialCRIFAccSummary: ICRIFAccountSummary = {\n  numberofAccounts: \"10\",\n  currentBalance: \"Rs 10,203\",\n  enquiriesInLast24Months: \"10\",\n  newDelinquentAccLast6Months: \"2\",\n  activeAccounts: \"7\",\n  overdueAccounts: \"3\",\n  amountDsbdHighCredit: \"Rs 23,000\",\n  newAccLast6Months: \"2\",\n};\n\nexport const initialPropertyData: IPropertyDetailsData = {\n  address: \"\",\n  pincode: { name: \"\", uid: \"\" },\n  city: { name: \"\", uid: \"\" },\n  state: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  propertyType: \"\",\n  isPropertySelected: true,\n  savedDocuments: [],\n  isSameAsApplicantResAddress: false,\n  ignoreSameAsApplicantResAddressChange: false,\n};\n\nexport const prepareAttributes = (docInfo: IDocumentInfo) => {\n  const {\n    documentUid,\n    documentName,\n    documentCode,\n    documentCategory,\n    documentSectionUrls,\n    isActive,\n    primaryKeyAttributeName,\n    uid,\n    meta,\n    ...attributes\n  } = docInfo;\n\n  return JSON.stringify(attributes);\n};\n\nexport const prepareDocSections = (documentSections: IUploadedDocumentSection[]) => {\n  const sections = documentSections.map((docSection: any) => ({\n    uid: docSection.uid ? docSection.uid : null,\n    section: docSection.code,\n    fileName: docSection.fileName,\n    fileType: docSection.contentType,\n    thumbUrl: docSection.thumbUrl,\n    url: docSection.url,\n    isActive: docSection.isActive,\n  }));\n  return sections;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nService Calls\n-----------------------------------------------------------------------------------------------------------\n*/\n\n/*\n-----------------------------------------------------------------------------------------------------------\nFunction to modify APIResponse to component data structure\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updatedDocumentFromAPIResponse = (documents: any[]) => {\n  const updatedDocument: any[] = documents?.map((proof: any) => {\n    return {\n      uid: proof.uid ?? \"\",\n      fileName: proof.fileName ?? \"\",\n      url: proof.url ?? \"\",\n      thumbUrl: proof.thumbUrl ?? \"\",\n      signedUrl: \"\",\n      contentType: proof.fileType ?? \"\",\n      docFor: \"\",\n      docType: {\n        uid: proof.docType?.uid ?? \"\",\n        code: proof.docType?.code ?? \"\",\n        name: proof.docType?.name ?? \"\",\n      },\n      sectionCode: proof.section ?? \"\",\n      sectionName: \"\",\n      isActive: proof.isActive,\n    };\n  });\n\n  updatedDocument?.push(initialDocInfo);\n  return updatedDocument;\n};\n\nexport const prepareDocumentSectionStructure = (sections: any) => {\n  const preparedStructure: ISavedDocumentSections[] = sections.map((docSection: any) => ({\n    uid: docSection.uid,\n    fileName: docSection.fileName,\n    fileType: docSection.fileType,\n    section: docSection.section,\n    sectionName: docSection.sectionName,\n    thumbUrl: docSection.thumbUrl,\n    meta: docSection?.meta ?? \"\",\n    url: docSection.url,\n    isActive: docSection.isActive,\n  }));\n\n  return preparedStructure.length\n    ? preparedStructure\n    : [\n        {\n          uid: \"\",\n          fileName: \"\",\n          fileType: \"\",\n          section: \"\",\n          sectionName: \"\",\n          thumbUrl: \"\",\n          url: \"\",\n          isActive: false,\n        },\n      ];\n};\n\nexport const structLoanDocumentsFromAPIResponse = (documents: any[]) => {\n  const structuredSavedDocument: ISavedDocumentRecords[] = documents?.map((doc: any) => ({\n    uid: doc.uid,\n    attributes: {\n      ...doc.attributes,\n    },\n    dob: doc.dob ? new Date(doc.dob) : new Date(),\n    docCategory: doc.docCategory,\n    docFor: doc.docFor,\n    docNo: doc.docNo,\n    docType: { ...doc.docType },\n    documentSections: prepareDocumentSectionStructure(doc.documentSections),\n    loanSectionKey: doc.loanSectionKey,\n    maskedDocNo: doc.maskedDocNo,\n    isActive: doc.isActive,\n  }));\n  return structuredSavedDocument;\n};\n\nexport const updateEmploymentInfoObj = (ele: any) => {\n  return {\n    id: ele?.id,\n    uid: ele?.uid,\n    isActive: ele?.isActive,\n    employmentNature: ele?.smEmploymentNature,\n    industry: { name: ele?.industry?.name, uid: ele?.industry?.uid },\n    occupation: ele?.occupation,\n    organizationName: ele?.orgName,\n    operationStartYear: getDateString(ele?.smIncorporationYear),\n    businessExperience: ele?.expInYear,\n    monthlyIncome: numberFormatter(ele?.grossIncomeMonth, \"en-IN\", 0),\n    monthlyExpenses: numberFormatter(ele?.expenseMonth, \"en-IN\", 0),\n    otherMonthlyIncome: numberFormatter(ele?.otherIncomeMonth, \"en-IN\", 0),\n    monthlyNetIncome: numberFormatter(ele?.netIncomeMonth, \"en-IN\", 0),\n    annualNetIncome: numberFormatter(ele?.netIncomeYear, \"en-IN\", 0),\n    employmentAddress: {\n      residentialAddress: ele?.premisesAddress?.isSameAsApplicantResAddress ? true : false,\n      permanentAddress: ele?.premisesAddress?.isSameAsApplicantPermanentAddress ? true : false,\n      isSameAsEmploymentAddress: false,\n    },\n    managedBy: ele?.smBusinessManagedBy,\n    seasonality: ele?.smBusinessSeasonality,\n    noOfEmployees: ele?.smNoOfEmployee,\n    address: ele?.premisesAddress?.address,\n    pincode: {\n      pinCode: ele?.premisesAddress?.pincode?.pinCode,\n      uid: ele?.premisesAddress?.pincode?.uid,\n    },\n    city: {\n      name: ele?.premisesAddress?.city?.name,\n      uid: ele?.premisesAddress?.city?.uid,\n    },\n    state: \"\",\n    latitude: ele?.premisesAddress?.latitude\n      ? `${parseFloat(ele?.premisesAddress?.latitude).toFixed(4)}`\n      : \"\",\n    longitude: ele?.premisesAddress?.longitude\n      ? `${parseFloat(ele?.premisesAddress?.longitude).toFixed(4)}`\n      : \"\",\n    premisesUid: ele?.premisesAddress?.uid,\n    loanDocuments: structLoanDocumentsFromAPIResponse(ele?.loanDocuments) ?? {\n      ...initialSavedDocumentStructure,\n    },\n  };\n};\n\nexport const updateBankAccountInfoObj = (ele: any) => {\n  return {\n    id: ele?.id,\n    uid: ele?.uid,\n    isActive: ele?.isActive,\n    accountHolderName: ele?.accountHolderName,\n    IFSCCode: { name: ele?.ifsc?.ifscCode, uid: ele?.ifsc?.uid },\n    bankName: ele?.ifsc?.bank?.name,\n    branchName: ele?.ifsc?.branch,\n    accountType: ele?.smAccountType,\n    accountNumber: ele?.accountNo,\n    loanDocuments: structLoanDocumentsFromAPIResponse(ele?.loanDocuments) ?? {\n      ...initialSavedDocumentStructure,\n    },\n  };\n};\n\nexport const getDocumentStructure = (list: any[]) => {\n  // This function give the data required for file uploader to  load\n  if (!Array.isArray(list)) {\n    return [];\n  }\n  return list.map((proof: any) => {\n    return {\n      uid: proof.uid ?? \"\",\n      fileName: proof.fileName ?? \"\",\n      url: proof.url ?? \"\",\n      thumbUrl: proof.thumbUrl ?? \"\",\n      signedUrl: \"\",\n      contentType: proof.fileType ?? \"\",\n      docFor: \"\",\n      docType: {\n        uid: proof.docType?.uid ?? \"\",\n        code: proof.docType?.code ?? \"\",\n        name: proof.docType?.name ?? \"\",\n      },\n      sectionCode: proof.section ?? \"\",\n      sectionName: \"\",\n      isActive: proof.isActive,\n    };\n  });\n};\n\nexport const updateOtherDetailsObj = (\n  permanentAddressData: any,\n  applicantData: any\n): IOtherDetailsPageObj => {\n  //permanentAddressData?.documents\n  const addressDocs: IDocumentProofFiles[] = getDocumentStructure(permanentAddressData?.documents);\n  const applicantDocs: IDocumentProofFiles[] = getDocumentStructure(applicantData?.documents);\n  const isResidentialAddress = permanentAddressData?.isSameAsApplicantResAddress ? true : false;\n  const isPermanentAddress = permanentAddressData?.isSameAsApplicantPermanentAddress ? true : false;\n  return {\n    emailAddress: applicantData?.emaiId,\n    martialStatus: applicantData?.smMaritalStatus,\n    fatherOrSpouseName: applicantData?.fatherOrSpouseName,\n    noOfDependants: applicantData?.noOfDependents,\n    education: applicantData?.smEducation,\n    institute: applicantData?.university,\n    birthPlace: applicantData?.placeOfBirth,\n    religion: applicantData?.smReligion,\n    category: applicantData?.smCasteCategory,\n    savedCategoryDocuments: structLoanDocumentsFromAPIResponse(applicantData?.loanDocuments),\n    applicantUid: applicantData?.uid,\n    //\n    permanentAddressUid: permanentAddressData?.uid,\n    address: permanentAddressData?.address,\n    pincode: {\n      pinCode: permanentAddressData?.pincode?.pinCode,\n      uid: permanentAddressData?.pincode?.uid,\n    },\n    city: {\n      name: permanentAddressData?.city?.name,\n      uid: permanentAddressData?.city?.uid,\n    },\n    state: permanentAddressData?.city?.state?.name,\n    latitude: permanentAddressData?.latitude\n      ? `${parseFloat(permanentAddressData?.latitude).toFixed(4)}`\n      : \"\",\n    longitude: permanentAddressData?.longitude\n      ? `${parseFloat(permanentAddressData?.longitude).toFixed(4)}`\n      : \"\",\n    savedPermanentAddressDocuments: structLoanDocumentsFromAPIResponse(\n      permanentAddressData?.loanDocuments\n    ),\n    ...(applicantData?.applicantType === APPLICANT_TYPE.PRIMARY\n      ? { isSameAsResidentialAddress: isResidentialAddress }\n      : { defaultAsResidentialAddress: isResidentialAddress }),\n    defaultAsPermanentAddress: isPermanentAddress,\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nFunction to structure the payload\n-----------------------------------------------------------------------------------------------------------\n*/\n\n//pageId can be applicant uid, coapplicant uid, guarantor uid etc\n\nexport const enrichSaveKycDocument = (\n  loanId: string,\n  pageId: string,\n  documentInfo: IKycDocuments,\n  type: string\n) => {\n  const { documentUid: kycDocTypeUid, documentUrl, documentNumber, dob } = documentInfo;\n\n  const documentSections = documentUrl.map((docUrl) => {\n    const preparedSectionPayload = {\n      loan: {}, //always has to be empty\n      kyc: {}, //always has to be empty\n      smDocSectionType: docUrl.code,\n      fileName: docUrl.fileName,\n      fileType: docUrl.contentType,\n      thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n      url: docUrl.url,\n      meta: \"\",\n    };\n\n    return preparedSectionPayload;\n  });\n\n  const payload = {\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId ? pageId : \"\",\n      applicantType: type,\n    },\n    docType: {\n      uid: kycDocTypeUid,\n    },\n    dob: dob ? dob : null,\n    docNo: documentNumber,\n    meta: \"\",\n    kycDocuments: documentSections,\n  };\n\n  return payload;\n};\n\nexport const enrichUpdateKycDocument = (\n  loanId: string,\n  pageId: string,\n  documentInfo: IKycDocuments,\n  sections: any,\n  applicantType: string\n) => {\n  const {\n    uid,\n    documentUid: kycDocTypeUid,\n    documentUrl,\n    documentNumber,\n    dob,\n    isActive,\n  } = documentInfo;\n\n  const getSectionUid = (sectionCode: string) => {\n    const currentSection = sections.find((section: any) => {\n      return section.smDocSectionType === sectionCode;\n    });\n    return currentSection.uid;\n  };\n\n  const documentSections = documentUrl.map((docUrl) => {\n    const preparedSectionPayload = {\n      uid: getSectionUid(docUrl.code),\n      loan: {}, //always has to be empty\n      kyc: {}, //always has to be empty\n      smDocSectionType: docUrl.code,\n      fileName: docUrl.fileName,\n      fileType: docUrl.contentType,\n      thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n      url: docUrl.url,\n      meta: \"\",\n    };\n\n    return preparedSectionPayload;\n  });\n\n  const payload = {\n    uid: uid,\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId ? pageId : \"\",\n      applicantType: applicantType,\n    },\n    docType: {\n      uid: kycDocTypeUid,\n    },\n    dob: dob ? dob : null,\n    docNo: documentNumber,\n    meta: \"\",\n    kycDocuments: documentSections,\n    isActive: isActive,\n  };\n\n  return payload;\n};\n\nexport const enrichPopulateDocWithOcr = (\n  loanId: string,\n  pageId: string,\n  populateOcrUid: string,\n  document: IKycDocuments,\n  type: string\n) => {\n  const { documentUid: kycDocTypeUid, documentUrl } = document;\n\n  const documentSections = documentUrl.map((docUrl) => {\n    const preparedSectionPayload = {\n      loan: {}, //always has to be empty\n      kyc: {}, //always has to be empty\n      smDocSectionType: docUrl.code,\n      fileName: docUrl.fileName,\n      fileType: docUrl.contentType,\n      thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n      url: docUrl.url,\n      meta: \"\",\n    };\n    return preparedSectionPayload;\n  });\n\n  const getSectionSignedUrl = (sectionCode: string) => {\n    const section = documentUrl.find((docUrl) => {\n      return docUrl.isOcrActive && docUrl.code === sectionCode;\n    });\n    return section?.signedUrl;\n  };\n\n  const payload = {\n    uid: populateOcrUid ? populateOcrUid : \"\",\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId ? pageId : \"\",\n      applicantType: type,\n    },\n    docType: {\n      uid: kycDocTypeUid,\n    },\n    dob: null,\n    docNo: \"0\",\n    meta: \"\",\n    kycDocuments: documentSections,\n    backSignedUrl: getSectionSignedUrl(DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE) ?? \"\",\n    frontSignedUrl: getSectionSignedUrl(DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE) ?? \"\",\n  };\n  return payload;\n};\n\nexport const enrichAadharValidation = (\n  loanId: string,\n  pageId: string,\n  documentInfo: IKycDocuments,\n  aadharOtpInfo: IAadharOTP,\n  type: string,\n  uid: string //uid of saved record if user has used populate ocr feature else it will be sent as empty\n) => {\n  const { documentUid: kycDocTypeUid, documentUrl, documentNumber } = documentInfo;\n\n  const { otp, requestId } = aadharOtpInfo;\n\n  const documentSections = documentUrl.map((docUrl) => {\n    const preparedSectionPayload = {\n      loan: {}, //always has to be empty\n      kyc: {}, //always has to be empty\n      smDocSectionType: docUrl.code,\n      fileName: docUrl.fileName,\n      fileType: docUrl.contentType,\n      thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n      url: docUrl.url ?? \"\",\n      meta: \"\",\n    };\n\n    return preparedSectionPayload;\n  });\n\n  const preparedPayload = {\n    uid: uid ? uid : \"\",\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId ? pageId : \"\",\n      applicantType: type,\n    },\n    docType: {\n      uid: kycDocTypeUid,\n    },\n    docNo: documentNumber,\n    meta: \"\",\n    kycDocuments: documentSections,\n    otp: otp,\n    accessKey: requestId,\n    aadhaarNo: documentNumber,\n    consent: \"Y\",\n  };\n\n  return preparedPayload;\n};\n\nexport const enrichEmploymentDetailsObj = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  type: string\n) => {\n  return {\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId,\n      applicantType: type,\n    },\n    // id: data?.id,\n    uid: data?.uid,\n    isActive: data?.isActive,\n    smEmploymentNature: data?.employmentNature,\n    industry: { uid: data?.industry?.uid },\n    occupation: data?.occupation,\n    orgName: data?.organizationName,\n    smIncorporationYear: `${getYear(data?.operationStartYear)}`,\n    expInYear: parseFloat(data?.businessExperience),\n    grossIncomeMonth: currencyFormatToNumber(data?.monthlyIncome),\n    expenseMonth: currencyFormatToNumber(data?.monthlyExpenses),\n    otherIncomeMonth: currencyFormatToNumber(data?.otherMonthlyIncome),\n    netIncomeMonth: currencyFormatToNumber(data?.monthlyNetIncome),\n    netIncomeYear: currencyFormatToNumber(data?.annualNetIncome),\n    smBusinessManagedBy: data?.managedBy,\n    smBusinessSeasonality: data?.seasonality,\n    smNoOfEmployee: data?.noOfEmployees,\n    premisesAddress: {\n      uid: data?.premisesUid,\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: pageId,\n      },\n      address: data?.address,\n      pincode: {\n        uid: data?.pincode?.uid,\n      },\n      city: {\n        uid: data?.city?.uid,\n      },\n      latitude: Number(data?.latitude),\n      longitude: Number(data?.longitude),\n      smAddressType: ADDRESS_TYPE_OBJ.EMPLOYEMENT_ADDRESS,\n      isSameAsApplicantResAddress: data?.employmentAddress?.residentialAddress, //boolean or null\n      isSameAsApplicantPermanentAddress: data?.employmentAddress?.permanentAddress, //boolean or null\n    },\n\n    loanDocuments: data?.loanDocumentsProof?.documentUid\n      ? [\n          {\n            uid: data?.loanDocumentsProof?.uid,\n            docType: {\n              uid: data?.loanDocumentsProof?.documentUid,\n            },\n            docNo:\n              data?.loanDocumentsProof?.[`${data?.loanDocumentsProof?.primaryKeyAttributeName}`] ??\n              null,\n            dob: data?.loanDocumentsProof?.dob ? data?.loanDocumentsProof?.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.EMPLOYEMENT,\n            docCategory: data?.loanDocumentsProof?.documentCategory,\n            attributes: prepareAttributes(data?.loanDocumentsProof),\n            documentSections: prepareDocSections(data?.loanDocumentsProof?.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n};\n\nexport const enrichBankAccountDetailsObj = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  type: string\n) => {\n  return {\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId,\n      applicantType: type,\n    },\n    ifsc: { uid: data?.IFSCCode?.uid },\n    accountHolderName: data?.accountHolderName,\n    smAccountType: data?.accountType,\n    accountNo: data?.accountNumber,\n    isActive: data?.isActive,\n    id: data?.id,\n    uid: data?.uid,\n    loanDocuments: data?.loanDocumentsProof?.documentUid\n      ? [\n          {\n            uid: data?.loanDocumentsProof?.uid,\n            docType: {\n              uid: data?.loanDocumentsProof?.documentUid,\n            },\n            docNo:\n              data?.loanDocumentsProof?.[`${data?.loanDocumentsProof?.primaryKeyAttributeName}`] ??\n              null,\n            dob: data?.loanDocumentsProof?.dob ? data?.loanDocumentsProof?.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.BANKING,\n            docCategory: data?.loanDocumentsProof?.documentCategory,\n            attributes: prepareAttributes(data?.loanDocumentsProof),\n            documentSections: prepareDocSections(data?.loanDocumentsProof?.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n};\n\nexport const enrichReferencesObj = (\n  loanId: string,\n  pageId: string,\n  referencesPageObj: IReferencesData,\n  rootId: string\n) => {\n  const {\n    firstName,\n    middleName,\n    lastName,\n    mobileNo,\n    relationship,\n    address,\n    pincode,\n    city,\n    latitude,\n    longitude,\n    isActive,\n  } = referencesPageObj;\n\n  let payload: { [key: string]: any } = {\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      loan: {\n        uid: loanId,\n      },\n      applicantType: APPLICANT_TYPE.REFERENCE,\n      firstName: firstName,\n      middleName: middleName,\n      lastName: lastName,\n      smGender: \"\",\n      mobileCountryCode: \"+91\",\n      mobileNo: mobileNo,\n      smRelationship: relationship,\n      parent: {\n        uid: pageId, // this can be applicant's uid (only on applicant screen)  or co-applicant's uid\n      },\n      root: {\n        uid: rootId, // this will be always applicant's uid\n      },\n      stage: null,\n    },\n    address: address,\n    pincode: {\n      uid: pincode?.uid,\n    },\n    city: {\n      uid: city?.uid,\n    },\n    latitude: Number(latitude),\n    longitude: Number(longitude),\n    stage: null,\n    isActive: isActive,\n  };\n\n  if (referencesPageObj.uid) {\n    // update payload\n    payload = {\n      uid: referencesPageObj.uid,\n      ...payload,\n      applicant: {\n        uid: referencesPageObj.referenceApplicantUid,\n        ...payload.applicant,\n      },\n    };\n  }\n  return payload;\n};\n\nexport const enrichInvestmentInfoDetails = (\n  loanId: string,\n  pageId: string,\n  investmentInfoPageObj: IInvestmentInfoData,\n  type: string\n) => {\n  const preparePayloadFinancialDetails = investmentInfoPageObj.assets.map((asset) => {\n    return {\n      uid: asset.uid ?? \"\",\n      loan: { uid: loanId },\n      applicant: { uid: pageId, applicantType: type },\n      smAssetType: asset.smAssetType, //code\n      amount: Number(asset.amount), //amount\n      isActive: asset.isActive,\n      // financialYear: \"<number>\",\n      // turnOver: \"<number>\",\n      // capitalNetWorth: \"<number>\",\n      // stage: { uid: \"<string>\" },\n    };\n  });\n\n  const payload = {\n    commentOnInvestment: investmentInfoPageObj.investmentComments,\n    financialDetails: preparePayloadFinancialDetails,\n    applicantUid: pageId,\n    loanUid: loanId,\n  };\n\n  return payload;\n};\n\nexport const enrichOtherDetails = (\n  data: IOtherDetailsPageObj,\n  loanId: string,\n  pageId: string,\n  type?: string | undefined\n) => {\n  const enrichObj = {\n    // ----------------- permanent address --------------------- //\n    permanentAddress: {\n      uid: data?.permanentAddressUid,\n      address: data?.address,\n      pincode: {\n        uid: data?.pincode?.uid,\n      },\n      city: {\n        uid: data?.city?.uid,\n      },\n      latitude: Number(data?.latitude),\n      longitude: Number(data?.longitude),\n      smAddressType: ADDRESS_TYPE_VALUES.PERMANENT,\n      primaryAddressType: ADDRESS_TYPE_VALUES.PERMANENT,\n      applicant: {\n        uid: pageId,\n        applicantType: type,\n      },\n      loan: {\n        uid: loanId,\n      },\n      isSameAsApplicantResAddress:\n        type === APPLICANT_TYPE.PRIMARY\n          ? data?.isSameAsResidentialAddress\n          : data?.defaultAsResidentialAddress,\n      isSameAsApplicantPermanentAddress: data?.defaultAsPermanentAddress,\n      loanDocuments: data?.unSavedPermanentAddressDocuments?.documentUid\n        ? [\n            {\n              uid: data?.unSavedPermanentAddressDocuments?.uid,\n              docType: {\n                uid: data?.unSavedPermanentAddressDocuments?.documentUid,\n              },\n              docNo:\n                data?.unSavedPermanentAddressDocuments?.[\n                  `${data?.unSavedPermanentAddressDocuments.primaryKeyAttributeName}`\n                ] ?? null,\n              dob: data?.unSavedPermanentAddressDocuments.dob\n                ? data?.unSavedPermanentAddressDocuments.dob\n                : null,\n              loanSectionKey: LOAN_SECTION_KEY.PERMANENT_ADDRESS_PROOF,\n              docCategory: data?.unSavedPermanentAddressDocuments?.documentCategory,\n              attributes: prepareAttributes(data?.unSavedPermanentAddressDocuments),\n              documentSections: prepareDocSections(\n                data?.unSavedPermanentAddressDocuments?.documentSectionUrls\n              ),\n            },\n          ]\n        : [],\n    },\n\n    // ------------ applicant ------------------//\n    applicant: {\n      uid: pageId,\n      loan: {\n        uid: loanId,\n      },\n      applicantType: type,\n      emaiId: data?.emailAddress,\n      smMaritalStatus: data?.martialStatus,\n      fatherOrSpouseName: data?.fatherOrSpouseName,\n      noOfDependents: parseInt(data?.noOfDependants ?? \"\"),\n      placeOfBirth: data?.birthPlace,\n      smReligion: data?.religion,\n      smCasteCategory: data?.category,\n      smEducation: data?.education,\n      university: data?.institute,\n      loanDocuments: data?.unSavedCategoryDocuments?.documentUid\n        ? [\n            {\n              uid: data?.unSavedCategoryDocuments?.uid,\n              docType: {\n                uid: data?.unSavedCategoryDocuments?.documentUid,\n              },\n              docNo:\n                data?.unSavedCategoryDocuments?.[\n                  `${data?.unSavedCategoryDocuments.primaryKeyAttributeName}`\n                ] ?? null,\n              dob: data?.unSavedCategoryDocuments.dob ? data?.unSavedCategoryDocuments.dob : null,\n              loanSectionKey: LOAN_SECTION_KEY.CASTE_CATEGORY,\n              docCategory: data?.unSavedCategoryDocuments?.documentCategory,\n              attributes: prepareAttributes(data?.unSavedCategoryDocuments),\n              documentSections: prepareDocSections(\n                data?.unSavedCategoryDocuments?.documentSectionUrls\n              ),\n            },\n          ]\n        : [],\n    },\n  };\n  //  return false;\n  return enrichObj;\n};\n\nexport const enrichOtherDetailsForDelete = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  type?: string | undefined\n) => {\n  const permanentAddressDocs = data?.permanentAddressDocuments?.map(\n    ({\n      docType,\n      fileName,\n      contentType,\n      thumbUrl,\n      url,\n      sectionCode,\n      signedUrl,\n    }: IDocumentProofFiles) => ({\n      docType,\n      fileName,\n      fileType: contentType,\n      thumbUrl,\n      signedUrl,\n      url,\n      loanSectionKey: LOAN_SECTION_KEY?.PERMANENT_ADDRESS_PROOF,\n      section: sectionCode,\n    })\n  );\n\n  const categoryDocs = data?.categoryDocuments?.map((item: any) => ({\n    ...item,\n    docFor: \"\",\n    loanSectionKey: LOAN_SECTION_KEY?.CASTE_CATEGORY, //yet to add doc id\n  }));\n\n  const enrichObj = {\n    // ----------------- permanent address --------------------- //\n    permanentAddress: {\n      uid: data?.permanentAddressUid,\n      address: data?.address,\n      pincode: {\n        uid: data?.pincode?.uid,\n      },\n      city: {\n        uid: data?.city?.uid,\n      },\n      latitude: Number(data?.latitude),\n      longitude: Number(data?.longitude),\n      smAddressType: ADDRESS_TYPE_VALUES.PERMANENT,\n      primaryAddressType: ADDRESS_TYPE_VALUES.PERMANENT,\n      applicant: {\n        uid: pageId,\n      },\n      loan: {\n        uid: loanId,\n      },\n      ...(permanentAddressDocs?.length > 0 ? { documents: permanentAddressDocs } : {}),\n    },\n\n    // ------------ applicant ------------------//\n    applicant: {\n      uid: pageId,\n      loan: {\n        uid: loanId,\n      },\n\n      // documents: categoryDocs, //need to add\n    },\n  };\n  // return false;\n  //  return false;\n  return enrichObj;\n};\n\nexport const updatePropertyObj = (ele: any, residentialAddress?: boolean) => {\n  return {\n    // id: ele?.id,\n    uid: !residentialAddress ? ele?.uid : undefined,\n    isActive: ele?.isActive,\n    address: ele?.address,\n    applicant: {\n      uid: ele?.applicant?.uid,\n    },\n    pincode: {\n      pinCode: ele?.pincode?.pinCode,\n      uid: ele?.pincode?.uid,\n    },\n    city: {\n      name: ele?.city?.name,\n      uid: ele?.city?.uid,\n    },\n    propertyType: ele?.propertyType,\n    isPropertySelected: ele?.isPropertySelected,\n    state: ele?.city?.state?.name,\n    latitude: ele?.latitude ? `${parseFloat(ele?.latitude).toFixed(4)}` : \"\",\n    longitude: ele?.longitude ? `${parseFloat(ele?.longitude).toFixed(4)}` : \"\",\n    savedDocuments: !residentialAddress\n      ? structLoanDocumentsFromAPIResponse(ele?.loanDocuments)\n      : [],\n    isSameAsApplicantResAddress: ele?.isSameAsApplicantResAddress,\n  };\n};\n\nexport const enrichPropertyDetailsObj = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  type: string\n) => {\n  return {\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId,\n      applicantType: type,\n    },\n    id: data?.id,\n    uid: data?.uid,\n    isActive: data?.isActive,\n    address: data?.address,\n    propertyType: data?.propertyType,\n    isPropertySelected: data?.isPropertySelected,\n    isSameAsApplicantResAddress: data?.isSameAsApplicantResAddress,\n    pincode: data?.isPropertySelected\n      ? {\n          uid: data?.pincode?.uid, //check\n        }\n      : null,\n    city: data?.isPropertySelected\n      ? {\n          uid: data?.city?.uid, //check\n        }\n      : null,\n    latitude: data?.latitude, //check\n    longitude: data?.longitude, //check\n    loanDocuments: data?.unSavedDocuments?.documentUid\n      ? [\n          {\n            uid: data?.unSavedDocuments?.uid,\n            docType: {\n              uid: data?.unSavedDocuments?.documentUid,\n            },\n            isActive: data?.unSavedDocuments?.isActive,\n            docNo:\n              data?.unSavedDocuments?.[`${data?.unSavedDocuments.primaryKeyAttributeName}`] ?? \"\",\n            dob: data?.unSavedDocuments.dob ? data?.unSavedDocuments.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.COLLATERAL_PROPERTY,\n            docCategory: data?.unSavedDocuments?.documentCategory,\n            attributes: prepareAttributes(data?.unSavedDocuments),\n            documentSections: prepareDocSections(data?.unSavedDocuments?.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n};\n\nexport const enrichCorpHistoricalFinDetails = (\n  loanId: string,\n  pageId: string,\n  historicalFinDetailsPageObj: IHistoricalFinInfo,\n  type: string\n) => {\n  const preparePayload = historicalFinDetailsPageObj.hfd.map((hfd) => {\n    return {\n      uid: hfd.uid ?? \"\",\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: pageId, // corporate co applicant uid\n        applicantType: type,\n      },\n      smFinancialYear: hfd.smFinancialYear,\n      turnOver: Number(hfd.turnOver),\n      profitAsPerPandL: Number(hfd.profitAsPerPandL),\n      capitalNetWorth: Number(hfd.capitalNetWorth),\n      isActive: hfd.isActive,\n    };\n  });\n\n  return preparePayload;\n};\n\nexport const enrichCorpInvestmentFinDetails = (\n  loanId: string,\n  pageId: string,\n  investmentFinDetailPageObj: ICorpInvestmentInfoData\n) => {\n  const preparedPayloadInvestmentTable = investmentFinDetailPageObj.assets.map((asset) => {\n    return {\n      uid: asset.uid ?? \"\",\n      loan: { uid: loanId },\n      applicant: {\n        uid: pageId, // corporate co applicant uid\n        applicantType: APPLICANT_TYPE.CORPORATE_CO_APPLICANT,\n      },\n      smAssetType: asset.smAssetType,\n      amount: Number(asset.amount),\n      isActive: asset.isActive,\n      // financialYear: hfd.finYear,\n      // turnOver: hfd.turnOver,\n      // profitAsPerPandL: hfd.profit,\n      // capitalNetWorth: hfd.netWorth,\n    };\n  });\n\n  const payload = {\n    commentOnInvestment: investmentFinDetailPageObj.comments,\n    financialDetails: preparedPayloadInvestmentTable,\n    documents: [],\n    applicantUid: pageId, // corporate co applicant\n    loanUid: loanId,\n  };\n\n  return payload;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - Documents - Sales Recommendation\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateSalesRecommendations = (data: any) => {\n  return {\n    uid: data?.uid,\n    isActive: data?.isActive,\n    recommendationDate: new Date(data?.recommendationDate),\n    recommendedBy: { name: data?.recommendedBy?.name, uid: data?.recommendedBy?.uid },\n    recommendationDescription: data?.recommendation,\n  };\n};\n\nexport const enrichSalesRecommendation = (data: any, loanId: string) => {\n  return [\n    {\n      uid: data?.uid,\n      isActive: data?.isActive,\n      loan: { uid: loanId },\n      smSectionType: STORY_BOARD.SALES_RECOMMENDATION,\n      recommendedBy: { uid: data?.recommendedBy?.uid },\n      recommendationDate: String(data?.recommendationDate),\n      recommendation: data?.recommendationDescription,\n    },\n  ];\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - Documents - story board\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const enrichStoryBoard = (data: any, loanId: string) => {\n  return [\n    {\n      uid: data?.uid,\n      isActive: data?.isActive,\n      loan: { uid: loanId },\n      smSectionType: STORY_BOARD.SALES_STORY_BOARD,\n      storyBoard: data?.storyBoardData,\n    },\n  ];\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - Applicant - Address section\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateAddressDocumentArr = (documents: any[]) => {\n  return updatedDocumentFromAPIResponse(documents) ?? [initialSectionDocInfo];\n};\n\nexport const updateAddressData = (data: any) => {\n  return {\n    ...data,\n    loanDocuments: structLoanDocumentsFromAPIResponse(data?.loanDocuments) ?? {\n      ...initialSavedDocumentStructure,\n    },\n  };\n};\n\nexport const enrichAddressData = (data: any, loanId: string, pageId: string, type: string) => {\n  const payload = {\n    uid: data?.uid,\n    loan: { uid: loanId },\n    applicant: { uid: pageId, applicantType: type },\n    address: data.address,\n    smAddressType: data.smAddressType,\n    pincode: { uid: data?.pincode?.uid },\n    city: { uid: data?.city?.uid },\n    latitude: data?.latitude ? `${parseFloat(data?.latitude).toFixed(4)}` : \"\",\n    longitude: data?.longitude ? `${parseFloat(data?.longitude).toFixed(4)}` : \"\",\n    isSameAsApplicantPermanentAddress: data?.isSameAsApplicantPermanentAddress,\n    isSameAsApplicantResAddress: data?.isSameAsApplicantResAddress,\n    loanDocuments: data?.addressDocumentsInfo?.documentUid\n      ? [\n          {\n            uid: data?.addressDocumentsInfo?.uid ?? null,\n            docType: {\n              uid: data?.addressDocumentsInfo?.documentUid,\n            },\n            docNo:\n              data?.addressDocumentsInfo?.[\n                `${data?.addressDocumentsInfo?.primaryKeyAttributeName}`\n              ] ?? null,\n            dob: data?.addressDocumentsInfo?.dob ? data?.addressDocumentsInfo?.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.ADDRESS_PROOF,\n            docCategory: data?.addressDocumentsInfo?.documentCategory,\n            attributes: prepareAttributes(data?.addressDocumentsInfo),\n            documentSections: prepareDocSections(data?.addressDocumentsInfo?.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n\n  return payload;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - Fees - New receipt section\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const enrichForNewReceipt = (data: ILoginFeeReceiptData, deleteReceipt?: boolean) => {\n  return {\n    ...(data?.uid ? { uid: data?.uid } : {}),\n    loan: {\n      uid: data?.loanUid,\n    },\n    depositAccount: data?.sahayyaBankAccount?.uid\n      ? { uid: data?.sahayyaBankAccount?.uid }\n      : undefined,\n    smInstrumentType: data?.instrumentType,\n    instrumentDate: data?.instrumentDate,\n    txnRefNo: data?.utrOrChequeNo ? data?.utrOrChequeNo : undefined,\n    amount: currencyFormatToNumber(data?.amount) ?? 0,\n    remarks: data?.remark,\n    loanDocuments: data?.unsavedDocuments?.documentUid\n      ? [\n          {\n            uid: data?.unsavedDocuments?.uid,\n            docType: {\n              uid: data?.unsavedDocuments?.documentUid,\n            },\n            isActive: data?.unsavedDocuments?.isActive,\n            docNo:\n              data?.unsavedDocuments?.[`${data?.unsavedDocuments.primaryKeyAttributeName}`] ?? \"\",\n            dob: data?.unsavedDocuments.dob ? data?.unsavedDocuments.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.RECEIPT,\n            docCategory: data?.unsavedDocuments?.documentCategory,\n            attributes: prepareAttributes(data?.unsavedDocuments),\n            documentSections: prepareDocSections(data?.unsavedDocuments?.documentSectionUrls),\n          },\n        ]\n      : [],\n    isActive: !deleteReceipt,\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - basic information section\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateBasicInfoObj = (data: any) => {\n  return {\n    ...data,\n    loanDocuments: structLoanDocumentsFromAPIResponse(data?.loanDocuments) ?? {\n      ...initialSavedDocumentStructure,\n    },\n  };\n};\n\nexport const enrichBasicInfoData = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  applicantType: string\n) => {\n  const { loanDocumentsInfo, ...payloadData } = data;\n\n  const updatedData: any = {\n    ...payloadData,\n    loanDocuments: loanDocumentsInfo.documentUid\n      ? [\n          {\n            uid: loanDocumentsInfo.uid,\n            docType: {\n              uid: loanDocumentsInfo.documentUid,\n            },\n            docNo: loanDocumentsInfo[`${loanDocumentsInfo.primaryKeyAttributeName}`] ?? null,\n            dob: loanDocumentsInfo.dob ? loanDocumentsInfo.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.DOB,\n            docCategory: loanDocumentsInfo.documentCategory,\n            attributes: prepareAttributes(loanDocumentsInfo),\n            documentSections: prepareDocSections(loanDocumentsInfo.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n\n  return {\n    loan: { uid: loanId },\n    applicantType: applicantType,\n    ...updatedData,\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - organisation details - basic info\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateOrganisationBasicInfo = (data: any) => {\n  return {\n    uid: data?.uid,\n    isActive: data?.isActive,\n    firmName: data?.firstName,\n    businessConstitution: data?.smBusinessConstitution,\n    websiteURL: data?.websiteUrl,\n    emailId: data?.emaiId,\n    empRegNo: data?.employmentRegistrationNo,\n    udyamRegCertificateNo: data?.udyamRegistrationCertNo,\n    incorporationDate: data?.incorporationDate,\n    segment: data?.smSegment,\n    noOfEmployees: data?.smNoOfEmployee,\n    ownershipOfBusiness: data?.smBusinessPremisesOwnership,\n    regUnderGST: data?.smRegisteredUnderGst,\n    GSTExemption: data?.smGstExemption,\n    GSTReg: data?.smGstRegistration,\n    GSTIN: data?.gstin,\n    businessYearsInCurrentPremises: data?.businessYearsInCurrentPremises,\n    totalExpInYears: data?.totalExpInYears,\n    businessYearsInCurrentLocation: data?.businessYearsInCurrentLocation,\n    factoryBrances: data?.smFactoryBranch,\n    grossMargin: data?.businessEstGrossMargin,\n    netMargin: data?.businessEstNetMargin,\n    loanDocuments: structLoanDocumentsFromAPIResponse(data?.loanDocuments) ?? {\n      ...initialSavedDocumentStructure,\n    },\n  };\n};\n\nexport const enrichOrganisationBasicInfo = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  type: string\n) => {\n  return {\n    loan: {\n      uid: loanId,\n    },\n    parent: {\n      uid: pageId, // primary applicant\n    },\n    root: {\n      uid: pageId, // primary applicant\n    },\n    uid: data?.uid,\n    isActive: data?.isActive,\n    applicantType: type, //\"CORPORATE_CO_APPLICANT\",\n    firstName: data?.firmName,\n    smBusinessConstitution: data?.businessConstitution,\n    websiteUrl: data?.websiteURL,\n    emaiId: data?.emailId,\n    employmentRegistrationNo: data?.empRegNo,\n    udyamRegistrationCertNo: data?.udyamRegCertificateNo,\n    incorporationDate: `${data?.incorporationDate}`,\n    smSegment: data?.segment,\n    smNoOfEmployee: data?.noOfEmployees,\n    smBusinessPremisesOwnership: data?.ownershipOfBusiness,\n    smRegisteredUnderGst: data?.regUnderGST,\n    smGstExemption: data?.GSTExemption,\n    smGstRegistration: data?.GSTReg,\n    gstin: data?.GSTIN,\n    businessYearsInCurrentPremises: parseInt(data?.businessYearsInCurrentPremises),\n    businessYearsInCurrentLocation: parseInt(data?.businessYearsInCurrentLocation),\n    smFactoryBranch: data?.factoryBrances,\n    businessEstGrossMargin: parseInt(data?.grossMargin),\n    businessEstNetMargin: parseInt(data?.netMargin),\n    totalExpInYears: parseInt(data?.totalExpInYears),\n    //\n    loanDocuments: data?.loanDocumentsProof?.documentUid\n      ? [\n          {\n            uid: data?.loanDocumentsProof?.uid,\n            docType: {\n              uid: data?.loanDocumentsProof?.documentUid,\n            },\n            docNo:\n              data?.loanDocumentsProof?.[`${data?.loanDocumentsProof?.primaryKeyAttributeName}`] ??\n              null,\n            dob: data?.loanDocumentsProof?.dob ? data?.loanDocumentsProof?.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.CORPORATE_BUSINESS_PROOF,\n            docCategory: data?.loanDocumentsProof?.documentCategory,\n            attributes: prepareAttributes(data?.loanDocumentsProof),\n            documentSections: prepareDocSections(data?.loanDocumentsProof?.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - organisation details - Registered Address of Organisation\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateOrgRegisteredAddress = () => {\n  return {};\n};\n\nexport const enrichOrgRegisteredAddress = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  type: string\n) => {\n  return {\n    uid: data?.uid,\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: pageId,\n      applicantType: type,\n    },\n    address: data?.address,\n    pincode: {\n      uid: data?.pincode?.uid,\n    },\n    city: {\n      uid: data?.city?.uid,\n    },\n    latitude: Number(data?.latitude),\n    longitude: Number(data?.longitude),\n    isSameAsRegisteredGstAddress: data?.isSameAsRegGSTAddress,\n    //\n    loanDocuments: data?.addressDocumentsInfo?.documentUid\n      ? [\n          {\n            uid: data?.addressDocumentsInfo?.uid ?? null,\n            docType: {\n              uid: data?.addressDocumentsInfo?.documentUid,\n            },\n            docNo:\n              data?.addressDocumentsInfo?.[\n                `${data?.addressDocumentsInfo?.primaryKeyAttributeName}`\n              ] ?? \"\",\n            dob: data?.addressDocumentsInfo?.dob ? data?.addressDocumentsInfo?.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.CORPORATE_ADDRESS_PROOF,\n            docCategory: data?.addressDocumentsInfo?.documentCategory,\n            attributes: prepareAttributes(data?.addressDocumentsInfo),\n            documentSections: prepareDocSections(data?.addressDocumentsInfo?.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - organisation details - other details\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateOrgOtherDetails = () => {\n  return {};\n};\n\nexport const enrichOrgOtherDetails = (data: any, loanId: string) => {\n  return {\n    uid: data?.uid,\n    loan: { uid: loanId },\n    productServiceOffered: data?.productServiceData,\n    rawMaterial: data?.rawMaterialData,\n    businessModelDetailedWriteup: data?.businessModelData,\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - partner / director details\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updatePartnerDirectorDetails = (data: any) => {\n  const pageData: IPartnerDirectorDetailsData = {\n    uid: data?.uid ?? null,\n    directorUid: data?.applicant?.uid ?? \"\",\n    partnerName: data?.applicant?.firstName ?? \"\",\n    relationShip: data?.applicant?.smRelationship ?? \"\",\n    dobDate: data?.applicant?.dateOfBirth,\n    DIN: data?.applicant?.din ?? \"\",\n    // aadharNo: formatNumberToAadhaar(data?.applicant?.aadhar ?? \"\"),\n    // PAN: data?.applicant?.pan?.toUpperCase() ?? \"\",\n    profitSharing: data?.applicant?.profitSharing ?? \"\",\n    mobileNo: data?.applicant?.mobileNo ?? \"\",\n    remarks: data?.applicant?.remark ?? \"\",\n    address: data.address ?? \"\",\n    smAddressType: data.smAddressType ?? \"\",\n    pincode: { pinCode: data?.pincode?.pinCode, uid: data?.pincode?.uid },\n    city: { name: data?.city?.name, uid: data?.city?.uid },\n    state: data?.city?.state?.name,\n    latitude: data?.latitude ? `${parseFloat(data?.latitude).toFixed(4)}` : \"\",\n    longitude: data?.longitude ? `${parseFloat(data?.longitude).toFixed(4)}` : \"\",\n    loanDocuments: structLoanDocumentsFromAPIResponse(data?.loanDocuments) ?? {\n      ...initialSavedDocumentStructure,\n    },\n    isActive: data?.isActive,\n  };\n\n  return pageData;\n};\n\nexport const enrichPartnerDirectorDetails = (\n  data: any,\n  loanId: string,\n  applicantId: string,\n  pageId: string,\n  type: string\n) => {\n  const payload = {\n    uid: data?.uid ? data?.uid : null,\n    loan: {\n      uid: loanId,\n    },\n    applicant: {\n      uid: data?.directorUid,\n      loan: {\n        uid: loanId,\n      },\n      applicantType: type,\n      firstName: data?.partnerName,\n      mobileCountryCode: \"+91\",\n      mobileNo: data?.mobileNo,\n      dateOfBirth: data?.dobDate,\n      din: data?.DIN,\n      aadhar: data?.aadharNo?.split(\" \").join(\"\"),\n      pan: data?.PAN,\n      profitSharing: parseInt(data?.profitSharing),\n      smRelationship: data?.relationShip,\n      remark: data?.remarks,\n      parent: {\n        uid: pageId, // corporate co applicant uid\n      },\n      root: {\n        uid: applicantId, // primary applicant uid\n      },\n    },\n\n    address: data?.address,\n\n    pincode: {\n      uid: data?.pincode?.uid,\n    },\n    city: {\n      uid: data?.city?.uid,\n    },\n    latitude: Number(data?.latitude),\n    longitude: Number(data?.longitude),\n\n    loanDocuments: data?.loanDocumentsProof?.documentUid\n      ? [\n          {\n            uid: data?.loanDocumentsProof?.uid,\n            docType: {\n              uid: data?.loanDocumentsProof?.documentUid,\n            },\n            docNo:\n              data?.loanDocumentsProof?.[`${data?.loanDocumentsProof?.primaryKeyAttributeName}`] ??\n              null,\n            dob: data?.loanDocumentsProof?.dob ? data?.loanDocumentsProof?.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.DIRECTOR,\n            docCategory: data?.loanDocumentsProof?.documentCategory,\n            attributes: prepareAttributes(data?.loanDocumentsProof),\n            documentSections: prepareDocSections(data?.loanDocumentsProof?.documentSectionUrls),\n          },\n        ]\n      : [],\n\n    isActive: data?.isActive,\n  };\n\n  return payload;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - basic info\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const extractBasicObj = (data: any) => {\n  return {\n    smSalutation: data?.smSalutation,\n    firstName: data?.firstName,\n    middleName: data?.middleName,\n    lastName: data?.lastName,\n    smGender: data?.smGender,\n    dateOfBirth: data?.dateOfBirth,\n    mobileNo: data?.mobileNo,\n    stdCode: data?.stdCode,\n    phoneNo: data?.phoneNo,\n    ageAsOfLoanCreation: data?.ageAsOfLoanCreation,\n    applicantUrl: data?.applicantUrl,\n    applicantThumbUrl: data?.applicantThumbUrl,\n    smRelationship: data?.smRelationship,\n  };\n};\n\nexport const isDefaultAddress = (defaultAddress: IAddressData, currentAddress: IAddressData) => {\n  // const formattedDefaultAddress = trimStrings(defaultAddress);\n  // const formattedCurrentAddress = trimStrings(currentAddress);\n  // return JSON.stringify(formattedDefaultAddress) === JSON.stringify(formattedCurrentAddress);\n\n  const simplifyNoValue = (value: any) => {\n    if (value === undefined || value === null || value?.trim() === \"\") {\n      return \"\";\n    }\n    return value;\n  };\n\n  const isDefault =\n    defaultAddress?.address?.trim() === currentAddress?.address?.trim() &&\n    defaultAddress?.city?.uid === currentAddress?.city?.uid &&\n    defaultAddress?.pincode?.uid === currentAddress?.pincode.uid &&\n    simplifyNoValue(defaultAddress?.latitude) === simplifyNoValue(currentAddress?.latitude) &&\n    simplifyNoValue(defaultAddress?.longitude) === simplifyNoValue(currentAddress?.longitude);\n  // defaultAddress.propertyType === currentAddress.propertyType;\n  return isDefault;\n};\n\nexport const updateReceiptDetailsPageObj = (\n  data: ILoginFeeReceiptRowData\n): ILoginFeeReceiptData => {\n  const obj: ILoginFeeReceiptData = {\n    uid: data?.uid,\n    instrumentType: data?.smInstrumentType,\n    instrumentDate: data?.instrumentDate,\n    utrOrChequeNo: data?.txnRefNo,\n    // amount: showCurrency(data?.amount),\n    amount: currencyFormatter(data?.amount),\n    remark: data?.remarks,\n    sahayyaBankAccount: {\n      uid: data?.depositAccount?.uid,\n      accountNo: data?.depositAccount?.accountNumber,\n      name: data?.depositAccount?.holderName,\n      branch: data?.depositAccount?.ifsc?.branch,\n    },\n    savedDocuments: structLoanDocumentsFromAPIResponse(data?.loanDocuments ?? []),\n    // applicantName:\n    lanId: data?.loan?.lanId,\n    applicantName: data?.loan?.applicantName,\n    loanUid: data?.loan?.uid,\n    status: data?.status,\n  };\n\n  return obj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nDDE - Other Docs For Applicant, Co-Applicant, Corporate Co-Applicant, Documents \n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const structSavedDocStrucutureForOtherDocuments = (document: any) => {\n  return {\n    uid: document.uid,\n    attributes: {},\n    dob: \"\",\n    docCategory: document.docCategory,\n    docFor: document.docFor,\n    docNo: \"\",\n    docType: { ...document.docType },\n    documentSections: prepareDocumentSectionStructure(document.documentSections),\n    loanSectionKey: document.loanSectionKey,\n    isActive: document.isActive,\n  };\n};\n\nexport const enrichOtherDocuments = (\n  documents: IDocumentInfo[],\n  payloadInfo: {\n    loanUid: string;\n    applicantUid: string;\n    loanSectionKey: T_LOAN_SECTION_KEY_DOCUMENTS | T_LOAN_SECTION_KEY_APPLICANTS;\n  }\n) => {\n  const payload = documents.map((document) => {\n    return {\n      uid: document.uid ?? null,\n      docType: {\n        uid: document.documentUid,\n      },\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      applicant: {\n        uid: payloadInfo.applicantUid,\n      }, // primary applicant uid in documents tab\n      loanSectionKey:\n        payloadInfo.loanSectionKey === LOAN_SECTION_KEY_TYPES.documents\n          ? LOAN_SECTION_KEY_TYPES.documents\n          : LOAN_SECTION_KEY_TYPES.applicants, // LOAN_OTHER_DOCUMENTS only in document tab\n      docCategory: document.documentCategory,\n      documentSections: prepareDocSections(document.documentSectionUrls),\n      isActive: document.isActive,\n    };\n  });\n\n  //send only those document info which have document section URLs\n  const filteredPayloadBySectionUrl = payload.filter((document) => {\n    let validForUpload = false;\n    for (let idx = 0; idx < document.documentSections.length; idx++) {\n      if (document.documentSections[idx].url) validForUpload = true;\n    }\n    return validForUpload;\n  });\n\n  return filteredPayloadBySectionUrl;\n};\n"],"names":["LOAN_SECTION_KEY_TYPES","STAGE","OtherDocuments","forwardRef","props","ref","isLoading","className","otherDocumentsData","onRemoveDocFromList","sectionMode","payloadInfo","documentUploadRef","useRef","useImperativeHandle","onSave","onCancel","unsavedDocuments","idx","_a","unsavedDoc","_c","_b","enrichOtherDocuments","jsx","React","SkeletonCustom","otherDocument","Fragment","DocumentUploader","refValue","PAGE_MODE","DOC_UPLOADER_MODE","DOCUMENT_CATEGORY","initialSectionDocInfo","initialSavedDocumentStructure","initialKycTemplateListData","initialLoanDocsInfo","initialEmploymentData","initialBankAccountDetailsData","initialOtherDetailsData","initialSalesRecommendationData","initialCibilEnquiryInfoData","initialCibilAccountSummary","initialCRIFAccSummary","initialPropertyData","prepareAttributes","docInfo","documentUid","documentName","documentCode","documentCategory","documentSectionUrls","isActive","primaryKeyAttributeName","uid","meta","attributes","prepareDocSections","documentSections","docSection","prepareDocumentSectionStructure","sections","preparedStructure","structLoanDocumentsFromAPIResponse","documents","doc","updateEmploymentInfoObj","ele","getDateString","numberFormatter","_d","_e","_g","_f","_i","_h","_k","_j","_m","_l","_n","_o","_p","_q","_r","updateBankAccountInfoObj","getDocumentStructure","list","proof","updateOtherDetailsObj","permanentAddressData","applicantData","isResidentialAddress","isPermanentAddress","APPLICANT_TYPE","enrichSaveKycDocument","loanId","pageId","documentInfo","type","kycDocTypeUid","documentUrl","documentNumber","dob","docUrl","enrichUpdateKycDocument","applicantType","getSectionUid","sectionCode","section","enrichPopulateDocWithOcr","populateOcrUid","document","getSectionSignedUrl","DOCUMENT_SECTION","enrichAadharValidation","aadharOtpInfo","otp","requestId","enrichEmploymentDetailsObj","data","getYear","currencyFormatToNumber","ADDRESS_TYPE_OBJ","LOAN_SECTION_KEY","enrichBankAccountDetailsObj","enrichReferencesObj","referencesPageObj","rootId","firstName","middleName","lastName","mobileNo","relationship","address","pincode","city","latitude","longitude","payload","enrichInvestmentInfoDetails","investmentInfoPageObj","preparePayloadFinancialDetails","asset","enrichOtherDetails","ADDRESS_TYPE_VALUES","updatePropertyObj","residentialAddress","enrichPropertyDetailsObj","enrichCorpHistoricalFinDetails","historicalFinDetailsPageObj","hfd","enrichCorpInvestmentFinDetails","investmentFinDetailPageObj","preparedPayloadInvestmentTable","updateSalesRecommendations","enrichSalesRecommendation","STORY_BOARD","enrichStoryBoard","updateAddressData","enrichAddressData","enrichForNewReceipt","deleteReceipt","updateBasicInfoObj","enrichBasicInfoData","loanDocumentsInfo","payloadData","updatedData","updateOrganisationBasicInfo","enrichOrganisationBasicInfo","enrichOrgRegisteredAddress","enrichOrgOtherDetails","updatePartnerDirectorDetails","enrichPartnerDirectorDetails","applicantId","extractBasicObj","isDefaultAddress","defaultAddress","currentAddress","simplifyNoValue","value","updateReceiptDetailsPageObj","currencyFormatter","structSavedDocStrucutureForOtherDocuments","validForUpload"],"mappings":"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"}