{"version":3,"file":"InputBox-b9e88f52.js","sources":["../../src/components/base/BaseInput/BaseInput.tsx","../../src/components/InputBox/InputBox.tsx"],"sourcesContent":["import InputError from \"../../InputError\";\nimport Label from \"../../Label\";\nimport { withAuth } from \"../../hoc/withAuth\";\nimport { IBaseInputCommonProps } from \"../../interface/Input\";\nimport { InputText, InputTextProps } from \"primereact/inputtext\";\nimport React from \"react\";\n\nexport interface IBaseInputProps extends InputTextProps, IBaseInputCommonProps {}\n\nconst BaseInput: React.FC<IBaseInputProps> = (props: IBaseInputProps) => {\n  const {\n    hideLabel,\n    label,\n    labelClassNames,\n    labelStyleObj,\n    validation,\n    hideErrorRow,\n    errorClassNames,\n    errorStyleObj,\n    disabled,\n    isDisabledByAcl,\n    isIgnoreAccessLevel,\n    reportFormDirty,\n    suffix,\n    ...PrimeReactProps\n  } = props;\n\n  const { placeholder, className, value, style, name, onChange } = PrimeReactProps;\n\n  return (\n    <div className=\"group grid w-full\">\n      {!hideLabel && (\n        <Label\n          label={label}\n          labelClassNames={labelClassNames}\n          labelStyleObj={labelStyleObj}\n          isInvalid={validation}\n        />\n      )}\n      {\n        <div className=\"flex\">\n          <InputText\n            {...PrimeReactProps}\n            value={value}\n            style={style}\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            disabled={disabled || isDisabledByAcl}\n            className={`${className} ${\n              isDisabledByAcl\n                ? \"!bg-secondary-disabledBGColor !border-primary-gray-300 placeholder-secondary-gray-500 \"\n                : \" \"\n            } `}\n          />\n          {suffix ? (\n            <div className=\"bg-gray-100 w-max-fit px-2 h-full rounded-r-md flex items-center \">\n              {suffix}\n            </div>\n          ) : null}\n        </div>\n      }\n      {!hideErrorRow && (\n        <InputError\n          validation={validation}\n          hideErrorRow={hideErrorRow}\n          errorClassNames={errorClassNames}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default withAuth(BaseInput);\n","import { INPUT_BOX_STYLES } from \"assets/base-theme\";\nimport BaseInput, { IBaseInputProps } from \"components/base/BaseInput\";\nimport { IInputCommonStyleProps } from \"components/interface/Input\";\nimport React, { memo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { generateClasses } from \"utils/Util\";\n\ninterface IInputBoxProps extends IBaseInputProps, IInputCommonStyleProps {}\n\nconst InputBox: React.FC<IInputBoxProps> = (props: IInputBoxProps) => {\n  const { variant, styleObj, args, ...BaseInputProps } = props;\n\n  const { placeholder, label } = BaseInputProps;\n  const getClassNames = () => {\n    const styleObject = {\n      ...INPUT_BOX_STYLES,\n      overrideStyle: styleObj,\n      overrideClasses: props.className,\n      isDisabled: props.disabled,\n      isInvalid: !!props.validation,\n      removeStyleProperty: [],\n      removeClasses: [],\n    };\n\n    return generateClasses(styleObject, variant);\n  };\n\n  const { t } = useTranslation();\n\n  let placeholderLabel: string;\n\n  if (placeholder !== undefined) {\n    placeholderLabel = t(placeholder, args);\n  } else {\n    // Handle the case when the label is undefined\n    placeholderLabel = \"\"; // Or provide a default value or appropriate handling\n  }\n\n  return (\n    <BaseInput\n      {...BaseInputProps}\n      label={label}\n      className={getClassNames()}\n      validation={props.validation}\n      placeholder={placeholderLabel}\n      labelClassNames={props.labelClassNames ? props.labelClassNames : \" mb-1 \"}\n    />\n  );\n};\n\n// redux wiring\n\n// exports\nexport default memo(InputBox);\n"],"names":["BaseInput","props","hideLabel","label","labelClassNames","labelStyleObj","validation","hideErrorRow","errorClassNames","errorStyleObj","disabled","isDisabledByAcl","isIgnoreAccessLevel","reportFormDirty","suffix","PrimeReactProps","placeholder","className","value","style","name","onChange","jsxs","jsx","Label","InputText","InputError","BaseInput$1","withAuth","InputBox","variant","styleObj","args","BaseInputProps","getClassNames","styleObject","INPUT_BOX_STYLES","generateClasses","t","useTranslation","placeholderLabel","memo"],"mappings":"qIASA,MAAMA,EAAwCC,GAA2B,CACjE,KAAA,CACJ,UAAAC,EACA,MAAAC,EACA,gBAAAC,EACA,cAAAC,EACA,WAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,cAAAC,EACA,SAAAC,EACA,gBAAAC,EACA,oBAAAC,EACA,gBAAAC,EACA,OAAAC,EACA,GAAGC,CACD,EAAAd,EAEE,CAAE,YAAAe,EAAa,UAAAC,EAAW,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,SAAAC,CAAa,EAAAN,EAG/D,OAAAO,EAAA,KAAC,MAAI,CAAA,UAAU,oBACZ,SAAA,CAAA,CAACpB,GACAqB,EAAA,IAACC,EAAA,CACC,MAAArB,EACA,gBAAAC,EACA,cAAAC,EACA,UAAWC,CAAA,CACb,EAGAgB,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAC,EAAA,IAACE,EAAA,CACE,GAAGV,EACJ,MAAAG,EACA,MAAAC,EACA,KAAAC,EACA,YAAAJ,EACA,SAAAK,EACA,SAAUX,GAAYC,EACtB,UAAW,GAAGM,KACZN,EACI,yFACA,MAAA,CAER,EACCG,EACES,EAAAA,IAAA,MAAA,CAAI,UAAU,oEACZ,UACH,CAAA,EACE,IAAA,EACN,EAED,CAAChB,GACAgB,EAAA,IAACG,EAAA,CACC,WAAApB,EACA,aAAAC,EACA,gBAAAC,CAAA,CACF,CAEJ,CAAA,CAAA,CAEJ,EAEemB,EAAAC,EAAS5B,CAAS,EChE3B6B,EAAsC5B,GAA0B,CACpE,KAAM,CAAE,QAAA6B,EAAS,SAAAC,EAAU,KAAAC,EAAM,GAAGC,CAAmB,EAAAhC,EAEjD,CAAE,YAAAe,EAAa,MAAAb,CAAU,EAAA8B,EACzBC,EAAgB,IAAM,CAC1B,MAAMC,EAAc,CAClB,GAAGC,EACH,cAAeL,EACf,gBAAiB9B,EAAM,UACvB,WAAYA,EAAM,SAClB,UAAW,CAAC,CAACA,EAAM,WACnB,oBAAqB,CAAC,EACtB,cAAe,CAAC,CAAA,EAGX,OAAAoC,EAAgBF,EAAaL,CAAO,CAAA,EAGvC,CAAE,EAAAQ,GAAMC,IAEV,IAAAC,EAEJ,OAAIxB,IAAgB,OACCwB,EAAAF,EAAEtB,EAAagB,CAAI,EAGnBQ,EAAA,GAInBjB,EAAA,IAACvB,EAAA,CACE,GAAGiC,EACJ,MAAA9B,EACA,UAAW+B,EAAc,EACzB,WAAYjC,EAAM,WAClB,YAAauC,EACb,gBAAiBvC,EAAM,gBAAkBA,EAAM,gBAAkB,QAAA,CAAA,CAGvE,EAKewC,EAAAA,EAAAA,KAAKZ,CAAQ"}