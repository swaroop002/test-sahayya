{"version":3,"file":"Locations-59f2a583.js","sources":["../../src/assets/img/map-selected-marker.svg","../../src/components/Locations/Locations.tsx"],"sourcesContent":["export default \"__VITE_ASSET__eca0f2c2__\"","// import \"@reach/combobox/styles.css\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport Text from \"components/Text\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { getEnvVariableValue } from \"utils/CommonUtil\";\nimport { ENV_VAR } from \"utils/Constant\";\nimport selectedMarkerIcon from \"assets/img/map-selected-marker.svg\";\nexport interface IAddress {\n  id: string; // or number, depending on your data\n  imageUrl: string;\n  fullName: string | null; // using null because of the optional chaining\n  applicantType: string | null; // using null because of the optional chaining\n  addressType: string;\n  address: string;\n  lat: number;\n  lng: number;\n}\nexport default function Locations(props: any) {\n  const { addressList } = props;\n  const apiKey = getEnvVariableValue(ENV_VAR.VITE_GOOGL_MAP_KEY);\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: apiKey,\n    libraries: [\"places\"],\n  });\n\n  if (!isLoaded) return <div>Loading...</div>;\n\n  return <Map addressList={addressList} />;\n}\n\nfunction Map(props: any) {\n  const initialMarkers = props.addressList;\n\n  const mapRef = useRef<google.maps.Map | null>(null);\n\n  const [selectedMarker, setSelectedMarker] = useState<number | null>(null);\n\n  const [mapLoaded, setMapLoaded] = useState(false);\n\n  const markers = useMemo(() => {\n    return initialMarkers.map((marker: any) => ({\n      ...marker,\n      icon: selectedMarker === marker.id ? selectedMarkerIcon : undefined,\n    }));\n  }, [selectedMarker]);\n\n  const centerMarker = useMemo(() => {\n    return {\n      lat: markers.reduce((sum: any, marker: any) => sum + marker.lat, 0) / markers.length,\n      lng: markers.reduce((sum: any, marker: any) => sum + marker.lng, 0) / markers.length,\n    };\n  }, [markers]);\n\n  useEffect(() => {\n    if (mapLoaded && mapRef.current) {\n      const bounds = new window.google.maps.LatLngBounds();\n      markers.forEach((marker: any) => {\n        bounds.extend(marker);\n      });\n      mapRef.current.fitBounds(bounds);\n    }\n  }, [mapLoaded, markers]);\n\n  const handleMarkerClick = (markerId: number) => {\n    setSelectedMarker(markerId);\n  };\n\n  const handleAddressClick = (marker: any) => {\n    if (marker.lat === 0 || marker.lng === 0) {\n      // alert(\"No Lat Long\");\n      // Show toast here\n    }\n    setSelectedMarker(marker.id);\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-wrap  gap-1.5\">\n        <div className=\" map-locations-list-container max-w-106 w-full flex flex-col gap-1.5\">\n          {markers.map((marker: any) => (\n            <div\n              key={marker.id}\n              className={`flex border border-primary-gray-500 rounded-lg px-6 py-3 address-item ${\n                selectedMarker === marker.id ? \"selected border-primary-sapphireBlue-1000\" : \"\"\n              }`}\n              onClick={() => handleAddressClick(marker)}\n            >\n              <div className=\"flex-1 flex flex-col gap-1.5\">\n                <div className=\"flex gap-3 pb-1\">\n                  <Text\n                    className=\"text-sm font-medium text-primary-gray-40\"\n                    label={marker.fullName}\n                  />\n                  <Text\n                    className=\"px-3 py-0.5 text-xxs text-primary-gray-40 rounded-md bg-primary-gray-10\"\n                    label={marker.applicantType}\n                  />\n                </div>\n                <Text\n                  className=\"text-xs text-primary-gray-30 w-full block\"\n                  label={marker.addressType}\n                />\n                <Text\n                  className=\"text-xs text-primary-gray-20 w-full block\"\n                  label={marker.address}\n                />\n              </div>\n              {/* <img className=\"w-22\" src={marker.imageUrl} alt={marker.fullName} /> */}\n            </div>\n          ))}\n        </div>\n        <div className=\"flex-1 bg-slate-400\">\n          <GoogleMap\n            mapContainerClassName=\"map-container-pointer\"\n            center={centerMarker}\n            zoom={10}\n            onLoad={(map: any) => {\n              mapRef.current = map;\n              setMapLoaded(true); // Set map loaded state\n            }}\n          >\n            {markers\n              .filter((key: any) => key.lat !== 0 || key.lng !== 0)\n              .map((marker: any) => (\n                <Marker\n                  key={marker.id}\n                  position={{ lat: marker.lat, lng: marker.lng }}\n                  onClick={() => handleMarkerClick(marker.id)}\n                  icon={marker.icon}\n                />\n              ))}\n          </GoogleMap>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["selectedMarkerIcon","Locations","props","addressList","apiKey","getEnvVariableValue","ENV_VAR","isLoaded","useLoadScript","jsx","Map","initialMarkers","mapRef","useRef","selectedMarker","setSelectedMarker","useState","mapLoaded","setMapLoaded","markers","useMemo","marker","centerMarker","sum","useEffect","bounds","handleMarkerClick","markerId","handleAddressClick","Fragment","jsxs","Text","GoogleMap","map","key","Marker"],"mappings":"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"}