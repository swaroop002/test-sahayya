{"version":3,"file":"MainMessageBody-e15b4437.js","sources":["../../src/assets/chatSvg/chatIcon.svg","../../src/services/ChatServices.ts","../../src/components/ChatComponents/Chats.tsx","../../src/assets/chatSvg/notification.svg","../../src/components/ChatComponents/ClosedNotification.tsx","../../src/assets/chatSvg/message.svg","../../src/components/ChatComponents/EmptyRightSide.tsx","../../src/components/ChatComponents/ListOfUsers.tsx","../../src/components/ChatComponents/ReOpenNotification.tsx","../../src/assets/chatSvg/closeIcon.svg","../../src/components/ChatComponents/MainMessageBody.tsx"],"sourcesContent":["export default \"__VITE_ASSET__dc971017__\"","import BaseApiService from \"services/BaseApiService\";\n\nconst DEFAULT_PATH = \"/custom/api\";\n\nclass ChatServices extends BaseApiService {\n  getAll = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n\n  getAllChats = (search: string) => {\n    const url = `${DEFAULT_PATH}/manage/message/conversation/search?${search}&sort={\"createdAt\": \"DESC\"}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  getAllFullChats = (search: string) => {\n    const url = `${DEFAULT_PATH}/manage/message/latest/${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  getFirstChat = (search: string) => {\n    const url = `${DEFAULT_PATH}/manage/message/search?conversation.uid=${search}&start=0&limit=1`;\n\n    return this.makeGetRequestWithAuth(url);\n  };\n  getAllPreviousChats = (search: string, limit: any) => {\n    const url = `${DEFAULT_PATH}/manage/message/search?conversation.uid=${search}&start=1&limit=${limit}`;\n\n    return this.makeGetRequestWithAuth(url);\n  };\n  checkNewMessageAvailability = (uid:any) => {\n    const url = `${DEFAULT_PATH}/manage/message/in/stage/${uid}`;\n\n    return this.makeGetRequestWithAuth(url);\n  };\n  FinishConversation = (uid: string, obj: any) => {\n    const url = `${DEFAULT_PATH}/conversation/${uid}`;\n    return this.makePutRequestWithAuth(url, obj);\n  };\n  ReOpenConversation = (uid: string, obj: any) => {\n    const url = `${DEFAULT_PATH}/conversation/${uid}`;\n    return this.makePutRequestWithAuth(url, obj);\n  };\n  ReadConversation = (uid: string) => {\n    const url = `${DEFAULT_PATH}/manage/message/${uid}`;\n    return this.makePutRequestWithAuth(url);\n  };\n\n  startConversation = (obj: any) => {\n    const url = `${DEFAULT_PATH}/conversation`;\n    return this.makePostRequestWithAuth(url, obj);\n  };\n  sendReply = (obj: any) => {\n    const url = `${DEFAULT_PATH}/manage/message`;\n    return this.makePostRequestWithAuth(url, obj);\n  };\n\n  update = (obj: any, uid: any) => {\n    const url = `${DEFAULT_PATH}/manage/${uid}`;\n    return this.makePutRequestWithAuth(url, obj);\n  };\n  activate = (uid: string) => {\n    const url = `${DEFAULT_PATH}/manage/activate/${uid}`;\n    return this.makePutRequestWithAuth(url);\n  };\n\n  Inactivate = (uid: string) => {\n    const url = `${DEFAULT_PATH}/manage/inactivate/${uid}`;\n    return this.makePutRequestWithAuth(url);\n  };\n  tableEmpanalment = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/empanelment/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tableAgreement = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/agreement/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tablecontact = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/contact/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tablekeyPerson = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/key/person/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tableReference = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/reference/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tableBankDetails = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/bank/detail/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tableRateCard = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/rate/card/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tableGstDetails = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/tax/details/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  tableOrgRepLevel = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/org/rep/level/search?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n\n  getChannelName = (start = 0, limit = 50, search = \"\") => {\n    const url = `${DEFAULT_PATH}/manage/filter?start=${start}&limit=${limit}${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n}\n\nexport default new ChatServices();\n","import SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport { useEffect } from \"react\";\n\nconst Chats = (props: any) => {\n  const { name, data, dateAndTime, className } = props;\n\n  if (!name || !className) {\n    return null; // Return null if required props are missing\n  }\n\n  return (\n    <div\n      className={`${className} bg-primary-sapphireBlue-100 p-2.5 rounded-2xl shadow-OverlayPanelHeader`}\n    >\n      <div>\n        <div className=\"flex justify-center items-center gap-1.25 w-fit\">\n          <div className=\"w-6 h-6 border-2 rounded-full flex justify-center items-center text-sm\">\n            {name[0] ?? \"N\"}\n          </div>\n          <div className=\"font-bold leading-sm text-sm\">{name}</div>\n        </div>\n      </div>\n\n      {data === \"\" ? (\n        <>Loader...</>\n      ) : (\n        <div className=\"ml-7 font-normal text-left text-xs  leading-xsm max-w-[500px] break-words\">\n          {data}\n        </div>\n      )}\n      <div className=\"text-right text-xs text-secondary-steelBlue-500\">\n        {dateAndTime ? (\n          dateAndTime\n        ) : (\n          <SkeletonCustom height=\"1rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chats;\n","export default \"__VITE_ASSET__b1dac06e__\"","import notification from \"assets/chatSvg/notification.svg\";\n\nconst ClosedNotification = (props: any) => {\n  return (\n    <div className=\"w-full p-1.5 flex justify-start items-center gap-1.5 rounded-xl border-2 bg-[#FFFFFF]\">\n      <div className=\"w-9 h-9 bg-[#FFF8DF] rounded-full flex justify-center items-center\">\n        <img src={notification} alt=\"Round\" className=\"\" />\n      </div>\n      <div className=\"font-medium leading-[18px] text-[12px] \">\n        {\" \"}\n        This conversation is closed. Click on ‘Reopen Conversation’ to reopen the conversation\n      </div>\n    </div>\n  );\n};\nexport default ClosedNotification;\n","export default \"__VITE_ASSET__0ef3308d__\"","import message from \"assets/chatSvg/message.svg\"\n\nconst EmptyRightSide = () => {\n    return (\n      <div className=\"right h-full bg-primary-sapphireBlue-100 w-full border-orange-600 flex justify-center items-center\">\n        <div className=\" w-59.5 h-20 flex flex-col justify-center items-center\">\n          <div className=\"w-full  m-auto flex flex-col justify-center items-center\">\n            <img src={message} alt=\"messageIcon\" />\n          </div>\n          <div className=\"font-normal text-center text-xs leading-4\">\n            Please choose a conversation you would like to read and respond to.\n          </div>\n        </div>\n      </div>\n    );\n  };\n  export default EmptyRightSide;","import { formatDate, formatDateForChats } from \"utils/CommonUtil\";\n\nconst ListOfUsers = (props: any) => {\n  const InProgressButton = () => {\n    return (\n      <div className=\"border-2 border-[#B8E8FF] px-1.5 py-0.25 rounded-md font-normal text-[#1f4a7f] text-[12px]\">\n        In Progress\n      </div>\n    );\n  };\n  const CloseButton = () => {\n    return (\n      <div className=\"border-2 border-[#C7E9C2] px-1.5 py-0.25 rounded-md font-normal text-[#225c1f] text-[12px]\">\n        Close\n      </div> \n    );\n  };\n  const { data } = props;\n  return (\n    <div className=\"w-full flex items-center gap-1.5 pl-1.5 \">\n      {!data.isNewMessageInConversation ? (\n        <div className=\"w-1.5\"></div>\n      ) : (\n        <span className=\"rounded-md bg-red-500 w-1.5 h-1.5\"></span>\n      )}\n      <div className=\"w-9 h-9 border-2 rounded-full flex justify-center items-center\">\n        {data?.initiatedByUser?.name[0] ?? \"N\"}\n      </div>\n      <div className=\"flex w-full justify-between flex-1\">\n        <div className=\"flex flex-col gap-0.5\">\n          <div className=\"text-sm\">\n            {data?.initiatedByUser?.fullName !== undefined && data?.initiatedByUser?.fullName !== \"\"\n              ? data?.initiatedByUser?.fullName\n              : data?.initiatedByUser?.name !== undefined && data?.initiatedByUser?.name !== \"\"\n              ? data?.initiatedByUser?.name\n              : \"New Conversation\"}\n          </div>\n          <div className=\"truncate max-w-50 text-xs text-[#8690AD]\">{data?.summary ?? \"\"}</div>\n        </div>\n        <div className=\"flex flex-col items-end gap-0.5\">\n          <div className=\"text-xs text-[#8690AD]\">\n            {formatDateForChats(data.createdAtSystemDate) ?? \"\"}\n          </div>\n          <div>\n            {data.status === \"IN_PROGRESS\"\n              ? InProgressButton()\n              : data.status === \"CLOSED\"\n              ? CloseButton()\n              : InProgressButton()}\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"flex flex-col justify-center\">\n        <div className=\"flex justify-between w-full\">\n          <div className=\"font-bold leading-sm text-sm text-left\">\n            \n          </div>{\" \"}\n          <div className=\" font-normal text-right text-xs    \">\n            \n          </div>\n        </div>\n        <div className=\"flex gap-0.5\">\n          <div className=\" w-50 font-medium text-left truncate text-xs leading-xsm text-[#8690AD]\">\n            \n          </div>\n          <div className=\"\">\n            \n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n};\nexport default ListOfUsers;\n","import notification from \"assets/chatSvg/notification.svg\";\n\nconst ReOpenNotification = (props: any) => {\n  const { handleCancelConversation } = props;\n\n  return (\n      <div className=\"w-full px-1.5 p-1.5 flex justify-between items-center gap-1.5 rounded-xl border-2 bg-[#FFFFFF]\">\n        <div className=\"flex gap-1 justify-center items-center\">\n          <div className=\"w-9 h-9bg-[#FFF8DF] rounded-full flex justify-center items-center\">\n            <img src={notification} alt=\"Round\" className=\"\" />\n          </div>\n          <div className=\"font-medium leading-[18px] text-[12px] w-55.5\">\n            {\" \"}\n            New Conversation will reopen the stage , All members will be notified\n          </div>\n        </div>\n        <div\n          className=\"text-[#0560FD] text-xs cursor-pointer\"\n          onClick={handleCancelConversation}\n        >\n          Cancel conversation\n        </div>\n      </div>\n  );\n};\nexport default ReOpenNotification;\n","export default \"__VITE_ASSET__7c95286f__\"","import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport InputTextArea from \"components/InputTextArea/InputTextArea\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport ChatServices from \"services/ChatServices\";\nimport UserService from \"services/masterdata/User/UserService\";\nimport {\n  formatDateWithTime,\n  getEnvVariableValue,\n  getLocalStorage,\n  logWithColor,\n  setLocalStorage,\n} from \"utils/CommonUtil\";\nimport Chats from \"./Chats\";\nimport ClosedNotification from \"./ClosedNotification\";\nimport EmptyRightSide from \"./EmptyRightSide\";\nimport ListOfUsers from \"./ListOfUsers\";\nimport ReOpenNotification from \"./ReOpenNotification\";\nimport closeIcon from \"assets/chatSvg/closeIcon.svg\";\nimport chatIcon from \"assets/chatSvg/chatIcon.svg\";\nimport Text from \"components/Text/Text\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport { LOAN_STAGE_STATUS, LOCAL_STORAGE, STAGE_NAME, STAGE_TYPE } from \"utils/Constant\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport StageService from \"services/transaction/DDE/StageService\";\nimport { stringify } from \"querystring\";\n\nconst StageNames: { [key: string]: any } = {\n  LOGIN: \"Login\",\n  QC: \"QC\",\n  PD: \"PD\",\n  LEGAL_REPORT: \"Legal Report\",\n  TECHNICAL_REPORT: \"Technical Report\",\n  RCU_REPORT: \"RCU Report\",\n  DEDUPE: \"Dedupe\",\n  CAM_AND_RECOMMENDATION: \"Cam And Recommendation\",\n  FINANCIAL_APPROVAL: \"Financial Approval\",\n  IN_PRINCIPAL_APPROVAL: \"In Principal Approval\",\n  FINAL_APPROVAL: \"Final Approval\",\n  REAPPEAL: \"Reappeal\",\n  CREDIT_AND_QUERY: \"Credit And Query\",\n  FEES_AND_RECEIPT: \"Fees And Receipt\",\n  POINT_OF_INTEREST: \"Point Of Interest\",\n  STAGE_AND_STATUS: \"Stage And Status\",\n};\nconst STATUS_FOR_STAGES = {\n  INITIATED: \"Initiated\",\n  COMPLETED: \"Completed\",\n  CANCELLED: \"Cancelled\",\n  RE_OPEN: \"Re-open\",\n  IN_REVIEW: \"In Review\",\n  PAUSED: \"Paused\",\n  REJECTED: \"Rejected\",\n  APPROVED: \"Approved\",\n};\nconst MainMessageBody = forwardRef((props: any, ref: any) => {\n  const { handleCloseOverLay, params } = props;\n  const containerRef = useRef<any>(null);\n  // states\n  const [listOfUsers, setListOfUsers] = useState<any>([]);\n  const [loaderForUsers, setLoadersForUsers] = useState(true);\n  const [listOfConversation, setListOfConversation] = useState<any>([]);\n  const [isConversationStarted, setIsConversationStarted] = useState(false);\n\n  const [selectedDiv, setSelectedDiv] = useState<any>(null);\n  const [userAndPartnerDetails, setUserAndPartnerDetails] = useState<any>({});\n  const [isConversationFresh, setIsConversationFresh] = useState(false);\n  const [singleChat, setSingleChat] = useState<any>([]);\n  const [numberOfReplies, setNumberOfReplies] = useState<any>(0);\n  const [conversationUID, setConversationUID] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const [isRightSideEmpty, setIsRightSideEmpty] = useState(true);\n  const [statusOfUsers, setStatusOfUsers] = useState<any>(null);\n  const pollingIntervalForConversation = useRef<any>(null);\n  const pollingIntervalForUsers = useRef<any>(null);\n  const [loaderForConversation, setLoadersForConversation] = useState(false);\n  const [stage, setStage] = useState<any>(\"\");\n  //states\n\n  useEffect(() => {\n    init();\n\n    return () => {\n      stopPollingForConversation();\n      stopPollingForConversations();\n      setLoadersForConversation(false);\n      setLoadersForUsers(false);\n    };\n  }, []);\n  const init = async () => {\n    await getStageLabel();\n    await getUserProfile();\n    await getListOfConversation();\n    startPollingForConversations();\n  };\n  /*\n  -------------------------------------------------------\n API CALLS FOR ALL GET FUNCTION\n  -------------------------------------------------------\n */\n\n  const getStageLabel = async () => {\n    const storedObjectString: any = localStorage.getItem(\"stageDetail\") ?? \"\";\n    const storedObject = JSON.parse(storedObjectString);\n\n    setStage(StageNames[storedObject?.stageName] ?? \"\");\n  };\n\n  const getUserProfile = async () => {\n    UserService.getUserDetail()\n      .then((res: any) => {\n        setUserAndPartnerDetails(res?.data);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  const getListOfConversation = async () => {\n    await ChatServices.getAllChats(`loan.uid=${params.loanUid}&stage.uid=${params.stageUid}`)\n      .then((res: any) => {\n        setListOfUsers(res.data.results);\n        setLoadersForUsers(false);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n        setLoadersForUsers(false);\n      });\n  };\n  const getInitialConversation = async (data?: any) => {\n    const res = await ChatServices.getFirstChat(`${data}`);\n    try {\n      setSingleChat(res.data?.results[0]);\n      setNumberOfReplies(res.data.totalRecords);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getAllConversation = async (conversationUid: any) => {\n    await ChatServices.getAllFullChats(conversationUid)\n      .then((res: any) => {\n        setListOfConversation(res.data);\n        setLoadersForConversation(false);\n        handleReadConversation(conversationUid);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n\n  // polling Functions\n  const startPollingForConversations = async () => {\n    const pollingTimingForUsers = getEnvVariableValue(\"VITE_MESSAGE_LIST_TIMING\");\n    pollingIntervalForUsers.current = setInterval(() => {\n      logWithColor(\"MESSAGES: the polling started for conversationList\", \"green\");\n      getListOfConversation();\n    }, pollingTimingForUsers);\n  };\n  const stopPollingForConversations = () => {\n    logWithColor(\"MESSAGES: the polling stopped for conversationList\", \"red\");\n    clearInterval(pollingIntervalForUsers.current);\n    pollingIntervalForUsers.current = null;\n  };\n  const startPollingForConversation = async (uid: any) => {\n    const pollingTimingForConversation = getEnvVariableValue(\"VITE_MESSAGE_CONVERSATION_TIMING\");\n    if (!uid) {\n      return;\n    }\n    pollingIntervalForConversation.current = setInterval(async () => {\n      logWithColor(\"MESSAGES: the polling started for conversations\", \"green\");\n      await getAllConversation(uid);\n    }, pollingTimingForConversation);\n  };\n  const stopPollingForConversation = () => {\n    logWithColor(\"MESSAGES: the polling stopped for conversations\", \"red\");\n    clearInterval(pollingIntervalForConversation.current);\n    pollingIntervalForConversation.current = null;\n  };\n\n  // api Calls Functions\n\n  /*\n  -------------------------------------------------------\n  HELPER FUNCTIONS\n  -------------------------------------------------------\n */\n  const payloadForStartConversation = () => {\n    const enrich: any = {\n      loan: {\n        uid: params.loanUid,\n      },\n      stage: {\n        uid: params.stageUid,\n      },\n      initiatedByPartner: {\n        uid: userAndPartnerDetails?.partner?.uid ?? \"\",\n      },\n      initiatedByUser: {\n        uid: userAndPartnerDetails?.uid ?? \"\",\n      },\n      status: \"IN_PROGRESS\",\n    };\n    if (userAndPartnerDetails.partner === null) {\n      enrich.initiatedByPartner = null;\n    }\n    return enrich;\n  };\n  const preparePayloadForReply = (conversationUid: any) => {\n    const enrich: any = {\n      loan: {\n        uid: params.loanUid,\n      },\n      stage: {\n        uid: params.stageUid,\n      },\n      conversation: {\n        uid: conversationUid,\n      },\n      sentByPartner: {\n        uid: userAndPartnerDetails?.partner?.uid ?? \"\",\n      },\n      sentByUser: {\n        uid: userAndPartnerDetails?.uid ?? \"\",\n      },\n      message: reply,\n    };\n    if (userAndPartnerDetails.partner === null) {\n      enrich.sentByPartner = null;\n    }\n    return enrich;\n  };\n\n  /*\n  -------------------------------------------------------\nHANDLERS FUNCTIONS\n  -------------------------------------------------------\n */\n  const onHandleNewConversationStart = () => {\n    stopPollingForConversations();\n    stopPollingForConversation();\n    if (conversationUID) {\n      setConversationUID(\"\");\n    }\n    setListOfConversation([]);\n    setIsRightSideEmpty(false);\n    setIsConversationFresh(true);\n    setSelectedDiv(0);\n    setIsConversationStarted(true);\n    setStatusOfUsers(null);\n    setListOfUsers([\n      {\n        summary: \"Start by typing message..\",\n        createdAtSystemDate: Date.now(),\n        status: \"not Required\",\n      },\n      ...listOfUsers,\n    ]);\n  };\n  const onHandleClickOfEachConversation = async (data: any, index: any) => {\n    setLoadersForConversation(true);\n    handleReadConversation(data.uid);\n    setReply(\"\");\n    stopPollingForConversation();\n    stopPollingForConversations();\n\n    await startPollingForConversation(data.uid);\n\n    await startPollingForConversations();\n    getListOfConversation();\n\n    setListOfConversation([]);\n    setIsRightSideEmpty(false);\n    setSelectedDiv(index);\n    setIsConversationFresh(false);\n    setIsConversationStarted(false);\n\n    setConversationUID(data.uid);\n    await getInitialConversation(data.uid);\n    setStatusOfUsers(data.status);\n    getAllConversation(data.uid);\n    setLoadersForConversation(false);\n  };\n  const onHandleReply = async () => {\n    if (reply === \"\") {\n      return;\n    }\n\n    const storedObjectString: any = getLocalStorage(LOCAL_STORAGE.STAGE_DETAIL) ?? \"\";\n    const storedObject = JSON.parse(storedObjectString);\n    if (\n      storedObject.status === LOAN_STAGE_STATUS.APPROVED ||\n      storedObject.status === LOAN_STAGE_STATUS.REJECTED ||\n      storedObject.status === LOAN_STAGE_STATUS.COMPLETED ||\n      storedObject.status === LOAN_STAGE_STATUS.CANCELLED\n    ) {\n      try {\n        const res = await StageService.initiateStageReapeal({\n          status: STATUS_FOR_STAGES.RE_OPEN,\n          uid: `${params.stageUid}`,\n          stageInitiation: null,\n        });\n\n        const updatedData = JSON.stringify(res?.data);\n        setLocalStorage(LOCAL_STORAGE.STAGE_DETAIL, updatedData);\n\n        setStage(StageNames[storedObject?.stageName] ?? \"\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (conversationUID) {\n      sendReply(conversationUID);\n    } else {\n      const enrichForStarConversation = payloadForStartConversation();\n      await ChatServices.startConversation(enrichForStarConversation)\n        .then((res: any) => {\n          setConversationUID(res?.data.uid);\n          sendReply(res?.data.uid);\n        })\n        .catch((err) => {\n          console.log(\"err\");\n        });\n    }\n  };\n  const onHandleLoadPreviousReply = async () => {\n    stopPollingForConversations();\n    stopPollingForConversation();\n    startPollingForConversations();\n    setLoadersForConversation(true);\n    const res = await ChatServices.getAllPreviousChats(conversationUID, numberOfReplies);\n    try {\n      setListOfConversation(res.data.results);\n      setLoadersForConversation(false);\n    } catch (error) {\n      console.log(error);\n      setLoadersForConversation(true);\n    }\n  };\n  const OnHandleCancelConversation = async () => {\n    stopPollingForConversation();\n    stopPollingForConversations();\n    startPollingForConversations();\n    setReply(\"\");\n    setLoadersForUsers(true);\n    setIsRightSideEmpty(true);\n    await getListOfConversation();\n    setSelectedDiv(null);\n    setIsConversationStarted(false);\n    console.log(isConversationFresh);\n    setLoadersForUsers(false);\n  };\n\n  const handleConversationStatus = async () => {\n    stopPollingForConversation();\n    stopPollingForConversations();\n\n    console.log(statusOfUsers);\n    if (statusOfUsers === \"CLOSED\") {\n      await ChatServices.ReOpenConversation(conversationUID, {\n        uid: conversationUID,\n        status: \"IN_PROGRESS\",\n      })\n        .then((res: any) => {\n          console.log(\"object\");\n\n          setStatusOfUsers(\"IN_PROGRESS\");\n          getListOfConversation();\n          stopPollingForConversation();\n          stopPollingForConversations();\n\n          startPollingForConversations();\n          startPollingForConversation(conversationUID);\n        })\n        .catch((err) => {\n          console.log(\"err\");\n        });\n    } else {\n      await ChatServices.FinishConversation(conversationUID, {\n        uid: conversationUID,\n        status: \"CLOSED\",\n      })\n        .then((res: any) => {\n          console.log(\"object\");\n\n          setStatusOfUsers(\"CLOSED\");\n          setIsConversationStarted(false);\n          getListOfConversation();\n          stopPollingForConversation();\n          stopPollingForConversations();\n\n          startPollingForConversations();\n        })\n        .catch((err) => {\n          console.log(\"err\");\n        });\n    }\n  };\n\n  const sendReply = async (conversationUid: string) => {\n    stopPollingForConversation();\n    stopPollingForConversations();\n    setLoadersForConversation(true);\n    setLoadersForUsers(true);\n    const enrichForReply = preparePayloadForReply(conversationUid);\n\n    await ChatServices.sendReply(enrichForReply)\n      .then(async (res: any) => {\n        setReply(\"\");\n\n        getInitialConversation(conversationUid);\n\n        getListOfConversation();\n        // setSingleChat([]);\n        await getAllConversation(conversationUid);\n        setIsConversationFresh(false);\n        setIsConversationStarted(false);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n\n    setLoadersForUsers(false);\n    startPollingForConversation(conversationUid);\n    startPollingForConversations();\n    setLoadersForConversation(false);\n  };\n  const handleReadConversation = async (uid: any) => {\n    await ChatServices.ReadConversation(uid)\n      .then((res: any) => {\n        getListOfConversation();\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  // exporting functions\n  useImperativeHandle(ref, () => ({\n    startPollingForUsers: startPollingForConversations,\n    pauseThePollingForUsers: stopPollingForConversations,\n    pauseThePollingForConversation: stopPollingForConversation,\n    getListOfUsers: getListOfConversation,\n    setLoadersForUsers: setLoadersForUsers,\n    setListOfUsers: setListOfUsers,\n  }));\n  //main render\n  return (\n    <div className=\"h-full flex flex-col\">\n      <div className=\"shadow-OverlayPanelHeader flex justify-between items-center p-3 rounded-t-md\">\n        <div className=\"pl-3 font-medium text-base text-primary-gray-40\">Conversations</div>\n        <img\n          onClick={handleCloseOverLay}\n          src={closeIcon}\n          alt=\"close Icon\"\n          className=\"cursor-pointer\"\n        />\n      </div>\n\n      {/* upper part is complete */}\n\n      <div className=\"flex h-[calc(100%-48px)] w-full\">\n        <div className=\"h-full w-[376px]\">\n          <div className=\"flex items-center text-xs leading-4.5 font-normal pl-6 py-3 gap-0.5\">\n            <div className=\"text-secondary-steelBlue-500\">Stage</div>\n            <div className=\"text-secondary-steelBlue-500\">:</div>\n            <div className=\"text-primary-gray-40\">{stage}</div>\n          </div>\n          {/* stage Login Done  */}\n          <div className=\"h-[calc(100%-110px)] flex flex-col gap-3 overflow-y-auto\">\n            {loaderForUsers ? (\n              <div className=\"h-[470px] w-[364px] flex  flex-col pl-4 gap-2.5\">\n                <div className=\"h-[67px] flex justify-center items-center p-1.5 \">\n                  <div className=\"flex gap-2\">\n                    <SkeletonCustom height=\"36px\" width=\"36px\" shape=\"circle\" />\n\n                    <div className=\" flex flex-col gap-3\">\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"h-[67px] flex justify-center items-center p-1.5 \">\n                  <div className=\"flex gap-2\">\n                    <SkeletonCustom height=\"36px\" width=\"36px\" shape=\"circle\" />\n\n                    <div className=\" flex flex-col gap-3\">\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"h-[67px] flex justify-center items-center p-1.5 \">\n                  <div className=\"flex gap-2\">\n                    <SkeletonCustom height=\"36px\" width=\"36px\" shape=\"circle\" />\n\n                    <div className=\" flex flex-col gap-3\">\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"h-[67px] flex justify-center items-center p-1.5 \">\n                  <div className=\"flex gap-2\">\n                    <SkeletonCustom height=\"36px\" width=\"36px\" shape=\"circle\" />\n\n                    <div className=\" flex flex-col gap-3\">\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"h-[67px] flex justify-center items-center p-1.5 \">\n                  <div className=\"flex gap-2\">\n                    <SkeletonCustom height=\"36px\" width=\"36px\" shape=\"circle\" />\n\n                    <div className=\" flex flex-col gap-3\">\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"h-[67px] flex justify-center items-center p-1.5 \">\n                  <div className=\"flex gap-2\">\n                    <SkeletonCustom height=\"36px\" width=\"36px\" shape=\"circle\" />\n\n                    <div className=\" flex flex-col gap-3\">\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                      <SkeletonCustom height=\"10px\" width=\"300px\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              listOfUsers &&\n              listOfUsers.map((el: any, i: any) => (\n                <div\n                  className={`hover:bg-primary-sapphireBlue-100 rounded-sm py-3 pr-3 ml-1.5 ${\n                    selectedDiv === i ? \"bg-primary-sapphireBlue-100\" : \"bg-[#ffffff] text-gray-700\"\n                  }`}\n                  onClick={() => onHandleClickOfEachConversation(el, i)}\n                  key={i}\n                >\n                  <ListOfUsers data={el} />\n                </div>\n              ))\n            )}\n          </div>\n\n          {/* list OF Messages */}\n          <div className=\"flex justify-center items-center p-3\">\n            <ButtonBox\n              onClickWithLoader={onHandleNewConversationStart}\n              label=\"New Conversation\"\n              disabled={isConversationStarted}\n              buttonElement\n              className=\"w-87 m-auto !rounded-md h-9 flex justify-center items-center btn-lbl-auto gap-1.5\"\n              buttonType={\"NEW_CONVERSATION\"}\n            />\n          </div>\n        </div>\n        <div className=\"h-full flex flex-col flex-1 bg-primary-sapphireBlue-100 shadow-OverlayPanelHeader\">\n          {isRightSideEmpty ? (\n            <EmptyRightSide />\n          ) : loaderForConversation === true ? (\n            <>\n              <div className=\"h-[470px]  flex  flex-col gap-5\">\n                <div className=\" \">\n                  <div className=\"flex justify-end items-end \">\n                    <SkeletonCustom height=\"20px\" width=\"200px\" />\n                  </div>\n                </div>\n                <div className=\"h-[124px] flex justify-center items-center p-1.5 \">\n                  <div className=\"flex gap-2\">\n                    <SkeletonCustom height=\"36px\" width=\"36px\" shape=\"circle\" />\n\n                    <div className=\" flex flex-col gap-3\">\n                      <SkeletonCustom height=\"10px\" width=\"500px\" />\n                      <SkeletonCustom height=\"10px\" width=\"500px\" />\n                      <SkeletonCustom height=\"10px\" width=\"200px\" />\n                    </div>\n                  </div>\n                </div>\n              </div>{\" \"}\n            </>\n          ) : (\n            <>\n              {/* First Div */}\n              {!isConversationFresh ? (\n                <div className=\"flex justify-end items-center h-12 py-3 px-6 gap-1.5\">\n                  <div\n                    onClick={handleConversationStatus}\n                    className=\"font-normal text-blue-900 text-xs cursor-pointer\"\n                  >\n                    {statusOfUsers === \"CLOSED\" ? \"Re-Open Conversation\" : \"Finish Conversation\"}\n                  </div>\n                  <img src={chatIcon} alt=\"click\" className=\"\" />\n                </div>\n              ) : (\n                <div className=\"h-12\"></div>\n              )}\n              <div className=\"h-[calc(100%-168px)]\">\n                {/* Second Div */}\n                <div className=\"mx-3 min-h-23\">\n                  {!isConversationFresh ? (\n                    <Chats\n                      loaderForConversation={loaderForConversation}\n                      name={\n                        singleChat?.sentByUser?.fullName === \"\"\n                          ? `${singleChat?.sentByUser?.name} ${singleChat?.sentByUser?.lastName}`\n                          : singleChat?.sentByPartner?.fullName\n                      }\n                      data={singleChat?.message}\n                      dateAndTime={formatDateWithTime(singleChat?.createdAtSystemDate)}\n                      className={`opacity-100 bg-white`}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </div>\n\n                {/* Third Div */}\n                <div className=\"text-xs  text-secondary-steelBlue-500 bg-gray-100 py-1.5 flex justify-between items-center px-6\">\n                  {!isConversationFresh && (\n                    <>\n                      <Text label={` ${numberOfReplies - 1} Replies`} />\n                      <div\n                        onClick={onHandleLoadPreviousReply}\n                        className=\"cursor-pointer underline text-blue-600\"\n                      >\n                        Load Previous Replies\n                      </div>\n                    </>\n                  )}\n                </div>\n                {/* Fourth Div */}\n\n                <div\n                  ref={containerRef}\n                  className={`overflow-y-auto flex-col space-y-2 gap-2.5 h-[calc(100%-120px)] bg-gray-100 px-3`}\n                >\n                  {listOfConversation &&\n                    listOfConversation\n                      .filter((el: any) => el.uid !== singleChat.uid)\n                      .map((el: any, i: any) => (\n                        <div key={i}>\n                          <Chats\n                            className={`opacity-100 bg-white max-w-[600px]`}\n                            name={\n                              `${el?.sentByUser?.name} ${el?.sentByUser?.lastName}` ??\n                              el?.sentByPartner?.name\n                            }\n                            data={el.message}\n                            dateAndTime={\n                              formatDateWithTime(el?.conversation?.createdAtSystemDate) ?? \"-\"\n                            }\n                          />\n                        </div>\n                      ))}\n                </div>\n\n                <>\n                  {isConversationFresh && (\n                    <div className=\"mx-3 mt-1.5\">\n                      <ReOpenNotification handleCancelConversation={OnHandleCancelConversation} />\n                    </div>\n                  )}\n                  {statusOfUsers === \"CLOSED\" && !isConversationFresh && (\n                    <div className=\"mx-3 mt-1.5\">\n                      <ClosedNotification />\n                    </div>\n                  )}\n                </>\n              </div>\n              {/* Fifth Div */}\n              {/* this is inputbox and Submit Button */}\n              <div className=\"h-30 flex items-end mt-2\">\n                <div className=\"flex gap-3 justify-center pl-3 items-center\">\n                  <InputBox\n                    placeholder=\"Add your reply... \"\n                    className=\"min-w-[500px] h-7.5 max-h-20\"\n                    // maxCount={1000}\n                    // hideMaxCount\n                    // rows={5}\n                    // autoResize\n                    value={reply}\n                    disabled={statusOfUsers === \"CLOSED\"}\n                    onChange={(e) => setReply(e.target.value)}\n                  />\n                  <ButtonBox\n                    onClick={onHandleReply}\n                    disabled={statusOfUsers === \"CLOSED\"}\n                    buttonType={\"REPLY_CONVERSATION\"}\n                    className=\"bg-slate-100 hover:bg-slate-100 shadow-none\"\n                  />\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default MainMessageBody;\n"],"names":["chatIcon","DEFAULT_PATH","ChatServices","BaseApiService","__publicField","start","limit","search","url","uid","obj","ChatServices$1","Chats","props","name","data","dateAndTime","className","jsxs","jsx","Fragment","SkeletonCustom","notification","ClosedNotification","message","EmptyRightSide","ListOfUsers","InProgressButton","CloseButton","_b","_c","_d","_e","_f","_g","ReOpenNotification","handleCancelConversation","closeIcon","StageNames","STATUS_FOR_STAGES","MainMessageBody","forwardRef","ref","handleCloseOverLay","params","containerRef","useRef","listOfUsers","setListOfUsers","useState","loaderForUsers","setLoadersForUsers","listOfConversation","setListOfConversation","isConversationStarted","setIsConversationStarted","selectedDiv","setSelectedDiv","userAndPartnerDetails","setUserAndPartnerDetails","isConversationFresh","setIsConversationFresh","singleChat","setSingleChat","numberOfReplies","setNumberOfReplies","conversationUID","setConversationUID","reply","setReply","isRightSideEmpty","setIsRightSideEmpty","statusOfUsers","setStatusOfUsers","pollingIntervalForConversation","pollingIntervalForUsers","loaderForConversation","setLoadersForConversation","stage","setStage","useEffect","init","stopPollingForConversation","stopPollingForConversations","getStageLabel","getUserProfile","getListOfConversation","startPollingForConversations","storedObjectString","storedObject","UserService","res","err","getInitialConversation","_a","error","getAllConversation","conversationUid","handleReadConversation","pollingTimingForUsers","getEnvVariableValue","logWithColor","startPollingForConversation","pollingTimingForConversation","payloadForStartConversation","enrich","preparePayloadForReply","onHandleNewConversationStart","onHandleClickOfEachConversation","index","onHandleReply","getLocalStorage","LOCAL_STORAGE","LOAN_STAGE_STATUS","StageService","updatedData","setLocalStorage","sendReply","enrichForStarConversation","onHandleLoadPreviousReply","OnHandleCancelConversation","handleConversationStatus","enrichForReply","useImperativeHandle","el","i","ButtonBox","formatDateWithTime","Text","InputBox","e"],"mappings":"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"}