{"version":3,"file":"OrganizationReportingLevel-18ffcc18.js","sources":["../../src/views/masterData/OrganizationLevel/OrganizationReportingLevel/OrganizationReportingLevel.tsx"],"sourcesContent":["/**\n * Author : Waseem\n * Created on : 21 June, 2023\n **/\n\n/*\n  -------------------------------------------------------\n   Imports:\n  -------------------------------------------------------\n*/\nimport ButtonBox from \"components/ButtonBox\";\nimport DatePicker from \"components/DatePicker/DatePicker\";\nimport EditableTable from \"components/EditableTable/EditableTable\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { Column } from \"primereact/column\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkOrganizationReporting, linkStaticMasterTypes } from \"routes\";\nimport DemoService from \"services/DemoService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  DROPDOWN_STYLE_TYPE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\n/*\n  -------------------------------------------------------\n  PROPS:\n  -------------------------------------------------------\n*/\ntype IProps = RouteProps;\n\nconst OrganizationReportingCreateViewEdit = (props: IProps) => {\n  /*\n    -------------------------------------------------------\n      States\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState({\n    displayName: \"\",\n    org_level_type: \"\",\n    reasons: \"\",\n    description: \"\",\n    isActive: \"\",\n  });\n\n  const [isNameDuplicated, setIsNameDuplicated] = useState(false);\n  const [isCodeDuplicated, setIsCodeDuplicated] = useState(false);\n  const [initialTableObj, setInitialTableObj] = useState({\n    parentOrgLevel: \"\",\n    from: \"\",\n    to: \"\",\n  });\n  const [dataTableInstallment, setDataTableInstallment] = useState({\n    limit: 10,\n    loading: false,\n    totalRecords: 0,\n    start: 0,\n    search: \"\",\n    runCustomQuery: false,\n    records: [],\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const dataTableLoanRef = useRef(null);\n  const isFirstRender = useRef(true);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [navigateBack, setNavigateBack] = useState(false);\n  const toastMessageRef = useRef(null);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n      -------------------------------------------------------\n        Hooks: useEffect\n      -------------------------------------------------------\n    */\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      // Skip the effect on initial render\n      isFirstRender.current = false;\n      // @ts-ignore : dataTableLoan declared null ref\n      dataTableLoanRef?.current?.addRecords(initialTableObj);\n      return;\n    }\n  }, [dataTableInstallment?.search]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore : dataTableLoan declared null ref\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = async () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() && !isNameDuplicated && !isCodeDuplicated;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const renderRowClassName = (rowData: any) => {\n    if (rowData?.isInactive) {\n      return \" !bg-primary-red-200\";\n    } else if (rowData?.isAdded) {\n      return \" !bg-primary-plum-200\";\n    } else if (rowData?.isUpdated) {\n      return \" !bg-semantic-yellow-200\";\n    }\n  };\n\n  const onEditorValueChange = (props: any, value: any, field: any) => {\n    // @ts-ignore : dataTableLoan declared null ref\n    dataTableLoanRef?.current?.updateRecords(props, value, field);\n  };\n\n  const onAddLoanRow = () => {\n    // @ts-ignore : dataTableLoan declared null ref\n    dataTableLoanRef?.current?.addRecords(initialTableObj);\n  };\n\n  const renderProduct = (rowData: any, props: any) => {\n    return (\n      <SimpleDropDown\n        variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n        onChange={(e) => {\n          onEditorValueChange(props, e.target.value, \"parentOrgLevel\");\n        }}\n        value={rowData.parentOrgLevel}\n        placeholder=\"Parent Organization Level\"\n        validation={simpleValidator.current.message(\n          \"parentOrgLevel\",\n          rowData.parentOrgLevel,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderFromDateTime = (rowData: any, props: any) => {\n    return (\n      <DatePicker\n        onChange={(e) => {\n          onEditorValueChange(props, e.target.value, \"from\");\n        }}\n        name={\"from\"}\n        value={rowData.from}\n        placeholder=\"DD-MMM-YYYY\"\n        validation={simpleValidator?.current?.message(\"from\", rowData.from, \"mandatory\")}\n      />\n    );\n  };\n\n  const renderToDateTime = (rowData: any, props: any) => {\n    return (\n      <DatePicker\n        onChange={(e) => {\n          onEditorValueChange(props, e.target.value, \"to\");\n        }}\n        name={\"to\"}\n        value={rowData.to}\n        placeholder=\"DD-MMM-YYYY\"\n        validation={\n          rowData.to < rowData.from\n            ? \"Applicable To date cannot be less than applicable from\"\n            : simpleValidator?.current?.message(\"to\", rowData.to, \"mandatory\")\n        }\n      />\n    );\n  };\n\n  /*\n      -------------------------------------------------------\n        Handlers: Event handler for onChange, onBlur etc\n      -------------------------------------------------------\n    */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  const onNameChange = (e: any) => {\n    if (e.target.name === \"displayName\") {\n      setIsNameDuplicated(true);\n    }\n    if (e.target.name === \"systemCode\") {\n      setIsCodeDuplicated(true);\n    }\n  };\n\n  /* \n      -------------------------------------------------------\n        ButtonClick Functions:\n      -------------------------------------------------------\n    */\n  const onSaveClick = async () => {\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n    }\n  };\n\n  const onCancelClick = () => {\n    props.navigate(linkOrganizationReporting);\n  };\n\n  const onApproveClick = () => {\n    console.log(\"Approve\");\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkOrganizationReporting);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  /* \n      -------------------------------------------------------\n        Helper Functions:\n      -------------------------------------------------------\n    */\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.organizationLevelReporting.create\";\n      case PAGE_MODE.VIEW:\n        return \"heading.organizationLevelReporting.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.organizationLevelReporting.edit\";\n      default:\n        return \"heading.organizationLevelReporting.create\";\n    }\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n  const { displayName, org_level_type, reasons, description, isActive } = pageObj;\n  return (\n    <div className=\"h-full mx-6\">\n      <div className=\"flex w-full justify-between pt-6 items-center\">\n        <div className=\" h-7.5\">\n          <Text\n            label={getPageTitle()}\n            className=\"text-primary-ptext-1000 text-h2 font-Roboto font-bold flex\"\n          />\n        </div>\n        <div className=\"flex mr-5\">\n          {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n            <>\n              <div className=\"mr-5\">\n                <ButtonBox\n                  className=\"reset-red\"\n                  buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n                  onClick={onCancelClick}\n                />\n              </div>\n              <div className=\"mr-10\">\n                <ButtonBox buttonType={BUTTON_TYPE.SAVE_OUTLINE} onClick={onSaveClick} />\n              </div>\n              <div>\n                <ButtonBox\n                  className=\"approve-primary\"\n                  buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                  onClick={onApproveClick}\n                />\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"mr-5\">\n                <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n              </div>\n              <div className=\"\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                  className=\"blue-primary\"\n                  onClick={onEditClick}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <div className=\"grid grid-cols-4 gap-3 mt-3\">\n        <div className=\"col-span-1\">\n          <InputBox\n            label=\"input.organizationLevelReporting.displayName\"\n            name=\"displayName\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            onChange={handleInputChange}\n            value={displayName}\n            onBlur={(e) => {\n              onNameChange(e);\n              validate(e);\n            }}\n            validation={\n              isNameDuplicated\n                ? \"Duplicate Entry Found\"\n                : simpleValidator?.current?.message(\"displayName\", displayName, \"mandatory\")\n            }\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n        <div className=\"col-span-1\">\n          <SimpleDropDown\n            label=\"input.organizationLevelReporting.oragnizationLevelType\"\n            name=\"org_level_type\"\n            variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n            value={org_level_type}\n            disabled={pageMode === PAGE_MODE.VIEW}\n            onChange={handleInputChange}\n            validation={simpleValidator?.current?.message(\n              \"org_level_type\",\n              org_level_type,\n              \"mandatory\"\n            )}\n          />\n        </div>\n\n        {pageMode !== PAGE_MODE.CREATE && (\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label=\"input.organizationLevelReporting.isActive\"\n              name=\"isActive\"\n              variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              value={isActive}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-4 gap-3\">\n        <div className=\"col-span-2\">\n          <InputTextArea\n            label=\"input.organizationLevelReporting.description\"\n            name=\"description\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            maxCount={200}\n            onChange={handleInputChange}\n            value={description}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n        {pageMode !== PAGE_MODE.VIEW && (\n          <div className=\"col-span-2\">\n            <InputTextArea\n              label=\"input.organizationLevelReporting.reasons\"\n              name=\"reasons\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              onChange={handleInputChange}\n              value={reasons}\n              validation={simpleValidator?.current?.message(\"reasons\", reasons, \"mandatory\")}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n        )}\n      </div>\n      <div>\n        <div className=\"mt-3 flex w-full justify-between\">\n          <div></div>\n          <ButtonBox buttonType={BUTTON_TYPE.ICON_TEXT_ROW} onClick={onAddLoanRow} />\n        </div>\n        <EditableTable\n          standardDataFormatPromise={DemoService.getAll}\n          dataKey=\"id\"\n          // search={dataTableInstallment.search}\n          ref={dataTableLoanRef}\n          hidePaginator\n          pageMode={PAGE_MODE.CREATE}\n          rowClassName={renderRowClassName}\n          className=\"border border-secondary-concrete px-0 overflow-x-auto mt-4 rounded-lg read-only-table !min-h-111 w-full\"\n          updatedRecords={[]}\n          addedRecords={[]}\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs w-2/12 p-1 h-12 pl-6\"\n            header=\"Parent Organization Level*\"\n            body={renderProduct}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs w-2/12 p-1 h-12 pl-6\"\n            header=\"From *\"\n            body={renderFromDateTime}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs w-2/12 p-1 h-12 pl-6\"\n            header=\"To *\"\n            body={renderToDateTime}\n          />\n        </EditableTable>\n      </div>\n      <div className=\"\">\n        <ToastCustom\n          position={position}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n          onRemove={() => {\n            if (navigateBack) {\n              props.navigate(linkStaticMasterTypes);\n            }\n          }}\n        />\n      </div>\n      <ErrorDialog\n        onHide={() => setShowDialogAPIError(false)}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(OrganizationReportingCreateViewEdit);\n"],"names":["OrganizationReportingCreateViewEdit","props","pageObj","setPageObj","useState","isNameDuplicated","setIsNameDuplicated","isCodeDuplicated","setIsCodeDuplicated","initialTableObj","setInitialTableObj","dataTableInstallment","setDataTableInstallment","pageMode","setPageMode","PAGE_MODE","dataTableLoanRef","useRef","isFirstRender","forceUpdate","showDialogAPIError","setShowDialogAPIError","position","setPosition","toastMessage","setToastMessage","errorMessage","setErrorMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","navigateBack","setNavigateBack","toastMessageRef","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","parsed","queryString","_a","validate","_b","validateForm","isValid","renderRowClassName","rowData","onEditorValueChange","value","field","onAddLoanRow","renderProduct","jsx","SimpleDropDown","DROPDOWN_STYLE_TYPE","e","renderFromDateTime","DatePicker","renderToDateTime","handleInputChange","event","name","prevPageObj","onNameChange","onSaveClick","STATIC_MASTER_TYPE_TOAST_TEXT","onCancelClick","linkOrganizationReporting","onApproveClick","onBackClick","onEditClick","getPageTitle","displayName","org_level_type","reasons","description","isActive","jsxs","Text","Fragment","ButtonBox","BUTTON_TYPE","InputBox","INPUT_STYLE_TYPE","InputTextArea","_c","EditableTable","DemoService","Column","ToastCustom","linkStaticMasterTypes","ErrorDialog","OrganizationReportingLevel","withRouter"],"mappings":"03BA4CA,MAAMA,GAAuCC,GAAkB,WAM7D,KAAM,CAACC,EAASC,CAAU,EAAIC,WAAS,CACrC,YAAa,GACb,eAAgB,GAChB,QAAS,GACT,YAAa,GACb,SAAU,EAAA,CACX,EAEK,CAACC,EAAkBC,CAAmB,EAAIF,WAAS,EAAK,EACxD,CAACG,EAAkBC,CAAmB,EAAIJ,WAAS,EAAK,EACxD,CAACK,EAAiBC,EAAkB,EAAIN,WAAS,CACrD,eAAgB,GAChB,KAAM,GACN,GAAI,EAAA,CACL,EACK,CAACO,EAAsBC,EAAuB,EAAIR,WAAS,CAC/D,MAAO,GACP,QAAS,GACT,aAAc,EACd,MAAO,EACP,OAAQ,GACR,eAAgB,GAChB,QAAS,CAAC,CAAA,CACX,EACK,CAACS,EAAUC,CAAW,EAAIV,EAAAA,SAASW,EAAU,MAAM,EACnDC,EAAmBC,SAAO,IAAI,EAC9BC,EAAgBD,SAAO,EAAI,EAC3B,CAAG,CAAAE,CAAW,EAAIf,WAA8B,MAAS,EACzD,CAACgB,EAAoBC,CAAqB,EAAIjB,WAAS,EAAK,EAC5D,CAACkB,EAAUC,CAAW,EAAInB,WAAwC,cAAc,EAChF,CAACoB,EAAcC,CAAe,EAAIrB,WAAS,EAAE,EAC7C,CAACsB,EAAcC,EAAe,EAAIvB,WAAS,EAAE,EAC7C,CAACwB,EAAqBC,CAAsB,EAAIzB,EAAAA,SAAS0B,EAAiB,OAAO,EACjF,CAACC,EAAcC,CAAe,EAAI5B,WAAS,EAAK,EAChD,CAAC6B,EAAcC,EAAe,EAAI9B,WAAS,EAAK,EAChD+B,EAAkBlB,SAAO,IAAI,EAC7BmB,EAAkBnB,EAAA,OACtB,IAAIoB,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMpB,EAAaqB,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EAQHC,EAAAA,UAAU,IAAM,CACd,MAAMC,EAEFC,GAAY,MAAM1C,EAAM,SAAS,MAAM,EACvCyC,GAAA,MAAAA,EAAQ,OAAQA,GAAA,YAAAA,EAAQ,QAAS,QACnC5B,EAAY4B,EAAO,IAAI,CAE3B,EAAG,CAAE,CAAA,EAELD,EAAAA,UAAU,IAAM,OACd,GAAIvB,EAAc,QAAS,CAEzBA,EAAc,QAAU,IAEN0B,EAAA5B,GAAA,YAAAA,EAAA,UAAA,MAAA4B,EAAS,WAAWnC,GACtC,OACF,EACC,CAACE,GAAA,YAAAA,EAAsB,MAAM,CAAC,EAEjC8B,EAAAA,UAAU,IAAM,OACVN,GAAA,MAAAA,EAAiB,SAAWX,IAAiB,MAE/CoB,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,eAE3B,EAAA,CAACpB,EAAcI,EAAqBG,CAAY,CAAC,EAQ9C,MAAAc,EAAY,GAAW,UAC3BC,EAAAV,GAAA,YAAAA,EAAiB,UAAjB,MAAAU,EAA0B,gBAAeF,EAAA,iBAAG,SAAH,YAAAA,EAAW,KAAI,EAGpDG,GAAe,SAAY,SAC/B,IAAIC,EAAU,GAEd,OADAA,IAAUJ,EAAAR,GAAA,YAAAA,EAAiB,UAAjB,YAAAQ,EAA0B,aAAc,CAACvC,GAAoB,CAACE,EACpEyC,IAGU7B,EAACqB,GAAS,CAACA,CAAI,GAC3BM,EAAAV,GAAA,YAAAA,EAAiB,UAAjB,MAAAU,EAA0B,eACd3B,EAACqB,GAAS,CAACA,CAAI,EACpB,GACT,EAGIS,GAAsBC,GAAiB,CAC3C,GAAIA,GAAA,MAAAA,EAAS,WACJ,MAAA,uBACT,GAAWA,GAAA,MAAAA,EAAS,QACX,MAAA,wBACT,GAAWA,GAAA,MAAAA,EAAS,UACX,MAAA,0BACT,EAGIC,EAAsB,CAAClD,EAAYmD,EAAYC,IAAe,QAElET,EAAA5B,GAAA,YAAAA,EAAkB,UAAlB,MAAA4B,EAA2B,cAAc3C,EAAOmD,EAAOC,EAAK,EAGxDC,GAAe,IAAM,QAEPV,EAAA5B,GAAA,YAAAA,EAAA,UAAA,MAAA4B,EAAS,WAAWnC,EAAe,EAGjD8C,GAAgB,CAACL,EAAcjD,IAEjCuD,EAAA,IAACC,EAAA,CACC,QAASC,EAAoB,UAC7B,SAAWC,GAAM,CACfR,EAAoBlD,EAAO0D,EAAE,OAAO,MAAO,gBAAgB,CAC7D,EACA,MAAOT,EAAQ,eACf,YAAY,4BACZ,WAAYd,EAAgB,QAAQ,QAClC,iBACAc,EAAQ,eACR,WACF,CAAA,CAAA,EAKAU,GAAqB,CAACV,EAAcjD,IAAe,OAErD,OAAAuD,EAAA,IAACK,EAAA,CACC,SAAWF,GAAM,CACfR,EAAoBlD,EAAO0D,EAAE,OAAO,MAAO,MAAM,CACnD,EACA,KAAM,OACN,MAAOT,EAAQ,KACf,YAAY,cACZ,YAAYN,EAAAR,GAAA,YAAAA,EAAiB,UAAjB,YAAAQ,EAA0B,QAAQ,OAAQM,EAAQ,KAAM,YAAW,CAAA,CACjF,EAIEY,GAAmB,CAACZ,EAAcjD,IAAe,OAEnD,OAAAuD,EAAA,IAACK,EAAA,CACC,SAAWF,GAAM,CACfR,EAAoBlD,EAAO0D,EAAE,OAAO,MAAO,IAAI,CACjD,EACA,KAAM,KACN,MAAOT,EAAQ,GACf,YAAY,cACZ,WACEA,EAAQ,GAAKA,EAAQ,KACjB,0DACAN,EAAAR,GAAA,YAAAA,EAAiB,UAAjB,YAAAQ,EAA0B,QAAQ,KAAMM,EAAQ,GAAI,YAAW,CAAA,CAEvE,EAUEa,EAAqBC,GAAe,CACxC,KAAM,CAAE,KAAAC,EAAM,MAAAb,GAAUY,EAAM,OAC9B7D,EAAY+D,IAAiB,CAC3B,GAAGA,EACH,CAACD,CAAI,EAAGb,CACR,EAAA,CAAA,EAGEe,GAAgB,GAAW,CAC3B,EAAE,OAAO,OAAS,eACpB7D,EAAoB,EAAI,EAEtB,EAAE,OAAO,OAAS,cACpBE,EAAoB,EAAI,CAC1B,EAQI4D,GAAc,SAAY,CAC9B,IAAIpB,EAAU,GACdA,EAAU,MAAMD,KACXC,IACHzB,EAAY,WAAW,EACvBM,EAAuBC,EAAiB,UAAU,EAClDL,EAAgB4C,GAA8B,KAAK,EACnDrC,EAAgB,CAACD,CAAY,EAC/B,EAGIuC,GAAgB,IAAM,CAC1BrE,EAAM,SAASsE,CAAyB,CAAA,EAGpCC,GAAiB,IAAM,CAC3B,QAAQ,IAAI,SAAS,CAAA,EAGjBC,GAAc,IAAM,CACxBxE,EAAM,SAASsE,CAAyB,CAAA,EAGpCG,GAAc,IAAM,CACxB5D,EAAYC,EAAU,IAAI,CAAA,EAQtB4D,GAAe,IAAM,CACzB,OAAQ9D,EAAU,CAChB,KAAKE,EAAU,OACN,MAAA,4CACT,KAAKA,EAAU,KACN,MAAA,0CACT,KAAKA,EAAU,KACN,MAAA,0CACT,QACS,MAAA,2CACX,CAAA,EAQI,CAAE,YAAA6D,EAAa,eAAAC,EAAgB,QAAAC,EAAS,YAAAC,GAAa,SAAAC,EAAa,EAAA9E,EAEtE,OAAA+E,EAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gDACb,SAAA,CAACzB,EAAAA,IAAA,MAAA,CAAI,UAAU,SACb,SAAAA,EAAA,IAAC0B,GAAA,CACC,MAAOP,GAAa,EACpB,UAAU,4DAAA,CAAA,EAEd,EACAnB,EAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAA3C,IAAaE,EAAU,QAAUF,IAAaE,EAAU,KAErDkE,EAAAA,KAAAE,EAAAA,SAAA,CAAA,SAAA,CAAC3B,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC4B,EAAA,CACC,UAAU,YACV,WAAYC,EAAY,eACxB,QAASf,EAAA,CAAA,EAEb,EACAd,EAAA,IAAC,MAAI,CAAA,UAAU,QACb,SAAAA,EAAAA,IAAC4B,EAAU,CAAA,WAAYC,EAAY,aAAc,QAASjB,EAAA,CAAa,CACzE,CAAA,QACC,MACC,CAAA,SAAAZ,EAAA,IAAC4B,EAAA,CACC,UAAU,kBACV,WAAYC,EAAY,kBACxB,QAASb,EAAA,CAAA,EAEb,CAAA,CAAA,CACF,EAGES,EAAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAAC3B,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACA,EAAAA,IAAA4B,EAAA,CAAU,WAAYC,EAAY,aAAc,QAASZ,EAAA,CAAa,CACzE,CAAA,EACAjB,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAAC4B,EAAA,CACC,WAAYC,EAAY,aACxB,UAAU,eACV,QAASX,EAAA,CAAA,EAEb,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,EACAO,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACzB,EAAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAAC8B,GAAA,CACC,MAAM,+CACN,KAAK,cACL,QAASC,EAAiB,UAC1B,SAAUxB,EACV,MAAOa,EACP,OAAS,GAAM,CACbT,GAAa,CAAC,EACdtB,EAAS,CAAC,CACZ,EACA,WACExC,EACI,yBACAuC,EAAAR,GAAA,YAAAA,EAAiB,UAAjB,YAAAQ,EAA0B,QAAQ,cAAegC,EAAa,aAEpE,SAAU/D,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAyC,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACC,EAAA,CACC,MAAM,yDACN,KAAK,iBACL,QAASC,EAAoB,UAC7B,MAAOmB,EACP,SAAUhE,IAAaE,EAAU,KACjC,SAAUgD,EACV,YAAYjB,EAAAV,GAAA,YAAAA,EAAiB,UAAjB,YAAAU,EAA0B,QACpC,iBACA+B,EACA,YACF,CAAA,EAEJ,EAEChE,IAAaE,EAAU,QACrByC,EAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAACC,EAAA,CACC,MAAM,4CACN,KAAK,WACL,QAASC,EAAoB,UAC7B,SAAUK,EACV,MAAOiB,GACP,SAAUnE,IAAaE,EAAU,IAAA,CAAA,EAErC,CAAA,EAEJ,EAEAkE,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAACzB,EAAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAACgC,EAAA,CACC,MAAM,+CACN,KAAK,cACL,QAASD,EAAiB,UAC1B,SAAU,IACV,SAAUxB,EACV,MAAOgB,GACP,SAAUlE,IAAaE,EAAU,IAAA,CAAA,EAErC,EACCF,IAAaE,EAAU,MACrByC,EAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAACgC,EAAA,CACC,MAAM,2CACN,KAAK,UACL,QAASD,EAAiB,UAC1B,SAAU,IACV,SAAUxB,EACV,MAAOe,EACP,YAAYW,EAAArD,GAAA,YAAAA,EAAiB,UAAjB,YAAAqD,EAA0B,QAAQ,UAAWX,EAAS,aAClE,SAAUjE,IAAaE,EAAU,IAAA,CAAA,EAErC,CAAA,EAEJ,SACC,MACC,CAAA,SAAA,CAACkE,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAzB,EAAA,IAAC,MAAI,EAAA,QACJ4B,EAAU,CAAA,WAAYC,EAAY,cAAe,QAAS/B,GAAc,CAAA,EAC3E,EACA2B,EAAA,KAACS,GAAA,CACC,0BAA2BC,GAAY,OACvC,QAAQ,KAER,IAAK3E,EACL,cAAa,GACb,SAAUD,EAAU,OACpB,aAAckC,GACd,UAAU,0GACV,eAAgB,CAAC,EACjB,aAAc,CAAC,EAEf,SAAA,CAAAO,EAAA,IAACoC,EAAA,CACC,UAAU,iEACV,OAAO,6BACP,KAAMrC,EAAA,CACR,EACAC,EAAA,IAACoC,EAAA,CACC,UAAU,iEACV,OAAO,SACP,KAAMhC,EAAA,CACR,EACAJ,EAAA,IAACoC,EAAA,CACC,UAAU,iEACV,OAAO,OACP,KAAM9B,EAAA,CACR,CAAA,CAAA,CACF,CAAA,EACF,EACAN,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAACqC,GAAA,CACC,SAAAvE,EACA,IAAKa,EACL,UAAWX,EACX,QAASI,EACT,SAAU,IAAM,CACVK,GACFhC,EAAM,SAAS6F,EAAqB,CAExC,CAAA,CAAA,EAEJ,EACAtC,EAAA,IAACuC,GAAA,CACC,OAAQ,IAAM1E,EAAsB,EAAK,EACzC,QAASD,EACT,aAAAM,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,EAEesE,GAAAC,GAAWjG,EAAmC"}