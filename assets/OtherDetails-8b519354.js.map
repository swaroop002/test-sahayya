{"version":3,"file":"OtherDetails-8b519354.js","sources":["../../src/services/transaction/ReferenceService.ts","../../src/views/transaction/PageDDE/Login/PageApplicant/EmploymentDetails/EmploymentDetails.tsx","../../src/views/transaction/PageDDE/Login/PageApplicant/References/References.tsx","../../src/views/transaction/PageDDE/Login/PageApplicant/InvestmentInformation/InvestmentInformation.tsx","../../src/views/transaction/PageDDE/Login/PageApplicant/OtherDetails/OtherDetails.tsx"],"sourcesContent":["import BaseApiService from \"services/BaseApiService\";\nconst DEFAULT_PATH = \"/custom/api/login\";\nclass ReferenceService extends BaseApiService {\n  getReferences(start = 0, limit = 10, loanUid: string, pageUid: string) {\n    const url = `${DEFAULT_PATH}/${loanUid}/${pageUid}/reference`;\n    return this.makeGetRequestWithAuth(url);\n  }\n\n  saveReferences(payload: any, subStage: string) {\n    const url = `${DEFAULT_PATH}/${subStage}/reference`;\n    return this.makePostRequestWithAuth(url, payload);\n  }\n\n  updateReference(payload: any, subStage: string) {\n    const url = `${DEFAULT_PATH}/${subStage}/reference`;\n    return this.makePutRequestWithAuth(url, payload);\n  }\n}\n\nexport default new ReferenceService();\n","import { RouteProps } from \"hoc/withRouter\";\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport Address, { IAddressRef } from \"components/Address\";\nimport CheckBox from \"components/CheckBox\";\nimport DatePicker from \"components/DatePicker\";\nimport DocumentUploader, { IDocumentUploaderRef } from \"components/DocumentUploader\";\nimport InputBox from \"components/InputBox\";\nimport Label from \"components/Label\";\nimport RadioButton from \"components/RadioButton\";\nimport SaveComponent from \"components/Save\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\n\n// ---------- ---------- //\nimport { numberFormatter } from \"locale\";\n\n// ---------- ---------- //\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { initialEmploymentData } from \"../../Helper\";\n\n// ---------- ---------- //\nimport {\n  currencyFormatToNumber,\n  getDateString,\n  getStandardValidator,\n  messageReplace,\n} from \"utils/CommonUtil\";\n\n// ---------- ---------- //\n\nimport { IOcrRelatedData } from \"interface/common\";\nimport {\n  CHECKBOX_STYLE_TYPE,\n  DOCUMENT_CATEGORY,\n  EMPLOYEMENT_NATURE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  PAGE_TYPE,\n  VARIANTS,\n} from \"utils/Constant\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\n\ntype PageType = keyof typeof PAGE_TYPE;\n\nexport interface IEmploymentDetailsRef {\n  save: () => IEmploymentDetailsData | undefined;\n  remove: () => IEmploymentDetailsData | undefined;\n  onSaveSuccess: () => void;\n  resetValidator: () => any;\n}\n\nexport interface IEmploymentDetailsData {\n  uid?: string;\n  isActive?: boolean;\n  employmentNature?: string;\n  industry?: any;\n  occupation?: string;\n  organizationName?: string;\n  operationStartYear?: any;\n  businessExperience?: string;\n  monthlyIncome?: string;\n  monthlyExpenses?: string;\n  otherMonthlyIncome?: string;\n  monthlyNetIncome?: string;\n  annualNetIncome?: string;\n  employmentAddress?: {\n    residentialAddress: boolean;\n    permanentAddress: boolean;\n    isSameAsEmploymentAddress: boolean;\n  };\n  managedBy?: string;\n  seasonality?: string;\n  noOfEmployees?: string;\n  address?: string;\n  pincode?: any;\n  city?: any;\n  state?: string;\n  latitude?: string;\n  longitude?: string;\n  loanDocuments: any;\n}\n\ninterface IProps extends RouteProps {\n  data: IEmploymentDetailsData;\n  isLoading?: boolean;\n  disabled?: boolean;\n  disabledSaveMenu?: boolean;\n  documentCategory?: string;\n  cardNumber?: number;\n  dropDownOptions: any;\n  pageType: PageType;\n  addressDetails?: {\n    residentialAddress?: any;\n    permanentAddress?: any;\n  };\n  isLatLong?: boolean;\n  ocrRelatedData?: IOcrRelatedData;\n  onSaveEmploymentDetails: () => void;\n  onRemoveEmploymentDetails?: () => void;\n}\n\nconst EmploymentDetails = forwardRef<IEmploymentDetailsRef, IProps>((props, ref) => {\n  const {\n    data = initialEmploymentData,\n    isLoading,\n    cardNumber,\n    dropDownOptions,\n    pageType,\n    documentCategory = DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BUSINESS_PROOF,\n    addressDetails,\n    disabled,\n    disabledSaveMenu,\n    isLatLong,\n    ocrRelatedData,\n    onSaveEmploymentDetails,\n    onRemoveEmploymentDetails,\n  } = props;\n\n  // ----------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<IEmploymentDetailsData>(data);\n  const [pageMode, setPageMode] = useState<string>(PAGE_MODE.VIEW);\n\n  const [renderConfig, setRenderConfig] = useState<any>({\n    isBusinessProofMandatory: !pageType || pageType !== PAGE_TYPE.CO_APPLICANT,\n  });\n  // --------------------- ref ---------------------------- //\n\n  const documentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = [\n    {\n      className: \"\",\n      label: \"Remove\",\n      command: () => {\n        onRemoveEmploymentDetails?.();\n      },\n      disabled: cardNumber === 0,\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n    // useEffect(() => {\n\n \n\n  useEffect(() => {\n    if (pageObj?.employmentNature) {\n      resetValidator();\n    }\n  }, [pageObj?.employmentNature]);\n\n  useEffect(() => {\n    const { residentialAddress: addressData } = addressDetails ?? {};\n\n    if (addressData && pageObj?.employmentAddress?.residentialAddress) {\n      setPageObj((prevState: any) => {\n        return {\n          ...prevState,\n          address: addressData?.address,\n          pincode: { pinCode: addressData?.pincode?.pinCode, uid: addressData?.pincode?.uid },\n          city: { name: addressData?.city?.name, uid: addressData?.city?.uid },\n          state: addressData?.city?.state?.name,\n          latitude: addressData?.latitude,\n          longitude: addressData?.longitude,\n        };\n      });\n    }\n  }, [pageObj?.employmentAddress?.residentialAddress, addressDetails?.residentialAddress]);\n\n  useEffect(() => {\n    const { permanentAddress: addressData } = addressDetails ?? {};\n\n    if (addressData && pageObj?.employmentAddress?.permanentAddress) {\n      setPageObj((prevState: any) => {\n        return {\n          ...prevState,\n          address: addressData?.address,\n          pincode: { pinCode: addressData?.pincode?.pinCode, uid: addressData?.pincode?.uid },\n          city: { name: addressData?.city?.name, uid: addressData?.city?.uid },\n          state: addressData?.city?.state?.name,\n          latitude: addressData?.latitude,\n          longitude: addressData?.longitude,\n        };\n      });\n    }\n  }, [pageObj?.employmentAddress?.permanentAddress]);\n\n  useEffect(() => {\n    if (pageObj?.monthlyIncome || pageObj?.monthlyExpenses || pageObj?.otherMonthlyIncome) {\n      const { monthlyIncome, otherMonthlyIncome, monthlyExpenses } = pageObj;\n\n      setPageObj((prevState: any) => {\n        return {\n          ...prevState,\n          monthlyNetIncome: numberFormatter(\n            currencyFormatToNumber(monthlyIncome ?? \"\") +\n              currencyFormatToNumber(otherMonthlyIncome ?? \"\") -\n              currencyFormatToNumber(monthlyExpenses ?? \"\"),\n            \"en-IN\",\n            0\n          ),\n          annualNetIncome: numberFormatter(\n            (currencyFormatToNumber(monthlyIncome ?? \"\") +\n              currencyFormatToNumber(otherMonthlyIncome ?? \"\") -\n              currencyFormatToNumber(monthlyExpenses ?? \"\")) *\n              12,\n            \"en-IN\",\n            0\n          ),\n        };\n      });\n    }\n  }, [pageObj?.monthlyIncome, pageObj?.monthlyExpenses, pageObj?.otherMonthlyIncome]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n  const addressRef: any = useRef<IAddressRef | null>();\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    onSaveSuccess: onSaveSuccess,\n    remove: onRemove,\n    resetValidator: resetValidator,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    -------------------------------------------------------------------------------------------------------\n    Validators:\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // only if the field is industry\n    if (e.target.name === \"industry\") {\n      setPageObj((prevPageObj: any) => {\n        return {\n          ...prevPageObj,\n          [e.target.name]: {\n            ...prevPageObj?.industry,\n            uid: e.target.value,\n          },\n        };\n      });\n\n      return;\n    }\n\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const handleDateBlur = (e: any) => {\n    validate(e);\n    setPageObj((prevState: any) => {\n      return {\n        ...prevState,\n        operationStartYear: pageObj.operationStartYear,\n        // operationStartYear: getDateString(pageObj.operationStartYear),  // commented to fix 560 bug\n      };\n    });\n  };\n\n  const handleAmountInputChange = (e: any) => {\n    const unformattedValue: number = currencyFormatToNumber(e.target.value);\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: numberFormatter(unformattedValue, \"en-IN\", 0),\n      };\n    });\n  };\n\n  const handleAddressChange = (e?: any) => {\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        employmentAddress: {\n          ...prevPageObj?.employmentAddress,\n          [e.target.name]: e.checked,\n          residentialAddress:\n            e.target.name === \"residentialAddress\"\n              ? e.checked\n              : prevPageObj.employmentAddress.permanentAddress,\n          permanentAddress:\n            e.target.name === \"permanentAddress\"\n              ? e.checked\n              : prevPageObj.employmentAddress.residentialAddress,\n        },\n      };\n    });\n  };\n\n  const handleAddressCheckboxChange = (e: any) => {\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        employmentAddress: {\n          ...prevPageObj?.employmentAddress,\n          residentialAddress: e.checked,\n        },\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSaveSuccess = () => setPageMode(PAGE_MODE.VIEW);\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onRemove = () => {\n    const preparedPageObj: IEmploymentDetailsData = {\n      ...pageObj,\n    };\n\n    return { ...preparedPageObj, isActive: false };\n  };\n\n  const onSave = () => {\n    const addressData = addressRef?.current?.save();\n    const { uid } = data;\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n\n    if (!validateForm() || !addressData || !uploadedDocsInfo) {\n      return;\n    }\n\n    setPageObj({  ...pageObj,...addressData,uid:pageObj?.uid });\n    return getFinalData();\n  };\n\n  const onCancel = () => {\n    resetValidator();\n    documentUploaderRef?.current?.resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const getFinalData = () => {\n    const addressData = addressRef?.current?.save();\n    const { uid, ...restAddressData } = data;\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n\n    return { ...pageObj, ...addressData, uid: pageObj?.uid, loanDocumentsProof: uploadedDocsInfo };\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n    addressRef?.current?.resetValidator();\n  };\n\n   const onAddressChange =  () => {\n    setPageObj((prevPageObj)=>({\n      ...prevPageObj,\n      employmentAddress:{\n        ...prevPageObj.employmentAddress,\n        isSameAsEmploymentAddress:false,\n        permanentAddress:false,\n        residentialAddress:false\n      }\n    }))\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const renderDocumentUploader = useMemo(() => {\n    const { isBusinessProofMandatory } = renderConfig;\n    return (\n      <div className=\"flex flex-col space-y-4\">\n        <TextData\n          label={\n            isBusinessProofMandatory\n              ? \"label.dde.businessProof*\"\n              : \"label.dde.employmentDetails.file.proof\"\n          }\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n\n        <div>\n          <DocumentUploader\n            mandatoryDocUpload={isBusinessProofMandatory}\n            ref={documentUploaderRef}\n            savedDocument={data.loanDocuments?.[0] ? data.loanDocuments[0] : {}}\n            mode={pageMode}\n            queryParamForDocList={documentCategory}\n            ocrStageName={ocrRelatedData?.ocrStageName}\n            ocrSubstageName={ocrRelatedData?.ocrSubstageName}\n            ocrPayloadData={{\n              loanUid: ocrRelatedData?.ocrPayloadData?.loanUid ?? \"\",\n              applicant: {\n                uid: ocrRelatedData?.ocrPayloadData?.applicant?.uid ?? \"\",\n              },\n            }}\n          />\n        </div>\n      </div>\n    );\n  }, [pageObj?.loanDocuments, pageMode]);\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state, latitude, longitude } = pageObj;\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      latitude,\n      longitude,\n    };\n  }, [\n    pageObj?.address,\n    pageObj?.pincode,\n    pageObj?.city,\n    pageObj?.state,\n    pageObj?.latitude,\n    pageObj?.longitude\n  ]);\n\n  const renderAddressSection = () => {\n    // data to pre populate address fields\n    return (\n      <Address\n        pageMode={pageMode}\n        ref={addressRef}\n        data={addressData}\n        variant={VARIANTS.SECONDARY}\n        isLatLong={isLatLong}\n        onAddressChange={onAddressChange}\n      >\n        {renderDocumentUploader}\n      </Address>\n    );\n  };\n\n  const renderEmploymentAddressOptionForApplicant = () => {\n    const { residentialAddress } = pageObj?.employmentAddress || {};\n    return (\n      <div className=\"ml-4 grid grid-cols-2 gap-4\">\n        <div className=\"flex col-span-1\">\n          <CheckBox\n            name=\"sameAsResidentialAddress\"\n            hideLabel\n            variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n            onChange={handleAddressCheckboxChange}\n            value={residentialAddress}\n            checked={residentialAddress}\n            hideErrorRow\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n          <div className=\"ml-2 flex items-center\">\n            <Label label={\"label.checkbox.residentialAddress\"} className=\"ml-2\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderEmploymentAddressOptionForCoApplicant = (employmentAddress: any) => {\n    return (\n      <div className=\"ml-4 grid grid-cols-2 gap-4\">\n        <div className=\"flex col-span-1\">\n          <RadioButton\n            name=\"residentialAddress\"\n            hideLabel\n            className=\"flex items-center\"\n            onChange={handleAddressChange}\n            value={employmentAddress?.residentialAddress}\n            checked={employmentAddress?.residentialAddress}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n          <div className=\"ml-2 flex items-top\">\n            <Label label={\"label.checkbox.residentialAddress\"} className=\"ml-2\" />\n          </div>\n        </div>\n        <div className=\"flex col-span-1\">\n          <RadioButton\n            name=\"permanentAddress\"\n            hideLabel\n            className=\"flex items-center\"\n            onChange={handleAddressChange}\n            value={employmentAddress?.permanentAddress}\n            checked={employmentAddress?.permanentAddress}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n          <div className=\"ml-2 flex items-top\">\n            <Label label={\"label.checkbox.permanentAddress\"} className=\"ml-2\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    const {\n      employmentNature,\n      industry,\n      occupation,\n      organizationName,\n      operationStartYear,\n      businessExperience,\n      monthlyIncome,\n      monthlyExpenses,\n      otherMonthlyIncome,\n      monthlyNetIncome,\n      annualNetIncome,\n      managedBy,\n      seasonality,\n      noOfEmployees,\n      employmentAddress,\n    } = pageObj;\n\n    return (\n      <>\n        <Text\n          label={\"label.dde.employeeBasicDetails\"}\n          className=\"text-primary-gray-700 text-sm font-bold mb-1\"\n        />\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2  md:grid-cols-3 lg:grid-cols-4 gap-x-4 gap-y-5 \">\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label=\"label.employmentInformation.employmentNature\"\n              placeholder=\"Select\"\n              name=\"employmentNature\"\n              value={employmentNature}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                `employmentNature`,\n                employmentNature,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              options={dropDownOptions.EMPLOYMENT_NATURE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n            />\n          </div>\n          <div className=\"col-span-3\"></div>\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label=\"label.employmentInformation.industry\"\n              placeholder=\"Select Industry\"\n              name=\"industry\"\n              value={industry?.uid}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\"industry\", industry?.uid, \"mandatory\")}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              options={dropDownOptions.INDUSTRY_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"uid\"\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label=\"label.employmentInformation.occupation\"\n              placeholder=\"Select Occupation\"\n              name=\"occupation\"\n              value={occupation}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\"occupation\", occupation, \"mandatory\")}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              options={dropDownOptions.OCCUPATION_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.nameOfOrganization\"\n              placeholder=\"Enter Name of Organization\"\n              name=\"organizationName\"\n              value={organizationName}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                `organizationName`,\n                organizationName,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <SystemDatePicker\n              view=\"year\"\n              dateFormat=\"yy\"\n              showMinMaxRange\n              disabled={pageMode === PAGE_MODE.VIEW}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.yearStartOperation\"\n              placeholder=\"Select Year\"\n              name=\"operationStartYear\"\n              value={operationStartYear ?? \"\"}\n              onChange={handleChange}\n              onBlur={handleDateBlur}\n              validation={simpleValidator?.current?.message(\n                `operationStartYear`,\n                operationStartYear,\n                \"mandatory\"\n              )}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.totalBusinessExperience\"\n              placeholder=\"Enter Total No. of Years\"\n              name=\"businessExperience\"\n              className=\"text-right\"\n              value={businessExperience}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                `businessExperience`,\n                businessExperience,\n                \"mandatory|checkNumber\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.totalIncome\"\n              placeholder=\"Enter Total Income\"\n              value={monthlyIncome}\n              name=\"monthlyIncome\"\n              className=\"text-right\"\n              onChange={handleAmountInputChange}\n              validation={simpleValidator?.current?.message(\n                `monthlyIncome`,\n                monthlyIncome,\n                \"mandatory|onlyInteger\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.totalExpenses\"\n              placeholder=\"Enter Total Expenses\"\n              value={monthlyExpenses}\n              name=\"monthlyExpenses\"\n              className=\"text-right\"\n              onChange={handleAmountInputChange}\n              validation={simpleValidator?.current?.message(\n                `monthlyExpenses`,\n                monthlyExpenses,\n                \"mandatory|onlyInteger\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.otherIncome\"\n              placeholder=\"Enter Other Income\"\n              name=\"otherMonthlyIncome\"\n              className=\"text-right\"\n              value={otherMonthlyIncome}\n              onChange={handleAmountInputChange}\n              validation={simpleValidator?.current?.message(\n                `otherMonthlyIncome`,\n                otherMonthlyIncome,\n                \"mandatory|onlyInteger\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.netIncome\"\n              placeholder=\"Enter Monthly Net Income\"\n              value={monthlyNetIncome}\n              name=\"monthlyNetIncome\"\n              className=\"text-right\"\n              validation={simpleValidator?.current?.message(\n                `monthlyNetIncome`,\n                monthlyNetIncome,\n                \"mandatory|onlyInteger\"\n              )}\n              onBlur={validate}\n              disabled\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.employmentInformation.netIncomeAnnual\"\n              placeholder=\"Enter Annual Net Income\"\n              name=\"annualNetIncome\"\n              className=\"text-right\"\n              value={annualNetIncome}\n              validation={simpleValidator?.current?.message(\n                `annualNetIncome`,\n                annualNetIncome,\n                \"mandatory|onlyInteger\"\n              )}\n              onBlur={validate}\n              disabled\n            />\n          </div>\n          {employmentNature === EMPLOYEMENT_NATURE.SELF_EMPLOYED ? (\n            <div className=\"col-span-1\">\n              <SimpleDropDown\n                label=\"label.employmentInformation.businessManagedBy\"\n                placeholder=\"Select Business Managed By\"\n                name=\"managedBy\"\n                value={managedBy}\n                onChange={handleChange}\n                validation={simpleValidator?.current?.message(`managedBy`, managedBy, \"mandatory\")}\n                onBlur={validate}\n                disabled={\n                  pageMode === PAGE_MODE.VIEW || employmentNature === EMPLOYEMENT_NATURE.SALARIED\n                }\n                options={dropDownOptions.BUSINESS_MANAGED_BY_OPTION}\n                optionLabel=\"name\"\n                optionValue=\"code\"\n              />\n            </div>\n          ) : null}\n\n          {employmentNature === EMPLOYEMENT_NATURE.SELF_EMPLOYED ? (\n            <div className=\"col-span-1\">\n              <SimpleDropDown\n                label=\"label.employmentInformation.businessSeasonality\"\n                placeholder=\"Select Seasonality\"\n                name=\"seasonality\"\n                value={seasonality}\n                onChange={handleChange}\n                validation={simpleValidator?.current?.message(\n                  `seasonality`,\n                  seasonality,\n                  \"mandatory\"\n                )}\n                onBlur={validate}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                options={dropDownOptions.SEASONALITY_OPTION}\n                optionLabel=\"name\"\n                optionValue=\"code\"\n              />\n            </div>\n          ) : null}\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label=\"label.employmentInformation.noOfEmployees\"\n              placeholder=\"Select No of Employees\"\n              value={noOfEmployees}\n              name=\"noOfEmployees\"\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                `noOfEmployees`,\n                noOfEmployees,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              options={dropDownOptions.NO_EMPLOYEE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n            />\n          </div>\n        </div>\n        <div className=\"flex\">\n          <Text\n            className=\"text-primary-gray-700 text-sm font-bold mb-1\"\n            label={\"label.employmentInformation.employmentAddress\"}\n          />\n          {pageType === PAGE_TYPE.APPLICANT\n            ? renderEmploymentAddressOptionForApplicant()\n            : renderEmploymentAddressOptionForCoApplicant(employmentAddress)}\n        </div>\n\n        {renderAddressSection()}\n      </>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className=\"\">\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <SaveComponent\n          disabled={disabled}\n          disabledMenu={disabledSaveMenu}\n          title={\"label.dde.employmentDetails\"}\n          titleArgs={{ count: cardNumber }}\n          pageMode={pageMode}\n          onCancel={onCancel}\n          onEdit={onEdit}\n          onSave={onSaveEmploymentDetails}\n          kebabModel={menuModel}\n        >\n          {renderContent()}\n        </SaveComponent>\n      )}\n    </div>\n  );\n});\n\nEmploymentDetails.defaultProps = {\n  disabled: false,\n};\n\nexport default EmploymentDetails;\n","import { AxiosResponse } from \"axios\";\nimport Address from \"components/Address/Address\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputAddon from \"components/InputAddon/InputAddon\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text/Text\";\nimport { RouteProps } from \"hoc/withRouter\";\nimport { DropdownChangeParams } from \"primereact/dropdown\";\nimport {\n  BaseSyntheticEvent,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport { INPUT_STYLE_TYPE, PAGE_MODE, VARIANTS } from \"utils/Constant\";\n\nexport interface IReferencesData {\n  listId?: string;\n  uid?: string;\n  parentUid?: string;\n  referenceApplicantUid?: string;\n  firstName?: string;\n  middleName?: string;\n  lastName?: string;\n  mobileNo?: string;\n  relationship?: string;\n  address?: string;\n  pincode?: { uid: string; pinCode: string };\n  city?: { uid: string; name: string };\n  state?: string;\n  latitude?: string;\n  longitude?: string;\n  isActive?: boolean;\n}\n\nexport interface IReferencesRef {\n  save: () => IReferencesData | undefined;\n  remove: () => IReferencesData | undefined;\n}\ninterface IDropdownOptions {\n  uid: string;\n  label: string;\n  value: string;\n}\n\ninterface IProps extends RouteProps {\n  pageObjData?: IReferencesData;\n  isLoading?: boolean;\n  listIndex?: number;\n  onDeleteFromList: (index: number) => void; // delete the card from list\n  onSaveReferences: () => void;\n  onRemoveReference?: () => void; // remove the saved card from list\n  disabled?: boolean;\n}\n\nexport const initialReferenceData = {\n  listId: `ref-card-1`,\n  uid: \"\",\n  parentUid: \"\",\n  referenceApplicantUid: \"\",\n  firstName: \"\",\n  middleName: \"\",\n  lastName: \"\",\n  mobileNo: \"\",\n  relationship: \"\",\n  address: \"\",\n  pincode: { uid: \"\", pinCode: \"\" },\n  city: { uid: \"\", name: \"\" },\n  state: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  isActive: false,\n};\n\nconst References = forwardRef<IReferencesRef, IProps>((props, ref) => {\n  const {\n    pageObjData,\n    isLoading,\n    listIndex,\n    onDeleteFromList,\n    onSaveReferences,\n    onRemoveReference,\n    disabled,\n  } = props;\n\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [pageObj, setPageObj] = useState<IReferencesData>(initialReferenceData);\n  const [referenceOptions, setReferenceOptions] = useState<IDropdownOptions[]>([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined); //NOSONAR\n\n  const addressRef: any = useRef<any>();\n\n  const menuModel = [\n    {\n      className: ``,\n      label: \"Remove\",\n      command: () => {\n        if (onDeleteFromList && listIndex !== undefined && onRemoveReference) {\n          if (!pageObj.uid) {\n            onDeleteFromList(listIndex);\n          } else {\n            onRemoveReference();\n          }\n        }\n      },\n      // disabled: listIndex === 0 || listIndex === 1, (this feature is not required)\n    },\n  ];\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (pageObjData) {\n      setPageObj({\n        ...pageObjData,\n      });\n    }\n  }, [pageObjData]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*---------------------------Service Calls-------------------------------*/\n\n  const init = async () => {\n    getReferenceOptions();\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    remove: onRemove,\n  }));\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: BaseSyntheticEvent | DropdownChangeParams) => {\n    setPageObj((prevPageObj) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSave = () => {\n    const data = addressRef?.current?.save();\n    const { uid, ...restAddressData } = data;\n    if (!validateForm() || !data) {\n      return;\n    }\n\n    setPageMode(PAGE_MODE.VIEW);\n    return { ...pageObj, ...restAddressData };\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    if (simpleValidator) {\n      simpleValidator.current.visibleFields = [];\n    }\n    simpleValidator?.current?.hideMessages();\n    addressRef?.current?.resetValidator();\n\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  const onRemove = () => {\n    return { ...pageObj, isActive: false };\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const getReferenceOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=RELATIONSHIP_REFERENCE`\n    )\n      .then((res: AxiosResponse) => {\n        if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n          const { results } = res.data;\n\n          const options = results.map((option: any) => {\n            return {\n              uid: option.uid,\n              label: option.name,\n              value: option.code,\n            };\n          });\n          setReferenceOptions([...options]);\n        } else {\n          setReferenceOptions([]);\n        }\n      })\n      .catch((err) => {\n        setReferenceOptions([]);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state, latitude, longitude } = pageObj;\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      latitude,\n      longitude,\n    };\n  }, [\n    pageObj?.address,\n    pageObj?.pincode,\n    pageObj?.city,\n    pageObj?.state,\n    pageObj?.latitude,\n    pageObj?.longitude,\n  ]);\n\n  const renderAddressSection = () => {\n    return (\n      <Address\n        pageMode={pageMode}\n        ref={addressRef}\n        data={addressData}\n        addressPlaceholder={\"Enter Description Here\"}\n        variant={VARIANTS.SECONDARY}\n      />\n    );\n  };\n\n  const renderContent = () => {\n    const { firstName, middleName, lastName, mobileNo, relationship } = pageObj;\n    return (\n      <>\n        <div className=\"flex mt-5\">\n          <Text\n            className=\"text-primary-gray-700 text-sm font-bold mb-1\"\n            label={\"label.references.referenceDetails\"}\n          />\n        </div>\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.references.firstName\"\n              placeholder=\"Enter First Name\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\"firstName\", firstName, \"mandatory\")}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.references.middleName\"\n              placeholder=\"Enter Middle Name\"\n              name=\"middleName\"\n              value={middleName}\n              onChange={handleChange}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label=\"label.references.lastName\"\n              placeholder=\"Enter Last Name\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\"lastName\", lastName, \"mandatory\")}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <InputAddon\n              label={\"input.basicInformation.mobile\"}\n              placeholder={\"Enter Mobile Number\"}\n              name=\"mobileNo\"\n              value={mobileNo}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                \"mobileNo\",\n                mobileNo,\n                \"mandatory|onlyInteger|checkNumber|phoneNumber\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              name=\"relationship\"\n              label=\"label.employmentInformation.relationship\"\n              placeholder=\"Select a Relation\"\n              value={relationship}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                \"relationship\",\n                relationship,\n                \"mandatory\"\n              )}\n              options={referenceOptions}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n        </div>\n\n        <div className=\"flex\">\n          <Text\n            className=\"text-primary-gray-700 text-sm font-bold mb-1\"\n            label={\"label.employmentInformation.referenceAddress\"}\n          />\n        </div>\n\n        {renderAddressSection()}\n\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className=\"\">\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <SaveComponent\n          title={\"label.reference\"}\n          titleArgs={{ listIndex: listIndex !== undefined ? listIndex + 1 : \"\" }}\n          pageMode={pageMode}\n          onCancel={onCancel}\n          onEdit={onEdit}\n          onSave={onSaveReferences}\n          kebabModel={menuModel}\n          disabled={disabled}\n        >\n          {renderContent()}\n        </SaveComponent>\n      )}\n    </div>\n  );\n});\n\nexport default References;\n","import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport EditableTableV2, { Column, EditableComponentRef } from \"components/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport { IUploadedFile } from \"components/FileUploadCustom\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport { RouteProps } from \"hoc/withRouter\";\nimport i18n from \"i18n\";\nimport { numberFormatter } from \"locale\";\nimport { DropdownChangeParams } from \"primereact/dropdown\";\nimport React, {\n  BaseSyntheticEvent,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport FinancialService from \"services/transaction/FinancialService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport { BUTTON_TYPE, DROPDOWN_LIST_CODE, INPUT_STYLE_TYPE, PAGE_MODE } from \"utils/Constant\";\n\nexport interface IInvestmentInfoData {\n  assets: ITableRowData[];\n  investmentComments: string;\n}\n\nexport interface IInvestmentInfoRef {\n  props: IProps;\n  save: () => IInvestmentInfoData | undefined;\n  //TODO:need to remove any and use table ref\n  editableTableRef: () => any;\n}\n\ninterface IProps extends RouteProps {\n  isLoading?: boolean;\n  loanUid: string;\n  onCancel?: () => void;\n  onEdit?: () => void;\n  onSaveInvestmentInfo: () => void;\n  pageId: string;\n  savedInvestmentInfo: IInvestmentInfoData;\n  sectionMode: string;\n  onDeleteInvestmentProof: (investmentInfo: IInvestmentInfoData) => void;\n  disabled?: boolean;\n}\n\nexport interface IInvestmentProofFiles extends IUploadedFile {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  docType?: { uid: string; code: string; name: string };\n  sectionCode?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\ninterface ITableRowData {\n  uid: string;\n  amount: string;\n  isActive: boolean;\n  smAssetType: string;\n}\n\ninterface IDropDownOption {\n  uid: string;\n  label: string;\n  value: string;\n}\n\nexport const initialInvestmentInfoData: IInvestmentInfoData = {\n  assets: [],\n  investmentComments: \"\",\n};\n\nconst initialTableRowData: ITableRowData = {\n  uid: \"\",\n  smAssetType: \"\",\n  amount: \"\",\n  isActive: true,\n};\n\nconst InvestmentInformation = forwardRef<IInvestmentInfoRef, IProps>((props, ref) => {\n  const {\n    loanUid,\n    pageId,\n    isLoading,\n    sectionMode,\n    savedInvestmentInfo,\n    onSaveInvestmentInfo,\n    onCancel,\n    onEdit,\n    disabled,\n  } = props;\n\n  const [pageObj, setPageObj] = useState<IInvestmentInfoData>(initialInvestmentInfoData);\n  const [assetOptions, setAssetOptions] = useState<IDropDownOption[][]>([]);\n\n  //error handling states\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    useEffect\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (savedInvestmentInfo) {\n      setPageObj((prev: IInvestmentInfoData) => ({\n        ...prev,\n        investmentComments: savedInvestmentInfo.investmentComments,\n      }));\n    }\n  }, [savedInvestmentInfo]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*---------------------------Service Calls-------------------------------*/\n\n  const init = async () => {\n    getAssetTypeOptions();\n  };\n\n  const getAssetTypeOptions = async () => {\n    try {\n      const res = await StaticMasterDataService.getDropdownList(\n        DROPDOWN_LIST_CODE.ASSET_TYPE,\n        true,\n        \"\"\n      );\n\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        const { data } = res;\n        const assetOptions = data.results?.map((option: { [key: string]: any }) => {\n          return {\n            uid: option.uid ?? \"\",\n            label: option.name ?? \"\",\n            value: option.code ?? \"\",\n          };\n        });\n\n        setAssetOptions([...assetOptions]);\n      } else {\n        setAssetOptions([]);\n      }\n    } catch (error) {\n      setAssetOptions([]);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    props: props,\n    save: onSave,\n    editableTableRef: onTableSearch,\n  }));\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (e: BaseSyntheticEvent) => {\n    setPageObj((prev) => {\n      return {\n        ...prev,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const handleAssetChange = (e: DropdownChangeParams, rowData: any) => {\n    const rowDataObj = { ...rowData };\n    rowDataObj.smAssetType = e.target.value;\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onAddAsset = () => {\n    tableRef.current?.addRow(initialTableRowData);\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    let preparedData: IInvestmentInfoData = {\n      ...pageObj,\n      assets: [\n        ...(tableRef.current?.getAddedRecords() ?? []),\n        ...(tableRef.current?.getDeletedRecords() ?? []),\n        ...(tableRef.current?.getUpdatedRecords() ?? []),\n      ],\n    };\n\n    const preparedAssets: ITableRowData[] = preparedData.assets.map((asset) => {\n      return {\n        ...asset,\n        amount: currencyFormatToNumber(asset.amount?.toString())?.toString(),\n      };\n    });\n\n    preparedData = { ...preparedData, assets: preparedAssets };\n\n    return preparedData;\n  };\n\n  const onTableSearch = () => {\n    tableRef.current?.search();\n  };\n\n  const onClickCancel = () => {\n    onCancel?.();\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------------\n    Validators:\n    ---------------------------------------------------------------------------------------------------\n  */\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*-----------------------------Helper Functions-------------------------------- */\n\n  const getValue = (val: number) => {\n    return numberFormatter(val, \"en-IN\", 0);\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n  const renderAssetsType = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`smAssetType${rowData.uid}`}\n        className=\"!w-32\"\n        options={assetOptions}\n        optionLabel=\"label\"\n        optionValue=\"value\"\n        value={rowData.smAssetType ?? \"\"}\n        onChange={(e: DropdownChangeParams) => {\n          handleAssetChange(e, rowData);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `smAssetType${rowData.uid}`,\n          rowData.smAssetType,\n          \"mandatory\"\n        )}\n        disabled={sectionMode === PAGE_MODE.VIEW}\n      />\n    );\n  };\n\n  const renderAmount = (rowData: any) => {\n    return (\n      <InputBox\n        name={`amount${rowData.uid}`}\n        className=\"!w-40 text-right\"\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        value={typeof rowData.amount === \"number\" ? getValue(rowData.amount) : rowData.amount}\n        onChange={(e) => {\n          const rowDataObj = { ...rowData };\n          const amt = currencyFormatToNumber(e.target.value);\n          rowDataObj.amount = numberFormatter(amt, \"en-IN\", 0);\n          tableRef.current?.reportDataChange(rowDataObj);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `amount${rowData.uid}`,\n          rowData.amount,\n          \"mandatory|onlyInteger\"\n        )}\n        disabled={sectionMode === PAGE_MODE.VIEW}\n      />\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <IconButton\n        buttonType={BUTTON_TYPES.DELETE}\n        onClick={() => {\n          tableRef.current?.deleteRow(rowData);\n          simpleValidator.current = new SimpleReactValidator({\n            validators: { ...getStandardValidator() },\n            ...messageReplace(),\n            autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n          });\n        }}\n        disabled={sectionMode === PAGE_MODE.VIEW}\n      />\n    );\n  };\n\n  const renderContent = () => {\n    const { investmentComments } = pageObj;\n    return (\n      <>\n        <div className=\"mt-3 flex flex-col gap-5\">\n          <div className=\"self-end\">\n            <ButtonBox\n              buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n              customLabel={\"Add\"}\n              onClick={onAddAsset}\n              disabled={sectionMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div>\n            {loanUid && pageId ? (\n              <EditableTableV2\n                ref={tableRef}\n                uniqueKey=\"uid\"\n                standardDataFormatPromise={FinancialService.getAll}\n                search={`&loan.uid=${loanUid}&applicant.uid=${pageId}&isActive=${true}`}\n                mode={\"UPDATE\"}\n              >\n                <Column\n                  header={i18n.t(\"label.investmentInfo.table.colTitle.assetType*\")}\n                  className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n                  body={renderAssetsType}\n                />\n\n                <Column\n                  header={i18n.t(\"label.investmentInfo.table.colTitle.amt*\")}\n                  className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                  body={renderAmount}\n                />\n\n                <Column\n                  header={i18n.t(\"label.investmentInfo.table.colTitle.action\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 px-6\"\n                  style={{ minWidth: \"50px\", width: \"50px\" }}\n                  body={renderActions}\n                />\n              </EditableTableV2>\n            ) : (\n              <></>\n            )}\n          </div>\n\n          <div className=\"flex\">\n            <div className=\"w-122.5 h-40\">\n              <InputTextArea\n                name=\"investmentComments\"\n                className=\"!h-full\"\n                label=\"label.investmentInfo.comments\"\n                labelClassNames=\"font-bold text-xs !text-primary-gray-700\"\n                maxCount={200}\n                placeholder={\"Enter comments\"}\n                value={investmentComments}\n                onChange={handleInputChange}\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                disabled={sectionMode === PAGE_MODE.VIEW}\n              />\n            </div>\n          </div>\n        </div>\n\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className=\"\">\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <SaveComponent\n          title={\"label.investmentInfo.assets\"}\n          pageMode={sectionMode}\n          onCancel={onClickCancel}\n          onEdit={onEdit}\n          onSave={onSaveInvestmentInfo}\n          disabled={disabled}\n        >\n          {renderContent()}\n        </SaveComponent>\n      )}\n    </div>\n  );\n});\n\nexport default InvestmentInformation;\n","import { RouteProps } from \"hoc/withRouter\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\n// --------- ---------- //\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text/Text\";\nimport TextData from \"components/TextData\";\nimport CheckBox from \"components/CheckBox\";\nimport InputBox from \"components/InputBox\";\n\n// --------- ---------- //\nimport Address, { IAddressData, IAddressRef } from \"components/Address/Address\";\nimport FileUploadCustom, { IUploadedFile } from \"components/FileUploadCustom\";\nimport { IProfilePictureInfo } from \"components/ProfilePictureUpload\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\n\n// --------- ---------- //\nimport DocumentCategoryService from \"services/DocumentCategoryService\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\n\n// --------- ---------- //\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  IDocument,\n  IDocumentProofFile,\n  IDropDownOptions,\n  initialDoc,\n  isDefaultAddress,\n} from \"../../Helper\";\n\n// --------- ---------- //\nimport {\n  getFilteredDocs,\n  getStandardValidator,\n  isInvalidString,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\n\n// --------- ---------- //\nimport {\n  CHECKBOX_STYLE_TYPE,\n  DOCUMENT_CATEGORY,\n  INPUT_STYLE_TYPE,\n  OCR_STAGE_NAMES,\n  OTHER_DETAILS_PAGE,\n  PAGE_MODE,\n  SUB_STAGE,\n  VARIANTS,\n} from \"utils/Constant\";\nimport DocumentService from \"services/DocumentService\";\nimport RadioButton from \"components/RadioButton\";\nimport Label from \"components/Label\";\nimport DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentInfo,\n  IDocumentUploaderRef,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport { useParams } from \"react-router-dom\";\n\nexport interface IOtherDetailsPageObj {\n  applicantUid?: string;\n  permanentAddressUid?:string;\n  emailAddress?: string;\n  martialStatus?: string;\n  fatherOrSpouseName?: string;\n  noOfDependants?: string;\n  education?: string;\n  institute?: string;\n  birthPlace?: string;\n  religion?: string;\n  category?: string;\n  address?: string;\n  pincode?: any;\n  city?: any;\n  state?: string;\n  latitude?: string;\n  longitude?: string;\n  savedCategoryDocuments?: any[];\n  savedPermanentAddressDocuments?: any[];\n  unSavedCategoryDocuments?: IDocumentInfo;\n  unSavedPermanentAddressDocuments?: IDocumentInfo;\n  isSameAsResidentialAddress?: boolean;\n  defaultAsResidentialAddress?: boolean;\n  defaultAsPermanentAddress?: boolean;\n}\n\ninterface IProps extends RouteProps {\n  ref?: any;\n  data: IOtherDetailsPageObj;\n  addressDetails?: {\n    residentialAddress?: any;\n    permanentAddress?: any;\n  };\n  isLoading?: boolean;\n  disabled?: boolean;\n  variant?: string;\n  onSaveDetails?: () => any;\n  onError?: (message: string, clientValidation?: boolean) => void;\n  onDeleteDocs?: any;\n  page: \"APPLICANT\" | \"CO_APPLICANT\";\n}\n\ninterface IAllDropdowns {\n  maritalStatus: any[];\n  religion: any[];\n  education: any[];\n  category: any[];\n  categoryProofDocs: any[];\n}\ntype MasterType = \"MARITAL_STATUS\" | \"RELIGION\" | \"CATEGORY\" | \"EDUCATION\";\n\ninterface IDropdownItem {\n  name: keyof IAllDropdowns;\n  enum: MasterType;\n}\n\nexport interface IOtherDetailsRef {\n  save: () => any;\n  onSaveSuccess: () => any;\n  onCancel: () => any;\n}\n\nconst DROPDOWN: Record<MasterType, IDropdownItem> = {\n  MARITAL_STATUS: { name: \"maritalStatus\", enum: \"MARITAL_STATUS\" },\n  RELIGION: { name: \"religion\", enum: \"RELIGION\" },\n  EDUCATION: { name: \"education\", enum: \"EDUCATION\" },\n  CATEGORY: { name: \"category\", enum: \"CATEGORY\" },\n};\n\nexport interface IDocumentProofFiles extends IUploadedFile {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  docType?: { uid: string; code: string; name: string };\n  sectionCode?: string; //sectionCode or section\n  section?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\nconst initialDocInfo: IDocumentProofFiles = {\n  uid: \"\",\n  fileName: \"\",\n  url: \"\",\n  thumbUrl: \"\",\n  signedUrl: \"\",\n  contentType: \"\",\n  docFor: \"\",\n  docType: { uid: \"\", code: \"\", name: \"\" },\n  sectionCode: \"\",\n  sectionName: \"\",\n  isActive: true,\n};\n\ninterface IMetaOptions {\n  addressCategory: IDropDownOptions[];\n  categoryCategory: IDropDownOptions[];\n  addressType: IDropDownOptions[];\n  categoryType: IDropDownOptions[];\n}\n\nconst DOCUMENT_PAYLOAD_KEY = {\n  ADDRESS: \"permanentAddressDocuments\",\n  CATEGORY: \"categoryDocuments\",\n};\n\nconst DEFAULT_ADDRESS_FIELDS: { [key: string]: keyof IOtherDetailsPageObj } = {\n  defaultAsResidentialAddress: \"defaultAsResidentialAddress\",\n  defaultAsPermanentAddress: \"defaultAsPermanentAddress\",\n  isSameAsResidentialAddress: \"isSameAsResidentialAddress\",\n};\n\nconst OtherDetails: React.FC<IProps> = forwardRef((props, ref) => {\n  const {\n    data,\n    isLoading,\n    addressDetails,\n    disabled,\n    onSaveDetails,\n    onError,\n    onDeleteDocs,\n    page,\n    variant,\n  } = props;\n  const params: { loanUid?: string } = useParams();\n  // ----------------- states ---------------------- //\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [pageObj, setPageObj] = useState<IOtherDetailsPageObj>(data);\n  const [allDropdown, setAllDropdowns] = useState<IAllDropdowns>({\n    maritalStatus: [],\n    religion: [],\n    education: [],\n    category: [],\n    categoryProofDocs: [],\n  });\n \n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const categoryDocumentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n  const addressDocumentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    setPageObj(data);\n  }, [data]);\n\n  useEffect(() => {\n    if (page === OTHER_DETAILS_PAGE.APPLICANT) {\n      const { residentialAddress: addressData } = addressDetails ?? {};\n\n      if (addressData && pageObj?.isSameAsResidentialAddress) {\n        prepareAddressLoadObj(addressData);\n      }\n    }\n  }, [pageObj?.isSameAsResidentialAddress, addressDetails?.residentialAddress]);\n\n  useEffect(() => {\n    if (page === OTHER_DETAILS_PAGE.CO_APPLICANT) {\n      if (addressDetails?.residentialAddress && pageObj?.defaultAsResidentialAddress) {\n        prepareAddressLoadObj(addressDetails?.residentialAddress);\n      } else if (addressDetails?.permanentAddress && pageObj?.defaultAsPermanentAddress) {\n        prepareAddressLoadObj(addressDetails?.permanentAddress);\n      }\n    }\n  }, [pageObj?.defaultAsResidentialAddress, pageObj?.defaultAsPermanentAddress]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const addressRef = useRef<IAddressRef | null>(null);\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    onSaveSuccess: onSaveSuccess,\n    onCancel: onCancel,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getMaritalStatusList = async () => {\n    getDropdownList(DROPDOWN.MARITAL_STATUS.name, DROPDOWN.MARITAL_STATUS.enum);\n  };\n\n  const getEducationsList = async () => {\n    getDropdownList(DROPDOWN.EDUCATION.name, DROPDOWN.EDUCATION.enum);\n  };\n  const getReligionList = async () => {\n    getDropdownList(DROPDOWN.RELIGION.name, DROPDOWN.RELIGION.enum);\n  };\n\n  const getCategoryList = async () => {\n    getDropdownList(DROPDOWN.CATEGORY.name, DROPDOWN.CATEGORY.enum);\n  };\n\n\n  /* \n    -------------------------------------------------------------------------------------------------------\n    Validators:\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  const handleCheckboxChange = (e: any) => {\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      isSameAsResidentialAddress: e.checked,\n    }));\n  };\n\n  const handleRadioButtonChangeResidential = (e: any) => {\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [e.target.name]: e.checked,\n      [\"defaultAsPermanentAddress\"]: false,\n    }));\n  };\n\n  const handleRadioButtonChangePermanent = (e: any) => {\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [e.target.name]: e.checked,\n      [\"defaultAsResidentialAddress\"]: false,\n    }));\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCancel = () => {\n    if (simpleValidator) {\n      simpleValidator.current.visibleFields = [];\n    }\n    simpleValidator?.current?.hideMessages();\n    addressRef?.current?.resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onSave = () :IOtherDetailsPageObj|undefined => {\n    const addressData = addressRef?.current?.save();\n\n   \n    const uploadedAddressDocsInfo = addressDocumentUploaderRef?.current?.getUploadedData();\n    const uploadedCategoryDocsInfo = categoryDocumentUploaderRef?.current?.getUploadedData();\n    \n    // category doc  validation needs to be updated based on uploader category selected\n    if(page===OTHER_DETAILS_PAGE.CO_APPLICANT &&  !uploadedAddressDocsInfo?.documentUid){\n      return; \n    } \n    if (!validateForm()) {\n      return;\n    }\n    // GOTO\n    // setPageObj({\n    //   ...pageObj,\n    //   ...addressData,\n    //   savedPermanentAddressDocuments: uploadedAddressDocsInfo,\n    //   savedCategoryDocuments: uploadedCategoryDocsInfo,\n    // });\n\n    return {\n      ...pageObj,\n      ...addressData,\n      unSavedPermanentAddressDocuments: uploadedAddressDocsInfo,\n      unSavedCategoryDocuments: uploadedCategoryDocsInfo,\n    };\n  };\n\n  const onSaveSuccess = () => {\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const onAddressChange = async (currentAddress: IAddressData) => {\n    let defaultAddressRawData;\n    let updateField: keyof IOtherDetailsPageObj;\n    if (page === \"CO_APPLICANT\") {\n      if (pageObj.defaultAsResidentialAddress) {\n        defaultAddressRawData = addressDetails?.residentialAddress;\n        updateField = DEFAULT_ADDRESS_FIELDS.defaultAsResidentialAddress;\n      } else if (pageObj.defaultAsPermanentAddress) {\n        defaultAddressRawData = addressDetails?.permanentAddress;\n        updateField = DEFAULT_ADDRESS_FIELDS.defaultAsPermanentAddress;\n      }\n    } else {\n      if (pageObj.isSameAsResidentialAddress) {\n        defaultAddressRawData = addressDetails?.residentialAddress;\n        updateField = DEFAULT_ADDRESS_FIELDS.isSameAsResidentialAddress;\n      }\n    }\n    if (defaultAddressRawData === undefined) {\n      return;\n    }\n    const defaultAddress: IAddressData | undefined = prepareAddressLoadObj(\n      defaultAddressRawData,\n      true\n    );\n    // const currentAddress: IAddressData | undefined = data;\n\n    if (defaultAddress && currentAddress) {\n      const isAddressSameAsDefault = isDefaultAddress(defaultAddress, currentAddress);\n      if (!isAddressSameAsDefault) {\n        setPageObj((prevPageObj) => ({ ...prevPageObj, [updateField]: false }));\n      }\n    }\n  };\n\n  const prepareAddressLoadObj = (addressData: any, getOnlyAddressObj?: boolean) => {\n    const address = {\n      address: addressData?.address,\n      pincode: { pinCode: addressData?.pincode?.pinCode, uid: addressData?.pincode?.uid },\n      city: { name: addressData?.city?.name, uid: addressData?.city?.uid },\n      state: addressData?.city?.state?.name,\n      latitude: addressData?.latitude,\n      longitude: addressData?.longitude,\n    };\n    if (getOnlyAddressObj) {\n      return { ...address };\n    }\n    setPageObj((prevState: any) => {\n      return {\n        ...prevState,\n        ...address,\n      };\n    });\n  };\n\n  const init = async () => {\n    getMaritalStatusList();\n    getEducationsList();\n    getReligionList();\n    getCategoryList();\n\n  };\n\n  const getDropdownList = async (name: keyof IAllDropdowns, type: MasterType) => {\n    try {\n      const res = await StaticMasterDataService.getDropdownList(type);\n      setAllDropdowns((prevObj) => ({\n        ...prevObj,\n        [name]: res?.data?.results,\n      }));\n    } catch (err) {\n      console.error(err);\n      onError?.(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const renderAddressFileUploader = useMemo(() => {\n    return (\n      <React.Fragment>\n        <TextData\n          label={page=== OTHER_DETAILS_PAGE.APPLICANT?\"label.text.address.proof\":\"label.text.address.proof*\"}\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-gray-700 text-sm font-bold mb-1\"\n        />\n\n        <div className=\"gap-2\">\n          <DocumentUploader\n            ref={addressDocumentUploaderRef}\n            savedDocument={\n              data?.savedPermanentAddressDocuments?.[0] ? data?.savedPermanentAddressDocuments?.[0] : {}\n            }\n            mandatoryDocUpload={page ===OTHER_DETAILS_PAGE.CO_APPLICANT}\n            mode={pageMode === PAGE_MODE.VIEW ? DOC_UPLOADER_MODE.VIEW : DOC_UPLOADER_MODE.EDIT}\n            queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF}\n            ocrStageName={OCR_STAGE_NAMES.LOGIN}\n            ocrSubstageName={SUB_STAGE.DDE}\n            ocrPayloadData={{\n              loanUid: params.loanUid ?? \"\",\n              applicant: {\n                uid: data.applicantUid ?? \"\",\n              },\n            }}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }, [pageObj?.savedPermanentAddressDocuments, pageMode, data?.savedPermanentAddressDocuments]);\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state, latitude, longitude } = pageObj;\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      latitude,\n      longitude,\n    };\n  }, [\n    pageObj?.address,\n    pageObj?.pincode,\n    pageObj?.city,\n    pageObj?.state,\n    pageObj?.latitude,\n    pageObj?.longitude,\n  ]);\n\n  const renderAddress = () => {\n    return (\n      <Address\n        pageMode={pageMode}\n        ref={addressRef}\n        data={addressData}\n        variant={variant ?? VARIANTS.SECONDARY}\n        onAddressChange={onAddressChange}\n        isLatLong={variant === VARIANTS.SECONDARY}\n      >\n        {renderAddressFileUploader}\n      </Address>\n    );\n  };\n\n  const renderCategoryFileUploader = () => {\n    return (\n      <div className=\"\">\n        <TextData\n          label=\"Category Proof\"\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-gray-700 text-sm font-bold mb-1\"\n        />\n\n        <div className=\"\">\n          <DocumentUploader\n            ref={categoryDocumentUploaderRef}\n            // mandatoryDocUpload={page===OTHER_DETAILS_PAGE.APPLICANT && pageObj.category === }\n            savedDocument={data?.savedCategoryDocuments?.[0] ? data?.savedCategoryDocuments?.[0] : {}}\n            mode={pageMode === PAGE_MODE.VIEW ? DOC_UPLOADER_MODE.VIEW : DOC_UPLOADER_MODE.EDIT}\n            queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_CATEGORY_PROOF}\n            ocrStageName={OCR_STAGE_NAMES.LOGIN}\n            ocrSubstageName={SUB_STAGE.DDE}\n            ocrPayloadData={{\n              loanUid: params.loanUid ?? \"\",\n              applicant: {\n                uid: data.applicantUid ?? \"\",\n              },\n            }}\n          />\n          </div>\n      </div>\n    );\n  };\n  const applicantDefaultAddressSelection = () => {\n    return (\n      <div className=\"flex items-center\">\n        <div className=\"w-6 h-6 mr-1.5\">\n          <CheckBox\n            hideLabel\n            hideErrorRow\n            variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n            value={pageObj.isSameAsResidentialAddress}\n            checked={pageObj.isSameAsResidentialAddress}\n            onChange={handleCheckboxChange}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n        <div>\n          <Text\n            className=\"text-primary-labelColor text-xs  \"\n            label={\"label.dde.permanentAddressCheckboxMessage\"}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const coApplicantDefaultAddressSelection = () => {\n    return (\n      <div className=\" mt-1 ml-4 grid grid-cols-2 gap-4\">\n        <div className=\"flex col-span-1\">\n          <RadioButton\n            hideLabel\n            hideErrorRow\n            name=\"defaultAsResidentialAddress\"\n            className=\"flex items-center\"\n            onChange={handleRadioButtonChangeResidential}\n            value={pageObj.defaultAsResidentialAddress}\n            checked={pageObj.defaultAsResidentialAddress}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n          <div className=\"ml-2 flex items-top\">\n            <Label label={\"label.checkbox.residentialAddress\"} className=\"ml-2\" />\n          </div>\n        </div>\n        <div className=\"flex col-span-1\">\n          <RadioButton\n            hideLabel\n            hideErrorRow\n            name=\"defaultAsPermanentAddress\"\n            className=\"flex items-center\"\n            onChange={handleRadioButtonChangePermanent}\n            value={pageObj.defaultAsPermanentAddress}\n            checked={pageObj.defaultAsPermanentAddress}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n          <div className=\"ml-2 flex items-top\">\n            <Label label={\"label.checkbox.permanentAddress\"} className=\"ml-2\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const renderSaveComponentHeader = () => {\n    return (\n      <div className=\"flex items-center\">\n        <div className=\"mr-5\">\n          <Text\n            className=\"text-primary-gray-700 text-sm font-bold\"\n            label={\"subHeading.dde.permanentAddress\"}\n          />\n        </div>\n        {page === OTHER_DETAILS_PAGE.APPLICANT\n          ? applicantDefaultAddressSelection()\n          : coApplicantDefaultAddressSelection()}\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    const {\n      birthPlace,\n      category,\n      education,\n      emailAddress,\n      fatherOrSpouseName,\n      institute,\n      martialStatus,\n      noOfDependants,\n      religion,\n    } = pageObj;\n\n    return (\n      <React.Fragment>\n        {renderAddress()}\n\n        <div className=\"mt-7 grid grid-cols-4 gap-3\">\n          <div>\n            <InputBox\n              label=\"label.dde.emailAddress\"\n              name=\"emailAddress\"\n              placeholder=\"placeholder.dde.emailAddress\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              value={emailAddress}\n              validation={simpleValidator?.current?.message(\"emailAddress\", emailAddress, \"email\")}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <SimpleDropDown\n              label=\"label.dde.martialStatus*\"\n              name=\"martialStatus\"\n              placeholder=\"placeholder.dde.martialStatus\"\n              value={martialStatus}\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              options={allDropdown.maritalStatus}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              onChange={handleInputChange}\n              onBlur={validate}\n              // loader={isLoading}\n              validation={simpleValidator?.current?.message(\n                \"martialStatus\",\n                martialStatus,\n                \"mandatory\"\n              )}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <InputBox\n              label=\"label.dde.father/spouseName\"\n              name=\"fatherOrSpouseName\"\n              placeholder=\"placeholder.dde.father/spouseName\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              value={fatherOrSpouseName}\n              validation={simpleValidator?.current?.message(\n                \"fatherOrSpouseName\",\n                fatherOrSpouseName,\n                \"mandatory\"\n              )}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <InputBox\n              label=\"label.dde.noOfDependants\"\n              name=\"noOfDependants\"\n              placeholder=\"placeholder.dde.noOfDependants\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              value={noOfDependants}\n              validation={simpleValidator?.current?.message(\n                \"noOfDependants\",\n                noOfDependants,\n                \"onlyWholeNumber:default\"\n              )}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <SimpleDropDown\n              label=\"label.dde.education*\"\n              name=\"education\"\n              placeholder=\"placeholder.dde.education\"\n              value={education}\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              options={allDropdown?.education}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              onChange={handleInputChange}\n              onBlur={validate}\n              // loader={isLoading}\n              validation={simpleValidator?.current?.message(\"education\", education, \"mandatory\")}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <InputBox\n              label=\"label.dde.institute/University*\"\n              name=\"institute\"\n              placeholder=\"placeholder.dde.institute/University\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              value={institute}\n              validation={simpleValidator?.current?.message(\"institute\", institute, \"mandatory\")}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <InputBox\n              label=\"label.dde.birthPlace*\"\n              name=\"birthPlace\"\n              placeholder=\"placeholder.dde.birthPlace\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              onBlur={validate}\n              value={birthPlace}\n              validation={simpleValidator?.current?.message(\"birthPlace\", birthPlace, \"mandatory\")}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <SimpleDropDown\n              label=\"label.dde.religion\"\n              name=\"religion\"\n              placeholder=\"placeholder.dde.religion\"\n              value={religion}\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              options={allDropdown.religion}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              onChange={handleInputChange}\n              onBlur={validate}\n              // loader={isLoading}\n              validation={simpleValidator?.current?.message(\"religion\", religion, \"mandatory\")}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n          <div>\n            <SimpleDropDown\n              label=\"label.dde.category*\"\n              name=\"category\"\n              placeholder=\"placeholder.dde.category\"\n              value={category}\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              options={allDropdown.category}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              onChange={handleInputChange}\n              onBlur={validate}\n              // loader={isLoading}\n              validation={simpleValidator?.current?.message(\"category\", category, \"mandatory\")}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n        </div>\n\n        {renderCategoryFileUploader()}\n      </React.Fragment>\n    );\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n    render: The Main return()\n    ---------------------------------------------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      <div className=\"\">\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <SaveComponent\n            disabled={disabled}\n            renderHeaderContent={renderSaveComponentHeader}\n            pageMode={pageMode}\n            onSave={onSaveDetails}\n            onCancel={onCancel}\n            onEdit={onEdit}\n          >\n            {renderContent()}\n          </SaveComponent>\n        )}\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default OtherDetails;\n"],"names":["DEFAULT_PATH","ReferenceService","BaseApiService","start","limit","loanUid","pageUid","url","payload","subStage","ReferenceService$1","EmploymentDetails","forwardRef","props","ref","data","initialEmploymentData","isLoading","cardNumber","dropDownOptions","pageType","documentCategory","DOCUMENT_CATEGORY","addressDetails","disabled","disabledSaveMenu","isLatLong","ocrRelatedData","onSaveEmploymentDetails","onRemoveEmploymentDetails","pageObj","setPageObj","useState","pageMode","setPageMode","PAGE_MODE","renderConfig","setRenderConfig","PAGE_TYPE","documentUploaderRef","useRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","menuModel","useEffect","resetValidator","addressData","_a","prevState","_b","monthlyIncome","otherMonthlyIncome","monthlyExpenses","numberFormatter","currencyFormatToNumber","addressRef","useImperativeHandle","onSave","onSaveSuccess","onRemove","validate","validateForm","isValid","handleChange","prevPageObj","handleDateBlur","handleAmountInputChange","unformattedValue","handleAddressChange","handleAddressCheckboxChange","onEdit","uploadedDocsInfo","getFinalData","onCancel","onAddressChange","renderDocumentUploader","useMemo","isBusinessProofMandatory","jsxs","jsx","TextData","DocumentUploader","_d","_c","address","pincode","city","state","latitude","longitude","renderAddressSection","Address","VARIANTS","renderEmploymentAddressOptionForApplicant","residentialAddress","CheckBox","CHECKBOX_STYLE_TYPE","Label","renderEmploymentAddressOptionForCoApplicant","employmentAddress","RadioButton","renderContent","employmentNature","industry","occupation","organizationName","operationStartYear","businessExperience","monthlyNetIncome","annualNetIncome","managedBy","seasonality","noOfEmployees","Fragment","Text","SimpleDropDown","InputBox","INPUT_STYLE_TYPE","SystemDatePicker","_e","_f","_g","_h","_i","_j","_k","EMPLOYEMENT_NATURE","_l","_m","_n","SkeletonCustom","SaveComponent","initialReferenceData","References","pageObjData","listIndex","onDeleteFromList","onSaveReferences","onRemoveReference","referenceOptions","setReferenceOptions","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","init","getReferenceOptions","e","uid","restAddressData","StaticMasterDataService","res","validateGetAPIResponse","results","options","option","err","parseStandardAPIErrorMessage","firstName","middleName","lastName","mobileNo","relationship","InputAddon","ErrorDialog","initialInvestmentInfoData","initialTableRowData","InvestmentInformation","pageId","sectionMode","savedInvestmentInfo","onSaveInvestmentInfo","assetOptions","setAssetOptions","tableRef","React","getAssetTypeOptions","DROPDOWN_LIST_CODE","error","onTableSearch","handleInputChange","handleAssetChange","rowData","rowDataObj","onAddAsset","preparedData","preparedAssets","asset","onClickCancel","getValue","val","renderAssetsType","renderAmount","amt","renderActions","IconButton","BUTTON_TYPES","investmentComments","ButtonBox","BUTTON_TYPE","EditableTableV2","FinancialService","Column","i18n","InputTextArea","DROPDOWN","DEFAULT_ADDRESS_FIELDS","OtherDetails","onSaveDetails","onError","onDeleteDocs","page","variant","params","useParams","allDropdown","setAllDropdowns","categoryDocumentUploaderRef","addressDocumentUploaderRef","OTHER_DETAILS_PAGE","prepareAddressLoadObj","getMaritalStatusList","getDropdownList","getEducationsList","getReligionList","getCategoryList","event","name","value","handleCheckboxChange","handleRadioButtonChangeResidential","handleRadioButtonChangePermanent","uploadedAddressDocsInfo","uploadedCategoryDocsInfo","currentAddress","defaultAddressRawData","updateField","defaultAddress","isDefaultAddress","getOnlyAddressObj","type","prevObj","renderAddressFileUploader","DOC_UPLOADER_MODE","OCR_STAGE_NAMES","SUB_STAGE","renderAddress","renderCategoryFileUploader","applicantDefaultAddressSelection","coApplicantDefaultAddressSelection","renderSaveComponentHeader","birthPlace","category","education","emailAddress","fatherOrSpouseName","institute","martialStatus","noOfDependants","religion"],"mappings":"grCACA,MAAMA,GAAe,oBACrB,MAAMC,WAAyBC,EAAe,CAC5C,cAAcC,EAAQ,EAAGC,EAAQ,GAAIC,EAAiBC,EAAiB,CAC/D,MAAAC,EAAM,GAAGP,MAAgBK,KAAWC,cACnC,OAAA,KAAK,uBAAuBC,CAAG,CACxC,CAEA,eAAeC,EAAcC,EAAkB,CACvC,MAAAF,EAAM,GAAGP,MAAgBS,cACxB,OAAA,KAAK,wBAAwBF,EAAKC,CAAO,CAClD,CAEA,gBAAgBA,EAAcC,EAAkB,CACxC,MAAAF,EAAM,GAAGP,MAAgBS,cACxB,OAAA,KAAK,uBAAuBF,EAAKC,CAAO,CACjD,CACF,CAEA,MAAeE,GAAA,IAAIT,GCsFbU,GAAoBC,EAAA,WAA0C,CAACC,EAAOC,IAAQ,WAC5E,KAAA,CACJ,KAAAC,EAAOC,GACP,UAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,SAAAC,EACA,iBAAAC,EAAmBC,GAAkB,iCACrC,eAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,UAAAC,EACA,eAAAC,EACA,wBAAAC,EACA,0BAAAC,CACE,EAAAhB,EAGE,CAACiB,EAASC,CAAU,EAAIC,WAAiCjB,CAAI,EAC7D,CAACkB,EAAUC,CAAW,EAAIF,EAAAA,SAAiBG,EAAU,IAAI,EAEzD,CAACC,EAAcC,CAAe,EAAIL,WAAc,CACpD,yBAA0B,CAACZ,GAAYA,IAAakB,GAAU,YAAA,CAC/D,EAGKC,EAAsBC,SAAoC,IAAI,EAI9D,EAAGC,CAAW,EAAIT,WAAkB,EAAK,EAEzCU,EAAkBF,EAAA,OACtB,IAAIG,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAkB,CAACA,CAAI,CAAE,CAAA,CAC7E,CAAA,EAKGC,EAAY,CAChB,CACE,UAAW,GACX,MAAO,SACP,QAAS,IAAM,CACelB,GAAA,MAAAA,GAC9B,EACA,SAAUX,IAAe,CAC3B,CAAA,EAaF8B,EAAAA,UAAU,IAAM,CACVlB,GAAA,MAAAA,EAAS,kBACImB,GACjB,EACC,CAACnB,GAAA,YAAAA,EAAS,gBAAgB,CAAC,EAE9BkB,EAAAA,UAAU,IAAM,OACd,KAAM,CAAE,mBAAoBE,GAAgB3B,GAAkB,CAAA,EAE1D2B,KAAeC,EAAArB,GAAA,YAAAA,EAAS,oBAAT,MAAAqB,EAA4B,qBAC7CpB,EAAYqB,GAAmB,iBACtB,MAAA,CACL,GAAGA,EACH,QAASF,GAAAA,YAAAA,EAAa,QACtB,QAAS,CAAE,SAASA,EAAAA,GAAAA,YAAAA,EAAa,UAAbA,YAAAA,EAAsB,QAAS,KAAKA,EAAAA,GAAAA,YAAAA,EAAa,UAAbA,YAAAA,EAAsB,GAAI,EAClF,KAAM,CAAE,MAAMA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,KAAM,KAAKA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,GAAI,EACnE,OAAOA,GAAAA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,QAAnBA,YAAAA,EAA0B,KACjC,SAAUA,GAAAA,YAAAA,EAAa,SACvB,UAAWA,GAAAA,YAAAA,EAAa,SAAA,CAC1B,CACD,CACH,EACC,EAACC,GAAArB,GAAA,YAAAA,EAAS,oBAAT,YAAAqB,GAA4B,mBAAoB5B,GAAA,YAAAA,EAAgB,kBAAkB,CAAC,EAEvFyB,EAAAA,UAAU,IAAM,OACd,KAAM,CAAE,iBAAkBE,GAAgB3B,GAAkB,CAAA,EAExD2B,KAAeC,EAAArB,GAAA,YAAAA,EAAS,oBAAT,MAAAqB,EAA4B,mBAC7CpB,EAAYqB,GAAmB,iBACtB,MAAA,CACL,GAAGA,EACH,QAASF,GAAAA,YAAAA,EAAa,QACtB,QAAS,CAAE,SAASA,EAAAA,GAAAA,YAAAA,EAAa,UAAbA,YAAAA,EAAsB,QAAS,KAAKA,EAAAA,GAAAA,YAAAA,EAAa,UAAbA,YAAAA,EAAsB,GAAI,EAClF,KAAM,CAAE,MAAMA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,KAAM,KAAKA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,GAAI,EACnE,OAAOA,GAAAA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,QAAnBA,YAAAA,EAA0B,KACjC,SAAUA,GAAAA,YAAAA,EAAa,SACvB,UAAWA,GAAAA,YAAAA,EAAa,SAAA,CAC1B,CACD,CAEF,EAAA,EAACG,GAAAvB,GAAA,YAAAA,EAAS,oBAAT,YAAAuB,GAA4B,gBAAgB,CAAC,EAEjDL,EAAAA,UAAU,IAAM,CACd,GAAIlB,GAAA,MAAAA,EAAS,eAAiBA,GAAA,MAAAA,EAAS,iBAAmBA,GAAA,MAAAA,EAAS,mBAAoB,CACrF,KAAM,CAAE,cAAAwB,EAAe,mBAAAC,EAAoB,gBAAAC,CAAA,EAAoB1B,EAE/DC,EAAYqB,IACH,CACL,GAAGA,EACH,iBAAkBK,GAChBC,GAAuBJ,GAAiB,EAAE,EACxCI,GAAuBH,GAAsB,EAAE,EAC/CG,GAAuBF,GAAmB,EAAE,EAC9C,QACA,CACF,EACA,gBAAiBC,IACdC,GAAuBJ,GAAiB,EAAE,EACzCI,GAAuBH,GAAsB,EAAE,EAC/CG,GAAuBF,GAAmB,EAAE,GAC5C,GACF,QACA,CACF,CAAA,EAEH,EACH,EACC,CAAC1B,GAAA,YAAAA,EAAS,cAAeA,GAAA,YAAAA,EAAS,gBAAiBA,GAAA,YAAAA,EAAS,kBAAkB,CAAC,EAOlF,MAAM6B,EAAkBnB,EAAAA,SAExBoB,EAAA,oBAAoB9C,EAAK,KAAO,CAC9B,KAAM+C,EACN,cAAAC,GACA,OAAQC,EACR,eAAAd,CACA,EAAA,EAcI,MAAAe,EAAY,GAAW,UAC3BX,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,gBAAeF,EAAA,iBAAG,SAAH,YAAAA,EAAW,KAAI,EAGpDc,EAAe,IAAM,SACzB,IAAIC,EAAU,GAGd,OADUA,GAAAf,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,EAA0B,WAChCe,IAGUzB,EAACK,GAAS,CAACA,CAAI,GAC3BO,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,eACdZ,EAACK,GAAS,CAACA,CAAI,EACpB,GACT,EASIqB,EAAgB,GAAW,CAE3B,GAAA,EAAE,OAAO,OAAS,WAAY,CAChCpC,EAAYqC,IACH,CACL,GAAGA,EACH,CAAC,EAAE,OAAO,IAAI,EAAG,CACf,GAAGA,GAAA,YAAAA,EAAa,SAChB,IAAK,EAAE,OAAO,KAChB,CAAA,EAEH,EAED,OAIFrC,EAAYqC,IACH,CACL,GAAGA,EACH,CAAC,EAAE,OAAO,IAAI,EAAG,EAAE,OAAO,KAAA,EAE7B,CAAA,EAGGC,EAAkB,GAAW,CACjCL,EAAS,CAAC,EACVjC,EAAYqB,IACH,CACL,GAAGA,EACH,mBAAoBtB,EAAQ,kBAAA,EAG/B,CAAA,EAGGwC,EAA2B,GAAW,CAC1C,MAAMC,EAA2Bb,GAAuB,EAAE,OAAO,KAAK,EACtE3B,EAAYqC,IACH,CACL,GAAGA,EACH,CAAC,EAAE,OAAO,IAAI,EAAGX,GAAgBc,EAAkB,QAAS,CAAC,CAAA,EAEhE,CAAA,EAGGC,GAAuB,GAAY,CACvCzC,EAAYqC,IACH,CACL,GAAGA,EACH,kBAAmB,CACjB,GAAGA,GAAA,YAAAA,EAAa,kBAChB,CAAC,EAAE,OAAO,IAAI,EAAG,EAAE,QACnB,mBACE,EAAE,OAAO,OAAS,qBACd,EAAE,QACFA,EAAY,kBAAkB,iBACpC,iBACE,EAAE,OAAO,OAAS,mBACd,EAAE,QACFA,EAAY,kBAAkB,kBACtC,CAAA,EAEH,CAAA,EAGGK,GAA+B,GAAW,CAC9C1C,EAAYqC,IACH,CACL,GAAGA,EACH,kBAAmB,CACjB,GAAGA,GAAA,YAAAA,EAAa,kBAChB,mBAAoB,EAAE,OACxB,CAAA,EAEH,CAAA,EASGN,GAAgB,IAAM5B,EAAYC,EAAU,IAAI,EAEhDuC,GAAS,IAAMxC,EAAYC,EAAU,IAAI,EAEzC4B,EAAW,KAKR,CAAE,GAJuC,CAC9C,GAAGjC,CAAA,EAGwB,SAAU,EAAM,GAGzC+B,EAAS,IAAM,SACbX,MAAAA,GAAcC,EAAAQ,GAAA,YAAAA,EAAY,UAAZ,YAAAR,EAAqB,OAEnCwB,GAAmBtB,EAAAd,GAAA,YAAAA,EAAqB,UAArB,YAAAc,EAA8B,kBAEvD,GAAI,GAACY,EAAa,GAAK,CAACf,GAAe,CAACyB,GAI7B,OAAA5C,EAAA,CAAG,GAAGD,EAAQ,GAAGoB,EAAY,IAAIpB,GAAA,YAAAA,EAAS,IAAK,EACnD8C,EAAa,CAAA,EAGhBC,EAAW,IAAM,OACN5B,KACfE,EAAAZ,GAAA,YAAAA,EAAqB,UAArB,MAAAY,EAA8B,iBAC9BjB,EAAYC,EAAU,IAAI,CAAA,EAStByC,EAAe,IAAM,SACnB1B,MAAAA,GAAcC,EAAAQ,GAAA,YAAAA,EAAY,UAAZ,YAAAR,EAAqB,OAEnCwB,GAAmBtB,EAAAd,GAAA,YAAAA,EAAqB,UAArB,YAAAc,EAA8B,kBAEhD,MAAA,CAAE,GAAGvB,EAAS,GAAGoB,EAAa,IAAKpB,GAAA,YAAAA,EAAS,IAAK,mBAAoB6C,EAAiB,EAGzF1B,EAAiB,IAAM,SACXP,EAAA,QAAU,IAAIC,GAAqB,CACjD,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,GACDK,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,gBAC1BE,EAAAM,GAAA,YAAAA,EAAY,UAAZ,MAAAN,EAAqB,gBAAe,EAG/ByB,EAAmB,IAAM,CAC9B/C,EAAYqC,IAAe,CACzB,GAAGA,EACH,kBAAkB,CAChB,GAAGA,EAAY,kBACf,0BAA0B,GAC1B,iBAAiB,GACjB,mBAAmB,EACrB,CACA,EAAA,CAAA,EASEW,EAAyBC,EAAAA,QAAQ,IAAM,aACrC,KAAA,CAAE,yBAAAC,CAA6B,EAAA7C,EAEnC,OAAA8C,EAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAC,EAAA,IAACC,GAAA,CACC,MACEH,EACI,2BACA,yCAEN,MAAM,2CACN,WAAW,oDAAA,CACb,QAEC,MACC,CAAA,SAAAE,EAAA,IAACE,GAAA,CACC,mBAAoBJ,EACpB,IAAK1C,EACL,eAAeY,EAAApC,EAAK,gBAAL,MAAAoC,EAAqB,GAAKpC,EAAK,cAAc,CAAC,EAAI,CAAC,EAClE,KAAMkB,EACN,qBAAsBZ,EACtB,aAAcM,GAAA,YAAAA,EAAgB,aAC9B,gBAAiBA,GAAA,YAAAA,EAAgB,gBACjC,eAAgB,CACd,UAAS0B,EAAA1B,GAAA,YAAAA,EAAgB,iBAAhB,YAAA0B,EAAgC,UAAW,GACpD,UAAW,CACT,MAAKiC,GAAAC,EAAA5D,GAAA,YAAAA,EAAgB,iBAAhB,YAAA4D,EAAgC,YAAhC,YAAAD,EAA2C,MAAO,EACzD,CACF,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAED,EAAA,CAACxD,GAAA,YAAAA,EAAS,cAAeG,CAAQ,CAAC,EAE/BiB,EAAc8B,EAAAA,QAAQ,IAAM,CAChC,KAAM,CAAE,QAAAQ,EAAS,QAAAC,EAAS,KAAAC,EAAM,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAc,EAAA/D,EACxD,MAAA,CACL,QAAA0D,EACA,QAAAC,EACA,KAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CAAA,CACF,EACC,CACD/D,GAAA,YAAAA,EAAS,QACTA,GAAA,YAAAA,EAAS,QACTA,GAAA,YAAAA,EAAS,KACTA,GAAA,YAAAA,EAAS,MACTA,GAAA,YAAAA,EAAS,SACTA,GAAA,YAAAA,EAAS,SAAA,CACV,EAEKgE,GAAuB,IAGzBX,EAAA,IAACY,GAAA,CACC,SAAA9D,EACA,IAAK0B,EACL,KAAMT,EACN,QAAS8C,GAAS,UAClB,UAAAtE,EACA,gBAAAoD,EAEC,SAAAC,CAAA,CAAA,EAKDkB,GAA4C,IAAM,CACtD,KAAM,CAAE,mBAAAC,CAAuB,GAAApE,GAAA,YAAAA,EAAS,oBAAqB,CAAA,EAC7D,aACG,MAAI,CAAA,UAAU,8BACb,SAACoD,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAA,IAACgB,GAAA,CACC,KAAK,2BACL,UAAS,GACT,QAASC,GAAoB,QAC7B,SAAU3B,GACV,MAAOyB,EACP,QAASA,EACT,aAAY,GACZ,SAAUjE,IAAaE,EAAU,IAAA,CACnC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,yBACb,SAAAA,EAAA,IAACkB,IAAM,MAAO,oCAAqC,UAAU,MAAA,CAAO,CACtE,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,EAIEC,GAA+CC,GAEjDrB,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAA,IAACqB,GAAA,CACC,KAAK,qBACL,UAAS,GACT,UAAU,oBACV,SAAUhC,GACV,MAAO+B,GAAA,YAAAA,EAAmB,mBAC1B,QAASA,GAAA,YAAAA,EAAmB,mBAC5B,SAAUtE,IAAaE,EAAU,IAAA,CACnC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACb,SAAAA,EAAA,IAACkB,IAAM,MAAO,oCAAqC,UAAU,MAAA,CAAO,CACtE,CAAA,CAAA,EACF,EACAnB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAA,IAACqB,GAAA,CACC,KAAK,mBACL,UAAS,GACT,UAAU,oBACV,SAAUhC,GACV,MAAO+B,GAAA,YAAAA,EAAmB,iBAC1B,QAASA,GAAA,YAAAA,EAAmB,iBAC5B,SAAUtE,IAAaE,EAAU,IAAA,CACnC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACb,SAAAA,EAAA,IAACkB,IAAM,MAAO,kCAAmC,UAAU,MAAA,CAAO,CACpE,CAAA,CAAA,EACF,CACF,CAAA,CAAA,EAIEI,GAAgB,IAAM,+CACpB,KAAA,CACJ,iBAAAC,EACA,SAAAC,EACA,WAAAC,EACA,iBAAAC,EACA,mBAAAC,EACA,mBAAAC,EACA,cAAAzD,EACA,gBAAAE,EACA,mBAAAD,EACA,iBAAAyD,GACA,gBAAAC,GACA,UAAAC,GACA,YAAAC,GACA,cAAAC,GACA,kBAAAb,EACE,EAAAzE,EAEJ,OAEIoD,EAAA,KAAAmC,WAAA,CAAA,SAAA,CAAAlC,EAAA,IAACmC,GAAA,CACC,MAAO,iCACP,UAAU,8CAAA,CACZ,EAEApC,EAAAA,KAAC,MAAI,CAAA,UAAU,kFACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAACoC,EAAA,CACC,MAAM,+CACN,YAAY,SACZ,KAAK,mBACL,MAAOb,EACP,SAAUvC,EACV,YAAYhB,GAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,GAA0B,QACpC,mBACAuD,EACA,aAEF,OAAQ1C,EACR,SAAU/B,IAAaE,EAAU,KACjC,QAAShB,EAAgB,yBACzB,YAAY,OACZ,YAAY,MAAA,CAAA,EAEhB,EACAgE,EAAAA,IAAC,MAAI,CAAA,UAAU,YAAa,CAAA,EAC5BA,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACoC,EAAA,CACC,MAAM,uCACN,YAAY,kBACZ,KAAK,WACL,MAAOZ,GAAA,YAAAA,EAAU,IACjB,SAAUxC,EACV,YAAYd,GAAAX,GAAA,YAAAA,EAAiB,UAAjB,YAAAW,GAA0B,QAAQ,WAAYsD,GAAA,YAAAA,EAAU,IAAK,aACzE,OAAQ3C,EACR,SAAU/B,IAAaE,EAAU,KACjC,QAAShB,EAAgB,gBACzB,YAAY,OACZ,YAAY,KAAA,CAAA,EAEhB,EACAgE,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACoC,EAAA,CACC,MAAM,yCACN,YAAY,oBACZ,KAAK,aACL,MAAOX,EACP,SAAUzC,EACV,YAAYoB,GAAA7C,GAAA,YAAAA,EAAiB,UAAjB,YAAA6C,GAA0B,QAAQ,aAAcqB,EAAY,aACxE,OAAQ5C,EACR,SAAU/B,IAAaE,EAAU,KACjC,QAAShB,EAAgB,kBACzB,YAAY,OACZ,YAAY,MAAA,CAAA,EAEhB,EACAgE,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,iDACN,YAAY,6BACZ,KAAK,mBACL,MAAOZ,EACP,SAAU1C,EACV,YAAYmB,GAAA5C,GAAA,YAAAA,EAAiB,UAAjB,YAAA4C,GAA0B,QACpC,mBACAuB,EACA,aAEF,OAAQ7C,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACuC,GAAA,CACC,KAAK,OACL,WAAW,KACX,gBAAe,GACf,SAAUzF,IAAaE,EAAU,KACjC,QAASsF,EAAiB,UAC1B,MAAM,iDACN,YAAY,cACZ,KAAK,qBACL,MAAOX,GAAsB,GAC7B,SAAU3C,EACV,OAAQE,EACR,YAAYsD,GAAAjF,GAAA,YAAAA,EAAiB,UAAjB,YAAAiF,GAA0B,QACpC,qBACAb,EACA,YACF,CAAA,EAEJ,EACA3B,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,sDACN,YAAY,2BACZ,KAAK,qBACL,UAAU,aACV,MAAOV,EACP,SAAU5C,EACV,YAAYyD,GAAAlF,GAAA,YAAAA,EAAiB,UAAjB,YAAAkF,GAA0B,QACpC,qBACAb,EACA,yBAEF,OAAQ/C,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,0CACN,YAAY,qBACZ,MAAOnE,EACP,KAAK,gBACL,UAAU,aACV,SAAUgB,EACV,YAAYuD,GAAAnF,GAAA,YAAAA,EAAiB,UAAjB,YAAAmF,GAA0B,QACpC,gBACAvE,EACA,yBAEF,OAAQU,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,4CACN,YAAY,uBACZ,MAAOjE,EACP,KAAK,kBACL,UAAU,aACV,SAAUc,EACV,YAAYwD,GAAApF,GAAA,YAAAA,EAAiB,UAAjB,YAAAoF,GAA0B,QACpC,kBACAtE,EACA,yBAEF,OAAQQ,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,0CACN,YAAY,qBACZ,KAAK,qBACL,UAAU,aACV,MAAOlE,EACP,SAAUe,EACV,YAAYyD,GAAArF,GAAA,YAAAA,EAAiB,UAAjB,YAAAqF,GAA0B,QACpC,qBACAxE,EACA,yBAEF,OAAQS,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,wCACN,YAAY,2BACZ,MAAOT,GACP,KAAK,mBACL,UAAU,aACV,YAAYgB,GAAAtF,GAAA,YAAAA,EAAiB,UAAjB,YAAAsF,GAA0B,QACpC,mBACAhB,GACA,yBAEF,OAAQhD,EACR,SAAQ,EAAA,CAAA,EAEZ,EACAmB,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,8CACN,YAAY,0BACZ,KAAK,kBACL,UAAU,aACV,MAAOR,GACP,YAAYgB,GAAAvF,GAAA,YAAAA,EAAiB,UAAjB,YAAAuF,GAA0B,QACpC,kBACAhB,GACA,yBAEF,OAAQjD,EACR,SAAQ,EAAA,CAAA,EAEZ,EACC0C,IAAqBwB,GAAmB,cACtC/C,EAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAACoC,EAAA,CACC,MAAM,gDACN,YAAY,6BACZ,KAAK,YACL,MAAOL,GACP,SAAU/C,EACV,YAAYgE,GAAAzF,GAAA,YAAAA,EAAiB,UAAjB,YAAAyF,GAA0B,QAAQ,YAAajB,GAAW,aACtE,OAAQlD,EACR,SACE/B,IAAaE,EAAU,MAAQuE,IAAqBwB,GAAmB,SAEzE,QAAS/G,EAAgB,2BACzB,YAAY,OACZ,YAAY,MAAA,GAEhB,EACE,KAEHuF,IAAqBwB,GAAmB,cACtC/C,EAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAACoC,EAAA,CACC,MAAM,kDACN,YAAY,qBACZ,KAAK,cACL,MAAOJ,GACP,SAAUhD,EACV,YAAYiE,GAAA1F,GAAA,YAAAA,EAAiB,UAAjB,YAAA0F,GAA0B,QACpC,cACAjB,GACA,aAEF,OAAQnD,EACR,SAAU/B,IAAaE,EAAU,KACjC,QAAShB,EAAgB,mBACzB,YAAY,OACZ,YAAY,MAAA,GAEhB,EACE,KACJgE,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACoC,EAAA,CACC,MAAM,4CACN,YAAY,yBACZ,MAAOH,GACP,KAAK,gBACL,SAAUjD,EACV,YAAYkE,GAAA3F,GAAA,YAAAA,EAAiB,UAAjB,YAAA2F,GAA0B,QACpC,gBACAjB,GACA,aAEF,OAAQpD,EACR,SAAU/B,IAAaE,EAAU,KACjC,QAAShB,EAAgB,mBACzB,YAAY,OACZ,YAAY,MAAA,CAAA,EAEhB,CAAA,EACF,EACA+D,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAC,EAAA,IAACmC,GAAA,CACC,UAAU,+CACV,MAAO,+CAAA,CACT,EACClG,IAAakB,GAAU,UACpB2D,GAA0C,EAC1CK,GAA4CC,EAAiB,CAAA,EACnE,EAECT,GAAqB,CACxB,CAAA,CAAA,CAAA,EAUJ,OACGX,EAAA,IAAA,MAAA,CAAI,UAAU,GACZ,WACEA,EAAAA,IAAAmD,GAAA,CAAe,OAAO,YAAY,MAAM,OAAO,aAAa,MAAM,UAAU,MAAO,CAAA,EAEpFnD,EAAA,IAACoD,GAAA,CACC,SAAA/G,EACA,aAAcC,EACd,MAAO,8BACP,UAAW,CAAE,MAAOP,CAAW,EAC/B,SAAAe,EACA,SAAA4C,EACA,OAAAH,GACA,OAAQ9C,EACR,WAAYmB,EAEX,SAAc0D,GAAA,CAAA,CAGrB,CAAA,CAAA,CAEJ,CAAC,EAED9F,GAAkB,aAAe,CAC/B,SAAU,EACZ,EC9zBO,MAAM6H,GAAuB,CAClC,OAAQ,aACR,IAAK,GACL,UAAW,GACX,sBAAuB,GACvB,UAAW,GACX,WAAY,GACZ,SAAU,GACV,SAAU,GACV,aAAc,GACd,QAAS,GACT,QAAS,CAAE,IAAK,GAAI,QAAS,EAAG,EAChC,KAAM,CAAE,IAAK,GAAI,KAAM,EAAG,EAC1B,MAAO,GACP,SAAU,GACV,UAAW,GACX,SAAU,EACZ,EAEMC,GAAa7H,EAAA,WAAmC,CAACC,EAAOC,IAAQ,CAC9D,KAAA,CACJ,YAAA4H,EACA,UAAAzH,EACA,UAAA0H,EACA,iBAAAC,EACA,iBAAAC,EACA,kBAAAC,EACA,SAAAtH,CACE,EAAAX,EAEE,CAACoB,EAAUC,CAAW,EAAIF,EAAAA,SAASG,EAAU,IAAI,EACjD,CAACL,EAASC,CAAU,EAAIC,WAA0BwG,EAAoB,EACtE,CAACO,EAAkBC,CAAmB,EAAIhH,EAAA,SAA6B,CAAE,CAAA,EACzE,CAACiH,EAAcC,CAAe,EAAIlH,WAAS,EAAE,EAC7C,CAACmH,EAAoBC,CAAqB,EAAIpH,WAAS,EAAK,EAC5D,CAAG,CAAAS,CAAW,EAAIT,WAA8B,MAAS,EAEzD2B,EAAkBnB,EAAAA,SAElBO,EAAY,CAChB,CACE,UAAW,GACX,MAAO,SACP,QAAS,IAAM,CACT6F,GAAoBD,IAAc,QAAaG,IAC5ChH,EAAQ,IAGOgH,IAFlBF,EAAiBD,CAAS,EAKhC,CAEF,CAAA,EAKIjG,EAAkBF,EAAA,OACtB,IAAIG,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EASHE,EAAAA,UAAU,IAAM,CACTqG,GACP,EAAG,CAAE,CAAA,EAELrG,EAAAA,UAAU,IAAM,CACV0F,GACS3G,EAAA,CACT,GAAG2G,CAAA,CACJ,CACH,EACC,CAACA,CAAW,CAAC,EAEhB1F,EAAAA,UAAU,IAAM,CACViG,GACFG,EAAsB,EAAI,CAC5B,EACC,CAACH,CAAY,CAAC,EAIjB,MAAMI,EAAO,SAAY,CACHC,IAAA,EAStB1F,EAAA,oBAAoB9C,EAAK,KAAO,CAC9B,KAAM+C,EACN,OAAQE,CACR,EAAA,EAQI,MAAAC,EAAYuF,GAAW,UAC3BlG,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,gBAAeF,EAAAoG,GAAA,YAAAA,EAAG,SAAH,YAAApG,EAAW,KAAI,EAGpDc,EAAe,IAAM,SACzB,IAAIC,EAAU,GAGd,OADUA,GAAAf,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,EAA0B,WAChCe,IAGUzB,EAACK,GAAS,CAACA,CAAI,GAC3BO,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,eACdZ,EAACK,GAAS,CAACA,CAAI,EACpB,GACT,EASIqB,EAAgBoF,GAAiD,CACrExH,EAAYqC,IACH,CACL,GAAGA,EACH,CAACmF,EAAE,OAAO,IAAI,EAAGA,EAAE,OAAO,KAAA,EAE7B,CAAA,EASG1F,EAAS,IAAM,OACb,MAAA9C,GAAOoC,EAAAQ,GAAA,YAAAA,EAAY,UAAZ,YAAAR,EAAqB,OAC5B,CAAE,IAAAqG,EAAK,GAAGC,CAAA,EAAoB1I,EACpC,GAAI,GAACkD,KAAkB,CAAClD,GAIxB,OAAAmB,EAAYC,EAAU,IAAI,EACnB,CAAE,GAAGL,EAAS,GAAG2H,EAAgB,EAGpC/E,EAAS,IAAMxC,EAAYC,EAAU,IAAI,EAEzC0C,EAAW,IAAM,SACjBnC,IACcA,EAAA,QAAQ,cAAgB,KAE1CS,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,gBAC1BE,EAAAM,GAAA,YAAAA,EAAY,UAAZ,MAAAN,EAAqB,iBAErBnB,EAAYC,EAAU,IAAI,CAAA,EAGtB4B,EAAW,KACR,CAAE,GAAGjC,EAAS,SAAU,EAAM,GASjCwH,GAAsB,SAAY,CACtC,MAAMI,GAAwB,OAC5B,EACA,IACA,8CAAA,EAEC,KAAMC,GAAuB,OAC5B,GAAIC,GAAuBD,CAAG,KAAOxG,EAAAwG,EAAI,OAAJ,MAAAxG,EAAU,cAAc,CACrD,KAAA,CAAE,QAAA0G,CAAQ,EAAIF,EAAI,KAElBG,EAAUD,EAAQ,IAAKE,IACpB,CACL,IAAKA,EAAO,IACZ,MAAOA,EAAO,KACd,MAAOA,EAAO,IAAA,EAEjB,EACmBf,EAAA,CAAC,GAAGc,CAAO,CAAC,OAEhCd,EAAoB,CAAE,CAAA,CACxB,CACD,EACA,MAAOgB,GAAQ,CACdhB,EAAoB,CAAE,CAAA,EACNE,EAAAe,GAA6BD,CAAG,CAAC,CAAA,CAClD,CAAA,EASC9G,GAAc8B,EAAAA,QAAQ,IAAM,CAChC,KAAM,CAAE,QAAAQ,EAAS,QAAAC,EAAS,KAAAC,EAAM,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAc,EAAA/D,EACxD,MAAA,CACL,QAAA0D,EACA,QAAAC,EACA,KAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CAAA,CACF,EACC,CACD/D,GAAA,YAAAA,EAAS,QACTA,GAAA,YAAAA,EAAS,QACTA,GAAA,YAAAA,EAAS,KACTA,GAAA,YAAAA,EAAS,MACTA,GAAA,YAAAA,EAAS,SACTA,GAAA,YAAAA,EAAS,SAAA,CACV,EAEKgE,GAAuB,IAEzBX,EAAA,IAACY,GAAA,CACC,SAAA9D,EACA,IAAK0B,EACL,KAAMT,GACN,mBAAoB,yBACpB,QAAS8C,GAAS,SAAA,CAAA,EAKlBS,GAAgB,IAAM,cAC1B,KAAM,CAAE,UAAAyD,EAAW,WAAAC,EAAY,SAAAC,EAAU,SAAAC,EAAU,aAAAC,CAAiB,EAAAxI,EACpE,OAEIoD,EAAA,KAAAmC,WAAA,CAAA,SAAA,CAAClC,EAAAA,IAAA,MAAA,CAAI,UAAU,YACb,SAAAA,EAAA,IAACmC,GAAA,CACC,UAAU,+CACV,MAAO,mCAAA,CAAA,EAEX,EAEApC,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,6BACN,YAAY,mBACZ,KAAK,YACL,MAAOyC,EACP,SAAU/F,EACV,YAAYhB,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,EAA0B,QAAQ,YAAa+G,EAAW,aACtE,OAAQlG,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,8BACN,YAAY,oBACZ,KAAK,aACL,MAAO0C,EACP,SAAUhG,EACV,SAAUlC,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACqC,EAAA,CACC,QAASC,EAAiB,UAC1B,MAAM,4BACN,YAAY,kBACZ,KAAK,WACL,MAAO2C,EACP,SAAUjG,EACV,YAAYd,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,YAAAW,EAA0B,QAAQ,WAAY+G,EAAU,aACpE,OAAQpG,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACoF,GAAA,CACC,MAAO,gCACP,YAAa,sBACb,KAAK,WACL,MAAOF,EACP,QAAS5C,EAAiB,UAC1B,SAAUtD,EACV,YAAYoB,EAAA7C,GAAA,YAAAA,EAAiB,UAAjB,YAAA6C,EAA0B,QACpC,WACA8E,EACA,iDAEF,OAAQrG,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAACoC,EAAA,CACC,KAAK,eACL,MAAM,2CACN,YAAY,oBACZ,MAAO+C,EACP,SAAUnG,EACV,YAAYmB,GAAA5C,GAAA,YAAAA,EAAiB,UAAjB,YAAA4C,GAA0B,QACpC,eACAgF,EACA,aAEF,QAASvB,EACT,OAAQ/E,EACR,SAAU/B,IAAaE,EAAU,IAAA,CAAA,EAErC,CAAA,EACF,EAEAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACmC,GAAA,CACC,UAAU,+CACV,MAAO,8CAAA,CAAA,EAEX,EAECxB,GAAqB,EAEtBX,EAAA,IAACqF,GAAA,CACC,OAAQ,IAAM,CACZpB,EAAsB,EAAK,EAC3BF,EAAgB,EAAE,CACpB,EACA,QAASC,EACT,aAAAF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,EAIJ,OACG9D,EAAA,IAAA,MAAA,CAAI,UAAU,GACZ,WACEA,EAAAA,IAAAmD,GAAA,CAAe,OAAO,YAAY,MAAM,OAAO,aAAa,MAAM,UAAU,MAAO,CAAA,EAEpFnD,EAAA,IAACoD,GAAA,CACC,MAAO,kBACP,UAAW,CAAE,UAAWI,IAAc,OAAYA,EAAY,EAAI,EAAG,EACrE,SAAA1G,EACA,SAAA4C,EACA,OAAAH,EACA,OAAQmE,EACR,WAAY9F,EACZ,SAAAvB,EAEC,SAAciF,GAAA,CAAA,CAGrB,CAAA,CAAA,CAEJ,CAAC,EC5WYgE,GAAiD,CAC5D,OAAQ,CAAC,EACT,mBAAoB,EACtB,EAEMC,GAAqC,CACzC,IAAK,GACL,YAAa,GACb,OAAQ,GACR,SAAU,EACZ,EAEMC,GAAwB/J,EAAA,WAAuC,CAACC,EAAOC,IAAQ,CAC7E,KAAA,CACJ,QAAAT,EACA,OAAAuK,EACA,UAAA3J,EACA,YAAA4J,EACA,oBAAAC,EACA,qBAAAC,EACA,SAAAlG,EACA,OAAAH,EACA,SAAAlD,CACE,EAAAX,EAEE,CAACiB,EAASC,CAAU,EAAIC,WAA8ByI,EAAyB,EAC/E,CAACO,EAAcC,CAAe,EAAIjJ,EAAA,SAA8B,CAAE,CAAA,EAGlE,CAACiH,EAAcC,CAAe,EAAIlH,WAAS,EAAE,EAC7C,CAACmH,EAAoBC,CAAqB,EAAIpH,WAAS,EAAK,EAE5DkJ,EAAWC,GAAM,OAA6B,IAAI,EAGlD,EAAG1I,CAAW,EAAIT,WAAkB,EAAK,EACzCU,EAAkBF,EAAA,OACtB,IAAIG,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EASHE,EAAAA,UAAU,IAAM,CACTqG,GACP,EAAG,CAAE,CAAA,EAELrG,EAAAA,UAAU,IAAM,CACV8H,GACF/I,EAAYe,IAA+B,CACzC,GAAGA,EACH,mBAAoBgI,EAAoB,kBACxC,EAAA,CACJ,EACC,CAACA,CAAmB,CAAC,EAExB9H,EAAAA,UAAU,IAAM,CACViG,GACFG,EAAsB,EAAI,CAC5B,EACC,CAACH,CAAY,CAAC,EAIjB,MAAMI,EAAO,SAAY,CACH+B,GAAA,EAGhBA,EAAsB,SAAY,SAClC,GAAA,CACI,MAAAzB,EAAM,MAAMD,GAAwB,gBACxC2B,GAAmB,WACnB,GACA,EAAA,EAGF,GAAIzB,GAAuBD,CAAG,KAAOxG,EAAAwG,EAAI,OAAJ,MAAAxG,EAAU,cAAc,CACrD,KAAA,CAAE,KAAApC,CAAS,EAAA4I,EACXqB,GAAe3H,EAAAtC,EAAK,UAAL,YAAAsC,EAAc,IAAK0G,IAC/B,CACL,IAAKA,EAAO,KAAO,GACnB,MAAOA,EAAO,MAAQ,GACtB,MAAOA,EAAO,MAAQ,EAAA,IAIVkB,EAAA,CAAC,GAAGD,CAAY,CAAC,OAEjCC,EAAgB,CAAE,CAAA,QAEbK,GACPL,EAAgB,CAAE,CAAA,EACF/B,EAAAe,GAA6BqB,CAAK,CAAC,CACrD,CAAA,EASF1H,EAAA,oBAAoB9C,EAAK,KAAO,CAC9B,MAAAD,EACA,KAAMgD,EACN,iBAAkB0H,CAClB,EAAA,EAQI,MAAAC,EAAqBjC,GAA0B,CACnDxH,EAAYe,IACH,CACL,GAAGA,EACH,CAACyG,EAAE,OAAO,IAAI,EAAGA,EAAE,OAAO,KAAA,EAE7B,CAAA,EAGGkC,EAAoB,CAAClC,EAAyBmC,IAAiB,OAC7D,MAAAC,EAAa,CAAE,GAAGD,GACbC,EAAA,YAAcpC,EAAE,OAAO,OACzBpG,EAAA+H,EAAA,UAAA,MAAA/H,EAAS,iBAAiBwI,EAAU,EAQzCC,EAAa,IAAM,QACdzI,EAAA+H,EAAA,UAAA,MAAA/H,EAAS,OAAOuH,GAAmB,EAGxC7G,EAAS,IAAM,WACf,GAAA,CAACI,KACH,OAGF,IAAI4H,EAAoC,CACtC,GAAG/J,EACH,OAAQ,CACN,KAAIqB,EAAA+H,EAAS,UAAT,YAAA/H,EAAkB,oBAAqB,CAAC,EAC5C,KAAIE,EAAA6H,EAAS,UAAT,YAAA7H,EAAkB,sBAAuB,CAAC,EAC9C,KAAIkC,EAAA2F,EAAS,UAAT,YAAA3F,EAAkB,sBAAuB,CAAC,CAChD,CAAA,EAGF,MAAMuG,EAAkCD,EAAa,OAAO,IAAKE,GAAU,WAClE,MAAA,CACL,GAAGA,EACH,QAAQ1I,GAAAK,IAAuBP,GAAA4I,EAAM,SAAN,YAAA5I,GAAc,UAAU,IAA/C,YAAAE,GAAkD,UAAS,CACrE,CACD,EAED,OAAAwI,EAAe,CAAE,GAAGA,EAAc,OAAQC,CAAe,EAElDD,CAAA,EAGHN,EAAgB,IAAM,QAC1BpI,EAAA+H,EAAS,UAAT,MAAA/H,EAAkB,QAAO,EAGrB6I,EAAgB,IAAM,CACfnH,GAAA,MAAAA,GAAA,EAQPb,EAAYuF,GAAW,UAC3BlG,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,gBAAeF,EAAAoG,GAAA,YAAAA,EAAG,SAAH,YAAApG,EAAW,KAAI,EAGpDc,GAAe,IAAM,SACzB,IAAIC,EAAU,GAGd,OADUA,GAAAf,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,EAA0B,WAChCe,IAGUzB,EAACK,GAAS,CAACA,CAAI,GAC3BO,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,eACdZ,EAACK,GAAS,CAACA,CAAI,EACpB,GACT,EAKImJ,GAAYC,GACTzI,GAAgByI,EAAK,QAAS,CAAC,EAQlCC,GAAoBT,GAAiB,OAEvC,OAAAvG,EAAA,IAACoC,EAAA,CACC,KAAM,cAAcmE,EAAQ,MAC5B,UAAU,QACV,QAASV,EACT,YAAY,QACZ,YAAY,QACZ,MAAOU,EAAQ,aAAe,GAC9B,SAAWnC,GAA4B,CACrCkC,EAAkBlC,EAAGmC,CAAO,CAC9B,EACA,OAAQ1H,EACR,YAAYb,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,EAA0B,QACpC,cAAcuI,EAAQ,MACtBA,EAAQ,YACR,aAEF,SAAUb,IAAgB1I,EAAU,IAAA,CAAA,CACtC,EAIEiK,GAAgBV,GAAiB,OAEnC,OAAAvG,EAAA,IAACqC,EAAA,CACC,KAAM,SAASkE,EAAQ,MACvB,UAAU,mBACV,QAASjE,EAAiB,UAC1B,MAAO,OAAOiE,EAAQ,QAAW,SAAWO,GAASP,EAAQ,MAAM,EAAIA,EAAQ,OAC/E,SAAWnC,GAAM,OACT,MAAAoC,EAAa,CAAE,GAAGD,GAClBW,EAAM3I,GAAuB6F,EAAE,OAAO,KAAK,EACjDoC,EAAW,OAASlI,GAAgB4I,EAAK,QAAS,CAAC,GAC1ClJ,EAAA+H,EAAA,UAAA,MAAA/H,EAAS,iBAAiBwI,EACrC,EACA,OAAQ3H,EACR,YAAYb,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,EAA0B,QACpC,SAASuI,EAAQ,MACjBA,EAAQ,OACR,yBAEF,SAAUb,IAAgB1I,EAAU,IAAA,CAAA,CACtC,EAIEmK,EAAiBZ,GAEnBvG,EAAA,IAACoH,GAAA,CACC,WAAYC,GAAa,OACzB,QAAS,IAAM,QACJrJ,EAAA+H,EAAA,UAAA,MAAA/H,EAAS,UAAUuI,GACZhJ,EAAA,QAAU,IAAIC,GAAqB,CACjD,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CACH,EACA,SAAU+H,IAAgB1I,EAAU,IAAA,CAAA,EAKpCsE,EAAgB,IAAM,CACpB,KAAA,CAAE,mBAAAgG,CAAuB,EAAA3K,EAC/B,OAEIoD,EAAA,KAAAmC,WAAA,CAAA,SAAA,CAACnC,EAAAA,KAAA,MAAA,CAAI,UAAU,2BACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,WACb,SAAAA,EAAA,IAACuH,GAAA,CACC,WAAYC,GAAY,cACxB,YAAa,MACb,QAASf,EACT,SAAUf,IAAgB1I,EAAU,IAAA,CAAA,EAExC,EAEAgD,EAAAA,IAAC,MACE,CAAA,SAAA9E,GAAWuK,EACV1F,EAAA,KAAC0H,GAAA,CACC,IAAK1B,EACL,UAAU,MACV,0BAA2B2B,GAAiB,OAC5C,OAAQ,aAAaxM,mBAAyBuK,cAAmB,KACjE,KAAM,SAEN,SAAA,CAAAzF,EAAA,IAAC2H,GAAA,CACC,OAAQC,GAAK,EAAE,gDAAgD,EAC/D,UAAU,sDACV,KAAMZ,EAAA,CACR,EAEAhH,EAAA,IAAC2H,GAAA,CACC,OAAQC,GAAK,EAAE,0CAA0C,EACzD,UAAU,+DACV,KAAMX,EAAA,CACR,EAEAjH,EAAA,IAAC2H,GAAA,CACC,OAAQC,GAAK,EAAE,4CAA4C,EAC3D,UAAU,uDACV,MAAO,CAAE,SAAU,OAAQ,MAAO,MAAO,EACzC,KAAMT,CAAA,CACR,CAAA,CAAA,CACF,oBAEE,CAAA,EAEN,QAEC,MAAI,CAAA,UAAU,OACb,SAACnH,MAAA,MAAA,CAAI,UAAU,eACb,SAAAA,EAAA,IAAC6H,GAAA,CACC,KAAK,qBACL,UAAU,UACV,MAAM,gCACN,gBAAgB,2CAChB,SAAU,IACV,YAAa,iBACb,MAAOP,EACP,SAAUjB,EACV,QAAS/D,EAAiB,UAC1B,SAAUoD,IAAgB1I,EAAU,IAAA,GAExC,CACF,CAAA,CAAA,EACF,EAEAgD,EAAA,IAACqF,GAAA,CACC,OAAQ,IAAM,CACZpB,EAAsB,EAAK,EAC3BF,EAAgB,EAAE,CACpB,EACA,QAASC,EACT,aAAAF,CAAA,CACF,CACF,CAAA,CAAA,CAAA,EAIJ,OACG9D,EAAA,IAAA,MAAA,CAAI,UAAU,GACZ,WACEA,EAAAA,IAAAmD,GAAA,CAAe,OAAO,YAAY,MAAM,OAAO,aAAa,MAAM,UAAU,MAAO,CAAA,EAEpFnD,EAAA,IAACoD,GAAA,CACC,MAAO,8BACP,SAAUsC,EACV,SAAUmB,EACV,OAAAtH,EACA,OAAQqG,EACR,SAAAvJ,EAEC,SAAciF,EAAA,CAAA,CAGrB,CAAA,CAAA,CAEJ,CAAC,EChUKwG,GAA8C,CAClD,eAAgB,CAAE,KAAM,gBAAiB,KAAM,gBAAiB,EAChE,SAAU,CAAE,KAAM,WAAY,KAAM,UAAW,EAC/C,UAAW,CAAE,KAAM,YAAa,KAAM,WAAY,EAClD,SAAU,CAAE,KAAM,WAAY,KAAM,UAAW,CACjD,EAsCMC,GAAwE,CAC5E,4BAA6B,8BAC7B,0BAA2B,4BAC3B,2BAA4B,4BAC9B,EAEMC,GAAiCvM,EAAA,WAAW,CAACC,EAAOC,IAAQ,CAC1D,KAAA,CACJ,KAAAC,EACA,UAAAE,EACA,eAAAM,EACA,SAAAC,EACA,cAAA4L,EACA,QAAAC,EACA,aAAAC,EACA,KAAAC,EACA,QAAAC,CACE,EAAA3M,EACE4M,EAA+BC,KAE/B,CAACzL,EAAUC,CAAW,EAAIF,EAAAA,SAASG,EAAU,IAAI,EACjD,CAACL,EAASC,CAAU,EAAIC,WAA+BjB,CAAI,EAC3D,CAAC4M,EAAaC,CAAe,EAAI5L,WAAwB,CAC7D,cAAe,CAAC,EAChB,SAAU,CAAC,EACX,UAAW,CAAC,EACZ,SAAU,CAAC,EACX,kBAAmB,CAAC,CAAA,CACrB,EAGK,EAAGS,CAAW,EAAIT,WAAkB,EAAK,EAEzC6L,EAA8BrL,SAAoC,IAAI,EACtEsL,EAA6BtL,SAAoC,IAAI,EACrEE,EAAkBF,EAAA,OACtB,IAAIG,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EASHE,EAAAA,UAAU,IAAM,CACTqG,GACP,EAAG,CAAE,CAAA,EAELrG,EAAAA,UAAU,IAAM,CACdjB,EAAWhB,CAAI,CAAA,EACd,CAACA,CAAI,CAAC,EAETiC,EAAAA,UAAU,IAAM,CACV,GAAAuK,IAASQ,GAAmB,UAAW,CACzC,KAAM,CAAE,mBAAoB7K,GAAgB3B,GAAkB,CAAA,EAE1D2B,IAAepB,GAAA,MAAAA,EAAS,6BAC1BkM,EAAsB9K,CAAW,IAGpC,CAACpB,GAAA,YAAAA,EAAS,2BAA4BP,GAAA,YAAAA,EAAgB,kBAAkB,CAAC,EAE5EyB,EAAAA,UAAU,IAAM,CACVuK,IAASQ,GAAmB,eAC1BxM,GAAA,MAAAA,EAAgB,qBAAsBO,GAAA,MAAAA,EAAS,6BACjDkM,EAAsBzM,GAAA,YAAAA,EAAgB,kBAAkB,EAC/CA,GAAA,MAAAA,EAAgB,mBAAoBO,GAAA,MAAAA,EAAS,4BACtDkM,EAAsBzM,GAAA,YAAAA,EAAgB,gBAAgB,IAGzD,CAACO,GAAA,YAAAA,EAAS,4BAA6BA,GAAA,YAAAA,EAAS,yBAAyB,CAAC,EAQvE,MAAA6B,EAAanB,SAA2B,IAAI,EAElDoB,EAAA,oBAAoB9C,EAAK,KAAO,CAC9B,KAAM+C,EACN,cAAAC,EACA,SAAAe,EACA,EAAA,EAQF,MAAMoJ,EAAuB,SAAY,CACvCC,EAAgBjB,GAAS,eAAe,KAAMA,GAAS,eAAe,IAAI,CAAA,EAGtEkB,EAAoB,SAAY,CACpCD,EAAgBjB,GAAS,UAAU,KAAMA,GAAS,UAAU,IAAI,CAAA,EAE5DmB,EAAkB,SAAY,CAClCF,EAAgBjB,GAAS,SAAS,KAAMA,GAAS,SAAS,IAAI,CAAA,EAG1DoB,EAAkB,SAAY,CAClCH,EAAgBjB,GAAS,SAAS,KAAMA,GAAS,SAAS,IAAI,CAAA,EAU1DjJ,EAAY,GAAW,UAC3BX,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,gBAAeF,EAAA,iBAAG,SAAH,YAAAA,EAAW,KAAI,EAGpDc,EAAe,IAAM,SACzB,IAAIC,EAAU,GAGd,OADUA,GAAAf,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,EAA0B,WAChCe,IAGUzB,EAACK,GAAS,CAACA,CAAI,GAC3BO,EAAAX,GAAA,YAAAA,EAAiB,UAAjB,MAAAW,EAA0B,eACdZ,EAACK,GAAS,CAACA,CAAI,EACpB,GACT,EASI0I,EAAqB8C,GAAe,CACxC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC9BvM,EAAYqC,IAAiB,CAC3B,GAAGA,EACH,CAACmK,CAAI,EAAGC,CACR,EAAA,CAAA,EAGEC,EAAwB,GAAW,CACvC1M,EAAYqC,IAAiB,CAC3B,GAAGA,EACH,2BAA4B,EAAE,OAC9B,EAAA,CAAA,EAGEsK,GAAsC,GAAW,CACrD3M,EAAYqC,IAAiB,CAC3B,GAAGA,EACH,CAAC,EAAE,OAAO,IAAI,EAAG,EAAE,QAClB,0BAA8B,EAC/B,EAAA,CAAA,EAGEuK,GAAoC,GAAW,CACnD5M,EAAYqC,IAAiB,CAC3B,GAAGA,EACH,CAAC,EAAE,OAAO,IAAI,EAAG,EAAE,QAClB,4BAAgC,EACjC,EAAA,CAAA,EASES,GAAW,IAAM,SACjBnC,IACcA,EAAA,QAAQ,cAAgB,KAE1CS,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,gBAC1BE,EAAAM,GAAA,YAAAA,EAAY,UAAZ,MAAAN,EAAqB,iBACrBnB,EAAYC,EAAU,IAAI,CAAA,EAGtBuC,GAAS,IAAMxC,EAAYC,EAAU,IAAI,EAEzC0B,EAAS,IAAsC,WAC7CX,MAAAA,GAAcC,EAAAQ,GAAA,YAAAA,EAAY,UAAZ,YAAAR,EAAqB,OAGnCyL,GAA0BvL,EAAAyK,GAAA,YAAAA,EAA4B,UAA5B,YAAAzK,EAAqC,kBAC/DwL,GAA2BtJ,EAAAsI,GAAA,YAAAA,EAA6B,UAA7B,YAAAtI,EAAsC,kBAGvE,GAAG,EAAAgI,IAAOQ,GAAmB,cAAiB,EAACa,GAAA,MAAAA,EAAyB,eAGnE3K,IAWE,MAAA,CACL,GAAGnC,EACH,GAAGoB,EACH,iCAAkC0L,EAClC,yBAA0BC,CAAA,CAC5B,EAGI/K,EAAgB,IAAM,CAC1B5B,EAAYC,EAAU,IAAI,CAAA,EAStB2C,EAAkB,MAAOgK,GAAiC,CAC1D,IAAAC,EACAC,EAeJ,GAdIzB,IAAS,eACPzL,EAAQ,6BACViN,EAAwBxN,GAAA,YAAAA,EAAgB,mBACxCyN,EAAc9B,GAAuB,6BAC5BpL,EAAQ,4BACjBiN,EAAwBxN,GAAA,YAAAA,EAAgB,iBACxCyN,EAAc9B,GAAuB,2BAGnCpL,EAAQ,6BACViN,EAAwBxN,GAAA,YAAAA,EAAgB,mBACxCyN,EAAc9B,GAAuB,4BAGrC6B,IAA0B,OAC5B,OAEF,MAAME,EAA2CjB,EAC/Ce,EACA,EAAA,EAIEE,GAAkBH,IACWI,GAAiBD,EAAgBH,CAAc,GAEjE/M,EAACqC,IAAiB,CAAE,GAAGA,EAAa,CAAC4K,CAAW,EAAG,EAAQ,EAAA,EAE1E,EAGIhB,EAAwB,CAAC9K,EAAkBiM,IAAgC,iBAC/E,MAAM3J,EAAU,CACd,QAAStC,GAAAA,YAAAA,EAAa,QACtB,QAAS,CAAE,SAASA,EAAAA,GAAAA,YAAAA,EAAa,UAAbA,YAAAA,EAAsB,QAAS,KAAKA,EAAAA,GAAAA,YAAAA,EAAa,UAAbA,YAAAA,EAAsB,GAAI,EAClF,KAAM,CAAE,MAAMA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,KAAM,KAAKA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,GAAI,EACnE,OAAOA,GAAAA,EAAAA,GAAAA,YAAAA,EAAa,OAAbA,YAAAA,EAAmB,QAAnBA,YAAAA,EAA0B,KACjC,SAAUA,GAAAA,YAAAA,EAAa,SACvB,UAAWA,GAAAA,YAAAA,EAAa,SAAA,EAE1B,GAAIiM,EACK,MAAA,CAAE,GAAG3J,GAEdzD,EAAYqB,KACH,CACL,GAAGA,GACH,GAAGoC,CAAA,EAEN,CAAA,EAGG6D,EAAO,SAAY,CACF4E,IACHE,IACFC,IACAC,GAAA,EAIZH,EAAkB,MAAOK,EAA2Ba,IAAqB,CACzE,GAAA,CACF,MAAMzF,EAAM,MAAMD,GAAwB,gBAAgB0F,CAAI,EAC9DxB,EAAiByB,GAAa,OAAA,OAC5B,GAAGA,EACH,CAACd,CAAI,GAAGpL,EAAAwG,GAAA,YAAAA,EAAK,OAAL,YAAAxG,EAAW,OACnB,EAAA,QACK6G,GACP,QAAQ,MAAMA,CAAG,EACPqD,GAAA,MAAAA,EAAApD,GAA6BD,CAAG,EAC5C,CAAA,EASIsF,EAA4BtK,EAAAA,QAAQ,IAAM,SAE5C,OAAAE,OAACiG,GAAM,SAAN,CACC,SAAA,CAAAhG,EAAA,IAACC,GAAA,CACC,MAAOmI,IAAQQ,GAAmB,UAAU,2BAA2B,4BACvE,MAAM,2CACN,WAAW,8CAAA,CACb,EAEA5I,EAAAA,IAAC,MAAI,CAAA,UAAU,QACb,SAAAA,EAAA,IAACE,GAAA,CACC,IAAKyI,EACL,eACE3K,EAAApC,GAAA,YAAAA,EAAM,iCAAN,MAAAoC,EAAuC,IAAKE,EAAAtC,GAAA,YAAAA,EAAM,iCAAN,YAAAsC,EAAuC,GAAK,CAAC,EAE3F,mBAAoBkK,IAAQQ,GAAmB,aAC/C,KAAM9L,IAAaE,EAAU,KAAOoN,GAAkB,KAAOA,GAAkB,KAC/E,qBAAsBjO,GAAkB,gCACxC,aAAckO,GAAgB,MAC9B,gBAAiBC,GAAU,IAC3B,eAAgB,CACd,QAAShC,EAAO,SAAW,GAC3B,UAAW,CACT,IAAK1M,EAAK,cAAgB,EAC5B,CACF,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAAA,EAED,CAACe,GAAA,YAAAA,EAAS,+BAAgCG,EAAUlB,GAAA,YAAAA,EAAM,8BAA8B,CAAC,EAEtFmC,EAAc8B,EAAAA,QAAQ,IAAM,CAChC,KAAM,CAAE,QAAAQ,EAAS,QAAAC,EAAS,KAAAC,EAAM,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAc,EAAA/D,EACxD,MAAA,CACL,QAAA0D,EACA,QAAAC,EACA,KAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CAAA,CACF,EACC,CACD/D,GAAA,YAAAA,EAAS,QACTA,GAAA,YAAAA,EAAS,QACTA,GAAA,YAAAA,EAAS,KACTA,GAAA,YAAAA,EAAS,MACTA,GAAA,YAAAA,EAAS,SACTA,GAAA,YAAAA,EAAS,SAAA,CACV,EAEK4N,GAAgB,IAElBvK,EAAA,IAACY,GAAA,CACC,SAAA9D,EACA,IAAK0B,EACL,KAAMT,EACN,QAASsK,GAAWxH,GAAS,UAC7B,gBAAAlB,EACA,UAAW0I,IAAYxH,GAAS,UAE/B,SAAAsJ,CAAA,CAAA,EAKDK,GAA6B,IAAM,SAErC,OAAAzK,EAAA,KAAC,MAAI,CAAA,UAAU,GACb,SAAA,CAAAC,EAAA,IAACC,GAAA,CACC,MAAM,iBACN,MAAM,2CACN,WAAW,8CAAA,CACb,EAEAD,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAACE,GAAA,CACC,IAAKwI,EAEL,eAAe1K,EAAApC,GAAA,YAAAA,EAAM,yBAAN,MAAAoC,EAA+B,IAAKE,EAAAtC,GAAA,YAAAA,EAAM,yBAAN,YAAAsC,EAA+B,GAAK,CAAC,EACxF,KAAMpB,IAAaE,EAAU,KAAOoN,GAAkB,KAAOA,GAAkB,KAC/E,qBAAsBjO,GAAkB,iCACxC,aAAckO,GAAgB,MAC9B,gBAAiBC,GAAU,IAC3B,eAAgB,CACd,QAAShC,EAAO,SAAW,GAC3B,UAAW,CACT,IAAK1M,EAAK,cAAgB,EAC5B,CACF,CAAA,CAAA,EAEF,CACJ,CAAA,CAAA,CAAA,EAGE6O,GAAmC,IAErC1K,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iBACb,SAAAA,EAAA,IAACgB,GAAA,CACC,UAAS,GACT,aAAY,GACZ,QAASC,GAAoB,QAC7B,MAAOtE,EAAQ,2BACf,QAASA,EAAQ,2BACjB,SAAU2M,EACV,SAAUxM,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACmC,GAAA,CACC,UAAU,oCACV,MAAO,2CAAA,CAAA,EAEX,CACF,CAAA,CAAA,EAIEuI,GAAqC,IAEvC3K,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAA,IAACqB,GAAA,CACC,UAAS,GACT,aAAY,GACZ,KAAK,8BACL,UAAU,oBACV,SAAUkI,GACV,MAAO5M,EAAQ,4BACf,QAASA,EAAQ,4BACjB,SAAUG,IAAaE,EAAU,IAAA,CACnC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACb,SAAAA,EAAA,IAACkB,IAAM,MAAO,oCAAqC,UAAU,MAAA,CAAO,CACtE,CAAA,CAAA,EACF,EACAnB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAA,IAACqB,GAAA,CACC,UAAS,GACT,aAAY,GACZ,KAAK,4BACL,UAAU,oBACV,SAAUmI,GACV,MAAO7M,EAAQ,0BACf,QAASA,EAAQ,0BACjB,SAAUG,IAAaE,EAAU,IAAA,CACnC,EACAgD,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACb,SAAAA,EAAA,IAACkB,IAAM,MAAO,kCAAmC,UAAU,MAAA,CAAO,CACpE,CAAA,CAAA,EACF,CACF,CAAA,CAAA,EAGEyJ,GAA4B,IAE9B5K,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAACmC,GAAA,CACC,UAAU,0CACV,MAAO,iCAAA,CAAA,EAEX,EACCiG,IAASQ,GAAmB,UACzB6B,GAAA,EACAC,GAAmC,CACzC,CAAA,CAAA,EAIEpJ,GAAgB,IAAM,gCACpB,KAAA,CACJ,WAAAsJ,EACA,SAAAC,EACA,UAAAC,EACA,aAAAC,EACA,mBAAAC,EACA,UAAAC,EACA,cAAAC,EACA,eAAAC,EACA,SAAAC,CACE,EAAAzO,EAGF,OAAAoD,OAACiG,GAAM,SAAN,CACE,SAAA,CAAcuE,GAAA,EAEfxK,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAC,MAAC,MACC,CAAA,SAAAA,EAAA,IAACqC,EAAA,CACC,MAAM,yBACN,KAAK,eACL,YAAY,+BACZ,QAASC,EAAiB,UAC1B,SAAU+D,EACV,OAAQxH,EACR,MAAOkM,EACP,YAAY/M,GAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,GAA0B,QAAQ,eAAgB+M,EAAc,SAC5E,SAAUjO,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACoC,EAAA,CACC,MAAM,2BACN,KAAK,gBACL,YAAY,gCACZ,MAAO8I,EACP,QAAS5I,EAAiB,QAC1B,QAASkG,EAAY,cACrB,YAAY,OACZ,YAAY,OACZ,SAAUnC,EACV,OAAQxH,EAER,YAAYX,GAAAX,GAAA,YAAAA,EAAiB,UAAjB,YAAAW,GAA0B,QACpC,gBACAgN,EACA,aAEF,SAAUpO,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACqC,EAAA,CACC,MAAM,8BACN,KAAK,qBACL,YAAY,oCACZ,QAASC,EAAiB,UAC1B,SAAU+D,EACV,OAAQxH,EACR,MAAOmM,EACP,YAAY5K,GAAA7C,GAAA,YAAAA,EAAiB,UAAjB,YAAA6C,GAA0B,QACpC,qBACA4K,EACA,aAEF,SAAUlO,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACqC,EAAA,CACC,MAAM,2BACN,KAAK,iBACL,YAAY,iCACZ,QAASC,EAAiB,UAC1B,SAAU+D,EACV,OAAQxH,EACR,MAAOsM,EACP,YAAYhL,GAAA5C,GAAA,YAAAA,EAAiB,UAAjB,YAAA4C,GAA0B,QACpC,iBACAgL,EACA,2BAEF,SAAUrO,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACoC,EAAA,CACC,MAAM,uBACN,KAAK,YACL,YAAY,4BACZ,MAAO0I,EACP,QAASxI,EAAiB,QAC1B,QAASkG,GAAA,YAAAA,EAAa,UACtB,YAAY,OACZ,YAAY,OACZ,SAAUnC,EACV,OAAQxH,EAER,YAAY2D,GAAAjF,GAAA,YAAAA,EAAiB,UAAjB,YAAAiF,GAA0B,QAAQ,YAAasI,EAAW,aACtE,SAAUhO,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACqC,EAAA,CACC,MAAM,kCACN,KAAK,YACL,YAAY,uCACZ,QAASC,EAAiB,UAC1B,SAAU+D,EACV,OAAQxH,EACR,MAAOoM,EACP,YAAYxI,GAAAlF,GAAA,YAAAA,EAAiB,UAAjB,YAAAkF,GAA0B,QAAQ,YAAawI,EAAW,aACtE,SAAUnO,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACqC,EAAA,CACC,MAAM,wBACN,KAAK,aACL,YAAY,6BACZ,QAASC,EAAiB,UAC1B,SAAU+D,EACV,OAAQxH,EACR,MAAO+L,EACP,YAAYlI,GAAAnF,GAAA,YAAAA,EAAiB,UAAjB,YAAAmF,GAA0B,QAAQ,aAAckI,EAAY,aACxE,SAAU9N,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACoC,EAAA,CACC,MAAM,qBACN,KAAK,WACL,YAAY,2BACZ,MAAOgJ,EACP,QAAS9I,EAAiB,QAC1B,QAASkG,EAAY,SACrB,YAAY,OACZ,YAAY,OACZ,SAAUnC,EACV,OAAQxH,EAER,YAAY8D,GAAApF,GAAA,YAAAA,EAAiB,UAAjB,YAAAoF,GAA0B,QAAQ,WAAYyI,EAAU,aACpE,SAAUtO,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAgD,EAAA,IAACoC,EAAA,CACC,MAAM,sBACN,KAAK,WACL,YAAY,2BACZ,MAAOyI,EACP,QAASvI,EAAiB,QAC1B,QAASkG,EAAY,SACrB,YAAY,OACZ,YAAY,OACZ,SAAUnC,EACV,OAAQxH,EAER,YAAY+D,GAAArF,GAAA,YAAAA,EAAiB,UAAjB,YAAAqF,GAA0B,QAAQ,WAAYiI,EAAU,aACpE,SAAU/N,IAAaE,EAAU,IAAA,CAAA,EAErC,CAAA,EACF,EAECwN,GAA2B,CAC9B,CAAA,CAAA,CAAA,EAUJ,aACGxE,GAAM,SAAN,CACC,SAAChG,MAAA,MAAA,CAAI,UAAU,GACZ,SAAAlE,QACEqH,GAAe,CAAA,OAAO,YAAY,MAAM,OAAO,aAAa,MAAM,UAAU,OAAO,EAEpFnD,EAAA,IAACoD,GAAA,CACC,SAAA/G,EACA,oBAAqBsO,GACrB,SAAA7N,EACA,OAAQmL,EACR,SAAAvI,GACA,OAAAH,GAEC,SAAc+B,GAAA,CAAA,CAAA,CAGrB,CAAA,CACF,CAAA,CAEJ,CAAC"}