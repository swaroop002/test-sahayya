{"version":3,"file":"PageApplicant-c4eecabe.js","sources":["../../src/views/transaction/PageDDE/Login/PageApplicant/PageApplicant.tsx"],"sourcesContent":["import Address, { IAddressRef } from \"components/Address\";\nimport BasicInformation, {\n  IBasicInformationRef,\n  initialBasicInformationData,\n} from \"components/BasicInformation\";\nimport ButtonBox from \"components/ButtonBox\";\nimport DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  ISavedDocumentRecords,\n  dummySavedDocStructure,\n  dummySavedDocStructureInList,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport KYCV3, {\n  IAadharOTP,\n  IAadharVerification,\n  IKycDocumentCardListInfo,\n  IKycDocuments,\n  IPopulateOcr,\n} from \"components/KYCV3\";\nimport LazyLoader from \"components/LazyLoader\";\nimport { PLACE_OF_UPLOAD_KYC } from \"components/MediaGallery/MediaGallery\";\nimport OtherDocuments, {\n  IOtherDocumentsRef,\n  LOAN_SECTION_KEY_TYPES,\n  STAGE,\n} from \"components/OtherDocuments/OtherDocuments\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport TextData from \"components/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport { ISectionDropdownOption } from \"interface/common\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ApplicantService from \"services/ApplicantService\";\nimport KYCService from \"services/KYCService\";\nimport Industry from \"services/masterdata/Industry\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport BankAccountDetailsService from \"services/transaction/DDE/BankAccountDetailsService\";\nimport EmploymentDetailsService from \"services/transaction/DDE/EmploymentDetailsService\";\nimport OtherDetailsService from \"services/transaction/DDE/OtherDetailsService\";\nimport InvestmentInfoService from \"services/transaction/InvestmentInfoService\";\nimport OtherDocumentService from \"services/transaction/OtherDocumentService\";\nimport BasicInformationService from \"services/transaction/QDE/BasicInformation\";\nimport {\n  default as Residential,\n  default as ResidentialService,\n} from \"services/transaction/QDE/Residential\";\nimport ReferenceService from \"services/transaction/ReferenceService\";\nimport {\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  DOCUMENT_SECTION,\n  DOCUMENT_TYPE,\n  OCR_STAGE_NAMES,\n  OTHER_DETAILS_PAGE,\n  PAGE_MODE,\n  PAGE_TYPE,\n  SECTION_NAME,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport BankAccountDetails, {\n  IBankAccountDetails,\n  IBankAccountDetailsRef,\n} from \"views/transaction/PageDDE/Login/PageApplicant/BankAccountDetails\";\nimport EmploymentDetails, {\n  IEmploymentDetailsData,\n  IEmploymentDetailsRef,\n} from \"views/transaction/PageDDE/Login/PageApplicant/EmploymentDetails\";\nimport References, {\n  IReferencesData,\n  IReferencesRef,\n  initialReferenceData,\n} from \"views/transaction/PageDDE/Login/PageApplicant/References\";\nimport {\n  enrichAadharValidation,\n  enrichAddressData,\n  enrichBankAccountDetailsObj,\n  enrichBasicInfoData,\n  enrichEmploymentDetailsObj,\n  enrichInvestmentInfoDetails,\n  enrichOtherDetails,\n  enrichOtherDocuments,\n  enrichPopulateDocWithOcr,\n  enrichReferencesObj,\n  enrichSaveKycDocument,\n  enrichUpdateKycDocument,\n  initialBankAccountDetailsData,\n  initialEmploymentData,\n  initialKycTemplateListData,\n  initialOtherDetailsData,\n  structLoanDocumentsFromAPIResponse,\n  structSavedDocStrucutureForOtherDocuments,\n  updateBankAccountInfoObj,\n  updateBasicInfoObj,\n  updateEmploymentInfoObj,\n  updateOtherDetailsObj,\n} from \"../Helper\";\nimport InvestmentInformation, {\n  IInvestmentInfoData,\n  IInvestmentInfoRef,\n} from \"./InvestmentInformation/InvestmentInformation\";\nimport OtherDetails, { IOtherDetailsPageObj, IOtherDetailsRef } from \"./OtherDetails\";\n\nexport interface IKycUploadedDocSection {\n  sectionUid: string;\n  fileName?: string;\n  fileType: string;\n  sectionType: string;\n  sectionName?: string;\n  url: Promise<string>;\n}\n\nconst initialInvestmentInfoData: IInvestmentInfoData = {\n  assets: [],\n  investmentComments: \"\",\n};\n\ntype Section = keyof typeof SECTION_NAME;\n\nconst Applicant = () => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n\n  // ----------------- states ---------------------- //\n  const [applicantId, setApplicantId] = useState(\"\");\n\n  // basic information\n  const [basicInformationData, setBasicInformationData] = useState({\n    ...initialBasicInformationData,\n  });\n  const [basicInfoSectionMode, setBasicInfoSectionMode] = useState(PAGE_MODE.VIEW);\n  const [prepopulatedData, setPrepopulatedData] = useState<any>({});\n  const [isBasicInfoLoading, setIsBasicInfoLoading] = useState<boolean>(true);\n  const [isResidentialAddressSectionLoading, setIsResidentialAddressSectionLoading] =\n    useState<boolean>(true);\n  const [prePopulateBasicInfo, setPrePopulateBasicInfo] = useState<boolean>(false);\n\n  // address\n  const [addressData, setAddressData] = useState<any>({ uid: \"\" });\n  const [addressMode, setAddressMode] = useState(PAGE_MODE.VIEW);\n  const [prePopulateAddress, setPrePopulateAddress] = useState<boolean>(false);\n\n  //kyc\n  const [kycDocumentTemplateList, setKycDocumentTemplateList] = useState<\n    IKycDocumentCardListInfo[]\n  >([initialKycTemplateListData]);\n  const [kycCardCount, setKycCardCount] = useState(1);\n  const [isLoadingKycDoc, setIsLoadingKycDoc] = useState<boolean>(true);\n  const [uniqueKycCardTracker, setUniqueKycCardTracker] = useState<string[]>([]);\n  const [populateOcr, setPopulateOcr] = useState<IPopulateOcr>({\n    uid: \"\",\n    success: false,\n    failed: false,\n  });\n  const [aadhaarVerificationStatus, setAadhaarVerificationStatus] = useState<IAadharVerification>({\n    verified: false,\n    failedToVerify: false,\n  });\n\n  //references\n  const [referenceInfoList, setReferenceInfoList] = useState<IReferencesData[]>([\n    initialReferenceData,\n  ]);\n  const [isLoadingReferences, setIsLoadingReferences] = useState<boolean>(true);\n  const [refCardCount, setRefCardCount] = useState(1); // maintain ref card count it's used in key prop while rendering the list of references\n\n  //investment information\n  const [investmentInfoData, setInvestmentInfoData] =\n    useState<IInvestmentInfoData>(initialInvestmentInfoData);\n  const [investmentInfoSectionMode, setInvestmentInfoSectionMode] = useState(PAGE_MODE.VIEW);\n  const [isLoadingInvestmentInfo, setIsLoadingInvestmentInfo] = useState<boolean>(true);\n\n  // employmentDetails\n  const [employmentInfoList, setEmploymentInfoList] = useState<IEmploymentDetailsData[]>([\n    {...initialEmploymentData}\n  ]);\n  const [isLoadingEmploymentDetails, setIsLoadingEmploymentDetails] = useState<boolean>(true);\n\n  // bankAccountDetails\n  const [bankAccountDetailsList, setBankAccountDetailsList] = useState<IBankAccountDetails[]>([\n    {...initialBankAccountDetailsData}\n  ]);\n  const [isLoadingBankAccountDetails, setIsLoadingBankAccountDetails] = useState<boolean>(true);\n\n  const [residentialAddress, setResidentialAddress] = useState(null);\n  const [isLoadingOtherDetails, setIsLoadingOtherDetails] = useState<boolean>(true);\n  const [otherDetails, setOtherDetails] = useState<IOtherDetailsPageObj>({\n    ...initialOtherDetailsData,\n  });\n\n  //otherDocuments\n  const [otherDocsTemplateList, setOtherDocsTemplateList] = useState<ISavedDocumentRecords[]>([\n    { ...dummySavedDocStructureInList },\n  ]);\n  const [otherDocsSectionMode, setOtherDocsSectionMode] = useState(PAGE_MODE.VIEW);\n  const [isLoadingOtherDocs, setIsLoadingOtherDocs] = useState(true);\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  const [dropdownOptions, setDropdownOptions] = useState<ISectionDropdownOption>({\n    EMPLOYMENT_NATURE_OPTION: [],\n    INDUSTRY_OPTION: [],\n    OCCUPATION_OPTION: [],\n    BUSINESS_MANAGED_BY_OPTION: [],\n    SEASONALITY_OPTION: [],\n    NO_EMPLOYEE_OPTION: [],\n    ACCOUNT_OPTION: [],\n  });\n\n  // Ref\n  const toastMessageRef = useRef(null);\n\n  const basicInformationRef = useRef<IBasicInformationRef | null>(null);\n  const employmentRef = useRef<IEmploymentDetailsRef[]>([]);\n  const bankAccountRef = useRef<IBankAccountDetailsRef[]>([]);\n  const referenceRef = useRef<IReferencesRef[]>([]);\n  const investmentInfoRef = useRef<IInvestmentInfoRef | null>(null);\n  const otherDetailsRef = useRef<IOtherDetailsRef | null>(null);\n  const addressRef = useRef<IAddressRef | null>(null);\n  const addressDocUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n  const otherDocsRef = useRef<IOtherDocumentsRef | null>(null);\n\n  /*\n    -------------------------------------------------------\n      useEffect\n    -------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (applicantId) {\n      getBasicInfo();\n      getAllSavedKycDocuments();\n      getSavedReferences();\n      getAddress();\n      getResidentialAddress();\n      getSavedInvestmentInfo();\n      getOtherDocumentsOfApplicant();\n    }\n  }, [applicantId]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    setAddressData((prevState: any) => {\n      return {\n        ...prevState,\n        address: prepopulatedData?.address,\n        pincode: {\n          pinCode: prepopulatedData?.pincode?.pinCode,\n          uid: prepopulatedData?.pincode?.uid,\n        },\n      };\n    });\n  }, [prePopulateAddress]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  const init = async () => {\n    //getting applicant uid\n    getApplicantId();\n  };\n\n  const getBasicInfo = () => {\n    BasicInformationService.getDde(applicantId)\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          setBasicInformationData(updateBasicInfoObj(res.data));\n          setIsBasicInfoLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsBasicInfoLoading(false);\n      });\n  };\n\n  const getAddress = async () => {\n    try {\n      await ResidentialService.findByUid(loanId, applicantId).then((res) => {\n        if (validateGetAPIResponse(res)) {\n          setAddressData({ ...res.data });\n          setIsResidentialAddressSectionLoading(false);\n        }\n      });\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n      setIsResidentialAddressSectionLoading(false);\n    }\n  };\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.PRIMARY, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setApplicantId(res.data?.results?.[0]?.uid);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getSavedKycDocuments = async () => {\n    try {\n      const res = await KYCService.getKycDocument(loanId, applicantId);\n      if (validateGetAPIResponse(res)) {\n        const { data } = res;\n        return data;\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getAllSavedKycDocuments = async () => {\n    try {\n      const res = await KYCService.getKycDocument(loanId, applicantId);\n      if (validateGetAPIResponse(res)) {\n        const { data: savedItems } = res;\n        const kycDocuments = [];\n        const savedDocsName = [];\n\n        //get the section information for each saved doc\n        const getAllSectionsInfo = (sections: any[]) => {\n          const sectionsInfo = sections.map((section) => {\n            return {\n              sectionUid: section.uid ?? \"\",\n              fileName: section.fileName ?? \"\",\n              fileType: section.fileType ?? \"\",\n              sectionType: section.smDocSectionType ?? \"\",\n              url: section.url,\n            };\n          });\n          return sectionsInfo;\n        };\n\n        //iterating through each saved record to prepare template list object\n        for (const savedItem in savedItems) {\n          //below properties are common in all sections of the document that's why accessing the first item in the array and taking out necessary field data\n          kycDocuments.push({\n            listId: savedItem, //provide the uid as key for the component while mapping\n            uid: savedItem,\n            docName: savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\",\n            docNo: savedItems[savedItem]?.[0].kyc?.docNo ?? \"\",\n            maskedDocNo: savedItems[savedItem]?.[0].kyc?.maskedDocNo ?? \"\",\n            dob: savedItems[savedItem]?.[0].kyc?.dob ?? \"\",\n            docSections: getAllSectionsInfo(savedItems[savedItem]),\n            isVerified: savedItems[savedItem]?.[0].kyc?.isVerified ?? false,\n          });\n\n          savedDocsName.push(savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\");\n        }\n\n        if (kycDocuments.length) {\n          setKycDocumentTemplateList([...kycDocuments]);\n          setIsLoadingKycDoc(false);\n          setUniqueKycCardTracker([...savedDocsName]);\n        } else {\n          setIsLoadingKycDoc(false);\n        }\n      }\n    } catch (err) {\n      setIsLoadingKycDoc(false);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getEmploymentInfo = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setIsLoadingEmploymentDetails(true);\n    }\n\n    if (loanId && applicantId) {\n      try {\n        const res = await EmploymentDetailsService.getEmploymentDetails(loanId, applicantId);\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedEmployeeInfo = res?.data?.map((employeeInfo: any) => {\n              return updateEmploymentInfoObj(employeeInfo);\n            });\n            setEmploymentInfoList([...savedEmployeeInfo]);\n            setIsLoadingEmploymentDetails(false);\n          } else {\n            setIsLoadingEmploymentDetails(false);\n            setEmploymentInfoList([{...initialEmploymentData}]);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setIsLoadingEmploymentDetails(false);\n      }\n    }\n  };\n\n  const getBankAccountInfo = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setIsLoadingBankAccountDetails(true);\n    }\n\n    if (loanId && applicantId) {\n      try {\n        const res = await BankAccountDetailsService.getBankAccountDetails(loanId, applicantId);\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedBankAccountInfo = res?.data?.map((bankAccountInfo: any) => {\n              return updateBankAccountInfoObj(bankAccountInfo);\n            });\n\n            setBankAccountDetailsList([...savedBankAccountInfo]);\n            setIsLoadingBankAccountDetails(false);\n          } else {\n            setIsLoadingBankAccountDetails(false);\n            setBankAccountDetailsList([{...initialBankAccountDetailsData}])\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setIsLoadingBankAccountDetails(false);\n      }\n    }\n  };\n\n  const getSavedReferences = async () => {\n    setIsLoadingReferences(true);\n    try {\n      const res = await ReferenceService.getReferences(0, 20, loanId, applicantId);\n      if (validateGetAPIResponse(res)) {\n        const { data: savedReferences } = res;\n\n        const savedReferencesList = savedReferences.map(\n          (savedReference: { [key: string]: any }) => {\n            return {\n              uid: savedReference.uid ?? \"\",\n              parentUid: savedReference.applicant?.parent?.uid ?? \"\",\n              referenceApplicantUid: savedReference.applicant?.uid ?? \"\",\n              firstName: savedReference.applicant?.firstName ?? \"\",\n              middleName: savedReference.applicant?.middleName ?? \"\",\n              lastName: savedReference.applicant?.lastName ?? \"\",\n              mobileNo: savedReference.applicant?.mobileNo ?? \"\",\n              relationship: savedReference.applicant?.smRelationship ?? \"\",\n              address: savedReference.address ?? \"\",\n              pincode: {\n                uid: savedReference.pincode?.uid ?? \"\",\n                pinCode: savedReference.pincode?.pinCode ?? \"\",\n              },\n              city: { uid: savedReference.city?.uid ?? \"\", name: savedReference.city?.name ?? \"\" },\n              state: savedReference.city?.state?.name ?? \"\",\n              latitude: savedReference.latitude?.toString() ?? \"\",\n              longitude: savedReference.longitude?.toString() ?? \"\",\n              isActive: savedReference.isActive ?? true,\n            };\n          }\n        );\n        if (savedReferences.length) {\n          setReferenceInfoList([...savedReferencesList]);\n          setRefCardCount(savedReferences.length);\n        } else {\n          setReferenceInfoList([{...initialReferenceData}]);\n        }\n        setIsLoadingReferences(false);\n      }\n    } catch (err) {\n      setIsLoadingReferences(false);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getResidentialAddress = async () => {\n    if (loanId && applicantId) {\n      try {\n        const res = await Residential.getAddressForDde(loanId, applicantId);\n        setResidentialAddress(res?.data);\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const getOtherDetails = async () => {\n    if (loanId && applicantId) {\n      try {\n        const res = await OtherDetailsService.getDetails(applicantId);\n        if (validateGetAPIResponse(res)) {\n          setOtherDetails(updateOtherDetailsObj(res?.data?.permanentAddress, res?.data?.applicant));\n          setIsLoadingOtherDetails(false);\n        }\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n        setIsLoadingOtherDetails(false);\n      }\n    }\n  };\n\n  const getEmploymentNatureOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=EMPLOYMENT_NATURE`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            EMPLOYMENT_NATURE_OPTION: [...res.data.results],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getIndustryOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await Industry.getAll(start, limit, ``).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            INDUSTRY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getOccupationOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=OCCUPATION_TYPE`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            OCCUPATION_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getManagedByOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=BUSINESS_MANAGED_BY`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            BUSINESS_MANAGED_BY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getSeasonalityOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=BUSINESS_SEASONALITY_TYPES`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            SEASONALITY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getNoOfEmployeesOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=NO_OF_EMPLOYEES`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            NO_EMPLOYEE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBankAccountOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=ACCOUNT_TYPE`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            ACCOUNT_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getSavedInvestmentInfo = async (isIgnoreLoader?: boolean) => {\n    setIsLoadingInvestmentInfo(true);\n    try {\n      const res = await InvestmentInfoService.getInvestmentInformation(0, 20, loanId, applicantId);\n      if (validateGetAPIResponse(res)) {\n        const { data: savedInvestmentInfo } = res;\n\n        setInvestmentInfoData((prev) => {\n          return {\n            ...prev,\n            investmentComments: savedInvestmentInfo.commentOnInvestment ?? \"\",\n          };\n        });\n\n        setIsLoadingInvestmentInfo(false);\n      }\n    } catch (err) {\n      setIsLoadingInvestmentInfo(false);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onOtherDetailsError = (err: string, clientValidation?: boolean) => {\n    if (!clientValidation) {\n      setErrorMessage(err);\n    } else {\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(err);\n      setTriggerToast(!triggerToast);\n    }\n  };\n\n  const getOtherDocumentsOfApplicant = async () => {\n    try {\n      const res = await OtherDocumentService.getDocsByApplicantType(\n        STAGE.LOGIN,\n        loanId,\n        applicantId\n      );\n\n      if (validateGetAPIResponse(res)) {\n        if (res?.data?.length > 0) {\n          const preparedListOfOtherDocuments = res?.data?.map((document: any) => {\n            return structSavedDocStrucutureForOtherDocuments(document);\n          });\n\n          setOtherDocsTemplateList([...preparedListOfOtherDocuments]);\n          setIsLoadingOtherDocs(false);\n        } else {\n          setIsLoadingOtherDocs(false);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setIsLoadingOtherDocs(false);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /* \n  -------------------------------------------------------\n    Handlers\n  -------------------------------------------------------\n  */\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSaveKycDocument = async (documentInfo: IKycDocuments, itemIndex: number) => {\n    //update request\n    if (documentInfo.uid) {\n      const sections = await getSectionsByDocumentUid(documentInfo?.uid);\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        applicantId,\n        documentInfo,\n        sections,\n        APPLICANT_TYPE.PRIMARY\n      );\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          setKycDocumentTemplateList((prev) => {\n            const updatedList = prev.map((item) => {\n              if (item.uid === data.uid) {\n                return {\n                  ...item,\n                  docName: data.docType?.code ?? \"\",\n                  docNo: data.docNo ?? \"\",\n                  maskedDocNo: data.maskedDocNo ?? \"\",\n                  docSections: prepareMaskedDocSections(data.kycDocuments),\n                  dob: data.dob ?? \"\",\n                };\n              }\n              return item; // Return the unchanged item if it has a UID\n            });\n            return updatedList; // Return the updated list to set state\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n\n    // create request\n    else {\n      const payload = enrichSaveKycDocument(\n        loanId,\n        applicantId,\n        documentInfo,\n        APPLICANT_TYPE.PRIMARY\n      );\n      try {\n        const res = await KYCService.saveKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePostAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          setKycDocumentTemplateList((prev) => {\n            const updatedList = prev.map((item, idx) => {\n              if (idx === itemIndex) {\n                return {\n                  ...item,\n                  uid: data.uid ?? \"\",\n                  docName: data.docType?.code ?? \"\",\n                  docNo: data.docNo ?? \"\",\n                  maskedDocNo: data.maskedDocNo ?? \"\",\n                  docSections: prepareMaskedDocSections(data.kycDocuments),\n                  dob: data.dob ?? \"\",\n                };\n              }\n              return item; // Return the unchanged item if it has a UID\n            });\n            return updatedList; // Return the updated list to set state\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveKycDocument = async (documentInfo: IKycDocuments, itemIndex?: number) => {\n    if (documentInfo.uid) {\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        applicantId,\n        documentInfo,\n        await getSectionsByDocumentUid(documentInfo?.uid),\n        APPLICANT_TYPE.PRIMARY\n      );\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          if (itemIndex !== undefined) {\n            deleteKycDocInList(itemIndex);\n          }\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onPopulateWithOcr = async (documentInfo: IKycDocuments, itemIndex: number) => {\n    const payload = enrichPopulateDocWithOcr(\n      loanId,\n      applicantId,\n      populateOcr.uid,\n      documentInfo,\n      APPLICANT_TYPE.PRIMARY\n    );\n\n    try {\n      const res = await KYCService.populateKycDocument(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        setKycDocumentTemplateList((prev) => {\n          const updatedList = prev.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid,\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n          return updatedList; // Return the updated list to set state\n        });\n\n        setPopulateOcr((prev) => {\n          return { ...prev, uid: data.uid ?? \"\", success: true, failed: false };\n        });\n      }\n    } catch (err) {\n      setPopulateOcr((prev) => {\n        return { ...prev, success: false, failed: true };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onVerifyAadhar = async (\n    documentInfo: IKycDocuments,\n    aadharOtpInfo: IAadharOTP,\n    itemIndex: number,\n    uid: string\n  ) => {\n    const payload = enrichAadharValidation(\n      loanId,\n      applicantId,\n      documentInfo,\n      aadharOtpInfo,\n      APPLICANT_TYPE.PRIMARY,\n      uid\n    );\n    try {\n      const res = await KYCService.validateAadhar(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        setAadhaarVerificationStatus({\n          ...aadhaarVerificationStatus,\n          verified: true,\n        });\n\n        setKycDocumentTemplateList((prev) => {\n          const updatedList = prev.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid ?? \"\",\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item; // Return the unchanged item if it has a UID\n          });\n          return updatedList; // Return the updated list to set state\n        });\n      }\n    } catch (err) {\n      setAadhaarVerificationStatus({\n        ...aadhaarVerificationStatus,\n        failedToVerify: true,\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onAddDocument = () => {\n    const newDocumentList = {\n      listId: `kyc-card-${kycCardCount + 1}`,\n      uid: \"\",\n      docName: \"\",\n      docNo: \"\",\n      maskedDocNo: \"\",\n      dob: \"\",\n      docSections: [],\n      isVerified: false,\n    };\n    setKycCardCount((prevCount) => prevCount + 1);\n    setKycDocumentTemplateList((prev) => {\n      return [...prev, newDocumentList];\n    });\n    setPopulateOcr(() => {\n      return { uid: \"\", success: false, failed: false };\n    });\n  };\n\n  const onAddMoreEmployInfo = () => {\n    const newEmployListItem = { ...initialEmploymentData };\n    setEmploymentInfoList((prev: any) => {\n      return [...prev, newEmployListItem];\n    });\n  };\n\n  const onAddReference = () => {\n    const newReferenceList = { ...initialReferenceData, listId: `ref-card-${refCardCount + 1}` };\n    setRefCardCount((prev) => prev + 1);\n    setReferenceInfoList((prev) => {\n      return [...prev, newReferenceList];\n    });\n  };\n\n  const onAddMoreBankDetails = () => {\n    const newBankAccountListItem = { ...initialBankAccountDetailsData };\n    setBankAccountDetailsList((prev: any) => {\n      return [...prev, newBankAccountListItem];\n    });\n  };\n\n  const onAddOtherDocuments = () => {\n    const newDocument = {\n      ...dummySavedDocStructureInList,\n      listKey: Math.random().toString(36).substring(2),\n    };\n\n    setOtherDocsTemplateList((prev) => {\n      return [...prev, newDocument];\n    });\n  };\n\n  const onUpdateAddress = async (data: any) => {\n    return ResidentialService.saveForDde(data)\n      .then((res) => {\n        if (validatePutAPIResponse(res)) {\n          getAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setAddressMode(PAGE_MODE.VIEW);\n          getResidentialAddress();\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onPostAddress = async (payload: any) => {\n    return ResidentialService.save(payload)\n      .then((res) => {\n        if (validatePostAPIResponse(res)) {\n          getAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setAddressMode(PAGE_MODE.VIEW);\n          getResidentialAddress();\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onSaveAddress = async () => {\n    const data = addressRef?.current?.save();\n    const uploadedDocsInfo = addressDocUploaderRef?.current?.getUploadedData();\n\n    if (!data || !uploadedDocsInfo) {\n      return;\n    }\n\n    if (data) {\n      const payload = enrichAddressData(\n        {\n          ...data,\n          uid: addressData?.uid,\n          addressDocumentsInfo: uploadedDocsInfo ?? {},\n        },\n        loanId,\n        applicantId,\n        APPLICANT_TYPE.PRIMARY\n      );\n\n      if (addressData.uid) {\n        return onUpdateAddress(payload);\n      } else {\n        return onPostAddress(payload);\n      }\n    }\n  };\n\n  const onCancelAddress = () => {\n    addressRef?.current?.resetValidator();\n    addressDocUploaderRef?.current?.resetValidator();\n    setAddressMode(PAGE_MODE.VIEW);\n  };\n\n  const onPrePopulate = async (section: string) => {\n    return KYCService.getPopulateDocumentByKyc(loanId, applicantId)\n      .then((res: any) => {\n        if (validateGetAPIResponse(res)) {\n          const [firstName, middleName, lastName] = res?.data?.name.split(\" \") ?? \"\";\n          res.data = {\n            ...res.data,\n            address: res?.data?.address ?? \"\",\n            firstName: firstName,\n            middleName: middleName,\n            lastName: lastName,\n          };\n          setPrepopulatedData(res.data);\n\n          if (section === SECTION_NAME.ADDRESS) {\n            setPrePopulateAddress((prevState: boolean) => !prevState);\n          }\n\n          if (section === SECTION_NAME.BASIC_INFO) {\n            setPrePopulateBasicInfo((prevState: boolean) => !prevState);\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const updateBasicInfo = async (data: any) => {\n    const payload = enrichBasicInfoData(data, loanId, applicantId, APPLICANT_TYPE.PRIMARY);\n\n    return BasicInformationService.updateDde(payload)\n      .then((res: any) => {\n        if (validatePutAPIResponse(res)) {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setBasicInfoSectionMode(PAGE_MODE.VIEW);\n          setAddressMode(PAGE_MODE.CREATE);\n\n          getBasicInfo();\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const createBasicInfo = async (data: any) => {\n    const payload = enrichBasicInfoData(data, loanId, applicantId, APPLICANT_TYPE.PRIMARY);\n\n    return BasicInformationService.saveDde(payload)\n      .then((res: any) => {\n        if (validatePostAPIResponse(res)) {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setBasicInfoSectionMode(PAGE_MODE.VIEW);\n          setAddressMode(PAGE_MODE.CREATE);\n\n          getBasicInfo();\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onSaveBasicInformation = async () => {\n    const data = basicInformationRef?.current?.save();\n    if (!data) {\n      return Promise.resolve(true);\n    }\n\n    if (data) {\n      if (data.uid) {\n        return updateBasicInfo(data);\n      } else {\n        return createBasicInfo(data);\n      }\n    }\n  };\n\n  const onCancelBasicInformation = () => {\n    basicInformationRef?.current?.cancel();\n    setBasicInfoSectionMode(PAGE_MODE.VIEW);\n  };\n\n  const onSaveEmployeeInfo = async (index: number) => {\n    const data: IEmploymentDetailsData | undefined = employmentRef?.current?.[index]?.save();\n    if (data) {\n      const payload = enrichEmploymentDetailsObj(data, loanId, applicantId, APPLICANT_TYPE.PRIMARY);\n\n      if (data.uid) {\n        try {\n          const res: any = await EmploymentDetailsService.updateEmploymentDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            employmentRef?.current?.[index]?.onSaveSuccess();\n            getEmploymentInfo(true);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res: any = await EmploymentDetailsService.createEmploymentDetail(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            getEmploymentInfo(true);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onSaveBankAccountInfo = async (index: number) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        applicantId,\n        APPLICANT_TYPE.PRIMARY\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            bankAccountRef?.current?.[index]?.onSaveSuccess();\n            getBankAccountInfo(true);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res = await BankAccountDetailsService.createBankAccountDetail(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n\n            getBankAccountInfo(true);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onSaveReferences = async (index: number) => {\n    // @ts-ignore: will fix later\n    const referencesPageObj: IReferencesData = referenceRef?.current?.[index].save();\n    //create reference\n    if (!referencesPageObj.uid) {\n      const payload = enrichReferencesObj(loanId, applicantId, referencesPageObj, applicantId);\n      try {\n        const res = await ReferenceService.saveReferences(payload, SUB_STAGE.DDE);\n\n        if (validatePostAPIResponse(res)) {\n          getSavedReferences();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n    //update reference\n    else {\n      const payload = enrichReferencesObj(loanId, applicantId, referencesPageObj, applicantId);\n      try {\n        const res = await ReferenceService.updateReference(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          getSavedReferences();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveReference = async (index: number) => {\n    //@ts-ignore: will fix later\n    const referencesPageObj: IReferencesData = referenceRef?.current?.[index].remove();\n    const payload = enrichReferencesObj(loanId, applicantId, referencesPageObj, applicantId);\n    try {\n      const res = await ReferenceService.updateReference(payload, SUB_STAGE.DDE);\n      if (validatePutAPIResponse(res)) {\n        getSavedReferences();\n        setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n        setTriggerToast(!triggerToast);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onSaveOtherDetails = async () => {\n    const data = otherDetailsRef.current?.save();\n    if (data) {\n      const payload = enrichOtherDetails(data, loanId, applicantId, APPLICANT_TYPE.PRIMARY);\n      if (payload) {\n        try {\n          let otherDetailsSaveApi = OtherDetailsService.create;\n          if (data.permanentAddressUid) {\n            otherDetailsSaveApi = OtherDetailsService.update;\n          }\n\n          await otherDetailsSaveApi(payload);\n          getOtherDetails();\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          otherDetailsRef.current?.onSaveSuccess();\n        } catch (err) {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        }\n      }\n    }\n  };\n\n  const onDeleteOtherDetailDocs = async (updatedData: any) => {\n    const preparedPayload = enrichOtherDetails(\n      updatedData,\n      loanId,\n      applicantId,\n      APPLICANT_TYPE.PRIMARY\n    );\n    if (preparedPayload) {\n      try {\n        const res = await OtherDetailsService.update(preparedPayload);\n        if (validatePutAPIResponse(res)) {\n          getOtherDetails();\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onSaveInvestmentInfo = async () => {\n    // @ts-ignore: will fix later\n    const investmentInfoPageObj: IInvestmentInfoData = investmentInfoRef?.current?.save();\n    const preparedPayload = enrichInvestmentInfoDetails(\n      loanId,\n      applicantId,\n      investmentInfoPageObj,\n      APPLICANT_TYPE.PRIMARY\n    );\n\n    try {\n      const res = await InvestmentInfoService.updateInvestmentInformation(\n        preparedPayload,\n        SUB_STAGE.DDE\n      );\n\n      if (validatePutAPIResponse(res)) {\n        getSavedInvestmentInfo();\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setInvestmentInfoSectionMode(PAGE_MODE.VIEW);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onDeleteInvestmentProof = async (investmentInfoPageObj: IInvestmentInfoData) => {\n    const preparedPayload = enrichInvestmentInfoDetails(\n      loanId,\n      applicantId,\n      investmentInfoPageObj,\n      APPLICANT_TYPE.PRIMARY\n    );\n    try {\n      const res = await InvestmentInfoService.updateInvestmentInformation(\n        preparedPayload,\n        SUB_STAGE.DDE\n      );\n      if (validatePutAPIResponse(res)) {\n        getSavedInvestmentInfo(true);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onRemoveEmploymentDetails = async (index: number) => {\n    const data: IEmploymentDetailsData | undefined = employmentRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichEmploymentDetailsObj(data, loanId, applicantId, APPLICANT_TYPE.PRIMARY);\n\n      if (data.uid) {\n        try {\n          const res: any = await EmploymentDetailsService.updateEmploymentDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            getEmploymentInfo();\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n            setTriggerToast(!triggerToast);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        setEmploymentInfoList(() => {\n          const newEmploymentInfoList = employmentInfoList.filter(\n            (_, idx: number) => idx !== index\n          );\n          return [...newEmploymentInfoList];\n        });\n      }\n    }\n  };\n\n  const onRemoveBankAccountDetails = async (index: number) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        applicantId,\n        APPLICANT_TYPE.PRIMARY\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            getBankAccountInfo();\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n            setTriggerToast(!triggerToast);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        setBankAccountDetailsList(() => {\n          const newBankAccountDetailsList = bankAccountDetailsList.filter(\n            (_, idx: number) => idx !== index\n          );\n          return [...newBankAccountDetailsList];\n        });\n      }\n    }\n  };\n\n  //delete reference from the list\n  const onDeleteFromList = (itemIndex?: number) => {\n    setReferenceInfoList(() => {\n      const newReferenceList = referenceInfoList.filter((_, index) => index !== itemIndex);\n      return [...newReferenceList];\n    });\n  };\n\n  const onSaveOtherDocuments = async () => {\n    const payloadData = otherDocsRef.current?.save();\n    if (!payloadData) {\n      return;\n    }\n\n    try {\n      const res = await OtherDocumentService.saveDocument(STAGE.LOGIN, SUB_STAGE.DDE, payloadData);\n\n      if (validatePutAPIResponse(res)) {\n        setOtherDocsSectionMode(PAGE_MODE.VIEW);\n        setIsLoadingOtherDocs(true);\n        getOtherDocumentsOfApplicant();\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onCancelOtherDocuments = () => {\n    getOtherDocumentsOfApplicant();\n    setOtherDocsSectionMode(PAGE_MODE.VIEW);\n  };\n\n  const onRemoveOtherDocsFromList = async (docInfo: IDocumentInfo, itemIndex: number) => {\n    if (docInfo.uid) {\n      const deletedOtherDoc = { ...docInfo };\n      deletedOtherDoc.isActive = false;\n\n      const payloadData = enrichOtherDocuments([deletedOtherDoc], {\n        loanUid: loanId,\n        applicantUid: applicantId,\n        loanSectionKey: LOAN_SECTION_KEY_TYPES.applicants,\n      });\n\n      try {\n        const res = await OtherDocumentService.saveDocument(\n          STAGE.LOGIN,\n          SUB_STAGE.DDE,\n          payloadData\n        );\n\n        if (validatePutAPIResponse(res)) {\n          setIsLoadingOtherDocs(true);\n          getOtherDocumentsOfApplicant();\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n\n    if (itemIndex !== undefined) {\n      deleteDocInOtherDocsList(itemIndex);\n    }\n  };\n\n  const onLazyLoadEmploymentInfo = () => {\n    const functionsToCall = [];\n    functionsToCall.push(initialEmploymentInfoDropdownOptionsAPICall);\n    if (applicantId) {\n      functionsToCall.push(getEmploymentInfo);\n    }\n\n    for (const func of functionsToCall) {\n      func();\n    }\n  };\n\n  const onLazyLoadBankAccountInfo = () => {\n    const functionsToCall = [];\n    functionsToCall.push(initialBankAccountInfoDropdownOptionsAPICall);\n    if (applicantId) {\n      functionsToCall.push(getBankAccountInfo);\n    }\n\n    for (const func of functionsToCall) {\n      func();\n    }\n  };\n\n  const onLazyLoadOtherDetails = () => {\n    if (applicantId) {\n      getOtherDetails();\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const initialEmploymentInfoDropdownOptionsAPICall = () => {\n    getEmploymentNatureOptions();\n    getIndustryOptions();\n    getOccupationOptions();\n    getManagedByOptions();\n    getSeasonalityOptions();\n    getNoOfEmployeesOptions();\n  };\n\n  const initialBankAccountInfoDropdownOptionsAPICall = () => {\n    getBankAccountOptions();\n  };\n\n  const getSectionsByDocumentUid = async (uid: string) => {\n    const savedDocuments = await getSavedKycDocuments();\n    const sections = savedDocuments[uid];\n    return sections;\n  };\n\n  //delete kyc doc card in list\n  const deleteKycDocInList = (itemIndex?: number) => {\n    setKycDocumentTemplateList(() => {\n      const newKycDocList = kycDocumentTemplateList.filter((_, index) => index !== itemIndex);\n      return [...newKycDocList];\n    });\n  };\n\n  //update the unique kyc card name tracker list\n  const updateUniqueTrackerList = (list: string[]) => {\n    setUniqueKycCardTracker([...list]);\n  };\n\n  //delete document uploader from other documents template list\n  const deleteDocInOtherDocsList = (itemIndex?: number) => {\n    setOtherDocsTemplateList(() => {\n      const newDocsList = otherDocsTemplateList.filter((_, index) => index !== itemIndex);\n      return [...newDocsList];\n    });\n  };\n\n  //structure the saved address proof\n  const getSavedAddressDocumentAndStructure = () => {\n    const structuredLoanDoc = structLoanDocumentsFromAPIResponse(addressData?.loanDocuments);\n    return structuredLoanDoc?.length ? structuredLoanDoc : [];\n  };\n\n  const getOCRRelatedData = () => {\n    return {\n      ocrStageName: OCR_STAGE_NAMES.LOGIN,\n      ocrSubstageName: SUB_STAGE.DDE,\n      ocrPayloadData: {\n        loanUid: loanId,\n        applicant: {\n          uid: applicantId,\n        },\n      },\n    };\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const basicInfoPrePopulatedData = useMemo(() => {\n    return prepopulatedData;\n  }, [prePopulateBasicInfo]);\n\n  const renderBasicInformation = () => {\n    return (\n      <BasicInformation\n        pageMode={basicInfoSectionMode}\n        ref={basicInformationRef}\n        prePopulated={basicInfoPrePopulatedData}\n        data={basicInformationData}\n        type={\"DDE\"}\n        isLoading={isBasicInfoLoading}\n        ocrRelatedData={getOCRRelatedData()}\n      />\n    );\n  };\n\n  const renderAddress = () => {\n    return isResidentialAddressSectionLoading ? (\n      <SkeletonCustom height=\"19rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n    ) : (\n      <Address pageMode={addressMode} ref={addressRef} data={addressData}>\n        <div className=\"flex flex-col gap-3 \">\n          <TextData\n            label=\"label.text.address.proof*\"\n            value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n            titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n          />\n\n          <DocumentUploader\n            mandatoryDocUpload\n            ref={addressDocUploaderRef}\n            mode={\n              addressMode === PAGE_MODE.CREATE ? DOC_UPLOADER_MODE.EDIT : DOC_UPLOADER_MODE.VIEW\n            }\n            savedDocument={getSavedAddressDocumentAndStructure()?.[0] ?? dummySavedDocStructure}\n            queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF}\n            ocrStageName={OCR_STAGE_NAMES.LOGIN}\n            ocrSubstageName={SUB_STAGE.DDE}\n            ocrPayloadData={{\n              loanUid: loanId,\n              applicant: {\n                uid: applicantId,\n              },\n            }}\n          />\n        </div>\n      </Address>\n    );\n  };\n\n  const renderKycDocuments = () => {\n    return (\n      <React.Fragment>\n        {kycDocumentTemplateList.map((template, index) => {\n          return (\n            <div key={`document-${template.listId}`}>\n              {\n                <KYCV3\n                  mode={\"EDIT\"}\n                  isLoading={isLoadingKycDoc}\n                  uid={template.uid}\n                  documentListIndex={index}\n                  docName={template.docName}\n                  docNo={template.docNo}\n                  dateOfBirth={template.dob}\n                  docSections={template.docSections}\n                  maskedDocNo={template.maskedDocNo}\n                  isVerified={template.isVerified}\n                  removeDocumentInList={deleteKycDocInList}\n                  cardNameList={uniqueKycCardTracker}\n                  handlerCardNameList={updateUniqueTrackerList}\n                  ocrStatus={populateOcr}\n                  onSave={onSaveKycDocument}\n                  onRemove={onRemoveKycDocument}\n                  onPopulate={onPopulateWithOcr}\n                  onVerifyAadhar={onVerifyAadhar}\n                  aadharVerificationStatus={aadhaarVerificationStatus}\n                  handlerAadharVerificationStatus={() => {\n                    setAadhaarVerificationStatus({\n                      verified: false,\n                      failedToVerify: false,\n                    });\n                  }}\n                  placeOfUpload={PLACE_OF_UPLOAD_KYC.LOGIN_APPLICANT}\n                />\n              }\n            </div>\n          );\n        })}\n      </React.Fragment>\n    );\n  };\n\n  const renderEmployeeDetails = (): React.ReactNode => {\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {employmentInfoList?.map((employeeInfo: any, index: number) => (\n          <EmploymentDetails\n            isLatLong\n            key={employeeInfo?.uid}\n            ref={(refValue) => {\n              employmentRef.current[index] = refValue as IEmploymentDetailsRef;\n            }}\n            pageType={PAGE_TYPE.APPLICANT}\n            cardNumber={index + 1}\n            data={employeeInfo}\n            documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BUSINESS_PROOF}\n            isLoading={isLoadingEmploymentDetails}\n            dropDownOptions={dropdownOptions}\n            addressDetails={{ residentialAddress: residentialAddress }}\n            ocrRelatedData={getOCRRelatedData()}\n            onSaveEmploymentDetails={() => onSaveEmployeeInfo(index)}\n            onRemoveEmploymentDetails={() => onRemoveEmploymentDetails(index)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderBankAccountDetails = () => {\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {bankAccountDetailsList?.map((bankAccountInfo: any, index: number) => (\n          <BankAccountDetails\n            key={bankAccountInfo?.uid}\n            ref={(refValue) => {\n              bankAccountRef.current[index] = refValue as IBankAccountDetailsRef;\n            }}\n            cardNumber={index + 1}\n            data={bankAccountInfo}\n            documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BANK_ACCOUNT_DOCUMENT}\n            isLoading={isLoadingBankAccountDetails}\n            dropDownOptions={dropdownOptions}\n            ocrRelatedData={getOCRRelatedData()}\n            onSaveBankAccountDetails={() => onSaveBankAccountInfo(index)}\n            onRemoveBankAccountDetails={() => onRemoveBankAccountDetails(index)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderOtherDocuments = () => {\n    return (\n      <React.Fragment>\n        <OtherDocuments\n          ref={otherDocsRef}\n          isLoading={isLoadingOtherDocs}\n          otherDocumentsData={otherDocsTemplateList}\n          sectionMode={otherDocsSectionMode}\n          payloadInfo={{\n            loanUid: loanId,\n            applicantUid: applicantId,\n            loanSectionKey: LOAN_SECTION_KEY_TYPES.applicants,\n          }}\n          onRemoveDocFromList={onRemoveOtherDocsFromList}\n        />\n      </React.Fragment>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      <div className=\"flex flex-col gap-4\">\n        <Section title=\"heading.basicInformation\" >\n          <>\n            <SaveComponent\n              title=\"heading.kycDocuments.nameContact\"\n              pageMode={basicInfoSectionMode}\n              onSave={onSaveBasicInformation}\n              onCancel={onCancelBasicInformation}\n              onEdit={() => setBasicInfoSectionMode(PAGE_MODE.CREATE)}\n              onPrePopulate={() => onPrePopulate(SECTION_NAME.BASIC_INFO)}\n            >\n              {renderBasicInformation()}\n            </SaveComponent>\n\n            <SaveComponent\n              title=\"label.heading.residential.address\"\n              pageMode={addressMode}\n              onSave={onSaveAddress}\n              onCancel={onCancelAddress}\n              onEdit={() => setAddressMode(PAGE_MODE.CREATE)}\n              onPrePopulate={() => onPrePopulate(SECTION_NAME.ADDRESS)}\n            >\n              {renderAddress()}\n            </SaveComponent>\n          </>\n        </Section>\n\n        <Section title=\"KYC Documents\" alertText={\"Either PAN or Form - 60 are mandatory\"}>\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader>\n              <React.Fragment>\n                <div className=\"grid grid-cols-2 gap-x-4 gap-y-5\">{renderKycDocuments()}</div>\n                <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                    customLabel={\"Add Another Document\"}\n                    onClick={onAddDocument}\n                  />\n                </div>\n              </React.Fragment>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title=\"heading.dde.otherDetails\">\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader onLazyLoad={onLazyLoadOtherDetails}>\n              <OtherDetails\n                ref={otherDetailsRef}\n                data={otherDetails}\n                isLoading={isLoadingOtherDetails}\n                addressDetails={{ residentialAddress: residentialAddress }}\n                onSaveDetails={onSaveOtherDetails}\n                onError={onOtherDetailsError}\n                onDeleteDocs={onDeleteOtherDetailDocs}\n                page={OTHER_DETAILS_PAGE.APPLICANT}\n              />\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section\n          title=\"heading.dde.employmentInformation\"\n          alertText={\"At least one employment detail is mandatory\"}\n        >\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader onLazyLoad={onLazyLoadEmploymentInfo}>\n              {renderEmployeeDetails()}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.employmentDetail\"}\n                  onClick={onAddMoreEmployInfo}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section\n          title=\"heading.dde.bankAccount.details\"\n          alertText={\"At least one bank account detail is mandatory\"}\n        >\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader onLazyLoad={onLazyLoadBankAccountInfo}>\n              {renderBankAccountDetails()}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.bankAccount.details\"}\n                  onClick={onAddMoreBankDetails}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title={`heading.references`} alertText={\"At least two references are mandatory\"}>\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader>\n              <div className=\"flex flex-col gap-4\">\n                {referenceInfoList.map((referenceInfo, index) => {\n                  return (\n                    <References\n                      key={`applicant-${referenceInfo.listId}`}\n                      listIndex={index}\n                      isLoading={isLoadingReferences}\n                      pageObjData={referenceInfo}\n                      ref={(refValue) => {\n                        referenceRef.current[index] = refValue as IReferencesRef;\n                      }}\n                      onDeleteFromList={onDeleteFromList}\n                      onSaveReferences={() => onSaveReferences(index)}\n                      onRemoveReference={() => onRemoveReference(index)}\n                    />\n                  );\n                })}\n              </div>\n\n              <div className=\"p-5 mt-5 w-full rounded-xl bg-slate-100 \">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Reference\"}\n                  onClick={onAddReference}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title={`heading.investmentInformation`}>\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader>\n              <InvestmentInformation\n                isLoading={isLoadingInvestmentInfo}\n                ref={investmentInfoRef}\n                loanUid={loanId}\n                pageId={applicantId}\n                sectionMode={investmentInfoSectionMode}\n                savedInvestmentInfo={investmentInfoData}\n                onSaveInvestmentInfo={onSaveInvestmentInfo}\n                onDeleteInvestmentProof={onDeleteInvestmentProof}\n                onCancel={() => setInvestmentInfoSectionMode(PAGE_MODE.VIEW)}\n                onEdit={() => setInvestmentInfoSectionMode(PAGE_MODE.CREATE)}\n              />\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title={\"label.heading.otherDocuments\"}>\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader>\n              <React.Fragment>\n                <SaveComponent\n                  title={\"\"}\n                  pageMode={otherDocsSectionMode}\n                  onSave={onSaveOtherDocuments}\n                  onCancel={onCancelOtherDocuments}\n                  onEdit={() => setOtherDocsSectionMode(PAGE_MODE.CREATE)}\n                >\n                  {renderOtherDocuments()}\n                </SaveComponent>\n                <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                    customLabel={\"Add Another Document\"}\n                    onClick={onAddOtherDocuments}\n                  />\n                </div>\n              </React.Fragment>\n            </LazyLoader>\n          )}\n        </Section>\n      </div>\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Applicant;\n"],"names":["initialInvestmentInfoData","Applicant","loanId","useParams","applicantId","setApplicantId","useState","basicInformationData","setBasicInformationData","initialBasicInformationData","basicInfoSectionMode","setBasicInfoSectionMode","PAGE_MODE","prepopulatedData","setPrepopulatedData","isBasicInfoLoading","setIsBasicInfoLoading","isResidentialAddressSectionLoading","setIsResidentialAddressSectionLoading","prePopulateBasicInfo","setPrePopulateBasicInfo","addressData","setAddressData","addressMode","setAddressMode","prePopulateAddress","setPrePopulateAddress","kycDocumentTemplateList","setKycDocumentTemplateList","initialKycTemplateListData","kycCardCount","setKycCardCount","isLoadingKycDoc","setIsLoadingKycDoc","uniqueKycCardTracker","setUniqueKycCardTracker","populateOcr","setPopulateOcr","aadhaarVerificationStatus","setAadhaarVerificationStatus","referenceInfoList","setReferenceInfoList","initialReferenceData","isLoadingReferences","setIsLoadingReferences","refCardCount","setRefCardCount","investmentInfoData","setInvestmentInfoData","investmentInfoSectionMode","setInvestmentInfoSectionMode","isLoadingInvestmentInfo","setIsLoadingInvestmentInfo","employmentInfoList","setEmploymentInfoList","initialEmploymentData","isLoadingEmploymentDetails","setIsLoadingEmploymentDetails","bankAccountDetailsList","setBankAccountDetailsList","initialBankAccountDetailsData","isLoadingBankAccountDetails","setIsLoadingBankAccountDetails","residentialAddress","setResidentialAddress","isLoadingOtherDetails","setIsLoadingOtherDetails","otherDetails","setOtherDetails","initialOtherDetailsData","otherDocsTemplateList","setOtherDocsTemplateList","dummySavedDocStructureInList","otherDocsSectionMode","setOtherDocsSectionMode","isLoadingOtherDocs","setIsLoadingOtherDocs","position","setPosition","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","dropdownOptions","setDropdownOptions","toastMessageRef","useRef","basicInformationRef","employmentRef","bankAccountRef","referenceRef","investmentInfoRef","otherDetailsRef","addressRef","addressDocUploaderRef","otherDocsRef","useEffect","init","getBasicInfo","getAllSavedKycDocuments","getSavedReferences","getAddress","getResidentialAddress","getSavedInvestmentInfo","getOtherDocumentsOfApplicant","_a","prevState","_b","getApplicantId","BasicInformationService","res","validateGetAPIResponse","updateBasicInfoObj","error","ResidentialService","err","parseStandardAPIErrorMessage","ApplicantService","APPLICANT_TYPE","_d","_c","getSavedKycDocuments","KYCService","data","savedItems","kycDocuments","savedDocsName","getAllSectionsInfo","sections","section","savedItem","_e","_g","_f","_i","_h","_k","_j","_n","_m","_l","getEmploymentInfo","isIgnoreLoader","EmploymentDetailsService","savedEmployeeInfo","employeeInfo","updateEmploymentInfoObj","getBankAccountInfo","BankAccountDetailsService","savedBankAccountInfo","bankAccountInfo","updateBankAccountInfoObj","ReferenceService","savedReferences","savedReferencesList","savedReference","_o","_p","Residential","getOtherDetails","OtherDetailsService","updateOtherDetailsObj","getEmploymentNatureOptions","StaticMasterDataService","getIndustryOptions","Industry","getOccupationOptions","getManagedByOptions","getSeasonalityOptions","getNoOfEmployeesOptions","getBankAccountOptions","InvestmentInfoService","savedInvestmentInfo","prev","onOtherDetailsError","clientValidation","OtherDocumentService","STAGE","preparedListOfOtherDocuments","document","structSavedDocStrucutureForOtherDocuments","onSaveKycDocument","documentInfo","itemIndex","getSectionsByDocumentUid","payload","enrichUpdateKycDocument","SUB_STAGE","validatePutAPIResponse","parsedOcrMeta","getMaskedUrlForSection","sectionType","DOCUMENT_SECTION","prepareMaskedDocSections","DOCUMENT_TYPE","item","STATIC_MASTER_TYPE_TOAST_TEXT","enrichSaveKycDocument","validatePostAPIResponse","idx","onRemoveKycDocument","deleteKycDocInList","onPopulateWithOcr","enrichPopulateDocWithOcr","onVerifyAadhar","aadharOtpInfo","uid","enrichAadharValidation","onAddDocument","newDocumentList","prevCount","onAddMoreEmployInfo","newEmployListItem","onAddReference","newReferenceList","onAddMoreBankDetails","newBankAccountListItem","onAddOtherDocuments","newDocument","onUpdateAddress","onPostAddress","onSaveAddress","uploadedDocsInfo","enrichAddressData","onCancelAddress","onPrePopulate","firstName","middleName","lastName","SECTION_NAME","updateBasicInfo","enrichBasicInfoData","createBasicInfo","onSaveBasicInformation","onCancelBasicInformation","onSaveEmployeeInfo","index","enrichEmploymentDetailsObj","onSaveBankAccountInfo","enrichBankAccountDetailsObj","onSaveReferences","referencesPageObj","enrichReferencesObj","onRemoveReference","onSaveOtherDetails","enrichOtherDetails","otherDetailsSaveApi","onDeleteOtherDetailDocs","updatedData","preparedPayload","onSaveInvestmentInfo","investmentInfoPageObj","enrichInvestmentInfoDetails","onDeleteInvestmentProof","onRemoveEmploymentDetails","_","onRemoveBankAccountDetails","onDeleteFromList","onSaveOtherDocuments","payloadData","onCancelOtherDocuments","onRemoveOtherDocsFromList","docInfo","deletedOtherDoc","enrichOtherDocuments","LOAN_SECTION_KEY_TYPES","deleteDocInOtherDocsList","onLazyLoadEmploymentInfo","functionsToCall","initialEmploymentInfoDropdownOptionsAPICall","func","onLazyLoadBankAccountInfo","initialBankAccountInfoDropdownOptionsAPICall","onLazyLoadOtherDetails","updateUniqueTrackerList","list","getSavedAddressDocumentAndStructure","structuredLoanDoc","structLoanDocumentsFromAPIResponse","getOCRRelatedData","OCR_STAGE_NAMES","basicInfoPrePopulatedData","useMemo","renderBasicInformation","jsx","BasicInformation","renderAddress","SkeletonCustom","Address","jsxs","TextData","DocumentUploader","DOC_UPLOADER_MODE","dummySavedDocStructure","DOCUMENT_CATEGORY","renderKycDocuments","React","template","KYCV3","PLACE_OF_UPLOAD_KYC","renderEmployeeDetails","EmploymentDetails","refValue","PAGE_TYPE","renderBankAccountDetails","BankAccountDetails","renderOtherDocuments","OtherDocuments","Section","Fragment","SaveComponent","LazyLoader","ButtonBox","BUTTON_TYPE","OtherDetails","OTHER_DETAILS_PAGE","referenceInfo","References","InvestmentInformation","ToastCustom","ErrorDialog"],"mappings":"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"}