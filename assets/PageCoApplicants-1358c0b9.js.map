{"version":3,"file":"PageCoApplicants-1358c0b9.js","sources":["../../src/views/transaction/PageDDE/Login/PageCoApplicants/PageCoApplicants.tsx"],"sourcesContent":["import Address, { IAddressRef } from \"components/Address\";\nimport BasicInformation, {\n  IBasicInformationRef,\n  initialBasicInformationData,\n} from \"components/BasicInformation\";\nimport ButtonBox from \"components/ButtonBox\";\nimport DocumentUploader, {\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  ISavedDocumentRecords,\n  dummySavedDocStructureInList,\n} from \"components/DocumentUploader\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport KYCV3, {\n  IAadharOTP,\n  IAadharVerification,\n  IKycDocumentCardListInfo,\n  IPopulateOcr,\n} from \"components/KYCV3\";\nimport LazyLoader from \"components/LazyLoader\";\nimport Loader from \"components/Loader\";\nimport { PLACE_OF_UPLOAD_KYC } from \"components/MediaGallery/MediaGallery\";\nimport OtherDocuments, {\n  IOtherDocumentsRef,\n  LOAN_SECTION_KEY_TYPES,\n  STAGE,\n} from \"components/OtherDocuments/OtherDocuments\";\nimport RadioButton from \"components/RadioButton\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\nimport SimpleTab from \"components/SimpleTab\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport WarningDialog from \"components/WarningDialog\";\nimport { ISectionDropdownOption } from \"interface/common\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ApplicantService from \"services/ApplicantService\";\nimport KYCService from \"services/KYCService\";\nimport Industry from \"services/masterdata/Industry\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport AddressService from \"services/transaction/DDE/AddressService\";\nimport BankAccountDetailsService from \"services/transaction/DDE/BankAccountDetailsService\";\nimport EmploymentDetailsService from \"services/transaction/DDE/EmploymentDetailsService\";\nimport OtherDetailsService from \"services/transaction/DDE/OtherDetailsService\";\nimport InvestmentInfoService from \"services/transaction/InvestmentInfoService\";\nimport OtherDocumentService from \"services/transaction/OtherDocumentService\";\nimport BasicInformationService from \"services/transaction/QDE/BasicInformation\";\nimport ResidentialService from \"services/transaction/QDE/Residential\";\nimport ReferenceService from \"services/transaction/ReferenceService\";\nimport ShortUniqueId from \"short-unique-id\";\nimport {\n  checkDataHasValue,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  ADDRESS_TYPE_VALUES,\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  DOCUMENT_SECTION,\n  DOCUMENT_TYPE,\n  OCR_STAGE_NAMES,\n  OTHER_DETAILS_PAGE,\n  PAGE_MODE,\n  PAGE_TYPE,\n  SECTION_NAME,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n  VARIANTS,\n} from \"utils/Constant\";\nimport { IKycDocuments } from \"views/transaction/PageQDE\";\nimport {\n  enrichAadharValidation,\n  enrichAddressData,\n  enrichBankAccountDetailsObj,\n  enrichBasicInfoData,\n  enrichEmploymentDetailsObj,\n  enrichInvestmentInfoDetails,\n  enrichOtherDetails,\n  enrichOtherDocuments,\n  enrichPopulateDocWithOcr,\n  enrichReferencesObj,\n  enrichSaveKycDocument,\n  enrichUpdateKycDocument,\n  extractBasicObj,\n  initialBankAccountDetailsData,\n  initialEmploymentData,\n  initialKycTemplateListData,\n  initialOtherDetailsData,\n  structSavedDocStrucutureForOtherDocuments,\n  updateAddressData,\n  updateBankAccountInfoObj,\n  updateBasicInfoObj,\n  updateEmploymentInfoObj,\n  updateOtherDetailsObj,\n} from \"../Helper\";\nimport BankAccountDetails, {\n  IBankAccountDetails,\n  IBankAccountDetailsRef,\n} from \"../PageApplicant/BankAccountDetails\";\nimport EmploymentDetails, {\n  IEmploymentDetailsData,\n  IEmploymentDetailsRef,\n} from \"../PageApplicant/EmploymentDetails\";\nimport InvestmentInformation, {\n  IInvestmentInfoData,\n  IInvestmentInfoRef,\n  initialInvestmentInfoData,\n} from \"../PageApplicant/InvestmentInformation\";\nimport OtherDetails, {\n  IOtherDetailsPageObj,\n  IOtherDetailsRef,\n} from \"../PageApplicant/OtherDetails\";\nimport References, {\n  IReferencesData,\n  IReferencesRef,\n  initialReferenceData,\n} from \"../PageApplicant/References\";\n\n// --------------------------------- page interface ---------------------------------------------- //\ninterface IPageData {\n  basicInformation: { isBasicInfoLoading: boolean; basicInfo: any; basicInfoPageMode: string };\n  addressInfo: {\n    isAddressLoading: boolean;\n    address: any;\n    addressInfoPageMode: string;\n    isSameAsResidentialAddress: boolean;\n    isSameAsPermanentAddress: boolean;\n  };\n  kycDocuments: {\n    isKycLoading: boolean;\n    kycDocList: IKycDocumentCardListInfo[];\n    uniqueKycCardTracker: string[];\n    populateOcr: IPopulateOcr;\n    aadharVerificationStatus: IAadharVerification;\n    savedDocuments: string[]; // saved documents name to check for PAN or Form60 mandatory validation\n  };\n  otherDetails: { isOtherDetailsLoading: boolean; otherDetailsData: IOtherDetailsPageObj };\n  employmentInformation: {\n    isEmploymentInfoLoading: boolean;\n    employmentInfoList: IEmploymentDetailsData[];\n  };\n  bankAccount: { isBankAccountInfoLoading: boolean; bankAccountInfoList: IBankAccountDetails[] };\n  reference: {\n    isReferenceDetailsLoading: boolean;\n    referenceInfoList: IReferencesData[];\n    savedReferencesCount: number;\n  };\n  investmentInfo: {\n    isInvestmentInfoLoading: boolean;\n    investmentInfoData: IInvestmentInfoData;\n    sectionMode: string;\n  };\n  otherDocInfo: {\n    isOtherDocInfoLoading: boolean;\n    otherDocInfoList: ISavedDocumentRecords[];\n    sectionMode: string;\n  };\n}\n\nconst initialPageData: IPageData = {\n  basicInformation: {\n    isBasicInfoLoading: false,\n    basicInfo: { ...initialBasicInformationData },\n    basicInfoPageMode: PAGE_MODE.VIEW,\n  },\n  addressInfo: {\n    isAddressLoading: false,\n    address: {},\n    addressInfoPageMode: PAGE_MODE.VIEW,\n    isSameAsResidentialAddress: false,\n    isSameAsPermanentAddress: false,\n  },\n  kycDocuments: {\n    isKycLoading: false,\n    kycDocList: [initialKycTemplateListData],\n    uniqueKycCardTracker: [],\n    populateOcr: { uid: \"\", success: false, failed: false },\n    aadharVerificationStatus: {\n      verified: false,\n      failedToVerify: false,\n    },\n    savedDocuments: [],\n  },\n  otherDetails: {\n    isOtherDetailsLoading: false,\n    otherDetailsData: { ...initialOtherDetailsData },\n  },\n  employmentInformation: {\n    isEmploymentInfoLoading: false,\n    employmentInfoList: [initialEmploymentData],\n  },\n  bankAccount: {\n    isBankAccountInfoLoading: false,\n    bankAccountInfoList: [initialBankAccountDetailsData],\n  },\n  reference: {\n    isReferenceDetailsLoading: false,\n    referenceInfoList: [initialReferenceData],\n    savedReferencesCount: 0,\n  },\n  investmentInfo: {\n    isInvestmentInfoLoading: false,\n    investmentInfoData: initialInvestmentInfoData,\n    sectionMode: PAGE_MODE.VIEW,\n  },\n  otherDocInfo: {\n    isOtherDocInfoLoading: false,\n    otherDocInfoList: [dummySavedDocStructureInList],\n    sectionMode: PAGE_MODE.VIEW,\n  },\n};\n\n// ----------------------------------------- Functional component ------------------------------------- //\n\nconst PageCoApplicants = () => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n  const uniqueKey = new ShortUniqueId({ length: 5 });\n\n  // ----------------- states ---------------------- //\n  // main page functionality states\n\n  const [isPageCoApplicantLoading, setIsPageCoApplicantLoading] = useState<boolean>(true);\n  const [currentTabDetails, setCurrentTabDetails] = useState<any>({\n    coApplicant: { name: \"New Tab\", key: \"\" },\n    index: null,\n  });\n  const [applicantId, setApplicantId] = useState<string>(\"\");\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n  const [selectedTabIndex, setSelectedTabIndex] = useState<number>(0);\n  const [isSameActiveIndex, setIsSameActiveIndex] = useState<boolean>(false);\n  const [coApplicants, setCoApplicants] = useState<any>([\n    { firstName: \"New Tab\", key: uniqueKey() },\n  ]);\n  const [navigateBack, setNavigateBack] = useState(false); //NOSONAR\n  const [tabAddedFlag, setTabAddedFlag] = useState<boolean>(false);\n  const [prepopulatedData, setPrepopulatedData] = useState<any>({});\n  const [prePopulateBasicInfo, setPrePopulateBasicInfo] = useState<boolean>(false);\n  const [prePopulateAddress, setPrePopulateAddress] = useState<boolean>(false);\n\n  const [dropdownOptions, setDropdownOptions] = useState<ISectionDropdownOption>({\n    EMPLOYMENT_NATURE_OPTION: [],\n    INDUSTRY_OPTION: [],\n    OCCUPATION_OPTION: [],\n    BUSINESS_MANAGED_BY_OPTION: [],\n    SEASONALITY_OPTION: [],\n    NO_EMPLOYEE_OPTION: [],\n  });\n\n  const [applicantAddress, setApplicantAddress] = useState({\n    residential: null,\n    permanent: null,\n  });\n\n  // states for the rendering contents  ( use this instead of creating different states for each )\n  const [pageData, setPageData] = useState<IPageData>({ ...initialPageData });\n\n  const [initiateAPICallForSection, setInitiateAPICallForSection] = useState<any>({\n    basicInfoAPICall: false,\n  });\n\n  const [kycCardCount, setKycCardCount] = useState(1);\n  const [refCardCount, setRefCardCount] = useState(1); // maintain ref card count it's used in key prop while rendering the list of references\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isRemoveTabWarningVisible, setIsRemoveTabWarningVisible] = useState<boolean>(false);\n  const [isSwitchTabWarningVisible, setIsSwitchTabWarningVisible] = useState<boolean>(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const tabRef = useRef<any>(null);\n  const toastMessageRef = useRef(null);\n\n  const basicInfoRef = useRef<IBasicInformationRef | null>(null);\n  const addressRef = useRef<IAddressRef | null>(null);\n  const otherDetailsRef = useRef<IOtherDetailsRef>(null);\n  const employmentInfoRef = useRef<IEmploymentDetailsRef[]>([]);\n  const bankAccountRef = useRef<IBankAccountDetailsRef[]>([]);\n  const referenceRef = useRef<IReferencesRef[]>([]);\n  const investmentInfoRef = useRef<IInvestmentInfoRef>(null);\n  const addressDocUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  const otherDocsRef = useRef<IOtherDocumentsRef | null>(null);\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = (coApplicant: any, index: number) => [\n    {\n      className: \"\",\n      label: \"Remove Co-Applicant\",\n      command: () => {\n        setCurrentTabDetails({ coApplicant: coApplicant, index: index });\n        setIsRemoveTabWarningVisible(true);\n      },\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    // initial empty dependency useEffect\n    // Do not add any dependency for this\n\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (coApplicants[activeIndex]?.uid) {\n      resetPageDataWithUID();\n      getBasicInfo();\n    }\n  }, [activeIndex, isSameActiveIndex]);\n\n  useEffect(() => {\n    if (pageData?.basicInformation?.basicInfo?.uid && coApplicants[activeIndex]?.uid) {\n      getResidentialAddress();\n    }\n  }, [pageData.basicInformation?.basicInfo]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (applicantId) {\n      getApplicantsResidentialAddress();\n      getApplicantsPermanentAddress();\n    }\n  }, [applicantId]);\n\n  useEffect(() => {\n    if (coApplicants[activeIndex]?.uid && !isPageCoApplicantLoading) {\n      getBasicInfo();\n    }\n  }, [isPageCoApplicantLoading, initiateAPICallForSection.basicInfoAPICall]);\n\n  useEffect(() => {\n    if (pageData?.addressInfo?.isSameAsResidentialAddress && applicantAddress?.residential) {\n      updateAddressDetails(applicantAddress?.residential);\n    }\n\n    if (pageData?.addressInfo?.isSameAsPermanentAddress && applicantAddress?.permanent) {\n      updateAddressDetails(applicantAddress?.permanent);\n    }\n  }, [\n    pageData?.addressInfo?.isSameAsResidentialAddress,\n    pageData?.addressInfo?.isSameAsPermanentAddress,\n  ]);\n\n  useEffect(() => {\n    handleTabChange({ index: coApplicants.length - 1 });\n  }, [tabAddedFlag]);\n\n  useEffect(() => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          address: {\n            ...prevState.addressInfo.address,\n            address: prepopulatedData?.address,\n            pincode: {\n              pinCode: prepopulatedData?.pincode?.pinCode,\n              uid: prepopulatedData?.pincode?.uid,\n            },\n          },\n        },\n      };\n    });\n  }, [prePopulateAddress]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const getApplicantsResidentialAddress = async () => {\n    if (loanId && applicantId) {\n      try {\n        const res = await AddressService.getAddressWithoutDocForDde(\n          loanId,\n          applicantId,\n          ADDRESS_TYPE_VALUES.RESIDENTIAL\n        );\n        setApplicantAddress((prevObj) => ({\n          ...prevObj,\n          residential: res?.data?.results?.[0],\n        }));\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const getApplicantsPermanentAddress = async () => {\n    if (loanId && applicantId) {\n      try {\n        const res = await AddressService.getAddressWithoutDocForDde(\n          loanId,\n          applicantId,\n          ADDRESS_TYPE_VALUES.PERMANENT\n        );\n        setApplicantAddress((prevObj) => ({\n          ...prevObj,\n          permanent: res?.data?.results?.[0],\n        }));\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.PRIMARY, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setApplicantId(res.data?.results?.[0]?.uid);\n        return res.data?.results?.[0]?.uid ?? \"\";\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getCoApplicantList = async (initiateAPICallFor?: string, callbackFunction?: any) => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(\n        0,\n        20,\n        APPLICANT_TYPE.CO_APPLICANT,\n        loanId\n      );\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        const results: any[] = res.data?.results?.map((item: any, index: number) => {\n          if (!item?.firstName && !item.lastName) {\n            return { ...item, firstName: `Co-App ${index + 1}` };\n          }\n\n          return { ...item };\n        });\n\n        setCoApplicants(results);\n        setIsPageCoApplicantLoading(false);\n\n        if (initiateAPICallFor === \"BASIC_INFO\") {\n          setInitiateAPICallForSection((prevState: any) => {\n            return { ...prevState, basicInfoAPICall: !prevState.basicInfoAPICall };\n          });\n        }\n        if (callbackFunction) {\n          callbackFunction(results);\n        }\n      } else {\n        updateEmptyCoApplicants();\n        setIsPageCoApplicantLoading(false);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getBasicInfo = async (isIgnoreLoader?: boolean) => {\n    const activeCoApplicantObj = coApplicants[activeIndex];\n\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        basicInformation: {\n          ...prev.basicInformation,\n          isBasicInfoLoading: true,\n        },\n      }));\n    }\n\n    try {\n      const res = await BasicInformationService.getDde(activeCoApplicantObj?.uid);\n      if (validateGetAPIResponse(res)) {\n        setPageData((prev: IPageData) => ({\n          ...prev,\n          basicInformation: {\n            ...prev.basicInformation,\n            basicInfo: updateBasicInfoObj(res?.data),\n            isBasicInfoLoading: false,\n            basicInfoPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      } else {\n        setPageData((prev: IPageData) => ({\n          ...prev,\n          basicInformation: {\n            ...prev.basicInformation,\n            isBasicInfoLoading: false,\n            basicInfoPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getAllSavedKycDocuments = async (coApplicantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          isKycLoading: true,\n        },\n      }));\n    }\n\n    try {\n      const res = await KYCService.getKycDocument(loanId, coApplicantId);\n      if (validateGetAPIResponse(res)) {\n        const { data: savedItems } = res;\n        const kycDocuments: IKycDocumentCardListInfo[] = [];\n        const savedDocsName: string[] = [];\n\n        //get the section information for each saved doc\n        const getAllSectionsInfo = (sections: any[]) => {\n          const sectionsInfo = sections.map((section) => {\n            return {\n              sectionUid: section.uid ?? \"\",\n              fileName: section.fileName ?? \"\",\n              fileType: section.fileType ?? \"\",\n              sectionType: section.smDocSectionType ?? \"\",\n              url: section.url,\n            };\n          });\n          return sectionsInfo;\n        };\n\n        //iterating through each saved record to prepare template list object\n        for (const savedItem in savedItems) {\n          //below properties are common in all sections of the document that's why accessing the first item in the array and taking out necessary field data\n          kycDocuments.push({\n            listId: savedItem,\n            uid: savedItem,\n            docName: savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\",\n            docNo: savedItems[savedItem]?.[0].kyc?.docNo ?? \"\",\n            maskedDocNo: savedItems[savedItem]?.[0].kyc?.maskedDocNo ?? \"\",\n            dob: savedItems[savedItem]?.[0].kyc?.dob ?? \"\",\n            docSections: getAllSectionsInfo(savedItems[savedItem]),\n            isVerified: savedItems[savedItem]?.[0].kyc?.isVerified ?? false,\n          });\n\n          savedDocsName.push(savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\");\n        }\n\n        if (kycDocuments.length) {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...kycDocuments],\n                uniqueKycCardTracker: [...savedDocsName],\n                isKycLoading: false,\n              },\n            };\n          });\n        } else {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                isKycLoading: false,\n              },\n            };\n          });\n        }\n      }\n    } catch (err) {\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            isKycLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getResidentialAddress = async (isIgnoreLoader?: boolean) => {\n    const activeCoApplicantObj = coApplicants[activeIndex];\n\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        addressInfo: {\n          ...prev.addressInfo,\n          isAddressLoading: true,\n        },\n      }));\n    }\n\n    if (loanId && activeCoApplicantObj?.uid) {\n      try {\n        const res = await ResidentialService.getAddressForDde(loanId, activeCoApplicantObj?.uid);\n        if (validateGetAPIResponse(res)) {\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            addressInfo: {\n              ...prev.addressInfo,\n              isAddressLoading: false,\n              address: updateAddressData(res.data),\n              isSameAsPermanentAddress: res?.data?.isSameAsApplicantPermanentAddress?true:false,\n              isSameAsResidentialAddress: res?.data?.isSameAsApplicantResAddress?true:false,\n            },\n          }));\n        } else {\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            addressInfo: {\n              ...prev.addressInfo,\n              isAddressLoading: false,\n            },\n          }));\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const getOtherDetails = async (coApplicantId: string) => {\n    if (loanId && coApplicantId) {\n      try {\n        const res = await OtherDetailsService.getDetails(coApplicantId);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            otherDetails: {\n              ...prevState.otherDetails,\n              isOtherDetailsLoading: false,\n              otherDetailsData: updateOtherDetailsObj(\n                res?.data?.permanentAddress,\n                res?.data?.applicant\n              ),\n            },\n          };\n        });\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            otherDetails: {\n              ...prevState.otherDetails,\n              isOtherDetailsLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getEmploymentNatureOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=EMPLOYMENT_NATURE&`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            EMPLOYMENT_NATURE_OPTION: [...res.data.results],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getIndustryOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await Industry.getAll(start, limit, ``).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            INDUSTRY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getOccupationOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=OCCUPATION_TYPE&`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            OCCUPATION_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getManagedByOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=BUSINESS_MANAGED_BY&`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            BUSINESS_MANAGED_BY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getSeasonalityOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=BUSINESS_SEASONALITY_TYPES&`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            SEASONALITY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getNoOfEmployeesOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=NO_OF_EMPLOYEES&`\n    ).then((res: any) => {\n      if (res.data?.results && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            NO_EMPLOYEE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBankAccountOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=ACCOUNT_TYPE&`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            ACCOUNT_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getEmploymentInfo = async (coApplicantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          employmentInformation: {\n            ...prevState.employmentInformation,\n            isEmploymentInfoLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && coApplicantId) {\n      try {\n        const res = await EmploymentDetailsService.getEmploymentDetails(loanId, coApplicantId);\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedEmployeeInfo = res?.data?.map((employeeInfo: any) => {\n              return updateEmploymentInfoObj(employeeInfo);\n            });\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                employmentInformation: {\n                  employmentInfoList: [...savedEmployeeInfo],\n                  isEmploymentInfoLoading: false,\n                },\n              };\n            });\n          } else {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                employmentInformation: {\n                  ...prevState.employmentInformation,\n                  employmentInfoList: [{ ...initialEmploymentData }],\n                  isEmploymentInfoLoading: false,\n                },\n              };\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            employmentInformation: {\n              ...prevState.employmentInformation,\n              isEmploymentInfoLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getBankAccountInfo = async (coApplicantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          bankAccount: {\n            ...prevState.bankAccount,\n            isBankAccountInfoLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && coApplicantId) {\n      try {\n        const res = await BankAccountDetailsService.getBankAccountDetails(loanId, coApplicantId);\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedBankAccountInfo = res?.data?.map((bankAccountInfo: any) => {\n              return updateBankAccountInfoObj(bankAccountInfo);\n            });\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                bankAccount: {\n                  bankAccountInfoList: [...savedBankAccountInfo],\n                  isBankAccountInfoLoading: false,\n                },\n              };\n            });\n          } else {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                bankAccount: {\n                  ...prevState.bankAccount,\n                  isBankAccountInfoLoading: false,\n                  bankAccountInfoList: [{ ...initialBankAccountDetailsData }],\n                },\n              };\n            });\n          }\n        }\n      } catch (error) {\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            bankAccount: {\n              ...prevState.bankAccount,\n              isBankAccountInfoLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getSavedReferences = async (coApplicantId: string) => {\n    setPageData((prev: IPageData) => {\n      return { ...prev, reference: { ...prev.reference, isReferenceDetailsLoading: true } };\n    });\n\n    try {\n      const res = await ReferenceService.getReferences(0, 20, loanId, coApplicantId);\n      if (validateGetAPIResponse(res)) {\n        const { data: savedReferences } = res;\n\n        const savedReferencesList = savedReferences.map(\n          (savedReference: { [key: string]: any }) => {\n            return {\n              uid: savedReference.uid ?? \"\",\n              parentUid: savedReference.applicant?.parent?.uid ?? \"\",\n              referenceApplicantUid: savedReference.applicant?.uid ?? \"\",\n              firstName: savedReference.applicant?.firstName ?? \"\",\n              middleName: savedReference.applicant?.middleName ?? \"\",\n              lastName: savedReference.applicant?.lastName ?? \"\",\n              mobileNo: savedReference.applicant?.mobileNo ?? \"\",\n              relationship: savedReference.applicant?.smRelationship ?? \"\",\n              address: savedReference.address ?? \"\",\n              pincode: {\n                uid: savedReference.pincode?.uid ?? \"\",\n                pinCode: savedReference.pincode?.pinCode ?? \"\",\n              },\n              city: { uid: savedReference.city?.uid ?? \"\", name: savedReference.city?.name ?? \"\" },\n              state: savedReference.city?.state?.name ?? \"\",\n              latitude: savedReference.latitude?.toString() ?? \"\",\n              longitude: savedReference.longitude?.toString() ?? \"\",\n              isActive: savedReference.isActive ?? true,\n            };\n          }\n        );\n\n        if (savedReferences.length) {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              reference: {\n                ...prev.reference,\n                referenceInfoList: [...savedReferencesList],\n                savedReferencesCount: savedReferencesList.length,\n                isReferenceDetailsLoading: false,\n              },\n            };\n          });\n          setRefCardCount(savedReferences.length);\n        } else {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              reference: {\n                ...prev.reference,\n                referenceInfoList: [initialReferenceData],\n                isReferenceDetailsLoading: false,\n              },\n            };\n          });\n        }\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          reference: {\n            ...prev.reference,\n            isReferenceDetailsLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getSavedInvestmentInfo = async (coApplicantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          investmentInfo: {\n            ...prev.investmentInfo,\n            isInvestmentInfoLoading: true,\n          },\n        };\n      });\n    }\n    try {\n      const res = await InvestmentInfoService.getInvestmentInformation(\n        0,\n        20,\n        loanId,\n        coApplicantId\n      );\n      if (validateGetAPIResponse(res)) {\n        const { data: savedInvestmentInfo } = res;\n\n        setPageData((prev: IPageData) => {\n          return {\n            ...prev,\n            investmentInfo: {\n              ...prev.investmentInfo,\n              investmentInfoData: {\n                ...prev.investmentInfo.investmentInfoData,\n                investmentComments: savedInvestmentInfo.commentOnInvestment ?? \"\",\n              },\n              isInvestmentInfoLoading: false,\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          investmentInfo: {\n            ...prev.investmentInfo,\n            isInvestmentInfoLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getOtherDocumentsOfCoApplicant = async (coApplicantId: string) => {\n    try {\n      const res = await OtherDocumentService.getDocsByApplicantType(\n        STAGE.LOGIN,\n        loanId,\n        coApplicantId\n      );\n\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          otherDocInfo: {\n            ...prev.otherDocInfo,\n            isOtherDocInfoLoading: true,\n          },\n        };\n      });\n\n      if (validateGetAPIResponse(res)) {\n        if (res?.data?.length > 0) {\n          const preparedListOfOtherDocuments = res?.data?.map((document: any) => {\n            return structSavedDocStrucutureForOtherDocuments(document);\n          });\n\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                otherDocInfoList: [...preparedListOfOtherDocuments],\n                isOtherDocInfoLoading: false,\n              },\n            };\n          });\n        } else {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                isOtherDocInfoLoading: false,\n              },\n            };\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          otherDocInfo: {\n            ...prev.otherDocInfo,\n            isOtherDocInfoLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const handleTabChange = (e: any) => {\n    let basicInfo: any = basicInfoRef?.current?.getData();\n    basicInfo = extractBasicObj(basicInfo);\n\n    if (\n      e.index !== activeIndex &&\n      !coApplicants?.[activeIndex]?.uid &&\n      checkDataHasValue(basicInfo)\n    ) {\n      setIsSwitchTabWarningVisible(true);\n      setSelectedTabIndex(e.index);\n    } else if (e.index !== activeIndex) {\n      resetPageData();\n      setActiveIndex(e.index);\n    }\n  };\n\n  const handleNavigateTab = () => {\n    resetPageData();\n    setActiveIndex(selectedTabIndex);\n    setIsSwitchTabWarningVisible(false);\n  };\n\n  const handleAadharVerificationStatus = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        kycDocuments: {\n          ...prevState.kycDocuments,\n          aadharVerificationStatus: {\n            verified: false,\n            failedToVerify: false,\n          },\n        },\n      };\n    });\n  };\n\n  const handleAddressChange = (e?: any) => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState?.addressInfo,\n          [e.target.name]: e.checked,\n          isSameAsResidentialAddress:\n            e.target.name === \"isSameAsResidentialAddress\"\n              ? e.checked\n              : prevState.addressInfo.isSameAsPermanentAddress,\n          isSameAsPermanentAddress:\n            e.target.name === \"isSameAsPermanentAddress\"\n              ? e.checked\n              : prevState.addressInfo.isSameAsResidentialAddress,\n        },\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSaveKycDocument = async (\n    documentInfo: IKycDocuments,\n    coApplicantId: string,\n    itemIndex: number\n  ) => {\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n\n    //update request\n    if (documentInfo?.uid) {\n      const sections = await getSectionsByDocumentUid(documentInfo?.uid, coApplicantId);\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        coApplicantId,\n        documentInfo,\n        sections,\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          const updatedList = kycDocList.map((item) => {\n            if (item.uid === data.uid) {\n              return {\n                ...item,\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo,\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                docSections: prepareMaskedDocSections(data.kycDocuments),\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item; // Return the unchanged item if it has a UID\n          });\n\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...updatedList],\n              },\n            };\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n\n          getCoApplicantList(\"BASIC_INFO\", (itemList: any) => {\n            if (itemList.length - 1 < activeIndex) {\n              setActiveIndex(itemList?.length - 1);\n            }\n          });\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n\n    // create request\n    else {\n      const payload = enrichSaveKycDocument(\n        loanId,\n        coApplicantId,\n        documentInfo,\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n      try {\n        const res = await KYCService.saveKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePostAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          const updatedList = kycDocList.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid ?? \"\",\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                docSections: prepareMaskedDocSections(data.kycDocuments),\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...updatedList],\n                savedDocuments: [...prev.kycDocuments.savedDocuments, data.docType?.code],\n                uniqueKycCardTracker: prepareNewKycCardTracker(),\n              },\n            };\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n\n          getCoApplicantList(\"BASIC_INFO\", (itemList: any) => {\n            if (itemList.length - 1 < activeIndex) {\n              setActiveIndex(itemList?.length - 1);\n            }\n          });\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveKycDocument = async (\n    documentInfo: IKycDocuments,\n    coApplicantId: string,\n    itemIndex?: number\n  ) => {\n    if (documentInfo.uid) {\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        coApplicantId,\n        documentInfo,\n        getSectionsByDocumentUid(documentInfo?.uid, coApplicantId),\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          if (itemIndex !== undefined) {\n            deleteKycDocInList(itemIndex);\n          }\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onPopulateWithOcr = async (\n    documentInfo: IKycDocuments,\n    coApplicantId: string,\n    itemIndex: number\n  ) => {\n    const {\n      kycDocuments: { kycDocList, populateOcr },\n    } = pageData;\n    const payload = enrichPopulateDocWithOcr(\n      loanId,\n      coApplicantId,\n      populateOcr.uid,\n      documentInfo,\n      APPLICANT_TYPE.CO_APPLICANT\n    );\n    try {\n      const res = await KYCService.populateKycDocument(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        const updatedList = kycDocList.map((item, idx) => {\n          if (idx === itemIndex) {\n            return {\n              ...item,\n              uid: data.uid,\n              docName: data.docType?.code ?? \"\",\n              docNo: data.docNo ?? \"\",\n              dob: data.dob ?? \"\",\n            };\n          }\n          return item; // Return the unchanged item if it has a UID\n        });\n\n        getCoApplicantList(\"BASIC_INFO\", (itemList: any) => {\n          if (itemList.length - 1 < activeIndex) {\n            setActiveIndex(itemList?.length - 1);\n          }\n        });\n        setPageData((prev) => {\n          return {\n            ...prev,\n            kycDocuments: {\n              ...prev.kycDocuments,\n              kycDocList: [...updatedList],\n              uniqueKycCardTracker: prepareNewKycCardTracker(),\n              populateOcr: {\n                ...prev.kycDocuments.populateOcr,\n                uid: data.uid ?? \"\",\n                success: true,\n                failed: false,\n              },\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            populateOcr: {\n              ...prev.kycDocuments.populateOcr,\n              success: false,\n              failed: true,\n            },\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onVerifyAadhar = async (\n    documentInfo: IKycDocuments,\n    aadharOtpInfo: IAadharOTP,\n    coApplicantId: string,\n    itemIndex: number,\n    uid: string\n  ) => {\n    const payload = enrichAadharValidation(\n      loanId,\n      coApplicantId,\n      documentInfo,\n      aadharOtpInfo,\n      APPLICANT_TYPE.CO_APPLICANT,\n      uid\n    );\n\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n\n    try {\n      const res = await KYCService.validateAadhar(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        const updatedList = kycDocList.map((item, idx) => {\n          if (idx === itemIndex) {\n            return {\n              ...item,\n              uid: data.uid ?? \"\",\n              docName: data.docType?.code ?? \"\",\n              docNo: data.docNo ?? \"\",\n              maskedDocNo: data.maskedDocNo ?? \"\",\n              dob: data.dob ?? \"\",\n            };\n          }\n          return item;\n        });\n\n        getCoApplicantList(\"BASIC_INFO\", (itemList: any) => {\n          if (itemList.length - 1 < activeIndex) {\n            setActiveIndex(itemList?.length - 1);\n          }\n        });\n\n        setPageData((prev) => {\n          return {\n            ...prev,\n            kycDocuments: {\n              ...prev.kycDocuments,\n              kycDocList: [...updatedList],\n              uniqueKycCardTracker: prepareNewKycCardTracker(),\n              aadharVerificationStatus: {\n                ...prev.kycDocuments.aadharVerificationStatus,\n                verified: true,\n              },\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            aadharVerificationStatus: {\n              ...prev.kycDocuments.aadharVerificationStatus,\n              failedToVerify: true,\n            },\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onSaveOtherDetails = async (coApplicantId: string) => {\n    const data = otherDetailsRef.current?.save();\n    if (data) {\n      const payload = enrichOtherDetails(data, loanId, coApplicantId);\n      try {\n        let otherDetailsSaveApi = OtherDetailsService.create;\n        if (data.permanentAddressUid) {\n          otherDetailsSaveApi = OtherDetailsService.update;\n        }\n\n        await otherDetailsSaveApi(payload);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setTriggerToast(!triggerToast);\n        getOtherDetails(coApplicantId);\n        otherDetailsRef.current?.onSaveSuccess();\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onSaveEmployeeInfo = async (index: number, coApplicantId: string) => {\n    const data: IEmploymentDetailsData | undefined = employmentInfoRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichEmploymentDetailsObj(\n        data,\n        loanId,\n        coApplicantId,\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n\n      if (data.uid) {\n        try {\n          const res: any = await EmploymentDetailsService.updateEmploymentDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            employmentInfoRef?.current?.[index]?.onSaveSuccess();\n\n            getEmploymentInfo(coApplicantId);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res: any = await EmploymentDetailsService.createEmploymentDetail(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n\n            getEmploymentInfo(coApplicantId);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onSaveBankAccountInfo = async (index: number, coApplicantId: string) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        coApplicantId,\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            bankAccountRef?.current?.[index]?.onSaveSuccess();\n            getBankAccountInfo(coApplicantId);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res = await BankAccountDetailsService.createBankAccountDetail(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n\n            getBankAccountInfo(coApplicantId);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onAddMoreTabs = () => {\n    setCoApplicants((prevState: any[]) => [\n      ...prevState,\n      {\n        firstName: \"New Tab\",\n        key: uniqueKey(),\n      },\n    ]);\n\n    setTabAddedFlag((prevState: boolean) => !prevState);\n  };\n\n  const onDeleteTab = async (coApplicant: any, index: any) => {\n    if (!coApplicant?.uid) {\n      if (coApplicants.length === 1) {\n        updateEmptyCoApplicants();\n        setIsRemoveTabWarningVisible(false);\n        resetPageData();\n        return;\n      }\n\n      removeDeletedCoApplicant(index);\n      setIsRemoveTabWarningVisible(false);\n    } else {\n      try {\n        const res = await ApplicantService.deleteApplicantInfo(coApplicant?.uid);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          if (coApplicants.length === 1) {\n            updateEmptyCoApplicants();\n            setIsRemoveTabWarningVisible(false);\n            resetPageData();\n            return;\n          }\n\n          removeDeletedCoApplicant(index);\n          setIsRemoveTabWarningVisible(false);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n        setIsRemoveTabWarningVisible(false);\n      }\n    }\n  };\n\n  const onSaveBasicInformations = (coApplicant: any) => {\n    const data = basicInfoRef?.current?.save();\n    if (!data) {\n      return Promise.resolve(true);\n    }\n\n    if (data) {\n      if (!data.uid && coApplicant?.uid) {\n        data.uid = coApplicant?.uid;\n      }\n\n      const payload = enrichBasicInfoData(data, loanId, applicantId, APPLICANT_TYPE.CO_APPLICANT);\n      if (data.uid) {\n        BasicInformationService.updateDde(payload)\n          .then((res: any) => {\n            if (validatePutAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setNavigateBack(true);\n\n              getCoApplicantList(\"BASIC_INFO\");\n            }\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      } else {\n        BasicInformationService.createBasicInformation(payload)\n          .then((res) => {\n            if (validatePostAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setNavigateBack(true);\n              onEditAddressInfo();\n              getCoApplicantList(\"BASIC_INFO\");\n            }\n          })\n          .catch((err: any) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      }\n    }\n  };\n\n  const onUpdateAddress = async (data: any) => {\n    return ResidentialService.saveForDde(data)\n      .then((res) => {\n        if (validatePutAPIResponse(res)) {\n          getResidentialAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n          setPageData((previous) => ({\n            ...previous,\n            addressInfo: { ...previous.addressInfo, addressInfoPageMode: PAGE_MODE.VIEW },\n          }));\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onPostAddress = async (payload: any) => {\n    return ResidentialService.save(payload)\n      .then((res) => {\n        if (validatePostAPIResponse(res)) {\n          getResidentialAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n          setPageData((previous) => ({\n            ...previous,\n            addressInfo: { ...previous.addressInfo, addressInfoPageMode: PAGE_MODE.VIEW },\n          }));\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onSaveAddress = (coApplicantId: string) => {\n    const data = addressRef?.current?.save();\n    const uploadedDocsInfo = addressDocUploaderRef?.current?.getUploadedData();\n\n    if (!data || !uploadedDocsInfo?.documentUid) {\n      // trigger uploader validations if uploader is mandatory\n      return Promise.resolve(true);\n    }\n\n    if (data && uploadedDocsInfo) {\n      const payload = enrichAddressData(\n        {\n          ...data,\n          uid: pageData.addressInfo?.address?.uid,\n          isSameAsApplicantResAddress: pageData.addressInfo?.isSameAsResidentialAddress,\n          isSameAsApplicantPermanentAddress: pageData.addressInfo?.isSameAsPermanentAddress,\n          addressDocumentsInfo: uploadedDocsInfo ?? {},\n        },\n        loanId,\n        coApplicantId,\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n      if (pageData.addressInfo?.address?.uid) {\n        onUpdateAddress(payload);\n      } else {\n        onPostAddress(payload);\n      }\n    }\n  };\n\n  const onEditBasicInfo = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: {\n          ...prevState.basicInformation,\n          basicInfoPageMode: PAGE_MODE.CREATE,\n        },\n      };\n    });\n  };\n\n  const onCancelBasicInfo = () => {\n    basicInfoRef?.current?.cancel();\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: {\n          ...prevState.basicInformation,\n          basicInfoPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onEditAddressInfo = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          addressInfoPageMode: PAGE_MODE.CREATE,\n        },\n      };\n    });\n  };\n\n  const onCancelAddressInfo = () => {\n    addressRef?.current?.resetValidator();\n    addressDocUploaderRef?.current?.resetValidator();\n    addressDocUploaderRef?.current?.resetDocUpload();\n    getResidentialAddress(true);\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          addressInfoPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onLazyLoadEmploymentInfo = (coApplicantId: string) => {\n    // this function can only return Array of API call function\n    // if it is a single function we can pass directly - No need of Array\n\n    const functionsToCall = [];\n    functionsToCall.push(initialEmploymentInfoDropdownOptionsAPICall);\n    if (coApplicantId) {\n      functionsToCall.push(() => getEmploymentInfo(coApplicantId));\n    }\n\n    functionsToCall.forEach((func) => func());\n  };\n\n  const onLazyLoadBankAccountInfo = (coApplicantId: string) => {\n    const functionsToCall = [];\n    functionsToCall.push(initialBankAccountInfoDropdownOptionsAPICall);\n    if (coApplicantId) {\n      functionsToCall.push(() => getBankAccountInfo(coApplicantId));\n    }\n\n    functionsToCall.forEach((func) => func());\n  };\n\n  const onSaveReferences = async (index: number, coApplicantId: string) => {\n    // @ts-ignore: will fix later\n    const referencesPageObj: IReferencesData = referenceRef?.current?.[index].save();\n\n    //create reference\n    if (!referencesPageObj.uid) {\n      const payload = enrichReferencesObj(loanId, coApplicantId, referencesPageObj, applicantId);\n      try {\n        const res = await ReferenceService.saveReferences(payload, SUB_STAGE.DDE);\n\n        if (validatePostAPIResponse(res)) {\n          getSavedReferences(coApplicantId);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n    //update reference\n    else {\n      const payload = enrichReferencesObj(loanId, coApplicantId, referencesPageObj, applicantId);\n      try {\n        const res = await ReferenceService.updateReference(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          getSavedReferences(coApplicantId);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveReference = async (index: number, coApplicantId: string) => {\n    //@ts-ignore: will fix later\n    const referencesPageObj: IReferencesData = referenceRef?.current?.[index].remove();\n    const payload = enrichReferencesObj(loanId, coApplicantId, referencesPageObj, applicantId);\n    try {\n      const res = await ReferenceService.updateReference(payload, SUB_STAGE.DDE);\n      if (validatePutAPIResponse(res)) {\n        getSavedReferences(coApplicantId);\n        setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n        setTriggerToast(!triggerToast);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onAddMoreEmployInfo = () => {\n    const newEmployListItem = { ...initialEmploymentData };\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        employmentInformation: {\n          ...prevState.employmentInformation,\n          employmentInfoList: [\n            ...prevState.employmentInformation.employmentInfoList,\n            newEmployListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onSaveInvestmentInfo = async (coApplicantId: string) => {\n    // @ts-ignore: will fix later\n    const investmentInfoPageObj: IInvestmentInfoData = investmentInfoRef?.current?.save();\n    const preparedPayload = enrichInvestmentInfoDetails(\n      loanId,\n      coApplicantId,\n      investmentInfoPageObj,\n      APPLICANT_TYPE.CO_APPLICANT\n    );\n\n    try {\n      const res = await InvestmentInfoService.updateInvestmentInformation(\n        preparedPayload,\n        SUB_STAGE.DDE\n      );\n\n      if (validatePutAPIResponse(res)) {\n        getSavedInvestmentInfo(coApplicantId);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageData((prev: IPageData) => {\n          return {\n            ...prev,\n            investmentInfo: { ...prev.investmentInfo, sectionMode: PAGE_MODE.VIEW },\n          };\n        });\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onDeleteInvestmentProof = async (\n    investmentInfoPageObj: IInvestmentInfoData,\n    coApplicantId: string\n  ) => {\n    const preparedPayload = enrichInvestmentInfoDetails(\n      loanId,\n      coApplicantId,\n      investmentInfoPageObj,\n      APPLICANT_TYPE.CO_APPLICANT\n    );\n    try {\n      const res = await InvestmentInfoService.updateInvestmentInformation(\n        preparedPayload,\n        SUB_STAGE.DDE\n      );\n\n      if (validatePutAPIResponse(res)) {\n        getSavedInvestmentInfo(coApplicantId, true);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onCancelInvestmentInfo = () => {\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        investmentInfo: {\n          ...prev.investmentInfo,\n          sectionMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onAddMoreBankDetails = () => {\n    const newBankAccountListItem = { ...initialBankAccountDetailsData };\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        bankAccount: {\n          ...prevState.bankAccount,\n          bankAccountInfoList: [\n            ...prevState.bankAccount.bankAccountInfoList,\n            newBankAccountListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onEditInvestmentInfo = () => {\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        investmentInfo: {\n          ...prev.investmentInfo,\n          sectionMode: PAGE_MODE.CREATE,\n        },\n      };\n    });\n  };\n\n  const onOtherDetailsError = (err: string, clientValidation?: boolean) => {\n    if (!clientValidation) {\n      setErrorMessage(err);\n    } else {\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(err);\n      setTriggerToast(!triggerToast);\n    }\n  };\n\n  const onLazyLoadReferences = (coApplicantId: string) => {\n    if (coApplicantId) {\n      getSavedReferences(coApplicantId);\n    }\n  };\n\n  const onLazyLoadOtherDetails = (coApplicantId: string) => {\n    if (coApplicantId) {\n      getOtherDetails(coApplicantId);\n    }\n  };\n\n  const onLazyLoadInvestmentInfo = (coApplicantId: string) => {\n    if (coApplicantId) {\n      getSavedInvestmentInfo(coApplicantId);\n    }\n  };\n\n  const onLazyLoadKycDocuments = (coApplicantId: string) => {\n    if (coApplicantId) {\n      getAllSavedKycDocuments(coApplicantId);\n    }\n  };\n\n  const onLazyLoadOtherDocuments = (coApplicantId: string) => {\n    if (coApplicantId) {\n      getOtherDocumentsOfCoApplicant(coApplicantId);\n    }\n  };\n\n  const onRemoveEmploymentDetails = async (index: number, coApplicantId: string) => {\n    const data: IEmploymentDetailsData | undefined = employmentInfoRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichEmploymentDetailsObj(\n        data,\n        loanId,\n        coApplicantId,\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n\n      if (data.uid) {\n        try {\n          const res: any = await EmploymentDetailsService.updateEmploymentDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            getEmploymentInfo(coApplicantId);\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n            setTriggerToast(!triggerToast);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const newEmploymentInfoList = pageData.employmentInformation.employmentInfoList.filter(\n          (_, idx: number) => idx !== index\n        );\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            employmentInformation: {\n              ...prevState.employmentInformation,\n              employmentInfoList: [...newEmploymentInfoList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const onRemoveBankAccountDetails = async (index: number, coApplicantId: string) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        coApplicantId,\n        APPLICANT_TYPE.CO_APPLICANT\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            getBankAccountInfo(coApplicantId);\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n            setTriggerToast(!triggerToast);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const newBankAccountDetailsList = pageData.bankAccount.bankAccountInfoList.filter(\n          (_, idx: number) => idx !== index\n        );\n\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            bankAccount: {\n              ...prevState.bankAccount,\n              employmentInfoList: [...newBankAccountDetailsList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const onDeleteOtherDetailDocs = async (updatedData: any, coApplicantId: string) => {\n    const preparedPayload = enrichOtherDetails(updatedData, loanId, coApplicantId);\n    if (preparedPayload) {\n      try {\n        const res = await OtherDetailsService.update(preparedPayload);\n        if (validatePutAPIResponse(res)) {\n          getOtherDetails(coApplicantId);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  //delete reference from the list\n  const onDeleteFromList = (itemIndex?: number) => {\n    const {\n      reference: { referenceInfoList },\n    } = pageData;\n    const newReferenceList = referenceInfoList.filter((_, index) => index !== itemIndex);\n\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        reference: {\n          ...prev.reference,\n          referenceInfoList: [...newReferenceList],\n        },\n      };\n    });\n  };\n\n  const onPrePopulate = async (coApplicantId: string, section?: string) => {\n    return KYCService.getPopulateDocumentByKyc(loanId, coApplicantId)\n      .then((res: any) => {\n        if (validateGetAPIResponse(res)) {\n          const [firstName, middleName, lastName] = res?.data?.name.split(\" \") ?? \"\";\n          res.data = {\n            ...res.data,\n            firstName: firstName,\n            middleName: middleName,\n            lastName: lastName,\n          };\n          setPrepopulatedData(res.data);\n\n          if (section === SECTION_NAME.ADDRESS) {\n            setPrePopulateAddress((prevState: boolean) => !prevState);\n          }\n\n          if (section === SECTION_NAME.BASIC_INFO) {\n            setPrePopulateBasicInfo((prevState: boolean) => !prevState);\n          }\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onAddReference = () => {\n    const {\n      reference: { referenceInfoList },\n    } = pageData;\n\n    const newReferenceList = { ...initialReferenceData, listId: `ref-card-${refCardCount + 1}` };\n\n    setRefCardCount((prev) => prev + 1);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        reference: {\n          ...prev.reference,\n          referenceInfoList: [...referenceInfoList, newReferenceList],\n        },\n      };\n    });\n  };\n\n  //add a kyc document in list\n  const onAddDocument = () => {\n    const newDocumentList = {\n      listId: `kyc-card-${kycCardCount + 1}`,\n      uid: \"\",\n      docName: \"\",\n      docNo: \"\",\n      maskedDocNo: \"\",\n      dob: \"\",\n      docSections: [],\n      isVerified: false,\n    };\n    setKycCardCount((prevCount) => prevCount + 1);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          kycDocList: [...prev.kycDocuments.kycDocList, newDocumentList],\n          populateOcr: {\n            uid: \"\",\n            success: false,\n            failed: false,\n          },\n        },\n      };\n    });\n  };\n\n  const onAddOtherDocuments = () => {\n    const newDocument = {\n      ...dummySavedDocStructureInList,\n      listKey: Math.random().toString(36).substring(2),\n    };\n    setPageData((prev) => ({\n      ...prev,\n      otherDocInfo: {\n        ...prev.otherDocInfo,\n        otherDocInfoList: [...prev.otherDocInfo.otherDocInfoList, newDocument],\n      },\n    }));\n  };\n\n  const onSaveOtherDocuments = async (coApplicantId: string) => {\n    const payloadData = otherDocsRef.current?.save();\n    if (!payloadData) {\n      return;\n    }\n\n    try {\n      const res = await OtherDocumentService.saveDocument(STAGE.LOGIN, SUB_STAGE.DDE, payloadData);\n\n      if (validatePutAPIResponse(res)) {\n        setPageData((prev: IPageData) => {\n          return {\n            ...prev,\n            otherDocInfo: {\n              ...prev.otherDocInfo,\n              isOtherDocInfoLoading: true,\n              sectionMode: PAGE_MODE.VIEW,\n            },\n          };\n        });\n        getOtherDocumentsOfCoApplicant(coApplicantId);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onCancelOtherDocuments = (coApplicantId: string) => {\n    getOtherDocumentsOfCoApplicant(coApplicantId);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        otherDocInfo: {\n          ...prev.otherDocInfo,\n          sectionMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onRemoveOtherDocsFromList = async (\n    coApplicantId: string,\n    docInfo: IDocumentInfo,\n    itemIndex: number\n  ) => {\n    if (docInfo.uid) {\n      const deletedOtherDoc = { ...docInfo };\n      deletedOtherDoc.isActive = false;\n\n      const payloadData = enrichOtherDocuments([deletedOtherDoc], {\n        loanUid: loanId,\n        applicantUid: coApplicantId,\n        loanSectionKey: LOAN_SECTION_KEY_TYPES.applicants,\n      });\n\n      try {\n        const res = await OtherDocumentService.saveDocument(\n          STAGE.LOGIN,\n          SUB_STAGE.DDE,\n          payloadData\n        );\n\n        if (validatePutAPIResponse(res)) {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                isOtherDocInfoLoading: true,\n              },\n            };\n          });\n          getOtherDocumentsOfCoApplicant(coApplicantId);\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n\n    if (itemIndex !== undefined) {\n      deleteDocInOtherDocsList(itemIndex);\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getApplicantId();\n    getCoApplicantList();\n  };\n\n  const initialEmploymentInfoDropdownOptionsAPICall = () => {\n    getEmploymentNatureOptions();\n    getIndustryOptions();\n    getOccupationOptions();\n    getManagedByOptions();\n    getSeasonalityOptions();\n    getNoOfEmployeesOptions();\n  };\n\n  const initialBankAccountInfoDropdownOptionsAPICall = () => {\n    getBankAccountOptions();\n  };\n\n  const getSavedKycDocuments = async (coApplicantId: string) => {\n    try {\n      const res = await KYCService.getKycDocument(loanId, coApplicantId);\n      if (validateGetAPIResponse(res)) {\n        const { data } = res;\n        return data;\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getSectionsByDocumentUid = async (uid: string, coApplicantId: string) => {\n    const savedDocuments = await getSavedKycDocuments(coApplicantId);\n    const sections = savedDocuments[uid];\n    return sections;\n  };\n\n  const prepareNewKycCardTracker = () => {\n    const {\n      kycDocuments: { uniqueKycCardTracker },\n    } = pageData;\n    const docNameArr = [...uniqueKycCardTracker];\n    //remove the last doc name in the array to avoid docName duplication\n    docNameArr.splice(docNameArr.length - 1, 1);\n    return [...docNameArr];\n  };\n\n  //update the unique kyc card name tracker list\n  const updateUniqueTrackerList = (list: string[]) => {\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          uniqueKycCardTracker: [...list],\n        },\n      };\n    });\n  };\n\n  //delete kyc doc card in list\n  const deleteKycDocInList = (itemIndex?: number) => {\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n    const newKycDocList = kycDocList.filter((_, index) => index !== itemIndex);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          kycDocList: [...newKycDocList],\n        },\n      };\n    });\n  };\n\n  //delete document uploader from other documents template list\n  const deleteDocInOtherDocsList = (itemIndex?: number) => {\n    setPageData((prev) => {\n      const newKycDocList = pageData.otherDocInfo.otherDocInfoList.filter(\n        (_, index) => index !== itemIndex\n      );\n      return {\n        ...prev,\n        otherDocInfo: { ...prev.otherDocInfo, otherDocInfoList: [...newKycDocList] },\n      };\n    });\n  };\n\n  const removeDeletedCoApplicant = (index: number) => {\n    const updatedCoApplicants = [...coApplicants];\n    if (index >= 0 && index < coApplicants.length) {\n      // Check if the findIndexOfCoApplicant is valid\n\n      updatedCoApplicants.splice(index, 1); // Remove 1 element at the specified index\n      setCoApplicants(updatedCoApplicants);\n\n      if (index + 1 === coApplicants.length - 1 && activeIndex === index + 1) {\n        //\n      } else if (\n        (index === coApplicants.length - 1 && activeIndex === index) ||\n        (index !== coApplicants.length - 1 && activeIndex === coApplicants.length - 1) ||\n        index < activeIndex\n      ) {\n        setTimeout(() => {\n          setActiveIndex(activeIndex - 1);\n        }, 5);\n      } else if (index === activeIndex) {\n        resetPageData();\n        setIsSameActiveIndex((prevState: boolean) => !prevState);\n      }\n    }\n  };\n\n  const updateEmptyCoApplicants = () => {\n    setCoApplicants([\n      {\n        firstName: \"New Tab\",\n        key: uniqueKey(),\n      },\n    ]);\n  };\n\n  const updateAddressDetails = (addressDetails: any) => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          address: {\n            ...prevState.addressInfo.address,\n            address: addressDetails?.address,\n            pincode: {\n              pinCode: addressDetails?.pincode?.pinCode,\n              uid: addressDetails?.pincode?.uid,\n            },\n            city: { name: addressDetails?.city?.name, uid: addressDetails?.city?.uid },\n            state: addressDetails?.city?.state?.name,\n            latitude: addressDetails?.latitude,\n            longitude: addressDetails?.longitude,\n            smAddressType: addressDetails?.smAddressType,\n          },\n        },\n      };\n    });\n  };\n\n  const resetPageData = () => {\n    setPageData({ ...initialPageData });\n  };\n\n  const resetPageDataWithUID = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: { ...prevState.basicInformation, isBasicInfoLoading: true },\n        addressInfo: { ...prevState.addressInfo, isAddressLoading: true },\n        kycDocuments: { ...prevState.kycDocuments, isKycLoading: true },\n        otherDetails: { ...prevState.otherDetails, isOtherDetailsLoading: true },\n        employmentInformation: {\n          ...prevState.employmentInformation,\n          isEmploymentInfoLoading: true,\n        },\n        bankAccount: { ...prevState.bankAccount, isBankAccountInfoLoading: true },\n        reference: { ...prevState.reference, isReferenceDetailsLoading: true },\n        investmentInfo: { ...prevState.investmentInfo, isInvestmentInfoLoading: true },\n        otherDocInfo: { ...prevState.otherDocInfo, isOtherDocInfoLoading: true },\n      };\n    });\n  };\n\n  const getOCRRelatedData = (coApplicantId: string) => {\n    return {\n      ocrStageName: OCR_STAGE_NAMES.LOGIN,\n      ocrSubstageName: SUB_STAGE.DDE,\n      ocrPayloadData: {\n        loanUid: loanId,\n        applicant: {\n          uid: coApplicantId,\n        },\n      },\n    };\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const basicInfoPrePopulatedData = useMemo(() => {\n    return prepopulatedData;\n  }, [prePopulateBasicInfo]);\n\n  const renderBasicInformation = (coApplicant: any) => {\n    const { basicInfoPageMode, basicInfo, isBasicInfoLoading } = pageData.basicInformation;\n    return (\n      <BasicInformation\n        ref={basicInfoRef}\n        relationship\n        type=\"DDE\"\n        pageMode={basicInfoPageMode}\n        data={basicInfo}\n        isLoading={isBasicInfoLoading}\n        prePopulated={basicInfoPrePopulatedData}\n        ocrRelatedData={getOCRRelatedData(coApplicant?.uid)}\n      />\n    );\n  };\n\n  const renderAddressSaveComponentHeader = () => {\n    const { addressInfoPageMode, isSameAsPermanentAddress, isSameAsResidentialAddress } =\n      pageData.addressInfo;\n    console.log(\"addressInfo \", pageData.addressInfo);\n\n    return (\n      <div className=\"flex space-x-4 items-center\">\n        <div className=\"\">\n          <Text\n            className=\"text-primary-sideBarBgColor text-sm font-bold\"\n            label={\"label.heading.residential.address\"}\n          />\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"ml-4 grid grid-cols-2 gap-4\">\n            <div className=\"flex col-span-1\">\n              <RadioButton\n                hideLabel\n                hideErrorRow\n                name=\"isSameAsResidentialAddress\"\n                className=\"flex items-center\"\n                onChange={handleAddressChange}\n                value={isSameAsResidentialAddress}\n                checked={isSameAsResidentialAddress ===true}\n                disabled={addressInfoPageMode === PAGE_MODE.VIEW}\n              />\n              <div className=\"ml-2 flex items-top\">\n                <Text className=\"text-xs\" label={\"label.checkbox.residentialAddress\"} />\n              </div>\n            </div>\n\n            <div className=\"flex col-span-1\">\n              <RadioButton\n                hideLabel\n                hideErrorRow\n                name=\"isSameAsPermanentAddress\"\n                className=\"flex items-center\"\n                onChange={handleAddressChange}\n                value={isSameAsPermanentAddress}\n                checked={isSameAsPermanentAddress===true}\n                disabled={addressInfoPageMode === PAGE_MODE.VIEW}\n              />\n              <div className=\"ml-2 flex items-top\">\n                <Text className=\"text-xs\" label={\"label.checkbox.permanentAddress\"} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderAddress = (coApplicant: any) => {\n    const { addressInfoPageMode, address, isAddressLoading } = pageData.addressInfo;\n\n    return isAddressLoading ? (\n      <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n    ) : (\n      <Address ref={addressRef} variant={\"PRIMARY\"} pageMode={addressInfoPageMode} data={address}>\n        <TextData\n          label=\"label.text.address.proof*\"\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n        <DocumentUploader\n          ref={addressDocUploaderRef}\n          mode={addressInfoPageMode}\n          mandatoryDocUpload\n          savedDocument={address.loanDocuments?.[0] ? address.loanDocuments[0] : {}}\n          queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF}\n          ocrStageName={OCR_STAGE_NAMES.LOGIN}\n          ocrSubstageName={SUB_STAGE.DDE}\n          ocrPayloadData={{\n            loanUid: loanId,\n            applicant: {\n              uid: coApplicant?.uid,\n            },\n          }}\n        />\n      </Address>\n    );\n  };\n\n  const renderKycDocuments = (coApplicant: any) => {\n    const {\n      isKycLoading,\n      kycDocList,\n      uniqueKycCardTracker,\n      populateOcr,\n      aadharVerificationStatus,\n    } = pageData.kycDocuments;\n    return (\n      <div className=\"grid grid-cols-2 gap-5\">\n        {kycDocList.map((list, index) => {\n          return (\n            <div key={`document-${list.listId}`}>\n              {\n                <KYCV3\n                  mode={\"EDIT\"}\n                  isLoading={isKycLoading}\n                  uid={list.uid}\n                  documentListIndex={index}\n                  docName={list.docName}\n                  docNo={list.docNo}\n                  dateOfBirth={list.dob}\n                  docSections={list.docSections}\n                  maskedDocNo={list.maskedDocNo}\n                  isVerified={list.isVerified}\n                  removeDocumentInList={deleteKycDocInList}\n                  cardNameList={uniqueKycCardTracker}\n                  handlerCardNameList={updateUniqueTrackerList}\n                  ocrStatus={populateOcr}\n                  onSave={(documentInfo: IKycDocuments, itemIndex: number) =>\n                    onSaveKycDocument(documentInfo, coApplicant?.uid, itemIndex)\n                  }\n                  onRemove={(documentInfo: IKycDocuments, itemIndex?: number) => {\n                    onRemoveKycDocument(documentInfo, coApplicant?.uid, itemIndex);\n                  }}\n                  onPopulate={(documentInfo: IKycDocuments, itemIndex: number) =>\n                    onPopulateWithOcr(documentInfo, coApplicant?.uid, itemIndex)\n                  }\n                  onVerifyAadhar={(\n                    documentInfo: IKycDocuments,\n                    aadharOtpInfo: IAadharOTP,\n                    itemIndex: number,\n                    uid: string\n                  ) =>\n                    onVerifyAadhar(documentInfo, aadharOtpInfo, coApplicant?.uid, itemIndex, uid)\n                  }\n                  aadharVerificationStatus={aadharVerificationStatus}\n                  handlerAadharVerificationStatus={handleAadharVerificationStatus}\n                  placeOfUpload={PLACE_OF_UPLOAD_KYC.LOGIN_APPLICANT}\n                />\n              }\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderOtherDetails = (coApplicant: any) => {\n    const { otherDetailsData, isOtherDetailsLoading } = pageData.otherDetails;\n    return (\n      <OtherDetails\n        variant={VARIANTS.SECONDARY}\n        disabled={!coApplicant?.uid}\n        ref={otherDetailsRef}\n        data={otherDetailsData}\n        isLoading={isOtherDetailsLoading}\n        addressDetails={{\n          residentialAddress: applicantAddress.residential,\n          permanentAddress: applicantAddress.permanent,\n        }}\n        onSaveDetails={() => onSaveOtherDetails(coApplicant?.uid)}\n        onError={onOtherDetailsError}\n        onDeleteDocs={(updatedData: IOtherDetailsPageObj) =>\n          onDeleteOtherDetailDocs(updatedData, coApplicant?.uid)\n        }\n        page={OTHER_DETAILS_PAGE.CO_APPLICANT}\n      />\n    );\n  };\n\n  const renderEmployeeDetails = (coApplicant: any): React.ReactNode => {\n    const { employmentInfoList, isEmploymentInfoLoading } = pageData.employmentInformation;\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {employmentInfoList?.map((employeeInfo: any, index: number) => (\n          <EmploymentDetails\n            disabled={!coApplicant?.uid}\n            key={employeeInfo?.uid}\n            ref={(refValue) => {\n              employmentInfoRef.current[index] = refValue as IEmploymentDetailsRef;\n            }}\n            pageType={PAGE_TYPE.CO_APPLICANT}\n            cardNumber={index + 1}\n            data={employeeInfo}\n            documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BUSINESS_PROOF}\n            isLoading={isEmploymentInfoLoading}\n            dropDownOptions={dropdownOptions}\n            addressDetails={{\n              residentialAddress: applicantAddress.residential,\n              permanentAddress: applicantAddress.permanent,\n            }}\n            ocrRelatedData={getOCRRelatedData(coApplicant?.uid)}\n            onRemoveEmploymentDetails={() => onRemoveEmploymentDetails(index, coApplicant?.uid)}\n            onSaveEmploymentDetails={() => onSaveEmployeeInfo(index, coApplicant?.uid)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderBankAccountDetails = (coApplicant: any): React.ReactNode => {\n    const { bankAccountInfoList, isBankAccountInfoLoading } = pageData.bankAccount;\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {bankAccountInfoList?.map((bankAccountInfo: any, index: number) => (\n          <BankAccountDetails\n            disabled={!coApplicant?.uid}\n            key={bankAccountInfo?.uid}\n            ref={(refValue) => {\n              bankAccountRef.current[index] = refValue as IBankAccountDetailsRef;\n            }}\n            cardNumber={index + 1}\n            data={bankAccountInfo}\n            documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BANK_ACCOUNT_DOCUMENT}\n            dropDownOptions={dropdownOptions}\n            isLoading={isBankAccountInfoLoading}\n            ocrRelatedData={getOCRRelatedData(coApplicant?.uid)}\n            onRemoveBankAccountDetails={() => onRemoveBankAccountDetails(index, coApplicant?.uid)}\n            onSaveBankAccountDetails={() => onSaveBankAccountInfo(index, coApplicant?.uid)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderReferenceDetails = (coApplicant: any) => {\n    const {\n      reference: { referenceInfoList, isReferenceDetailsLoading },\n    } = pageData;\n    return referenceInfoList.map((referenceInfo, index) => {\n      return (\n        <References\n          key={`applicant-${referenceInfo.listId}`}\n          listIndex={index}\n          isLoading={isReferenceDetailsLoading}\n          pageObjData={referenceInfo}\n          ref={(refValue) => {\n            referenceRef.current[index] = refValue as IReferencesRef;\n          }}\n          onDeleteFromList={onDeleteFromList}\n          onSaveReferences={() => onSaveReferences(index, coApplicant?.uid)}\n          onRemoveReference={() => onRemoveReference(index, coApplicant?.uid)}\n          disabled={!coApplicant?.uid}\n        />\n      );\n    });\n  };\n\n  const renderInvestmentDetails = (coApplicant: any) => {\n    const {\n      investmentInfo: { investmentInfoData, isInvestmentInfoLoading, sectionMode },\n    } = pageData;\n    return (\n      <InvestmentInformation\n        ref={investmentInfoRef}\n        loanUid={loanId}\n        pageId={coApplicant?.uid}\n        isLoading={isInvestmentInfoLoading}\n        sectionMode={sectionMode}\n        savedInvestmentInfo={investmentInfoData}\n        onSaveInvestmentInfo={() => {\n          return onSaveInvestmentInfo(coApplicant?.uid);\n        }}\n        onDeleteInvestmentProof={(investmentInfoPageObj: IInvestmentInfoData) => {\n          onDeleteInvestmentProof(investmentInfoPageObj, coApplicant?.uid);\n        }}\n        onCancel={onCancelInvestmentInfo}\n        onEdit={onEditInvestmentInfo}\n        disabled={!coApplicant?.uid}\n      />\n    );\n  };\n\n  const renderOtherDocumentsSection = (coApplicant: any) => {\n    return (\n      <SaveComponent\n        title={\"\"}\n        pageMode={pageData.otherDocInfo.sectionMode}\n        onSave={() => {\n          return onSaveOtherDocuments(coApplicant?.uid);\n        }}\n        onCancel={() => {\n          onCancelOtherDocuments(coApplicant?.uid);\n        }}\n        onEdit={() =>\n          setPageData((prev) => ({\n            ...prev,\n            otherDocInfo: { ...prev.otherDocInfo, sectionMode: PAGE_MODE.CREATE },\n          }))\n        }\n        disabled={!coApplicant?.uid}\n      >\n        <OtherDocuments\n          ref={otherDocsRef}\n          isLoading={pageData.otherDocInfo.isOtherDocInfoLoading}\n          otherDocumentsData={pageData.otherDocInfo.otherDocInfoList}\n          sectionMode={pageData.otherDocInfo.sectionMode}\n          payloadInfo={{\n            loanUid: loanId,\n            applicantUid: coApplicant?.uid,\n            loanSectionKey: LOAN_SECTION_KEY_TYPES.applicants,\n          }}\n          onRemoveDocFromList={(docInfo, itemIndex) => {\n            onRemoveOtherDocsFromList(coApplicant?.uid, docInfo, itemIndex);\n          }}\n        />\n      </SaveComponent>\n    );\n  };\n\n  const renderContent = (coApplicant: any, index: any) => {\n    return (\n      <div className=\"flex flex-col gap-4\" key={coApplicant?.key}>\n        {!coApplicant?.uid && (\n          <Section \n            title=\"KYC Documents\"\n            alertText={\"Either PAN or Form - 60 are mandatory\"}\n            className=\"mt-5 \"\n          >\n            <React.Fragment>\n              {renderKycDocuments(coApplicant)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Document\"}\n                  onClick={onAddDocument}\n                />\n              </div>\n            </React.Fragment>\n          </Section>\n        )}\n\n        <Section title=\"heading.basicInformation\">\n          <>\n            <SaveComponent\n              pageMode={pageData.basicInformation.basicInfoPageMode}\n              onEdit={onEditBasicInfo}\n              onSave={() => onSaveBasicInformations(coApplicant)}\n              onCancel={onCancelBasicInfo}\n              onPrePopulate={() => onPrePopulate(coApplicant?.uid, SECTION_NAME.BASIC_INFO)}\n              disablePrePopulate={!coApplicant?.uid}\n              disabled={!coApplicant?.uid}\n            >\n              {renderBasicInformation(coApplicant)}\n            </SaveComponent>\n\n            <SaveComponent\n              disabled={!coApplicant?.uid}\n              pageMode={pageData.addressInfo.addressInfoPageMode}\n              onEdit={onEditAddressInfo}\n              onSave={() => onSaveAddress(coApplicant?.uid)}\n              onCancel={onCancelAddressInfo}\n              renderHeaderContent={renderAddressSaveComponentHeader}\n              onPrePopulate={() => onPrePopulate(coApplicant?.uid, SECTION_NAME.ADDRESS)}\n            >\n              {renderAddress(coApplicant)}\n            </SaveComponent>\n          </>\n        </Section>\n\n        {coApplicant?.uid && (\n          <Section title=\"KYC Documents\" alertText={\"Either PAN or Form - 60 are mandatory\"}>\n            <LazyLoader onLazyLoad={() => onLazyLoadKycDocuments(coApplicant?.uid)}>\n              {renderKycDocuments(coApplicant)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Document\"}\n                  onClick={onAddDocument}\n                />\n              </div>\n            </LazyLoader>\n          </Section>\n        )}\n\n        <Section title=\"heading.dde.otherDetails\">\n          {!coApplicant?.uid ? (\n            <React.Fragment>{renderOtherDetails(coApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadOtherDetails(coApplicant?.uid)}>\n              {renderOtherDetails(coApplicant)}\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title=\"heading.dde.employmentInformation\">\n          {!coApplicant?.uid ? (\n            <React.Fragment>{renderEmployeeDetails(coApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadEmploymentInfo(coApplicant?.uid)}>\n              {renderEmployeeDetails(coApplicant)}\n\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.employmentDetail\"}\n                  onClick={onAddMoreEmployInfo}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title=\"heading.dde.bankAccount.details\">\n          {!coApplicant?.uid ? (\n            <React.Fragment>{renderBankAccountDetails(coApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadBankAccountInfo(coApplicant?.uid)}>\n              {renderBankAccountDetails(coApplicant)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.bankAccount.details\"}\n                  onClick={onAddMoreBankDetails}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title={`heading.references`} alertText={\"At least two references are mandatory\"}>\n          {!coApplicant?.uid ? (\n            <div className=\"flex flex-col gap-4\">{renderReferenceDetails(coApplicant)}</div>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadReferences(coApplicant?.uid)}>\n              <div className=\"flex flex-col gap-4\">{renderReferenceDetails(coApplicant)}</div>\n              <div className=\"p-5 mt-5 w-full rounded-xl bg-slate-100 \">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Reference\"}\n                  onClick={onAddReference}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title={`heading.investmentInformation`}>\n          {!coApplicant?.uid ? (\n            <React.Fragment>{renderInvestmentDetails(coApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadInvestmentInfo(coApplicant?.uid)}>\n              {renderInvestmentDetails(coApplicant)}\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title={\"label.heading.otherDocuments\"}>\n          {!coApplicant?.uid ? (\n            <React.Fragment>{renderOtherDocumentsSection(coApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadOtherDocuments(coApplicant?.uid)}>\n              {renderOtherDocumentsSection(coApplicant)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Document\"}\n                  onClick={onAddOtherDocuments}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n      </div>\n    );\n  };\n\n  const renderCoApplicantsTotal = () => {\n    return (\n      <Text\n        className=\"\"\n        label={`( ${\n          coApplicants.length > 1\n            ? `${coApplicants.length} Co-Applicants`\n            : `${coApplicants.length} Co-Applicant`\n        } )`}\n      />\n    );\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    render: The Main return()\n    --------------------------------------------------------------------------------------------------\n  */\n  if (isPageCoApplicantLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"scrollable-tab dynamic-tab relative deleteable-header \">\n        <SimpleTab\n          showTooltip\n          enableTabMenu\n          scrollable\n          tabHeaderMenuModel={(coApplicant: any, index: number) => menuModel(coApplicant, index)}\n          optionLabel={[\"firstName\", \"middleName\", \"lastName\"]}\n          optionKey={[\"uid\", \"key\"]}\n          headerClassName=\"dynamic-header\"\n          ref={tabRef}\n          activeIndex={activeIndex}\n          tabs={coApplicants}\n          onTabChange={handleTabChange}\n          renderContent={renderContent}\n        />\n\n        <div className=\"absolute top-0 right-0 text-[#A3A3A3] text-xs flex justify-evenly items-center w-[15%] space-x-4 pb-2.5 border-b\">\n          {renderCoApplicantsTotal()}\n\n          <div className=\"\">\n            <ButtonBox buttonType={BUTTON_TYPE.ICON_BUTTON_ADD} onClick={onAddMoreTabs} />\n          </div>\n        </div>\n      </div>\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n\n      <WarningDialog\n        visible={isRemoveTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Remove Co-Applicant ?\"}\n        warningMessage={`Co-Applicant ${currentTabDetails?.coApplicant?.firstName} will be removed`}\n        onCancel={() => setIsRemoveTabWarningVisible(false)}\n        onConfirm={() => {\n          onDeleteTab(currentTabDetails?.coApplicant, currentTabDetails?.index);\n        }}\n        onHide={() => {\n          //\n        }}\n      />\n\n      <WarningDialog\n        visible={isSwitchTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Discard added data ?\"}\n        warningMessage={`Your data will be lost if not saved before navigating to a different tab`}\n        onCancel={() => setIsSwitchTabWarningVisible(false)}\n        onConfirm={handleNavigateTab}\n        onHide={() => {\n          //\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PageCoApplicants;\n"],"names":["initialPageData","initialBasicInformationData","PAGE_MODE","initialKycTemplateListData","initialOtherDetailsData","initialEmploymentData","initialBankAccountDetailsData","initialReferenceData","initialInvestmentInfoData","dummySavedDocStructureInList","PageCoApplicants","loanId","useParams","uniqueKey","ShortUniqueId","isPageCoApplicantLoading","setIsPageCoApplicantLoading","useState","currentTabDetails","setCurrentTabDetails","applicantId","setApplicantId","activeIndex","setActiveIndex","selectedTabIndex","setSelectedTabIndex","isSameActiveIndex","setIsSameActiveIndex","coApplicants","setCoApplicants","navigateBack","setNavigateBack","tabAddedFlag","setTabAddedFlag","prepopulatedData","setPrepopulatedData","prePopulateBasicInfo","setPrePopulateBasicInfo","prePopulateAddress","setPrePopulateAddress","dropdownOptions","setDropdownOptions","applicantAddress","setApplicantAddress","pageData","setPageData","initiateAPICallForSection","setInitiateAPICallForSection","kycCardCount","setKycCardCount","refCardCount","setRefCardCount","position","setPosition","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","errorMessage","setErrorMessage","isRemoveTabWarningVisible","setIsRemoveTabWarningVisible","isSwitchTabWarningVisible","setIsSwitchTabWarningVisible","showDialogAPIError","setShowDialogAPIError","tabRef","useRef","toastMessageRef","basicInfoRef","addressRef","otherDetailsRef","employmentInfoRef","bankAccountRef","referenceRef","investmentInfoRef","addressDocUploaderRef","otherDocsRef","menuModel","coApplicant","index","useEffect","init","_a","resetPageDataWithUID","getBasicInfo","_b","_c","getResidentialAddress","getApplicantsResidentialAddress","getApplicantsPermanentAddress","updateAddressDetails","handleTabChange","prevState","res","AddressService","ADDRESS_TYPE_VALUES","prevObj","error","parseStandardAPIErrorMessage","getApplicantId","ApplicantService","APPLICANT_TYPE","validateGetAPIResponse","_d","_g","_f","_e","err","getCoApplicantList","initiateAPICallFor","callbackFunction","results","item","updateEmptyCoApplicants","isIgnoreLoader","activeCoApplicantObj","prev","BasicInformationService","updateBasicInfoObj","getAllSavedKycDocuments","coApplicantId","KYCService","savedItems","kycDocuments","savedDocsName","getAllSectionsInfo","sections","section","savedItem","_i","_h","_k","_j","_n","_m","_l","ResidentialService","updateAddressData","getOtherDetails","OtherDetailsService","updateOtherDetailsObj","getEmploymentNatureOptions","StaticMasterDataService","getIndustryOptions","Industry","getOccupationOptions","getManagedByOptions","getSeasonalityOptions","getNoOfEmployeesOptions","getBankAccountOptions","getEmploymentInfo","EmploymentDetailsService","savedEmployeeInfo","employeeInfo","updateEmploymentInfoObj","getBankAccountInfo","BankAccountDetailsService","savedBankAccountInfo","bankAccountInfo","updateBankAccountInfoObj","getSavedReferences","ReferenceService","savedReferences","savedReferencesList","savedReference","_o","_p","getSavedInvestmentInfo","InvestmentInfoService","savedInvestmentInfo","getOtherDocumentsOfCoApplicant","OtherDocumentService","STAGE","preparedListOfOtherDocuments","document","structSavedDocStrucutureForOtherDocuments","basicInfo","extractBasicObj","checkDataHasValue","resetPageData","handleNavigateTab","handleAadharVerificationStatus","handleAddressChange","onSaveKycDocument","documentInfo","itemIndex","kycDocList","getSectionsByDocumentUid","payload","enrichUpdateKycDocument","SUB_STAGE","validatePutAPIResponse","data","parsedOcrMeta","getMaskedUrlForSection","sectionType","DOCUMENT_SECTION","prepareMaskedDocSections","DOCUMENT_TYPE","updatedList","STATIC_MASTER_TYPE_TOAST_TEXT","itemList","enrichSaveKycDocument","validatePostAPIResponse","idx","prepareNewKycCardTracker","onRemoveKycDocument","deleteKycDocInList","onPopulateWithOcr","populateOcr","enrichPopulateDocWithOcr","onVerifyAadhar","aadharOtpInfo","uid","enrichAadharValidation","onSaveOtherDetails","enrichOtherDetails","otherDetailsSaveApi","onSaveEmployeeInfo","enrichEmploymentDetailsObj","onSaveBankAccountInfo","enrichBankAccountDetailsObj","onAddMoreTabs","onDeleteTab","removeDeletedCoApplicant","onSaveBasicInformations","enrichBasicInfoData","onEditAddressInfo","onUpdateAddress","previous","onPostAddress","onSaveAddress","uploadedDocsInfo","enrichAddressData","onEditBasicInfo","onCancelBasicInfo","onCancelAddressInfo","onLazyLoadEmploymentInfo","functionsToCall","initialEmploymentInfoDropdownOptionsAPICall","func","onLazyLoadBankAccountInfo","initialBankAccountInfoDropdownOptionsAPICall","onSaveReferences","referencesPageObj","enrichReferencesObj","onRemoveReference","onAddMoreEmployInfo","newEmployListItem","onSaveInvestmentInfo","investmentInfoPageObj","preparedPayload","enrichInvestmentInfoDetails","onDeleteInvestmentProof","onCancelInvestmentInfo","onAddMoreBankDetails","newBankAccountListItem","onEditInvestmentInfo","onOtherDetailsError","clientValidation","onLazyLoadReferences","onLazyLoadOtherDetails","onLazyLoadInvestmentInfo","onLazyLoadKycDocuments","onLazyLoadOtherDocuments","onRemoveEmploymentDetails","newEmploymentInfoList","_","onRemoveBankAccountDetails","newBankAccountDetailsList","onDeleteOtherDetailDocs","updatedData","onDeleteFromList","referenceInfoList","newReferenceList","onPrePopulate","firstName","middleName","lastName","SECTION_NAME","onAddReference","onAddDocument","newDocumentList","prevCount","onAddOtherDocuments","newDocument","onSaveOtherDocuments","payloadData","onCancelOtherDocuments","onRemoveOtherDocsFromList","docInfo","deletedOtherDoc","enrichOtherDocuments","LOAN_SECTION_KEY_TYPES","deleteDocInOtherDocsList","getSavedKycDocuments","uniqueKycCardTracker","docNameArr","updateUniqueTrackerList","list","newKycDocList","updatedCoApplicants","addressDetails","getOCRRelatedData","OCR_STAGE_NAMES","basicInfoPrePopulatedData","useMemo","renderBasicInformation","basicInfoPageMode","isBasicInfoLoading","jsx","BasicInformation","renderAddressSaveComponentHeader","addressInfoPageMode","isSameAsPermanentAddress","isSameAsResidentialAddress","jsxs","Text","RadioButton","renderAddress","address","isAddressLoading","SkeletonCustom","Address","TextData","DocumentUploader","DOCUMENT_CATEGORY","renderKycDocuments","isKycLoading","aadharVerificationStatus","KYCV3","PLACE_OF_UPLOAD_KYC","renderOtherDetails","otherDetailsData","isOtherDetailsLoading","OtherDetails","VARIANTS","OTHER_DETAILS_PAGE","renderEmployeeDetails","employmentInfoList","isEmploymentInfoLoading","EmploymentDetails","refValue","PAGE_TYPE","renderBankAccountDetails","bankAccountInfoList","isBankAccountInfoLoading","BankAccountDetails","renderReferenceDetails","isReferenceDetailsLoading","referenceInfo","References","renderInvestmentDetails","investmentInfoData","isInvestmentInfoLoading","sectionMode","InvestmentInformation","renderOtherDocumentsSection","SaveComponent","OtherDocuments","renderContent","Section","React","ButtonBox","BUTTON_TYPE","Fragment","LazyLoader","renderCoApplicantsTotal","Loader","SimpleTab","ToastCustom","ErrorDialog","WarningDialog"],"mappings":"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"}