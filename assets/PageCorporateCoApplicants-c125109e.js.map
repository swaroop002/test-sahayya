{"version":3,"file":"PageCorporateCoApplicants-c125109e.js","sources":["../../src/services/transaction/DirectorService.ts","../../src/views/transaction/PageDDE/Login/PageCorporateCoApplicants/HistoricalFinancialDetail/HistoricalFinancialDetail.tsx","../../src/views/transaction/PageDDE/Login/PageCorporateCoApplicants/InvestmentDetail/InvestmentDetail.tsx","../../src/views/transaction/PageDDE/Login/PageCorporateCoApplicants/PartnerDirectorDetails/PartnerDirectorDetails.tsx","../../src/views/transaction/PageDDE/Login/PageCorporateCoApplicants/PageCorporateCoApplicants.tsx"],"sourcesContent":["import BaseApiService from \"../BaseApiService\";\n\n// ---------------- Default path ------------------ //\nconst DEFAULT_PATH = \"/custom/api/login\";\n\nclass DirectorService extends BaseApiService {\n  // ------------------------- To get corporate partner director details list ----------------------------- //\n\n  getCorporatePartnerDirectors = (loanId: string, applicantId: string) => {\n    const endPoint = DEFAULT_PATH + `/${loanId}/${applicantId}/corporate/director`;\n    return this.makeGetRequestWithAuth(endPoint);\n  };\n\n  // ------------------------- To create corporate partner director details list ----------------------------- //\n\n  createCorporatePartnerDirectors = (payload: any) => {\n    const endPoint = DEFAULT_PATH + `/dde/corporate/director`;\n    return this.makePostRequestWithAuth(endPoint, payload);\n  };\n\n  // ------------------------- To get partner director details list ----------------------------- //\n\n  updateCorporatePartnerDirectors = (payload: any) => {\n    const endPoint = DEFAULT_PATH + `/dde/corporate/director`;\n    return this.makePutRequestWithAuth(endPoint, payload);\n  };\n}\n\nexport default new DirectorService();\n","import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport EditableTableV2, { Column, EditableComponentRef } from \"components/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport { IUploadedFile } from \"components/FileUploadCustom\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport { RouteProps } from \"hoc/withRouter\";\nimport i18n from \"i18n\";\nimport { numberFormatter } from \"locale\";\nimport { DropdownChangeParams } from \"primereact/dropdown\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, {\n  Fragment,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport FinancialService from \"services/transaction/FinancialService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  CUSTOM_TOAST_MESSAGES,\n  DROPDOWN_LIST_CODE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\nexport interface IHistoricalFinInfo {\n  hfd: ITableHfdRowData[];\n}\n\nexport interface IHistoricalFinInfoRef {\n  props: IProps;\n  save: () => IHistoricalFinInfo | undefined;\n  //TODO:need to remove any and use table ref\n  editableTableRef: () => any;\n  resetTable: () => any;\n}\n\ninterface IProps extends RouteProps {\n  isLoading?: boolean;\n  loanUid: string;\n  onCancel?: () => void;\n  onEdit?: () => void;\n  onSaveHistoricalFinInfo: () => void;\n  pageId: string;\n  sectionMode: string;\n  disabled: boolean;\n}\n\nexport interface IInvestmentProofFiles extends IUploadedFile {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  docType?: { uid: string; code: string; name: string };\n  sectionCode?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\ninterface ITableHfdRowData {\n  uid: string;\n  smFinancialYear: string;\n  turnOver: string;\n  profitAsPerPandL: string;\n  capitalNetWorth: string;\n  isActive: boolean;\n}\n\ninterface IDropDownOption {\n  uid: string;\n  label: string;\n  value: string;\n}\n\nexport const initialInvestmentInfoData: IHistoricalFinInfo = {\n  hfd: [],\n};\n\nconst initialTableRowData: ITableHfdRowData = {\n  uid: \"\",\n  smFinancialYear: \"\",\n  turnOver: \"\",\n  profitAsPerPandL: \"\",\n  capitalNetWorth: \"\",\n  isActive: true,\n};\n\nconst HistoricalFinancialDetail = forwardRef<IHistoricalFinInfoRef, IProps>((props, ref) => {\n  const {\n    loanUid,\n    pageId,\n    isLoading,\n    sectionMode,\n    onSaveHistoricalFinInfo,\n    onCancel,\n    onEdit,\n    disabled,\n  } = props;\n\n  const [finYearOptions, setFinYearOptions] = useState<IDropDownOption[]>([]);\n\n  //error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    useEffect\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*---------------------------Service Calls-------------------------------*/\n\n  const init = async () => {\n    await getFinancialYearOptions();\n    onTableSearch();\n  };\n\n  const getFinancialYearOptions = async () => {\n    try {\n      const res = await StaticMasterDataService.getDropdownList(\n        DROPDOWN_LIST_CODE.FINANCIAL_YEAR,\n        true\n      );\n\n      if (validateGetAPIResponse(res) && !!res.data.totalRecords) {\n        const { data } = res;\n        const fyOptions: IDropDownOption[] = data.results?.map(\n          (option: { [key: string]: any }) => ({\n            uid: option.uid ?? \"\",\n            label: option.name ?? \"\",\n            value: option.name ?? \"\",\n          })\n        );\n        setFinYearOptions([...fyOptions]);\n      } else {\n        setFinYearOptions([]);\n      }\n    } catch (error) {\n      setFinYearOptions([]);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    props: props,\n    save: onSave,\n    editableTableRef: onTableSearch,\n    resetTable: onReset,\n  }));\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleFinYearChange = (e: DropdownChangeParams, rowData: any) => {\n    const rowDataObj = { ...rowData };\n    rowDataObj.smFinancialYear = e.target.value;\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onAddDetail = () => {\n    tableRef.current?.addRow(initialTableRowData);\n    resetValidator();\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    let preparedData: IHistoricalFinInfo = {\n      hfd: [\n        ...(tableRef.current?.getAddedRecords() ?? []),\n        ...(tableRef.current?.getDeletedRecords() ?? []),\n        ...(tableRef.current?.getUpdatedRecords() ?? []),\n      ],\n    };\n\n    // if (!preparedData.hfd.length) {\n    //   return;\n    // }\n\n    //below validation is to validate that atleast one of three fields i.e turnonver, networth, profit after a financial year is provided\n    const validationForAtleastOne = () => {\n      for (let idx = 0; idx < preparedData.hfd.length; idx++) {\n        if (\n          preparedData.hfd[idx].turnOver === \"\" &&\n          preparedData.hfd[idx].profitAsPerPandL === \"\" &&\n          preparedData.hfd[idx].capitalNetWorth === \"\"\n        ) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    if (!validationForAtleastOne()) {\n      setToastMessageVariant(TOAST_STYLE_TYPE.SECONDARY);\n      setToastMessage(CUSTOM_TOAST_MESSAGES.HISTORICALFINDETAILS_VALIDATION);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n\n    const preparedHFD: ITableHfdRowData[] = preparedData.hfd.map((record) => {\n      return {\n        ...record,\n        turnOver: `${currencyFormatToNumber(record.turnOver?.toString())}`,\n        profitAsPerPandL: `${currencyFormatToNumber(record.profitAsPerPandL?.toString())}`,\n        capitalNetWorth: `${currencyFormatToNumber(record.capitalNetWorth?.toString())}`,\n      };\n    });\n    preparedData = { hfd: preparedHFD };\n\n    return preparedData;\n  };\n\n  const onTableSearch = () => {\n    tableRef.current?.search();\n  };\n\n  const onReset = () => {\n    tableRef.current?.clearAll();\n    tableRef.current?.reset();\n  };\n\n  const onClickCancel = () => {\n    resetValidator();\n    tableRef.current?.clearAll();\n    tableRef.current?.search();\n    onCancel?.();\n  };\n\n  const onDeleteRow = (rowData: any) => {\n    tableRef.current?.deleteRow(rowData);\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n  /* \n    ---------------------------------------------------------------------------------------------------\n    Validators:\n    ---------------------------------------------------------------------------------------------------\n  */\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*-----------------------------Helper Functions-------------------------------- */\n\n  const getValue = (val: number) => {\n    return numberFormatter(val, \"en-IN\", 0);\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n\n  const renderContent = () => {\n    return (\n      <>\n        <div className=\"mt-3 flex flex-col gap-5\">\n          <div className=\"self-end\">\n            <ButtonBox\n              buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n              customLabel={\"Add\"}\n              onClick={onAddDetail}\n              disabled={sectionMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div>\n            {loanUid && pageId ? (\n              <EditableTableV2\n                ref={tableRef}\n                uniqueKey=\"uid\"\n                standardDataFormatPromise={FinancialService.getAllCorporateHistorical}\n                search={`&loan.uid=${loanUid}&applicant.uid=${pageId}&isActive=${true}&smAssetType:null`}\n                mode={\"UPDATE\"}\n              >\n                <Column\n                  header={() => (\n                    <div className=\"flex items-center\">\n                      <Text label={i18n.t(\"label.hfd.fy\")} />\n                    </div>\n                  )}\n                  className=\"pl-6 py-3 text-left text-primary-ptext-1000 text-xs\"\n                  body={(rowData: any) => {\n                    return (\n                      <SimpleDropDown\n                        name={`smFinancialYear${rowData.uid}`}\n                        className=\"!w-32\"\n                        options={finYearOptions}\n                        optionLabel=\"label\"\n                        optionValue=\"value\"\n                        value={rowData.smFinancialYear ?? \"\"}\n                        onChange={(e: DropdownChangeParams) => {\n                          handleFinYearChange(e, rowData);\n                        }}\n                        onBlur={validate}\n                        validation={simpleValidator?.current?.message(\n                          `smFinancialYear${rowData.uid}`,\n                          rowData.smFinancialYear,\n                          \"mandatory\"\n                        )}\n                        hideLabel\n                        disabled={sectionMode === PAGE_MODE.VIEW}\n                      />\n                    );\n                  }}\n                  style={{}}\n                />\n\n                <Column\n                  header={() => (\n                    <div className=\"flex items-center\">\n                      <Text label={i18n.t(\"label.hfd.turnOver\")} />\n                    </div>\n                  )}\n                  className=\"pl-6 py-3 text-left text-primary-ptext-1000 text-xs\"\n                  body={(rowData: any) => {\n                    return (\n                      <InputBox\n                        name={`turnOver${rowData.uid}`}\n                        className=\"!w-40 text-right\"\n                        placeholder=\"0\"\n                        variant={INPUT_STYLE_TYPE.SECONDARY}\n                        value={\n                          typeof rowData.turnOver === \"number\"\n                            ? getValue(rowData.turnOver)\n                            : rowData.turnOver\n                        }\n                        onChange={(e) => {\n                          const rowDataObj = { ...rowData };\n                          const val = currencyFormatToNumber(e.target.value);\n                          rowDataObj.turnOver = numberFormatter(val, \"en-IN\", 0);\n                          tableRef.current?.reportDataChange(rowDataObj);\n                        }}\n                        onBlur={validate}\n                        validation={simpleValidator?.current?.message(\n                          `turnOver${rowData.uid}`,\n                          rowData.turnOver,\n                          \"onlyInteger|onlyPositive\"\n                        )}\n                        hideLabel\n                        disabled={sectionMode === PAGE_MODE.VIEW}\n                      />\n                    );\n                  }}\n                  style={{}}\n                />\n\n                <Column\n                  header={() => (\n                    <div className=\"flex items-center\">\n                      <Text label={i18n.t(\"label.hfd.profit\")} />\n                    </div>\n                  )}\n                  className=\"pl-6 py-3 text-left text-primary-ptext-1000 text-xs\"\n                  body={(rowData: any) => {\n                    return (\n                      <InputBox\n                        name={`profitAsPerPandL${rowData.uid}`}\n                        className=\"!w-40 text-right\"\n                        placeholder=\"0\"\n                        variant={INPUT_STYLE_TYPE.SECONDARY}\n                        value={\n                          typeof rowData.profitAsPerPandL === \"number\"\n                            ? getValue(rowData.profitAsPerPandL)\n                            : rowData.profitAsPerPandL\n                        }\n                        onChange={(e) => {\n                          const rowDataObj = { ...rowData };\n                          const val = currencyFormatToNumber(e.target.value);\n                          rowDataObj.profitAsPerPandL = numberFormatter(val, \"en-IN\", 0);\n                          tableRef.current?.reportDataChange(rowDataObj);\n                        }}\n                        onBlur={validate}\n                        validation={simpleValidator?.current?.message(\n                          `profitAsPerPandL${rowData.uid}`,\n                          rowData.profitAsPerPandL,\n                          \"onlyInteger|onlyPositive\"\n                        )}\n                        hideLabel\n                        disabled={sectionMode === PAGE_MODE.VIEW}\n                      />\n                    );\n                  }}\n                  style={{}}\n                />\n\n                <Column\n                  header={() => (\n                    <div className=\"flex items-center\">\n                      <Text label={i18n.t(\"label.hfd.netWorth\")} />\n                    </div>\n                  )}\n                  className=\"pl-6 py-3 text-left text-primary-ptext-1000 text-xs\"\n                  body={(rowData: any) => {\n                    return (\n                      <InputBox\n                        name={`capitalNetWorth${rowData.uid}`}\n                        className=\"!w-40 text-right\"\n                        placeholder=\"0\"\n                        variant={INPUT_STYLE_TYPE.SECONDARY}\n                        value={\n                          typeof rowData.capitalNetWorth === \"number\"\n                            ? getValue(rowData.capitalNetWorth)\n                            : rowData.capitalNetWorth\n                        }\n                        onChange={(e) => {\n                          const rowDataObj = { ...rowData };\n                          const val = currencyFormatToNumber(e.target.value);\n                          rowDataObj.capitalNetWorth = numberFormatter(val, \"en-IN\", 0);\n                          tableRef.current?.reportDataChange(rowDataObj);\n                        }}\n                        onBlur={validate}\n                        validation={simpleValidator?.current?.message(\n                          `capitalNetWorth${rowData.uid}`,\n                          rowData.capitalNetWorth,\n                          \"onlyInteger|onlyPositive\"\n                        )}\n                        hideLabel\n                        disabled={sectionMode === PAGE_MODE.VIEW}\n                      />\n                    );\n                  }}\n                  style={{}}\n                />\n\n                <Column\n                  header={i18n.t(\"label.hfd.action\")}\n                  className=\"px-6 py-3 text-primary-ptext-1000 text-center text-xs align-super\"\n                  style={{ minWidth: \"50px\", width: \"50px\" }}\n                  body={(rowData: any) => {\n                    return (\n                      <div className=\"\">\n                        <IconButton\n                          buttonType={BUTTON_TYPES.DELETE}\n                          onClick={() => onDeleteRow(rowData)}\n                          tooltipOptions={{\n                            position: \"left\",\n                            className: \"text-xs font-Roboto bg-black text-white !p-1 rounded-md \",\n                            showDelay: \"1000,\",\n                            hideDelay: \"300\",\n                          }}\n                          disabled={sectionMode === PAGE_MODE.VIEW}\n                        />\n                      </div>\n                    );\n                  }}\n                />\n              </EditableTableV2>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n\n        <ToastCustom\n          position={position}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n        />\n\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"\">\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <>\n            <SaveComponent\n              title={\"label.dde.financial.historicalDetails\"}\n              pageMode={sectionMode}\n              onCancel={onClickCancel}\n              onEdit={onEdit}\n              onSave={onSaveHistoricalFinInfo}\n              disabled={disabled}\n            >\n              {renderContent()}\n            </SaveComponent>\n          </>\n        )}\n      </div>\n    </Fragment>\n  );\n});\n\nexport default HistoricalFinancialDetail;\n","import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport EditableTableV2, { Column, EditableComponentRef } from \"components/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport { RouteProps } from \"hoc/withRouter\";\nimport i18n from \"i18n\";\nimport { numberFormatter } from \"locale\";\nimport { DropdownChangeParams } from \"primereact/dropdown\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, {\n  BaseSyntheticEvent,\n  Fragment,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport FinancialService from \"services/transaction/FinancialService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  DROPDOWN_LIST_CODE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\nexport interface ICorpInvestmentInfoData {\n  assets: ITableRowData[];\n  comments: string;\n}\n\nexport interface IInvestmentDetailRef {\n  props: IProps;\n  save: () => ICorpInvestmentInfoData | undefined;\n  //TODO:need to remove any and use table ref\n  editableTableRef: () => any;\n  resetTable: () => any;\n}\n\ninterface IProps extends RouteProps {\n  isLoading?: boolean;\n  loanUid: string;\n  pageId: string;\n  onCancel?: () => void;\n  onEdit?: () => void;\n  onSaveInvestmentInfo: () => void;\n  savedInvestmentInfo: ICorpInvestmentInfoData;\n  sectionMode: string;\n  disabled: boolean;\n}\n\ninterface ITableRowData {\n  uid: string;\n  amount: string;\n  smAssetType: string;\n  isActive: boolean;\n}\n\ninterface IDropDownOption {\n  uid: string;\n  label: string;\n  value: string;\n}\n\nexport const initialInvestmentInfoData: ICorpInvestmentInfoData = {\n  assets: [],\n  comments: \"\",\n};\n\nconst initialTableRowData: ITableRowData = {\n  uid: \"\",\n  smAssetType: \"\",\n  amount: \"\",\n  isActive: true,\n};\n\nconst InvestmentDetail = forwardRef<IInvestmentDetailRef, IProps>((props, ref) => {\n  const {\n    loanUid,\n    pageId,\n    isLoading,\n    sectionMode,\n    savedInvestmentInfo,\n    onSaveInvestmentInfo,\n    onCancel,\n    onEdit,\n    disabled,\n  } = props;\n\n  const [pageObj, setPageObj] = useState<ICorpInvestmentInfoData>(initialInvestmentInfoData);\n  const [assetOptions, setAssetOptions] = useState<IDropDownOption[][]>([]);\n\n  //error handling states\n\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    useEffect\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    setPageObjFromSavedInfo();\n  }, [savedInvestmentInfo]);\n\n  /*---------------------------Service Calls-------------------------------*/\n\n  const init = async () => {\n    await getAssetTypeOptions();\n    onTableSearch();\n  };\n\n  const getAssetTypeOptions = async () => {\n    try {\n      const res = await StaticMasterDataService.getDropdownList(\n        DROPDOWN_LIST_CODE.ASSET_TYPE,\n        true,\n        \"\"\n      );\n\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        const { data } = res;\n        const assetOptions = data.results?.map((option: { [key: string]: any }) => {\n          return {\n            uid: option.uid ?? \"\",\n            label: option.name ?? \"\",\n            value: option.code ?? \"\",\n          };\n        });\n\n        setAssetOptions([...assetOptions]);\n      } else {\n        setAssetOptions([]);\n      }\n    } catch (error) {\n      setAssetOptions([]);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    props: props,\n    save: onSave,\n    editableTableRef: onTableSearch,\n    resetTable: onReset,\n  }));\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (e: BaseSyntheticEvent) => {\n    setPageObj((prev) => {\n      return {\n        ...prev,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const handleAssetChange = (e: DropdownChangeParams, rowData: any) => {\n    const rowDataObj = { ...rowData };\n    rowDataObj.smAssetType = e.target.value;\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onAddAsset = () => {\n    tableRef.current?.addRow(initialTableRowData);\n  };\n\n  const onDeleteRow = (rowData: any) => {\n    tableRef.current?.deleteRow(rowData);\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    let preparedData: ICorpInvestmentInfoData = {\n      ...pageObj,\n      assets: [\n        ...(tableRef.current?.getAddedRecords() ?? []),\n        ...(tableRef.current?.getDeletedRecords() ?? []),\n        ...(tableRef.current?.getUpdatedRecords() ?? []),\n      ],\n    };\n\n    const preparedAssets: ITableRowData[] = preparedData.assets.map((asset) => {\n      return {\n        ...asset,\n        amount: currencyFormatToNumber(asset.amount?.toString())?.toString(),\n      };\n    });\n\n    preparedData = { ...preparedData, assets: preparedAssets };\n\n    return preparedData;\n  };\n\n  const onTableSearch = () => {\n    tableRef.current?.search();\n  };\n\n  const onReset = () => {\n    tableRef.current?.clearAll();\n    tableRef.current?.reset();\n  };\n\n  const onClickCancel = () => {\n    resetValidator();\n    tableRef.current?.clearAll();\n    tableRef.current?.search();\n    onCancel?.();\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------------\n    Validators:\n    ---------------------------------------------------------------------------------------------------\n  */\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*-----------------------------Helper Functions-------------------------------- */\n\n  const setPageObjFromSavedInfo = async () => {\n    if (savedInvestmentInfo) {\n      setPageObj({\n        ...savedInvestmentInfo,\n        assets: [],\n        comments: savedInvestmentInfo.comments,\n      });\n    }\n  };\n\n  const getValue = (val: number) => {\n    return numberFormatter(val, \"en-IN\", 0);\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n\n  const renderContent = () => {\n    const { comments } = pageObj;\n    return (\n      <>\n        <div className=\"mt-3 flex flex-col gap-5\">\n          <div className=\"self-end\">\n            <ButtonBox\n              buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n              customLabel={\"Add\"}\n              onClick={onAddAsset}\n              disabled={sectionMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div>\n            {loanUid && pageId ? (\n              <EditableTableV2\n                ref={tableRef}\n                uniqueKey=\"uid\"\n                standardDataFormatPromise={FinancialService.getAllCorporateInvestment}\n                search={`&loan.uid=${loanUid}&applicant.uid=${pageId}&isActive=${true}&smAssetType:notnull`}\n                mode={\"UPDATE\"}\n              >\n                <Column\n                  header={() => (\n                    <div className=\"flex items-center\">\n                      <Text label={i18n.t(\"label.investmentInfo.table.colTitle.assetType*\")} />\n                    </div>\n                  )}\n                  className=\"text-primary-ptext-1000 text-left text-xs py-3 pl-6\"\n                  body={(rowData: any) => {\n                    return (\n                      <>\n                        <SimpleDropDown\n                          name={`smAssetType${rowData.uid}`}\n                          className=\"!w-32\"\n                          options={assetOptions}\n                          optionLabel=\"label\"\n                          optionValue=\"value\"\n                          value={rowData.smAssetType ?? \"\"}\n                          onChange={(e: DropdownChangeParams) => {\n                            handleAssetChange(e, rowData);\n                          }}\n                          onBlur={validate}\n                          validation={simpleValidator?.current?.message(\n                            `smAssetType${rowData.uid}`,\n                            rowData.smAssetType,\n                            \"mandatory\"\n                          )}\n                          hideLabel\n                          disabled={sectionMode === PAGE_MODE.VIEW}\n                        />\n                      </>\n                    );\n                  }}\n                  style={{}}\n                />\n\n                <Column\n                  header={() => (\n                    <div className=\"flex items-center\">\n                      <Text label={i18n.t(\"label.investmentInfo.table.colTitle.amt*\")} />\n                    </div>\n                  )}\n                  className=\"table-header-right text-primary-ptext-1000 text-xs py-3 pl-6\"\n                  body={(rowData: any) => {\n                    return (\n                      <InputBox\n                        name={`amount${rowData.uid}`}\n                        className=\"!w-40 text-right\"\n                        placeholder=\"0\"\n                        variant={INPUT_STYLE_TYPE.SECONDARY}\n                        value={\n                          typeof rowData.amount === \"number\"\n                            ? getValue(rowData.amount)\n                            : rowData.amount\n                        }\n                        onChange={(e) => {\n                          const rowDataObj = { ...rowData };\n                          const amt = currencyFormatToNumber(e.target.value);\n                          rowDataObj.amount = numberFormatter(amt, \"en-IN\", 0);\n                          tableRef.current?.reportDataChange(rowDataObj);\n                        }}\n                        onBlur={validate}\n                        validation={simpleValidator?.current?.message(\n                          `amount${rowData.uid}`,\n                          rowData.amount,\n                          \"mandatory|onlyInteger\"\n                        )}\n                        hideLabel\n                        disabled={sectionMode === PAGE_MODE.VIEW}\n                      />\n                    );\n                  }}\n                  style={{}}\n                />\n\n                <Column\n                  header={() => (\n                    <div className=\"flex items-center\">\n                      <Text label={i18n.t(\"label.investmentInfo.table.colTitle.action\")} />\n                    </div>\n                  )}\n                  className=\"text-primary-ptext-1000 text-center text-xs py-3 px-6 align-super\"\n                  style={{ minWidth: \"50px\", width: \"50px\" }}\n                  body={(rowData: any) => {\n                    return (\n                      <div className=\"\">\n                        <IconButton\n                          buttonType={BUTTON_TYPES.DELETE}\n                          onClick={() => onDeleteRow(rowData)}\n                          tooltipOptions={{\n                            position: \"left\",\n                            className: \"text-xs font-Roboto bg-black text-white !p-1 rounded-md \",\n                            showDelay: \"1000,\",\n                            hideDelay: \"300\",\n                          }}\n                          disabled={sectionMode === PAGE_MODE.VIEW}\n                        />\n                      </div>\n                    );\n                  }}\n                />\n              </EditableTableV2>\n            ) : (\n              <></>\n            )}\n          </div>\n\n          <div className=\"flex\">\n            <div className=\"w-122.5 h-40\">\n              <InputTextArea\n                name=\"comments\"\n                className=\"!h-full\"\n                label=\"label.investmentInfo.comments\"\n                labelClassNames=\"font-bold text-xs !text-primary-gray-700\"\n                maxCount={200}\n                placeholder={\"Enter comments\"}\n                value={comments}\n                onChange={handleInputChange}\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                disabled={sectionMode === PAGE_MODE.VIEW}\n              />\n            </div>\n          </div>\n        </div>\n\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"\">\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <>\n            <SaveComponent\n              title={\"label.dde.financial.investmentDetails\"}\n              pageMode={sectionMode}\n              onCancel={onClickCancel}\n              onEdit={onEdit}\n              onSave={onSaveInvestmentInfo}\n              disabled={disabled}\n            >\n              {renderContent()}\n            </SaveComponent>\n          </>\n        )}\n\n        <ToastCustom\n          position={\"bottom-right\"}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={TOAST_STYLE_TYPE.PRIMARY}\n        />\n\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </div>\n    </Fragment>\n  );\n});\n\nexport default InvestmentDetail;\n","import { RouteProps } from \"hoc/withRouter\";\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\n// --------- ---------- //\nimport Address, { IAddressRef } from \"components/Address\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save\";\nimport Section from \"components/Section/Section\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport PincodeService from \"../../../../../../services/masterdata/Location/Pincode\";\n\n// ---------- ---------- //\n\n// ---------- ---------- //\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  enrichAadharValidation,\n  enrichPopulateDocWithOcr,\n  initialLoanDocsInfo,\n} from \"../../Helper\";\n\n// ---------- ---------- //\nimport {\n  formatNumberToAadhaar,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\n\n// ---------- ---------- //\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport DocumentUploader, {\n  IDocumentUploaderRef,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputAddon from \"components/InputAddon/InputAddon\";\nimport InputTextArea from \"components/InputTextArea/InputTextArea\";\nimport KYCV3, {\n  IAadharOTP,\n  IAadharVerification,\n  IKycDocumentCardListInfo,\n  IKycDocuments,\n  IPopulateOcr,\n} from \"components/KYCV3/KYCV3\";\nimport { PLACE_OF_UPLOAD_KYC } from \"components/MediaGallery/MediaGallery\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\nimport { IOcrRelatedData } from \"interface/common\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport { useParams } from \"react-router-dom\";\nimport KYCService from \"services/KYCService\";\nimport {\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  DOCUMENT_SECTION,\n  DOCUMENT_TYPE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n  VARIANTS,\n} from \"utils/Constant\";\n\nexport interface IPartnerDirectorDetailsRef {\n  save: () => IPartnerDirectorDetailsData | undefined;\n  remove: () => IPartnerDirectorDetailsData | undefined;\n  onSaveSuccess: () => void;\n  resetValidator: () => any;\n}\n\nexport interface IPartnerDirectorDetailsData {\n  listId?: string;\n  uid?: string | null;\n  directorUid: string;\n  partnerName: string;\n  relationShip: any;\n  dobDate: any;\n  DIN: string;\n  profitSharing: string;\n  mobileNo: string;\n  remarks: string;\n  address?: string;\n  smAddressType?: string;\n  pincode?: any;\n  city?: any;\n  state?: string;\n  latitude?: string;\n  longitude?: string;\n  loanDocuments: any;\n  isActive?: boolean;\n}\ninterface IProps extends RouteProps {\n  data: IPartnerDirectorDetailsData;\n  isLoading?: boolean;\n  disabled?: boolean;\n  disabledSaveMenu?: boolean;\n  cardNumber?: number;\n  dropDownOptions: any;\n  documentCategory?: string;\n  ocrRelatedData?: IOcrRelatedData;\n  onSavePartnerDirectorDetails: () => any;\n  onRemovePartnerDirectorDetails?: () => void;\n}\n\nexport const initialPartnerDirectorData: IPartnerDirectorDetailsData = {\n  listId: Math.random().toString(30).substring(2),\n  uid: \"\",\n  directorUid: \"\",\n  partnerName: \"\",\n  relationShip: \"\",\n  dobDate: \"\",\n  DIN: \"\",\n  profitSharing: \"\",\n  mobileNo: \"\",\n  remarks: \"\",\n  address: \"\",\n  smAddressType: \"\",\n  pincode: { pinCode: \"\", uid: \"\" },\n  city: { name: \"\", uid: \"\" },\n  state: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  loanDocuments: initialLoanDocsInfo,\n  isActive: true,\n};\n\nconst initialKycTemplateListData = {\n  listId: Math.random().toString(30).substring(2),\n  uid: \"\",\n  docName: \"\",\n  docNo: \"\",\n  maskedDocNo: \"\",\n  dob: \"\",\n  docSections: [],\n  isVerified: false,\n};\n\nconst PartnerDirectorDetails = forwardRef<IPartnerDirectorDetailsRef, IProps>((props, ref) => {\n  const {\n    data = initialPartnerDirectorData,\n    isLoading,\n    cardNumber,\n    dropDownOptions,\n    documentCategory = DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF,\n    ocrRelatedData,\n    disabled,\n    disabledSaveMenu,\n    onSavePartnerDirectorDetails,\n    onRemovePartnerDirectorDetails,\n  } = props;\n\n  const params = useParams();\n  const loanId = params?.loanUid ?? \"\";\n\n  // ----------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<IPartnerDirectorDetailsData>(data);\n  const [pageMode, setPageMode] = useState<string>(PAGE_MODE.VIEW);\n\n  //used to store partner/director uid\n  const [directorUid, setDirectorUid] = useState(\"\");\n  const [kycDocumentTemplateList, setKycDocumentTemplateList] = useState<\n    IKycDocumentCardListInfo[]\n  >([initialKycTemplateListData]);\n  const [isLoadingKycDoc, setIsLoadingKycDoc] = useState<boolean>(true);\n  const [uniqueKycCardTracker, setUniqueKycCardTracker] = useState<string[]>([]);\n  const [populateOcr, setPopulateOcr] = useState<IPopulateOcr>({\n    uid: \"\",\n    success: false,\n    failed: false,\n  });\n  const [aadhaarVerificationStatus, setAadhaarVerificationStatus] = useState<IAadharVerification>({\n    verified: false,\n    failedToVerify: false,\n  });\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const documentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = [\n    {\n      className: \"\",\n      label: \"Remove\",\n      command: () => {\n        onRemovePartnerDirectorDetails?.();\n      },\n      disabled: false,\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    useEffect: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    setPageObj(() => ({ ...data }));\n    setDirectorUid(data.directorUid);\n  }, [data]);\n\n  useEffect(() => {\n    if (pageObj.directorUid) {\n      getAllSavedKycDocuments();\n    } else {\n      setIsLoadingKycDoc(false);\n    }\n  }, [loanId, pageObj.directorUid]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n  const addressRef: any = useRef<IAddressRef | null>();\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    onSaveSuccess: onSaveSuccess,\n    remove: onRemove,\n    resetValidator: resetValidator,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getAllSavedKycDocuments = async () => {\n    try {\n      const res = await KYCService.getKycDocument(loanId, pageObj.directorUid);\n\n      if (validateGetAPIResponse(res)) {\n        const { data: savedItems } = res;\n        const kycDocuments = [];\n        const savedDocsName = [];\n\n        //get the section information for each saved doc\n        const getAllSectionsInfo = (sections: any[]) => {\n          const sectionsInfo = sections.map((section) => {\n            return {\n              sectionUid: section.uid ?? \"\",\n              fileName: section.fileName ?? \"\",\n              fileType: section.fileType ?? \"\",\n              sectionType: section.smDocSectionType ?? \"\",\n              url: section.url,\n            };\n          });\n          return sectionsInfo;\n        };\n\n        //iterating through each saved record to prepare template list object\n        for (const savedItem in savedItems) {\n          //below properties are common in all sections of the document that's why accessing the first item in the array and taking out necessary field data\n          kycDocuments.push({\n            listId: savedItem, //provide the uid as key for the component while mapping\n            uid: savedItem,\n            docName: savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\",\n            docNo: savedItems[savedItem]?.[0].kyc?.docNo ?? \"\",\n            maskedDocNo: savedItems[savedItem]?.[0].kyc?.maskedDocNo ?? \"\",\n            dob: savedItems[savedItem]?.[0].kyc?.dob ?? \"\",\n            docSections: getAllSectionsInfo(savedItems[savedItem]),\n            isVerified: savedItems[savedItem]?.[0].kyc?.isVerified ?? false,\n          });\n\n          savedDocsName.push(savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\");\n        }\n\n        if (kycDocuments.length) {\n          setKycDocumentTemplateList([...kycDocuments]);\n          setIsLoadingKycDoc(false);\n          setUniqueKycCardTracker([...savedDocsName]);\n        } else {\n          setIsLoadingKycDoc(false);\n        }\n      }\n    } catch (err) {\n      setIsLoadingKycDoc(false);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getSavedKycDocuments = async () => {\n    try {\n      const res = await KYCService.getKycDocument(loanId, directorUid);\n      if (validateGetAPIResponse(res)) {\n        const { data } = res;\n        return data;\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onSaveKycDocument = async (documentInfo: IKycDocuments, itemIndex: number) => {\n    //update request\n    if (documentInfo.uid) {\n      const sections = await getSectionsByDocumentUid(documentInfo.uid);\n      const payload = enrichUpdatePartnerKycDocument(documentInfo, sections);\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n\n        if (validatePutAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          setKycDocumentTemplateList((prev) => {\n            const updatedList = prev.map((item) => {\n              if (item.uid === data.uid) {\n                return {\n                  ...item,\n                  docName: data.docType?.code ?? \"\",\n                  docNo: data.docNo ?? \"\",\n                  maskedDocNo: data.maskedDocNo ?? \"\",\n                  docSections: prepareMaskedDocSections(data.kycDocuments),\n                  dob: data.dob ?? \"\",\n                };\n              }\n              return item; // Return the unchanged item if it has a UID\n            });\n            return updatedList; // Return the updated list to set state\n          });\n\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n\n    // create request\n    else {\n      const payload = enrichCreatePartnerKycDocument(documentInfo);\n\n      try {\n        const res = await KYCService.savePartnerOrDirectorKycDocument(payload);\n        if (validatePostAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          setKycDocumentTemplateList((prev) => {\n            const updatedList = prev.map((item, idx) => {\n              if (idx === itemIndex) {\n                return {\n                  ...item,\n                  uid: data.uid ?? \"\",\n                  docName: data.docType?.code ?? \"\",\n                  docNo: data.docNo ?? \"\",\n                  maskedDocNo: data.maskedDocNo ?? \"\",\n                  docSections: prepareMaskedDocSections(data.kycDocuments),\n                  dob: data.dob ?? \"\",\n                };\n              }\n              return item; // Return the unchanged item if it has a UID\n            });\n            return updatedList; // Return the updated list to set state\n          });\n\n          setDirectorUid(data?.applicant?.uid);\n\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveKycDocument = async (documentInfo: IKycDocuments, itemIndex?: number) => {\n    if (documentInfo.uid) {\n      const sections = await getSectionsByDocumentUid(documentInfo.uid);\n      const payload = enrichUpdatePartnerKycDocument(documentInfo, sections);\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          if (itemIndex !== undefined) {\n            deleteKycDocInList(itemIndex);\n          }\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onPopulateWithOcr = async (documentInfo: IKycDocuments, itemIndex: number) => {\n    const payload = enrichPopulateDocWithOcr(\n      loanId,\n      directorUid,\n      populateOcr.uid,\n      documentInfo,\n      APPLICANT_TYPE.DIRECTOR\n    );\n\n    try {\n      const res = await KYCService.populateKycDocument(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        setKycDocumentTemplateList((prev) => {\n          const updatedList = prev.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid,\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n          return updatedList; // Return the updated list to set state\n        });\n\n        setDirectorUid(data?.applicant?.uid ?? \"\");\n\n        setPopulateOcr((prev) => {\n          return { ...prev, uid: data.uid ?? \"\", success: true, failed: false };\n        });\n      }\n    } catch (err) {\n      setPopulateOcr((prev) => {\n        return { ...prev, success: false, failed: true };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onVerifyAadhar = async (\n    documentInfo: IKycDocuments,\n    aadharOtpInfo: IAadharOTP,\n    itemIndex: number,\n    uid: string\n  ) => {\n    const payload = enrichAadharValidation(\n      loanId,\n      directorUid,\n      documentInfo,\n      aadharOtpInfo,\n      APPLICANT_TYPE.DIRECTOR,\n      uid\n    );\n    try {\n      const res = await KYCService.validateAadhar(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        setAadhaarVerificationStatus({\n          ...aadhaarVerificationStatus,\n          verified: true,\n        });\n\n        setKycDocumentTemplateList((prev) => {\n          const updatedList = prev.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid ?? \"\",\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item; // Return the unchanged item if it has a UID\n          });\n          return updatedList; // Return the updated list to set state\n        });\n\n        setDirectorUid(data?.applicant?.uid ?? \"\");\n      }\n    } catch (err) {\n      setAadhaarVerificationStatus({\n        ...aadhaarVerificationStatus,\n        failedToVerify: true,\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------------\n    Validators:\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // aadhaar number\n    if (e.target.name === \"aadharNo\") {\n      const aadhaarValue: string = formatNumberToAadhaar(e.target.value);\n      setPageObj((prevPageObj: any) => {\n        return {\n          ...prevPageObj,\n          [e.target.name]: aadhaarValue.trim(),\n        };\n      });\n\n      return;\n    }\n\n    // pan\n    if (e.target.name === \"PAN\") {\n      setPageObj((prevPageObj: any) => {\n        return {\n          ...prevPageObj,\n          [e.target.name]: e.target.value.toUpperCase(),\n        };\n      });\n\n      return;\n    }\n\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onPrepopulateUsingKyc = async () => {\n    try {\n      const res = await KYCService.getPopulateDocumentByKyc(loanId, directorUid);\n      if (validateGetAPIResponse(res)) {\n        setPageObj((prev: IPartnerDirectorDetailsData) => ({\n          ...prev,\n          partnerName: res?.data?.name ?? \"\",\n          dobDate: res?.data?.dob ?? \"\",\n          mobileNo: res?.data?.mobile ?? \"\",\n          address: res?.data?.address ?? \"\",\n        }));\n\n        const response = await PincodeService.findByName(0, 1, res?.data?.pincode);\n\n        setPageObj((prev: IPartnerDirectorDetailsData) => ({\n          ...prev,\n          pincode: {\n            pinCode: response?.data?.results?.[0]?.pinCode ?? \"\",\n            uid: response?.data?.results?.[0]?.uid ?? \"\",\n          },\n        }));\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onAddKycDocument = () => {\n    const newDocumentList = {\n      listId: Math.random().toString(30).substring(2),\n      uid: \"\",\n      docName: \"\",\n      docNo: \"\",\n      maskedDocNo: \"\",\n      dob: \"\",\n      docSections: [],\n      isVerified: false,\n    };\n\n    setKycDocumentTemplateList((prev) => {\n      return [...prev, newDocumentList];\n    });\n    setPopulateOcr(() => {\n      return { uid: \"\", success: false, failed: false };\n    });\n  };\n\n  const onSaveSuccess = () => setPageMode(PAGE_MODE.VIEW);\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onRemove = () => {\n    const preparedPageObj: IPartnerDirectorDetailsData = {\n      ...pageObj,\n    };\n\n    return { ...preparedPageObj, isActive: false };\n  };\n\n  const onSave = () => {\n    const addressData = addressRef?.current?.save();\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n\n    if (!validateForm() || !addressData || !uploadedDocsInfo) {\n      return;\n    }\n\n    setPageObj({ ...pageObj, ...addressData, uid: pageObj.uid });\n    return getFinalBasicDetailsData();\n  };\n\n  const onCancel = () => {\n    resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const getSectionsByDocumentUid = async (uid: string) => {\n    const savedDocuments = await getSavedKycDocuments();\n    const sections = savedDocuments[uid];\n    return sections;\n  };\n\n  //delete kyc doc card in list\n  const deleteKycDocInList = (itemIndex?: number) => {\n    setKycDocumentTemplateList(() => {\n      const newKycDocList = kycDocumentTemplateList.filter((_, index) => index !== itemIndex);\n      return [...newKycDocList];\n    });\n  };\n\n  //update the unique kyc card name tracker list\n  const updateUniqueTrackerList = (list: string[]) => {\n    setUniqueKycCardTracker([...list]);\n  };\n\n  const getFinalBasicDetailsData = () => {\n    const addressData = addressRef?.current?.save();\n    const uploadedDocsInfo = documentUploaderRef?.current?.getUploadedData();\n    return {\n      ...pageObj,\n      ...addressData,\n      uid: pageObj.uid,\n      loanDocumentsProof: uploadedDocsInfo,\n      directorUid: directorUid,\n    };\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n\n    addressRef?.current?.resetValidator();\n  };\n\n  const enrichCreatePartnerKycDocument = (documentInfo: IKycDocuments) => {\n    const { documentUid: kycDocTypeUid, documentUrl, documentNumber, dob } = documentInfo;\n\n    const documentSections = documentUrl.map((docUrl) => {\n      const preparedSectionPayload = {\n        loan: {}, //always has to be empty\n        kyc: {}, //always has to be empty\n        smDocSectionType: docUrl.code,\n        fileName: docUrl.fileName,\n        fileType: docUrl.contentType,\n        thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n        url: docUrl.url,\n        meta: \"\",\n      };\n\n      return preparedSectionPayload;\n    });\n    const payloadData = {\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: directorUid ? directorUid : \"\",\n        applicantType: APPLICANT_TYPE.DIRECTOR,\n      }, // corporate director\n      docType: {\n        uid: kycDocTypeUid,\n      },\n      dob: dob ? dob : null,\n      docNo: documentNumber,\n      meta: \"\",\n      kycDocuments: documentSections,\n    };\n\n    return payloadData;\n  };\n\n  const enrichUpdatePartnerKycDocument = (documentInfo: IKycDocuments, sections: any) => {\n    const {\n      uid,\n      documentUid: kycDocTypeUid,\n      documentUrl,\n      documentNumber,\n      dob,\n      isActive,\n    } = documentInfo;\n\n    const getSectionUid = (sectionCode: string) => {\n      const currentSection = sections.find((section: any) => {\n        return section.smDocSectionType === sectionCode;\n      });\n      return currentSection.uid;\n    };\n\n    const documentSections = documentUrl.map((docUrl) => {\n      const preparedSectionPayload = {\n        uid: getSectionUid(docUrl.code),\n        loan: {}, //always has to be empty\n        kyc: {}, //always has to be empty\n        smDocSectionType: docUrl.code,\n        fileName: docUrl.fileName,\n        fileType: docUrl.contentType,\n        thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n        url: docUrl.url,\n        meta: \"\",\n      };\n\n      return preparedSectionPayload;\n    });\n\n    const payloadData = {\n      uid: uid,\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: directorUid,\n        applicantType: APPLICANT_TYPE.DIRECTOR,\n      },\n      docType: {\n        uid: kycDocTypeUid,\n      },\n      dob: dob ? dob : null,\n      docNo: documentNumber,\n      meta: \"\",\n      stage: null,\n      kycDocuments: documentSections,\n      isActive: isActive,\n    };\n\n    return payloadData;\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const renderKycDocuments = () => {\n    return (\n      <React.Fragment>\n        {kycDocumentTemplateList.map((templateData, index) => (\n          <div key={templateData.listId}>\n            <KYCV3\n              mode={\"EDIT\"}\n              isLoading={isLoadingKycDoc}\n              disableKycCardMenu={disabled}\n              uid={templateData.uid}\n              documentListIndex={index}\n              docName={templateData.docName}\n              docNo={templateData.docNo}\n              dateOfBirth={templateData.dob}\n              docSections={templateData.docSections}\n              maskedDocNo={templateData.maskedDocNo}\n              isVerified={templateData.isVerified}\n              removeDocumentInList={deleteKycDocInList}\n              cardNameList={uniqueKycCardTracker}\n              handlerCardNameList={updateUniqueTrackerList}\n              ocrStatus={populateOcr}\n              onSave={onSaveKycDocument}\n              onRemove={onRemoveKycDocument}\n              onPopulate={onPopulateWithOcr}\n              onVerifyAadhar={onVerifyAadhar}\n              aadharVerificationStatus={aadhaarVerificationStatus}\n              handlerAadharVerificationStatus={() => {\n                setAadhaarVerificationStatus({\n                  verified: false,\n                  failedToVerify: false,\n                });\n              }}\n              placeOfUpload={PLACE_OF_UPLOAD_KYC.LOGIN_CORPORATE_COAPPLICANT}\n            />\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  const renderDocumentUploader = useMemo(() => {\n    return (\n      <div className=\"flex flex-col space-y-4\">\n        <TextData\n          label={\"label.text.address.proof\"}\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-ptext-900 text-sm font-bold mb-1\"\n        />\n\n        <div>\n          <DocumentUploader\n            ref={documentUploaderRef}\n            savedDocument={data.loanDocuments?.[0] ? data.loanDocuments[0] : {}}\n            mode={pageMode}\n            queryParamForDocList={documentCategory}\n            ocrStageName={ocrRelatedData?.ocrStageName}\n            ocrSubstageName={ocrRelatedData?.ocrSubstageName}\n            ocrPayloadData={{\n              loanUid: ocrRelatedData?.ocrPayloadData?.loanUid ?? \"\",\n              applicant: {\n                uid: ocrRelatedData?.ocrPayloadData?.applicant?.uid ?? \"\",\n              },\n            }}\n          />\n        </div>\n      </div>\n    );\n  }, [pageObj?.loanDocuments, pageMode]);\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state, latitude, longitude } = pageObj;\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      latitude,\n      longitude,\n    };\n  }, [\n    pageObj?.address,\n    pageObj?.pincode,\n    pageObj?.city,\n    pageObj?.state,\n    pageObj?.latitude,\n    pageObj?.longitude,\n  ]);\n\n  const renderAddressSection = () => {\n    // data to pre populate address fields\n    return (\n      <React.Fragment>\n        <div className=\"flex\">\n          <Text\n            className=\"text-primary-ptext-900 text-sm font-bold mb-1\"\n            label={\"label.title.address\"}\n          />\n        </div>\n\n        <Address\n          pageMode={pageMode}\n          ref={addressRef}\n          data={addressData}\n          variant={VARIANTS.SECONDARY}\n        >\n          {renderDocumentUploader}\n        </Address>\n      </React.Fragment>\n    );\n  };\n\n  const renderRemarks = () => {\n    const { remarks } = pageObj;\n    return (\n      <div className=\"\">\n        <div className=\"flex flex-col justify-start items-start space-y-4 w-full col-span-2\">\n          <Text\n            className=\"text-primary-ptext-900 text-sm font-bold\"\n            label={\"label.dde.partner.director.remarks\"}\n          />\n\n          <div className=\"w-full\">\n            <InputTextArea\n              className=\"!h-40\"\n              name=\"remarks\"\n              label={\"input.text.title.remark\"}\n              placeholder={\"\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              autoResize\n              onChange={handleChange}\n              value={remarks}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderBasicDetails = () => {\n    const { partnerName, relationShip, dobDate, DIN, profitSharing, mobileNo } = pageObj;\n\n    return (\n      <>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2  md:grid-cols-3 lg:grid-cols-4 gap-x-4 gap-y-5 \">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.partner.director.partner.name\"}\n              placeholder=\"Enter Name of Partner\"\n              name=\"partnerName\"\n              className=\"\"\n              value={partnerName}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                `partnerName`,\n                partnerName,\n                \"mandatory|checkString\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.partner.director.relationship\"}\n              placeholder=\"Select Relationship\"\n              name=\"relationShip\"\n              value={relationShip}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                \"relationShip\",\n                relationShip,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              options={dropDownOptions.RELATION_SHIP_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SystemDatePicker\n              disabled={pageMode === PAGE_MODE.VIEW}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.partner.director.dob\"}\n              placeholder=\"Select Date\"\n              name=\"dobDate\"\n              value={new Date(dobDate)}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(`dobDate`, dobDate, \"mandatory|dob\")}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.partner.director.DIN\"}\n              placeholder=\"Enter DIN\"\n              name=\"DIN\"\n              className=\"\"\n              value={DIN}\n              onChange={handleChange}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `DIN`,\n                DIN,\n                \"checkNumber|min:8|onlyPositive|onlyInteger\"\n              )}\n            />\n          </div>\n          {/* \n        Aadhar and Pan Input Fields have been removed as per the latest change - 01/02/24\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.partner.director.aadhar\"}\n              placeholder=\"Enter Aadhaar Number\"\n              name=\"aadharNo\"\n              className=\"text-right\"\n              value={aadharNo}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(\n                `aadharNo`,\n                aadharNo,\n                \"mandatory|aadhaar\"\n              )}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.partner.director.pan\"}\n              placeholder=\"Enter PAN\"\n              name=\"PAN\"\n              className=\"\"\n              value={PAN}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(`PAN`, PAN, \"mandatory|pan\")}\n              onBlur={validate}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div> */}\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.partner.director.profitSharing\"}\n              placeholder=\"Enter Percentage\"\n              name=\"profitSharing\"\n              className=\"text-right\"\n              value={profitSharing}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `profitSharing`,\n                profitSharing,\n                \"checkNumber|onlyPositive|maxDecimal:2\"\n              )}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputAddon\n              label={\"label.partner.director.mobileNo\"}\n              disabled={pageMode === PAGE_MODE.VIEW}\n              name=\"mobileNo\"\n              value={mobileNo}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                \"mobileNo\",\n                mobileNo,\n                \"mandatory|onlyInteger|checkNumber|max:10|min:10\"\n              )}\n            />\n          </div>\n        </div>\n        {renderAddressSection()}\n        {renderRemarks()}\n      </>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className=\"\">\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <div className=\"flex flex-col gap-5\">\n          <div className=\"border border-primary-ptext-500 rounded-xl\">\n            <Section title=\"\" alertText={\"Either PAN or Form - 60 are mandatory\"}>\n              <div className=\"\">\n                <div>\n                  <Text\n                    label={\"label.dde.partner.director.detail\"}\n                    args={{\n                      count: `${cardNumber} - ${textConverter(\n                        \"label.dde.partner.director.kycDetails\"\n                      )}`,\n                    }}\n                    className=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-5\">\n                  {renderKycDocuments()}\n                </div>\n\n                <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                    customLabel={\"Add Another Document\"}\n                    onClick={onAddKycDocument}\n                  />\n                </div>\n              </div>\n            </Section>\n          </div>\n\n          <SaveComponent\n            title={\"label.dde.partner.director.detail\"}\n            titleArgs={{\n              count: `${cardNumber} - ${textConverter(\"label.dde.partner.director.BasicDetails\")}`,\n            }}\n            pageMode={pageMode}\n            onCancel={onCancel}\n            onEdit={onEdit}\n            onSave={onSavePartnerDirectorDetails}\n            onPrePopulate={() => onPrepopulateUsingKyc()}\n            kebabModel={menuModel}\n            disabled={disabled && !directorUid.length}\n            disabledMenu={disabledSaveMenu}\n          >\n            {renderBasicDetails()}\n          </SaveComponent>\n        </div>\n      )}\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n});\n\nPartnerDirectorDetails.defaultProps = {\n  disabled: false,\n};\n\nexport default PartnerDirectorDetails;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ShortUniqueId from \"short-unique-id\";\n\n// --------- ---------- //\nimport ButtonBox from \"components/ButtonBox\";\nimport LazyLoader from \"components/LazyLoader\";\nimport Loader from \"components/Loader\";\nimport RichTextEditor from \"components/RichTextEditor\";\nimport SaveComponent from \"components/Save\";\nimport SimpleTab from \"components/SimpleTab\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport { ToastPositionType } from \"primereact/toast\";\n\n// --------- ---------- //\nimport Address, { IAddressRef } from \"components/Address\";\nimport DocumentUploader, {\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  ISavedDocumentRecords,\n  dummySavedDocStructureInList,\n} from \"components/DocumentUploader\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport Section from \"components/Section\";\nimport WarningDialog from \"components/WarningDialog\";\n\n// --------- ---------- //\nimport ApplicantService from \"services/ApplicantService\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport AddressService from \"services/transaction/DDE/AddressService\";\nimport BankAccountDetailsService from \"services/transaction/DDE/BankAccountDetailsService\";\nimport OtherDetailsService from \"services/transaction/DDE/OtherDetailsService\";\nimport DirectorService from \"services/transaction/DirectorService\";\nimport InvestmentInfoService from \"services/transaction/InvestmentInfoService\";\nimport BasicInformation from \"services/transaction/QDE/BasicInformation\";\n\n// --------- ---------- //\nimport { ISectionDropdownOption } from \"interface/common\";\nimport {\n  checkDataHasValue,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\n\n// --------- ---------- //\nimport {\n  enrichBankAccountDetailsObj,\n  enrichCorpHistoricalFinDetails,\n  enrichCorpInvestmentFinDetails,\n  enrichOrgOtherDetails,\n  enrichOrgRegisteredAddress,\n  enrichOrganisationBasicInfo,\n  enrichOtherDocuments,\n  enrichPartnerDirectorDetails,\n  initialBankAccountDetailsData,\n  structSavedDocStrucutureForOtherDocuments,\n  updateAddressData,\n  updateBankAccountInfoObj,\n  updateOrganisationBasicInfo,\n  updatePartnerDirectorDetails,\n} from \"../Helper\";\n\n// --------- ---------- //\nimport BankAccountDetails, {\n  IBankAccountDetails,\n  IBankAccountDetailsRef,\n} from \"../PageApplicant/BankAccountDetails\";\n\n// --------- ---------- //\nimport {\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  OCR_STAGE_NAMES,\n  PAGE_MODE,\n  PAGE_TYPE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n  VARIANTS,\n} from \"utils/Constant\";\n\n// --------- ---------- //\nimport OtherDocuments, {\n  IOtherDocumentsRef,\n  LOAN_SECTION_KEY_TYPES,\n  STAGE,\n} from \"components/OtherDocuments/OtherDocuments\";\nimport OtherDocumentService from \"services/transaction/OtherDocumentService\";\nimport HistoricalFinancialDetail, {\n  IHistoricalFinInfoRef,\n} from \"./HistoricalFinancialDetail/HistoricalFinancialDetail\";\nimport InvestmentDetail, { IInvestmentDetailRef } from \"./InvestmentDetail/InvestmentDetail\";\nimport OrganisationDetails, {\n  IOrganisationDetailsData,\n  IOrganisationDetailsRef,\n  initialOrgBasicInfoData,\n} from \"./OrganisationDetails\";\nimport PartnerDirectorDetails, {\n  IPartnerDirectorDetailsData,\n  initialPartnerDirectorData,\n} from \"./PartnerDirectorDetails/PartnerDirectorDetails\";\n\n// --------------------------------- page interface ---------------------------------------------- //\ninterface IPageData {\n  organisationDetails: {\n    isOrganisationDetailsLoading: boolean;\n    organisationDetailsData: IOrganisationDetailsData;\n  };\n  addressInfo: {\n    isAddressLoading: boolean;\n    address: any;\n    addressInfoPageMode: string;\n    isSameAsRegGSTAddress: boolean;\n  };\n  otherDetails: {\n    isOtherDetailsLoading: boolean;\n    otherSectionMode: string;\n    productServiceData: string;\n    rawMaterialData: string;\n    businessModelData: string;\n    uid?: string;\n  };\n  partnerDirector: {\n    isPartnerDirectorInfoLoading: boolean;\n    partnerDirectorInfoList: IPartnerDirectorDetailsData[];\n  };\n  bankAccount: { isBankAccountInfoLoading: boolean; bankAccountInfoList: IBankAccountDetails[] };\n  historicalFinDetails: {\n    sectionMode: string;\n    isLoading: boolean;\n    hfd: {\n      uid: string;\n      smFinancialYear: string;\n      turnOver: string;\n      profit: string;\n      netWorth: string;\n    }[];\n  };\n  investmentDetails: {\n    sectionMode: string;\n    isLoading: boolean;\n    comments: string;\n    assets: { uid: string; amount: string; isActive: boolean; smAssetType: string }[];\n  };\n  otherDocInfo: {\n    isOtherDocInfoLoading: boolean;\n    otherDocInfoList: ISavedDocumentRecords[];\n    sectionMode: string;\n  };\n}\n\nconst initialPageData: IPageData = {\n  organisationDetails: {\n    isOrganisationDetailsLoading: false,\n    organisationDetailsData: { ...initialOrgBasicInfoData },\n  },\n  addressInfo: {\n    isAddressLoading: false,\n    address: {},\n    addressInfoPageMode: PAGE_MODE.VIEW,\n    isSameAsRegGSTAddress: false,\n  },\n  otherDetails: {\n    isOtherDetailsLoading: false,\n    otherSectionMode: PAGE_MODE.VIEW,\n    productServiceData: \"\",\n    rawMaterialData: \"\",\n    businessModelData: \"\",\n    uid: \"\",\n  },\n  partnerDirector: {\n    isPartnerDirectorInfoLoading: false,\n    partnerDirectorInfoList: [initialPartnerDirectorData],\n  },\n  bankAccount: {\n    isBankAccountInfoLoading: false,\n    bankAccountInfoList: [initialBankAccountDetailsData],\n  },\n  historicalFinDetails: {\n    isLoading: false,\n    sectionMode: PAGE_MODE.VIEW,\n    hfd: [\n      {\n        uid: \"\",\n        smFinancialYear: \"\",\n        turnOver: \"\",\n        profit: \"\",\n        netWorth: \"\",\n      },\n    ],\n  },\n  investmentDetails: {\n    isLoading: false,\n    sectionMode: PAGE_MODE.VIEW,\n    comments: \"\",\n    assets: [\n      {\n        uid: \"\",\n        amount: \"\",\n        smAssetType: \"\",\n        isActive: true,\n      },\n    ],\n  },\n  otherDocInfo: {\n    isOtherDocInfoLoading: false,\n    otherDocInfoList: [dummySavedDocStructureInList],\n    sectionMode: PAGE_MODE.VIEW,\n  },\n};\n\n// ----------------------------------------- Functional component ------------------------------------- //\n\nconst PageCorporateCoApplicants = () => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n  const uniqueKey = new ShortUniqueId({ length: 5 });\n\n  // ----------------- states ---------------------- //\n  // main page functionality states\n\n  const [isPageCorporateCoApplicantLoading, setIsPageCorporateCoApplicantLoading] =\n    useState<boolean>(true);\n\n  const [currentTabDetails, setCurrentTabDetails] = useState<any>({\n    corporateCoApplicant: { name: \"New Tab\", key: \"\" },\n    index: null,\n  });\n\n  const [applicantId, setApplicantId] = useState<string>(\"\");\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n  const [selectedTabIndex, setSelectedTabIndex] = useState<number>(0);\n  const [isSameActiveIndex, setIsSameActiveIndex] = useState<boolean>(false);\n  const [corporateCoApplicants, setCorporateCoApplicants] = useState<any>([\n    { firstName: \"New Tab\", key: uniqueKey() },\n  ]);\n  const [navigateBack, setNavigateBack] = useState(false); //NOSONAR\n  const [tabAddedFlag, setTabAddedFlag] = useState<boolean>(false);\n  const [editorValidation, setEditorValidation] = useState<any>({\n    businessModelValidation: {\n      errorMessage: \"\",\n    },\n  });\n\n  const [dropdownOptions, setDropdownOptions] = useState<ISectionDropdownOption>({\n    SEGMENT_OPTION: [],\n    BUSINESS_CONSTITUTION_OPTION: [],\n    OWNERSHIP_OPTION: [],\n    NO_EMPLOYEE_OPTION: [],\n    RELATION_SHIP_OPTION: [],\n  });\n\n  // states for the rendering contents  ( use this instead of creating different states for each )\n  const [pageData, setPageData] = useState<IPageData>({ ...initialPageData });\n\n  const [initiateAPICallForSection, setInitiateAPICallForSection] = useState<any>({\n    orgBasicInfoAPICall: false,\n  });\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isRemoveTabWarningVisible, setIsRemoveTabWarningVisible] = useState<boolean>(false);\n  const [isSwitchTabWarningVisible, setIsSwitchTabWarningVisible] = useState<boolean>(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const tabRef = useRef<any>(null);\n  const toastMessageRef = useRef(null);\n\n  const organisationDetailsRef = useRef<IOrganisationDetailsRef>(null);\n  const bankAccountRef = useRef<IBankAccountDetailsRef[]>([]);\n  const addressRef = useRef<IAddressRef | null>(null);\n  const partnerDirectorRef = useRef<any[]>([]);\n  const historicalFinDetailsRef = useRef<IHistoricalFinInfoRef | null>(null);\n  const investmentDetailRef = useRef<IInvestmentDetailRef | null>(null);\n  const productEditorRef = useRef<any>(null);\n  const rawMaterialEditorRef = useRef<any>(null);\n  const businessModelEditorRef = useRef<any>(null);\n  const addressDocUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  const otherDocsRef = useRef<IOtherDocumentsRef | null>(null);\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = (corporateCoApplicant: any, index: number) => [\n    {\n      className: \"\",\n      label: \"Remove Corporate Co-Applicant\",\n      command: () => {\n        setCurrentTabDetails({ corporateCoApplicant: corporateCoApplicant, index: index });\n        setIsRemoveTabWarningVisible(true);\n      },\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    // initial empty dependency useEffect\n    // Do not add any dependency for this\n\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (corporateCoApplicants[activeIndex]?.uid) {\n      resetPageDataWithUID();\n      getOrgBasicInfo();\n    }\n  }, [activeIndex, isSameActiveIndex]);\n\n  useEffect(() => {\n    if (\n      pageData?.organisationDetails?.organisationDetailsData?.uid &&\n      corporateCoApplicants[activeIndex]?.uid\n    ) {\n      getOrgRegisteredAddress();\n    }\n  }, [pageData?.organisationDetails?.organisationDetailsData]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (corporateCoApplicants[activeIndex]?.uid && !isPageCorporateCoApplicantLoading) {\n      getOrgBasicInfo();\n    }\n  }, [isPageCorporateCoApplicantLoading, initiateAPICallForSection.orgBasicInfoAPICall]);\n\n  useEffect(() => {\n    handleTabChange({ index: corporateCoApplicants.length - 1 });\n  }, [tabAddedFlag]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.PRIMARY, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setApplicantId(res.data?.results?.[0]?.uid);\n        return res.data?.results?.[0]?.uid ?? \"\";\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getCorporateCoApplicantList = async (\n    initiateAPICallFor?: string,\n    callbackFunction?: any\n  ) => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(\n        0,\n        20,\n        APPLICANT_TYPE.CORPORATE_CO_APPLICANT,\n        loanId\n      );\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        const results: any[] = res.data?.results?.map((item: any, index: number) => {\n          if (!item?.firstName && !item.lastName) {\n            return { ...item, firstName: `Cor-CO-APP... ${index + 1}` };\n          }\n\n          return { ...item };\n        });\n\n        setCorporateCoApplicants(results);\n        setIsPageCorporateCoApplicantLoading(false);\n\n        if (initiateAPICallFor === \"ORG_BASIC_INFO\") {\n          setInitiateAPICallForSection((prevState: any) => {\n            return { ...prevState, orgBasicInfoAPICall: !prevState.orgBasicInfoAPICall };\n          });\n        }\n\n        if (callbackFunction) {\n          callbackFunction(results);\n        }\n      } else {\n        updateEmptyCorporateCoApplicants();\n        setIsPageCorporateCoApplicantLoading(false);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getOrgBasicInfo = async (isIgnoreLoader?: boolean) => {\n    const activeCorporateCoApplicantObj = corporateCoApplicants[activeIndex];\n\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        organisationDetails: {\n          ...prev.organisationDetails,\n          isOrganisationDetailsLoading: true,\n        },\n      }));\n    }\n\n    try {\n      const res = await BasicInformation.getCorporateBasicInfo(activeCorporateCoApplicantObj?.uid);\n      if (validateGetAPIResponse(res)) {\n        setPageData((prev: IPageData) => ({\n          ...prev,\n          organisationDetails: {\n            ...prev.organisationDetails,\n            organisationDetailsData: updateOrganisationBasicInfo(res?.data),\n            isOrganisationDetailsLoading: false,\n          },\n        }));\n      } else {\n        setPageData((prev: IPageData) => ({\n          ...prev,\n          organisationDetails: {\n            ...prev.organisationDetails,\n            isOrganisationDetailsLoading: false,\n          },\n        }));\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getOrgRegisteredAddress = async (isIgnoreLoader?: boolean) => {\n    const activeCorporateCoApplicantObj = corporateCoApplicants[activeIndex];\n\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        addressInfo: {\n          ...prev.addressInfo,\n          isAddressLoading: true,\n        },\n      }));\n    }\n\n    if (loanId && activeCorporateCoApplicantObj?.uid) {\n      try {\n        const res = await AddressService.getOrgRegisteredAddress(\n          loanId,\n          activeCorporateCoApplicantObj?.uid\n        );\n        if (validateGetAPIResponse(res)) {\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            addressInfo: {\n              ...prev.addressInfo,\n              isAddressLoading: false,\n              address: updateAddressData(res.data),\n              isSameAsRegGSTAddress: res?.data?.isSameAsRegisteredGstAddress ?? false,\n            },\n          }));\n        } else {\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            addressInfo: {\n              ...prev.addressInfo,\n              isAddressLoading: false,\n            },\n          }));\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const getBankAccountOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=ACCOUNT_TYPE&`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            ACCOUNT_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBankAccountInfo = async (corporateCoApplicantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          bankAccount: {\n            ...prevState.bankAccount,\n            isBankAccountInfoLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && corporateCoApplicantId) {\n      try {\n        const res = await BankAccountDetailsService.getCorporateBankAccountDetails(\n          loanId,\n          corporateCoApplicantId\n        );\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedBankAccountInfo = res?.data?.map((bankAccountInfo: any) => {\n              return updateBankAccountInfoObj(bankAccountInfo);\n            });\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                bankAccount: {\n                  bankAccountInfoList: [...savedBankAccountInfo],\n                  isBankAccountInfoLoading: false,\n                },\n              };\n            });\n          } else {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                bankAccount: {\n                  ...prevState.bankAccount,\n                  isBankAccountInfoLoading: false,\n                  bankAccountInfoList: [{ ...initialBankAccountDetailsData }],\n                },\n              };\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            bankAccount: {\n              ...prevState.bankAccount,\n              isBankAccountInfoLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getHistoricalFinancialInfo = async (\n    corporateCoApplicantId: string,\n    isIgnoreLoader?: boolean\n  ) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          historicalFinDetails: {\n            ...prevState.historicalFinDetails,\n            isLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && corporateCoApplicantId) {\n      try {\n        const res = await InvestmentInfoService.getCorpHistoricalFinancialInfo(\n          0,\n          20,\n          loanId,\n          corporateCoApplicantId\n        );\n        if (validateGetAPIResponse(res)) {\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              historicalFinDetails: {\n                ...prevState.historicalFinDetails,\n                hfd: [],\n                isLoading: false,\n              },\n            };\n          });\n        }\n      } catch (error) {\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            historicalFinDetails: {\n              ...prevState.historicalFinDetails,\n              isLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getInvestmentInfo = async (corporateCoApplicantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          investmentDetails: {\n            ...prevState.investmentDetails,\n            isLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && corporateCoApplicantId) {\n      try {\n        const res = await InvestmentInfoService.getCorpInvestmentInfo(\n          0,\n          20,\n          loanId,\n          corporateCoApplicantId\n        );\n        if (validateGetAPIResponse(res)) {\n          const { data: savedInvestmentInfo } = res;\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              investmentDetails: {\n                ...prevState.investmentDetails,\n                assets: [],\n                comments: savedInvestmentInfo.commentOnInvestment ?? \"\",\n                isLoading: false,\n              },\n            };\n          });\n        }\n      } catch (error) {\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            investmentDetails: {\n              ...prevState.investmentDetails,\n              isLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getSegmentOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=CORPORATE_SEGMENT&`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            SEGMENT_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBusinessConstitutionOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=BUSINESS_CONSTITUTION&`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            BUSINESS_CONSTITUTION_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getOwnerShipOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=OWNERSHIP_OF_BUSINESS_PREMISES&`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            OWNERSHIP_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getNoOfEmp = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=NO_OF_EMPLOYEES&`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            NO_EMPLOYEE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getRelationShipOptions = () => {\n    const start = 0;\n    const limit = 200;\n    StaticMasterDataService.getAll(\n      start,\n      limit,\n      \"staticMasterType.code=CORPORATE_RELATION_TYPE&&\"\n    ).then((res) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            RELATION_SHIP_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getOtherDetails = async (corporateCoApplicantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          otherDetails: {\n            ...prevState.otherDetails,\n            isOtherDetailsLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && corporateCoApplicantId) {\n      try {\n        const res = await OtherDetailsService.getOrgOtherDetails(corporateCoApplicantId);\n        if (validateGetAPIResponse(res)) {\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              otherDetails: {\n                ...prevState.otherDetails,\n                isOtherDetailsLoading: false,\n                productServiceData: res?.data?.productServiceOffered,\n                rawMaterialData: res?.data?.rawMaterial,\n                businessModelData: res?.data?.businessModelDetailedWriteup,\n                uid: res?.data?.uid,\n              },\n            };\n          });\n        }\n      } catch (error) {\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            otherDetails: {\n              ...prevState.otherDetails,\n              isOtherDetailsLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getPartnerDirectorDetails = async (\n    corporateCoApplicantId: string,\n    isIgnoreLoader?: boolean\n  ) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          partnerDirector: {\n            ...prevState.partnerDirector,\n            isPartnerDirectorInfoLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && corporateCoApplicantId) {\n      try {\n        const res = await DirectorService.getCorporatePartnerDirectors(\n          loanId,\n          corporateCoApplicantId\n        );\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedPartnerDetails = res?.data?.map((partnerInfo: any) => {\n              return updatePartnerDirectorDetails(partnerInfo);\n            });\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                partnerDirector: {\n                  ...prevState.partnerDirector,\n                  partnerDirectorInfoList: [...savedPartnerDetails],\n                  isPartnerDirectorInfoLoading: false,\n                },\n              };\n            });\n          } else {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                partnerDirector: {\n                  ...prevState.partnerDirector,\n                  partnerDirectorInfoList: [{ ...initialPartnerDirectorData }],\n                  isPartnerDirectorInfoLoading: false,\n                },\n              };\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            partnerDirector: {\n              ...prevState.partnerDirector,\n              isPartnerDirectorInfoLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------------\n    Validators:\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const validateEditor = (editorRef: any, name: string, validationRule: any[]) => {\n    const wordcount = editorRef?.current?.editor?.plugins?.wordcount?.body.getCharacterCount();\n\n    if (validationRule.includes(\"Mandatory\")) {\n      if (wordcount < 1) {\n        setEditorValidation((prevState: any) => {\n          return {\n            ...prevState,\n            [name]: {\n              ...prevState[name],\n              errorMessage: \"Mandatory\",\n            },\n          };\n        });\n\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const getOtherDocumentsOfCorporateApplicant = async (corporateCoApplicantId: string) => {\n    try {\n      const res = await OtherDocumentService.getDocsByApplicantType(\n        STAGE.LOGIN,\n        loanId,\n        corporateCoApplicantId\n      );\n\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          otherDocInfo: {\n            ...prev.otherDocInfo,\n            isOtherDocInfoLoading: true,\n          },\n        };\n      });\n\n      if (validateGetAPIResponse(res)) {\n        if (res?.data?.length > 0) {\n          const preparedListOfOtherDocuments = res?.data?.map((document: any) => {\n            return structSavedDocStrucutureForOtherDocuments(document);\n          });\n\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                otherDocInfoList: [...preparedListOfOtherDocuments],\n                isOtherDocInfoLoading: false,\n              },\n            };\n          });\n        } else {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                isOtherDocInfoLoading: false,\n              },\n            };\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          otherDocInfo: {\n            ...prev.otherDocInfo,\n            isOtherDocInfoLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const handleTabChange = (e: any) => {\n    // extra interface is added\n    type ExtendedOrganisationDetailsData = IOrganisationDetailsData & {\n      loanDocumentsProof?: Record<string, any>;\n    };\n\n    let orgBasicInfoData: ExtendedOrganisationDetailsData | undefined =\n      organisationDetailsRef?.current?.getData();\n\n    // Delete the specified keys from the object\n    if (orgBasicInfoData) {\n      orgBasicInfoData = {\n        ...orgBasicInfoData,\n        isActive: undefined,\n        uid: undefined,\n        loanDocuments: [],\n        loanDocumentsProof: {},\n      };\n    }\n\n    if (\n      e.index !== activeIndex &&\n      !corporateCoApplicants?.[activeIndex]?.uid &&\n      checkDataHasValue(orgBasicInfoData)\n    ) {\n      setIsSwitchTabWarningVisible(true);\n      setSelectedTabIndex(e.index);\n    } else if (e.index !== activeIndex) {\n      resetPageData();\n      setActiveIndex(e.index);\n    }\n  };\n\n  const handleNavigateTab = () => {\n    resetPageData();\n    setActiveIndex(selectedTabIndex);\n    setIsSwitchTabWarningVisible(false);\n  };\n\n  const handleBusinessModelEditorValidation = (e: any, editorRef: any) => {\n    if (validateEditor(editorRef, \"businessModelValidation\", [\"Mandatory\"])) {\n      if (editorValidation?.businessModelValidation?.errorMessage) {\n        setEditorValidation((prevState: any) => {\n          return {\n            ...prevState,\n            businessModelValidation: {\n              ...prevState.businessModelValidation,\n              errorMessage: \"\",\n            },\n          };\n        });\n      }\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSaveOrganisationDetails = async () => {\n    const data: IOrganisationDetailsData | undefined = organisationDetailsRef?.current?.save();\n\n    if (data) {\n      const payload = enrichOrganisationBasicInfo(\n        data,\n        loanId,\n        applicantId,\n        APPLICANT_TYPE.CORPORATE_CO_APPLICANT\n      );\n\n      if (data.uid) {\n        try {\n          const res: any = await BasicInformation.updateCorporateBasicInfo(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            organisationDetailsRef?.current?.onSaveSuccess();\n\n            getCorporateCoApplicantList(\"ORG_BASIC_INFO\", (itemList: any) => {\n              if (itemList.length - 1 < activeIndex) {\n                setActiveIndex(itemList?.length - 1);\n              }\n            });\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res: any = await BasicInformation.createCorporateBasicInfo(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n\n            getCorporateCoApplicantList(\"ORG_BASIC_INFO\", (itemList: any) => {\n              if (itemList.length - 1 < activeIndex) {\n                setActiveIndex(itemList?.length - 1);\n              }\n            });\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onEditAddressInfo = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          addressInfoPageMode: PAGE_MODE.CREATE,\n        },\n      };\n    });\n  };\n\n  const onCancelAddressInfo = () => {\n    addressRef?.current?.resetValidator();\n    addressDocUploaderRef?.current?.resetValidator();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          addressInfoPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onSaveAddress = async (corporateCoApplicantId: string) => {\n    const data = addressRef?.current?.save();\n    const uploadedDocsInfo = addressDocUploaderRef?.current?.getUploadedData();\n\n    if (!data || !uploadedDocsInfo) {\n      return Promise.resolve(true);\n    }\n\n    if (data && uploadedDocsInfo) {\n      const payload = enrichOrgRegisteredAddress(\n        {\n          ...data,\n          uid: pageData.addressInfo?.address?.uid,\n          isSameAsRegGSTAddress: pageData.addressInfo?.isSameAsRegGSTAddress,\n          addressDocumentsInfo: uploadedDocsInfo ?? {},\n        },\n        loanId,\n        corporateCoApplicantId,\n        APPLICANT_TYPE.CORPORATE_CO_APPLICANT\n      );\n      if (pageData.addressInfo?.address?.uid) {\n        return onUpdateOrgRegisteredAddress(payload);\n      } else {\n        return onCreateOrgRegisteredAddress(payload);\n      }\n    }\n  };\n\n  const onUpdateOrgRegisteredAddress = async (payload: any) => {\n    return AddressService.updateOrgRegisteredAddress(payload)\n      .then((res) => {\n        if (validatePutAPIResponse(res)) {\n          getOrgRegisteredAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n          setPageData((previous) => ({\n            ...previous,\n            addressInfo: { ...previous.addressInfo, addressInfoPageMode: PAGE_MODE.VIEW },\n          }));\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onCreateOrgRegisteredAddress = async (payload: any) => {\n    return AddressService.createOrgRegisteredAddress(payload)\n      .then((res) => {\n        if (validatePostAPIResponse(res)) {\n          getOrgRegisteredAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n          setPageData((previous) => ({\n            ...previous,\n            addressInfo: { ...previous.addressInfo, addressInfoPageMode: PAGE_MODE.VIEW },\n          }));\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onAddMorePartnerDirectorDetails = () => {\n    const newPartnerDirectorListItem: IPartnerDirectorDetailsData = {\n      ...initialPartnerDirectorData,\n      listId: Math.random().toString(30).substring(2),\n    };\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        partnerDirector: {\n          ...prevState.partnerDirector,\n          partnerDirectorInfoList: [\n            ...prevState.partnerDirector.partnerDirectorInfoList,\n            newPartnerDirectorListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onAddMoreBankDetails = () => {\n    const newBankAccountListItem = { ...initialBankAccountDetailsData };\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        bankAccount: {\n          ...prevState.bankAccount,\n          bankAccountInfoList: [\n            ...prevState.bankAccount.bankAccountInfoList,\n            newBankAccountListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onSaveBankAccountInfo = async (index: number, corporateCoApplicantId: string) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        corporateCoApplicantId,\n        APPLICANT_TYPE.CORPORATE_CO_APPLICANT\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateCorporateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            bankAccountRef?.current?.[index]?.onSaveSuccess();\n            getBankAccountInfo(corporateCoApplicantId);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res = await BankAccountDetailsService.createCorporateBankAccountDetail(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            bankAccountRef?.current?.[index]?.onSaveSuccess();\n            getBankAccountInfo(corporateCoApplicantId);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onAddMoreTabs = () => {\n    setCorporateCoApplicants((prevState: any[]) => [\n      ...prevState,\n      {\n        firstName: \"New Tab\",\n        key: uniqueKey(),\n      },\n    ]);\n\n    setTabAddedFlag((prevState: boolean) => !prevState);\n  };\n\n  const onDeleteTab = async (corporateCoApplicant: any, index: any) => {\n    if (!corporateCoApplicant?.uid) {\n      if (corporateCoApplicants.length === 1) {\n        updateEmptyCorporateCoApplicants();\n        setIsRemoveTabWarningVisible(false);\n        resetPageData();\n        return;\n      }\n\n      removeDeletedCoApplicant(index);\n      setIsRemoveTabWarningVisible(false);\n    } else {\n      try {\n        const res = await ApplicantService.deleteApplicantInfo(corporateCoApplicant?.uid);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          if (corporateCoApplicants.length === 1) {\n            updateEmptyCorporateCoApplicants();\n            setIsRemoveTabWarningVisible(false);\n            resetPageData();\n            return;\n          }\n\n          removeDeletedCoApplicant(index);\n          setIsRemoveTabWarningVisible(false);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n        setIsRemoveTabWarningVisible(false);\n      }\n    }\n  };\n\n  const onLazyLoadBankAccountInfo = (corporateCoApplicant: any) => {\n    const functionsToCall = [];\n    functionsToCall.push(initialBankAccountInfoDropdownOptionsAPICall);\n    if (corporateCoApplicant?.uid) {\n      functionsToCall.push(() => getBankAccountInfo(corporateCoApplicant?.uid));\n    }\n\n    for (const func of functionsToCall) {\n      func();\n    }\n  };\n\n  const onLazyLoadOtherDetails = (corporateCoApplicant: any) => {\n    const functionsToCall = [];\n    if (corporateCoApplicant?.uid) {\n      functionsToCall.push(() => getOtherDetails(corporateCoApplicant?.uid));\n    }\n\n    for (const func of functionsToCall) {\n      func();\n    }\n  };\n\n  const onLazyLoadPartnerDirector = (corporateCoApplicant: any) => {\n    const functionsToCall = [];\n    functionsToCall.push(getRelationShipOptions);\n    if (corporateCoApplicant?.uid) {\n      functionsToCall.push(() => getPartnerDirectorDetails(corporateCoApplicant?.uid));\n    }\n\n    functionsToCall.forEach((func) => func());\n  };\n\n  const onRemoveBankAccountDetails = async (index: number, corporateCoApplicantId: string) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        corporateCoApplicantId,\n        APPLICANT_TYPE.CORPORATE_CO_APPLICANT\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            getBankAccountInfo(corporateCoApplicantId);\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const newBankAccountDetailsList = pageData.bankAccount.bankAccountInfoList.filter(\n          (_, idx: number) => idx !== index\n        );\n\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            bankAccount: {\n              ...prevState.bankAccount,\n              employmentInfoList: [...newBankAccountDetailsList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const onSaveOtherDetails = async (corporateCoApplicantId: string) => {\n    if (!validateEditor(businessModelEditorRef, \"businessModelValidation\", [\"Mandatory\"])) {\n      return;\n    }\n\n    if (businessModelEditorRef.current?.editor?.getContent()) {\n      const payload = enrichOrgOtherDetails(\n        {\n          ...pageData.otherDetails,\n          productServiceData: productEditorRef.current?.editor?.getContent(),\n          rawMaterialData: rawMaterialEditorRef.current?.editor?.getContent(),\n          businessModelData: businessModelEditorRef.current?.editor?.getContent(),\n        },\n        loanId\n      );\n\n      try {\n        const res = await OtherDetailsService.saveOrgOtherDetails(payload);\n        if (validatePostAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              otherDetails: { ...prevState.otherDetails, otherSectionMode: PAGE_MODE.VIEW },\n            };\n          });\n          getOtherDetails(corporateCoApplicantId);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onCancelOtherDetails = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        otherDetails: {\n          ...prevState.otherDetails,\n          otherSectionMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n\n    setEditorValidation((prevState: any) => {\n      return {\n        ...prevState,\n        businessModelValidation: {\n          errorMessage: \"\",\n        },\n      };\n    });\n  };\n\n  const onEditOtherDetails = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        otherDetails: {\n          ...prevState.otherDetails,\n          otherSectionMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onLazyLoadFinancialInfo = (corporateCoApplicantId: string) => {\n    const functionsToCall = [];\n    functionsToCall.push(initialFinancialInfoDropdownOptionsAPICall);\n    if (corporateCoApplicantId) {\n      functionsToCall.push(() => getHistoricalFinancialInfo(corporateCoApplicantId));\n      functionsToCall.push(() => getInvestmentInfo(corporateCoApplicantId));\n    }\n\n    functionsToCall.forEach((func) => func());\n  };\n\n  const onLazyLoadOtherDocuments = (corporateCoApplicantId: string) => {\n    if (corporateCoApplicantId) {\n      getOtherDocumentsOfCorporateApplicant(corporateCoApplicantId);\n    }\n  };\n\n  const onSaveHistoricalFinInfo = async (corporateCoApplicantId: string) => {\n    // @ts-ignore: will fix later\n    const historicalFinDetailsPageObj: IHistoricalFinInfo =\n      historicalFinDetailsRef?.current?.save();\n\n    const preparedPayload = enrichCorpHistoricalFinDetails(\n      loanId,\n      corporateCoApplicantId,\n      historicalFinDetailsPageObj,\n      APPLICANT_TYPE.CORPORATE_CO_APPLICANT\n    );\n\n    try {\n      const res = await InvestmentInfoService.updateCorpHistoricalFinancialInfo(\n        preparedPayload,\n        SUB_STAGE.DDE\n      );\n\n      if (validatePutAPIResponse(res)) {\n        historicalFinDetailsRef?.current?.editableTableRef();\n        historicalFinDetailsRef?.current?.resetTable();\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            historicalFinDetails: {\n              ...prevState.historicalFinDetails,\n              sectionMode: PAGE_MODE.VIEW,\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onSaveInvestmentInfo = async (corporateCoApplicantId: string) => {\n    // @ts-ignore: will fix later\n    const investmentFinDetailPageObj: ICorpInvestmentInfoData =\n      investmentDetailRef?.current?.save();\n\n    const preparedPayload = enrichCorpInvestmentFinDetails(\n      loanId,\n      corporateCoApplicantId,\n      investmentFinDetailPageObj\n    );\n\n    try {\n      const res = await InvestmentInfoService.updateCorpInvestmentInfo(\n        preparedPayload,\n        SUB_STAGE.DDE\n      );\n      if (validatePutAPIResponse(res)) {\n        getInvestmentInfo(corporateCoApplicantId);\n        investmentDetailRef?.current?.editableTableRef();\n        investmentDetailRef?.current?.resetTable();\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            investmentDetails: {\n              ...prevState.investmentDetails,\n              sectionMode: PAGE_MODE.VIEW,\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onSavePartnerDirectorDetails = async (index: number, corporateCoApplicantId: string) => {\n    const data: IPartnerDirectorDetailsData | undefined =\n      partnerDirectorRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichPartnerDirectorDetails(\n        data,\n        loanId,\n        applicantId,\n        corporateCoApplicantId,\n        APPLICANT_TYPE.DIRECTOR\n      );\n\n      try {\n        const res = await DirectorService.updateCorporatePartnerDirectors(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n          partnerDirectorRef?.current?.[index]?.onSaveSuccess();\n          getPartnerDirectorDetails(corporateCoApplicantId);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    } else {\n      return new Promise((res, rej) => rej());\n    }\n  };\n\n  const onRemovePartnerDirectorDetails = async (index: number, corporateCoApplicantId: string) => {\n    const data: IPartnerDirectorDetailsData | undefined =\n      partnerDirectorRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichPartnerDirectorDetails(\n        data,\n        loanId,\n        applicantId,\n        corporateCoApplicantId,\n        APPLICANT_TYPE.DIRECTOR\n      );\n\n      if (data.uid) {\n        try {\n          const res = await DirectorService.updateCorporatePartnerDirectors(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            partnerDirectorRef?.current?.[index]?.onSaveSuccess();\n            getPartnerDirectorDetails(corporateCoApplicantId);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const newPartnerInfoList = pageData.partnerDirector.partnerDirectorInfoList.filter(\n          (_, idx: number) => idx !== index\n        );\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            partnerDirector: {\n              ...prevState.partnerDirector,\n              partnerDirectorInfoList: [...newPartnerInfoList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const onAddOtherDocuments = () => {\n    const newDocument = {\n      ...dummySavedDocStructureInList,\n      listKey: Math.random().toString(36).substring(2),\n    };\n\n    setPageData((prev) => ({\n      ...prev,\n      otherDocInfo: {\n        ...prev.otherDocInfo,\n        otherDocInfoList: [...prev.otherDocInfo.otherDocInfoList, newDocument],\n      },\n    }));\n  };\n\n  const onSaveOtherDocuments = async (corporateCoApplicantId: string) => {\n    const payloadData = otherDocsRef.current?.save();\n    if (!payloadData) {\n      return;\n    }\n\n    try {\n      const res = await OtherDocumentService.saveDocument(STAGE.LOGIN, SUB_STAGE.DDE, payloadData);\n\n      if (validatePutAPIResponse(res)) {\n        setPageData((prev: IPageData) => {\n          return {\n            ...prev,\n            otherDocInfo: {\n              ...prev.otherDocInfo,\n              isOtherDocInfoLoading: true,\n              sectionMode: PAGE_MODE.VIEW,\n            },\n          };\n        });\n        getOtherDocumentsOfCorporateApplicant(corporateCoApplicantId);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onCancelOtherDocuments = (corporateCoApplicantId: string) => {\n    getOtherDocumentsOfCorporateApplicant(corporateCoApplicantId);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        otherDocInfo: {\n          ...prev.otherDocInfo,\n          sectionMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onRemoveOtherDocsFromList = async (\n    corporateCoApplicantId: string,\n    docInfo: IDocumentInfo,\n    itemIndex: number\n  ) => {\n    if (docInfo.uid) {\n      const deletedOtherDoc = { ...docInfo };\n      deletedOtherDoc.isActive = false;\n\n      const payloadData = enrichOtherDocuments([deletedOtherDoc], {\n        loanUid: loanId,\n        applicantUid: corporateCoApplicantId,\n        loanSectionKey: LOAN_SECTION_KEY_TYPES.applicants,\n      });\n\n      try {\n        const res = await OtherDocumentService.saveDocument(\n          STAGE.LOGIN,\n          SUB_STAGE.DDE,\n          payloadData\n        );\n\n        if (validatePutAPIResponse(res)) {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                isOtherDocInfoLoading: true,\n              },\n            };\n          });\n          getOtherDocumentsOfCorporateApplicant(corporateCoApplicantId);\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n\n    if (itemIndex !== undefined) {\n      deleteDocInOtherDocsList(itemIndex);\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getApplicantId();\n    getCorporateCoApplicantList();\n\n    dropdownAPICallForOrgBasicInfo();\n  };\n\n  const initialBankAccountInfoDropdownOptionsAPICall = () => {\n    getBankAccountOptions();\n  };\n\n  const initialFinancialInfoDropdownOptionsAPICall = () => {\n    //\n  };\n\n  //delete document uploader from other documents template list\n  const deleteDocInOtherDocsList = (itemIndex?: number) => {\n    setPageData((prev) => {\n      const newKycDocList = pageData.otherDocInfo.otherDocInfoList.filter(\n        (_, index) => index !== itemIndex\n      );\n      return {\n        ...prev,\n        otherDocInfo: { ...prev.otherDocInfo, otherDocInfoList: [...newKycDocList] },\n      };\n    });\n  };\n\n  const removeDeletedCoApplicant = (index: number) => {\n    const updatedCoApplicants = [...corporateCoApplicants];\n    if (index >= 0 && index < corporateCoApplicants.length) {\n      // Check if the findIndexOfCoApplicant is valid\n\n      updatedCoApplicants.splice(index, 1); // Remove 1 element at the specified index\n      setCorporateCoApplicants(updatedCoApplicants);\n\n      if (index + 1 === corporateCoApplicants.length - 1 && activeIndex === index + 1) {\n        //\n      } else if (\n        (index === corporateCoApplicants.length - 1 && activeIndex === index) ||\n        (index !== corporateCoApplicants.length - 1 &&\n          activeIndex === corporateCoApplicants.length - 1) ||\n        index < activeIndex\n      ) {\n        setTimeout(() => {\n          setActiveIndex(activeIndex - 1);\n        }, 5);\n      } else if (index === activeIndex) {\n        resetPageData();\n        setIsSameActiveIndex((prevState: boolean) => !prevState);\n      }\n    }\n  };\n\n  const updateEmptyCorporateCoApplicants = () => {\n    setCorporateCoApplicants([\n      {\n        firstName: \"New Tab 1\",\n        key: uniqueKey(),\n      },\n    ]);\n  };\n\n  const dropdownAPICallForOrgBasicInfo = () => {\n    getSegmentOptions();\n    getBusinessConstitutionOptions();\n    getOwnerShipOptions();\n    getNoOfEmp();\n  };\n\n  const resetPageData = () => {\n    setPageData({ ...initialPageData });\n  };\n\n  const resetPageDataWithUID = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          isAddressLoading: true,\n        },\n        otherDetails: { ...prevState.otherDetails, isOtherDetailsLoading: true },\n        partnerDirector: { ...prevState.partnerDirector, isPartnerDirectorInfoLoading: true },\n        bankAccount: { ...prevState.bankAccount, isBankAccountInfoLoading: true },\n        otherDocInfo: { ...prevState.otherDocInfo, isOtherDocInfoLoading: true },\n        historicalFinDetails: { ...prevState.historicalFinDetails, isLoading: true },\n        investmentDetails: { ...prevState.investmentDetails, isLoading: true },\n      };\n    });\n  };\n\n  const getOCRRelatedData = (corporateCoApplicantId: string) => {\n    return {\n      ocrStageName: OCR_STAGE_NAMES.LOGIN,\n      ocrSubstageName: SUB_STAGE.DDE,\n      ocrPayloadData: {\n        loanUid: loanId,\n        applicant: {\n          uid: corporateCoApplicantId,\n        },\n      },\n    };\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const renderOrganisationDetails = (corporateCoApplicantId: string) => {\n    const { isOrganisationDetailsLoading, organisationDetailsData } = pageData.organisationDetails;\n\n    return (\n      <OrganisationDetails\n        data={organisationDetailsData}\n        dropDownOptions={dropdownOptions}\n        ref={organisationDetailsRef}\n        documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BUSINESS_PROOF}\n        isLoading={isOrganisationDetailsLoading}\n        pageType={PAGE_TYPE.CORPORATE_CO_APPLICANT}\n        ocrRelatedData={getOCRRelatedData(corporateCoApplicantId)}\n        onSaveOrganisationDetails={onSaveOrganisationDetails}\n      />\n    );\n  };\n\n  const renderAddress = (corporateCoApplicant: any) => {\n    const { isAddressLoading, addressInfoPageMode, address } = pageData.addressInfo;\n\n    return isAddressLoading ? (\n      <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n    ) : (\n      <SaveComponent\n        disabled={!corporateCoApplicant?.uid}\n        title={\"subHeading.dde.red.address.organisation\"}\n        pageMode={addressInfoPageMode}\n        onEdit={onEditAddressInfo}\n        onSave={() => onSaveAddress(corporateCoApplicant?.uid)}\n        onCancel={onCancelAddressInfo}\n      >\n        <Address\n          ref={addressRef}\n          variant={VARIANTS.SECONDARY}\n          pageMode={addressInfoPageMode}\n          data={address}\n          isLatLong\n        >\n          <TextData\n            label={\"label.text.address.proof*\"}\n            value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n            titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n          />\n          <DocumentUploader\n            mandatoryDocUpload\n            ref={addressDocUploaderRef}\n            mode={addressInfoPageMode}\n            savedDocument={address.loanDocuments?.[0] ? address.loanDocuments[0] : {}}\n            queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF}\n            ocrStageName={OCR_STAGE_NAMES.LOGIN}\n            ocrSubstageName={SUB_STAGE.DDE}\n            ocrPayloadData={{\n              loanUid: loanId,\n              applicant: {\n                uid: corporateCoApplicant?.uid,\n              },\n            }}\n          />\n        </Address>\n      </SaveComponent>\n    );\n  };\n\n  const renderOtherDetails = (corporateCoApplicant: any) => {\n    const {\n      isOtherDetailsLoading,\n      otherSectionMode,\n      productServiceData,\n      rawMaterialData,\n      businessModelData,\n    } = pageData.otherDetails;\n\n    return isOtherDetailsLoading ? (\n      <div className=\"rounded-xl  bg-white  flex flex-col justify-start items-center space-y-4 p-6\">\n        <SkeletonCustom height=\"10.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        <SkeletonCustom height=\"10.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        <SkeletonCustom height=\"10.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      </div>\n    ) : (\n      <SaveComponent\n        disabledMenu\n        disabled={!corporateCoApplicant?.uid}\n        className=\"bg-white\"\n        title={\"heading.dde.otherDetails\"}\n        pageMode={otherSectionMode}\n        onCancel={onCancelOtherDetails}\n        onEdit={onEditOtherDetails}\n        onSave={() => onSaveOtherDetails(corporateCoApplicant?.uid)}\n      >\n        <div className=\"flex flex-col justify-start items-start space-y-4\">\n          <div className=\"flex flex-col justify-start items-start space-y-1 w-full\">\n            <Text\n              className=\"text-primary-labelColor text-xs\"\n              label={\"label.dde.otherDetails.product.service.editor\"}\n            />\n\n            <RichTextEditor\n              hideErrorRow\n              ref={productEditorRef}\n              height={200}\n              initialValue={productServiceData}\n              disabled={otherSectionMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div className=\"flex flex-col justify-start items-start space-y-1 w-full\">\n            <Text\n              className=\"text-primary-labelColor text-xs\"\n              label={\"label.dde.otherDetails.raw.material.editor\"}\n            />\n\n            <RichTextEditor\n              hideErrorRow\n              ref={rawMaterialEditorRef}\n              height={200}\n              initialValue={rawMaterialData}\n              disabled={otherSectionMode === PAGE_MODE.VIEW}\n            />\n          </div>\n\n          <div className=\"flex flex-col justify-start items-start space-y-1 w-full\">\n            <Text\n              className=\"text-primary-labelColor text-xs\"\n              label={\"label.dde.otherDetails.business.model.editor\"}\n            />\n\n            <RichTextEditor\n              ref={businessModelEditorRef}\n              height={200}\n              initialValue={businessModelData}\n              disabled={otherSectionMode === PAGE_MODE.VIEW}\n              onChange={(e: any) => handleBusinessModelEditorValidation(e, businessModelEditorRef)}\n              validation={editorValidation?.businessModelValidation}\n            />\n          </div>\n        </div>\n      </SaveComponent>\n    );\n  };\n\n  const renderPartnerDirectorDetails = (corporateCoApplicant: any) => {\n    const { isPartnerDirectorInfoLoading, partnerDirectorInfoList } = pageData.partnerDirector;\n\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {partnerDirectorInfoList?.map((partnerDirectorInfo: any, index: number) => (\n          <PartnerDirectorDetails\n            key={partnerDirectorInfo?.uid ? partnerDirectorInfo?.uid : partnerDirectorInfo.listId}\n            data={partnerDirectorInfo}\n            dropDownOptions={dropdownOptions}\n            ref={(refValue) => {\n              partnerDirectorRef.current[index] = refValue as any;\n            }}\n            documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF}\n            ocrRelatedData={getOCRRelatedData(corporateCoApplicant?.uid)}\n            cardNumber={index + 1}\n            isLoading={isPartnerDirectorInfoLoading}\n            onSavePartnerDirectorDetails={() => {\n              return onSavePartnerDirectorDetails(index, corporateCoApplicant?.uid);\n            }}\n            onRemovePartnerDirectorDetails={() =>\n              onRemovePartnerDirectorDetails(index, corporateCoApplicant?.uid)\n            }\n            disabled={!corporateCoApplicant?.uid}\n            disabledSaveMenu={!corporateCoApplicant?.uid}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderBankAccountDetails = (corporateCoApplicant: any): React.ReactNode => {\n    const { bankAccountInfoList, isBankAccountInfoLoading } = pageData.bankAccount;\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {bankAccountInfoList?.map((bankAccountInfo: any, index: number) => (\n          <BankAccountDetails\n            disabled={!corporateCoApplicant?.uid}\n            key={bankAccountInfo?.uid}\n            ref={(refValue) => {\n              bankAccountRef.current[index] = refValue as IBankAccountDetailsRef;\n            }}\n            cardNumber={index + 1}\n            data={bankAccountInfo}\n            documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BANK_ACCOUNT_DOCUMENT}\n            ocrRelatedData={getOCRRelatedData(corporateCoApplicant?.uid)}\n            dropDownOptions={dropdownOptions}\n            isLoading={isBankAccountInfoLoading}\n            onRemoveBankAccountDetails={() =>\n              onRemoveBankAccountDetails(index, corporateCoApplicant?.uid)\n            }\n            onSaveBankAccountDetails={() => onSaveBankAccountInfo(index, corporateCoApplicant?.uid)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderFinancialDetails = (corporateCoApplicant: any): React.ReactNode => {\n    const { historicalFinDetails, investmentDetails } = pageData;\n    return (\n      <div className=\"flex flex-col gap-5\">\n        <HistoricalFinancialDetail\n          isLoading={historicalFinDetails.isLoading}\n          ref={historicalFinDetailsRef}\n          loanUid={loanId}\n          pageId={corporateCoApplicant?.uid}\n          sectionMode={historicalFinDetails.sectionMode}\n          onSaveHistoricalFinInfo={() => {\n            return onSaveHistoricalFinInfo(corporateCoApplicant?.uid);\n          }}\n          onCancel={() => {\n            setPageData((prev: IPageData) => ({\n              ...prev,\n              historicalFinDetails: {\n                ...prev.historicalFinDetails,\n                sectionMode: PAGE_MODE.VIEW,\n              },\n            }));\n          }}\n          onEdit={() => {\n            setPageData((prev: IPageData) => ({\n              ...prev,\n              historicalFinDetails: {\n                ...prev.historicalFinDetails,\n                sectionMode: PAGE_MODE.CREATE,\n              },\n            }));\n          }}\n          disabled={!corporateCoApplicant?.uid}\n        />\n\n        <InvestmentDetail\n          isLoading={investmentDetails.isLoading}\n          ref={investmentDetailRef}\n          loanUid={loanId}\n          pageId={corporateCoApplicant?.uid}\n          sectionMode={investmentDetails.sectionMode}\n          savedInvestmentInfo={investmentDetails}\n          onSaveInvestmentInfo={() => {\n            return onSaveInvestmentInfo(corporateCoApplicant?.uid);\n          }}\n          onCancel={() => {\n            setPageData((prev: IPageData) => ({\n              ...prev,\n              investmentDetails: {\n                ...prev.investmentDetails,\n                sectionMode: PAGE_MODE.VIEW,\n              },\n            }));\n          }}\n          onEdit={() => {\n            setPageData((prev: IPageData) => ({\n              ...prev,\n              investmentDetails: {\n                ...prev.investmentDetails,\n                sectionMode: PAGE_MODE.CREATE,\n              },\n            }));\n          }}\n          disabled={!corporateCoApplicant?.uid}\n        />\n      </div>\n    );\n  };\n\n  const renderOtherDocumentsSection = (corporateCoApplicant: any) => {\n    return (\n      <SaveComponent\n        title={\"\"}\n        pageMode={pageData.otherDocInfo.sectionMode}\n        onSave={() => {\n          return onSaveOtherDocuments(corporateCoApplicant?.uid);\n        }}\n        onCancel={() => {\n          onCancelOtherDocuments(corporateCoApplicant?.uid);\n        }}\n        onEdit={() =>\n          setPageData((prev) => ({\n            ...prev,\n            otherDocInfo: { ...prev.otherDocInfo, sectionMode: PAGE_MODE.CREATE },\n          }))\n        }\n        disabled={!corporateCoApplicant?.uid}\n      >\n        <OtherDocuments\n          ref={otherDocsRef}\n          isLoading={pageData.otherDocInfo.isOtherDocInfoLoading}\n          otherDocumentsData={pageData.otherDocInfo.otherDocInfoList}\n          sectionMode={pageData.otherDocInfo.sectionMode}\n          payloadInfo={{\n            loanUid: loanId,\n            applicantUid: corporateCoApplicant?.uid,\n            loanSectionKey: LOAN_SECTION_KEY_TYPES.applicants,\n          }}\n          onRemoveDocFromList={(docInfo, itemIndex) => {\n            onRemoveOtherDocsFromList(corporateCoApplicant?.uid, docInfo, itemIndex);\n          }}\n        />\n      </SaveComponent>\n    );\n  };\n\n  const renderContent = (corporateCoApplicant: any, index: any) => {\n    return (\n      <div className=\"flex flex-col gap-4\" key={corporateCoApplicant?.key}>\n        <Section title=\"heading.dde.organisation.details\">\n          <>\n            {renderOrganisationDetails(corporateCoApplicant?.uid)}\n\n            {renderAddress(corporateCoApplicant)}\n\n            {!corporateCoApplicant?.uid ? (\n              <React.Fragment>{renderOtherDetails(corporateCoApplicant)}</React.Fragment>\n            ) : (\n              <LazyLoader onLazyLoad={() => onLazyLoadOtherDetails(corporateCoApplicant)}>\n                {renderOtherDetails(corporateCoApplicant)}\n              </LazyLoader>\n            )}\n          </>\n        </Section>\n\n        <Section title=\"heading.dde.partner.director.details\">\n          {!corporateCoApplicant?.uid ? (\n            <React.Fragment>{renderPartnerDirectorDetails(corporateCoApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader\n              onLazyLoad={() => {\n                onLazyLoadPartnerDirector(corporateCoApplicant);\n              }}\n            >\n              {renderPartnerDirectorDetails(corporateCoApplicant)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.partner.director.details\"}\n                  onClick={onAddMorePartnerDirectorDetails}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section\n          title=\"heading.dde.bankAccount.details\"\n          alertText=\"At least one bank account detail is mandatory\"\n        >\n          {!corporateCoApplicant?.uid ? (\n            <React.Fragment>{renderBankAccountDetails(corporateCoApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadBankAccountInfo(corporateCoApplicant)}>\n              {renderBankAccountDetails(corporateCoApplicant)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.bankAccount.details\"}\n                  onClick={onAddMoreBankDetails}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title=\"heading.dde.financial.details\">\n          {!corporateCoApplicant?.uid ? (\n            <React.Fragment>{renderFinancialDetails(corporateCoApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadFinancialInfo(corporateCoApplicant?.uid)}>\n              {renderFinancialDetails(corporateCoApplicant)}\n            </LazyLoader>\n          )}\n        </Section>\n\n        <Section title={\"label.heading.otherDocuments\"}>\n          {!corporateCoApplicant?.uid ? (\n            <React.Fragment>{renderOtherDocumentsSection(corporateCoApplicant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadOtherDocuments(corporateCoApplicant?.uid)}>\n              {renderOtherDocumentsSection(corporateCoApplicant)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Document\"}\n                  onClick={onAddOtherDocuments}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n      </div>\n    );\n  };\n\n  const renderCorporateCoApplicantsTotal = () => {\n    return (\n      <Text\n        className=\"\"\n        label={`( ${\n          corporateCoApplicants.length > 1\n            ? `${corporateCoApplicants.length} Members`\n            : `${corporateCoApplicants.length} Member`\n        } )`}\n      />\n    );\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    render: The Main return()\n    --------------------------------------------------------------------------------------------------\n  */\n  if (isPageCorporateCoApplicantLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"scrollable-tab dynamic-tab relative deleteable-header\">\n        <SimpleTab\n          showTooltip\n          enableTabMenu\n          scrollable\n          tabHeaderMenuModel={(corporateCoApplicant: any, index: number) =>\n            menuModel(corporateCoApplicant, index)\n          }\n          optionLabel={[\"firstName\", \"middleName\", \"lastName\"]}\n          optionKey={[\"uid\", \"key\"]}\n          headerClassName=\"dynamic-header\"\n          ref={tabRef}\n          activeIndex={activeIndex}\n          tabs={corporateCoApplicants}\n          onTabChange={handleTabChange}\n          renderContent={renderContent}\n        />\n\n        <div className=\"absolute top-0 right-0 text-[#A3A3A3] text-xs flex justify-evenly items-center w-[15%] space-x-4 pb-2.5 border-b\">\n          {renderCorporateCoApplicantsTotal()}\n\n          <div className=\"\">\n            <ButtonBox buttonType={BUTTON_TYPE.ICON_BUTTON_ADD} onClick={onAddMoreTabs} />\n          </div>\n        </div>\n      </div>\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n\n      <WarningDialog\n        visible={isRemoveTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Remove Corporate Co-Applicant ?\"}\n        warningMessage={`Corporate Co-Applicant ${currentTabDetails?.corporateCoApplicant?.firstName} will be removed`}\n        onCancel={() => setIsRemoveTabWarningVisible(false)}\n        onConfirm={() => {\n          onDeleteTab(currentTabDetails?.corporateCoApplicant, currentTabDetails?.index);\n        }}\n        onHide={() => {\n          //\n        }}\n      />\n\n      <WarningDialog\n        visible={isSwitchTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Discard added data ?\"}\n        warningMessage={`Your data will be lost if not saved before navigating to a different tab`}\n        onCancel={() => setIsSwitchTabWarningVisible(false)}\n        onConfirm={handleNavigateTab}\n        onHide={() => {\n          //\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PageCorporateCoApplicants;\n"],"names":["DEFAULT_PATH","DirectorService","BaseApiService","__publicField","loanId","applicantId","endPoint","payload","DirectorService$1","initialTableRowData","HistoricalFinancialDetail","forwardRef","props","ref","loanUid","pageId","isLoading","sectionMode","onSaveHistoricalFinInfo","onCancel","onEdit","disabled","finYearOptions","setFinYearOptions","useState","position","setPosition","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","useRef","tableRef","React","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","init","_a","getFinancialYearOptions","onTableSearch","res","StaticMasterDataService","DROPDOWN_LIST_CODE","validateGetAPIResponse","data","fyOptions","option","error","parseStandardAPIErrorMessage","useImperativeHandle","onSave","onReset","handleFinYearChange","e","rowData","rowDataObj","onAddDetail","resetValidator","validateForm","preparedData","_b","_c","idx","CUSTOM_TOAST_MESSAGES","record","currencyFormatToNumber","onClickCancel","onDeleteRow","validate","isValid","getValue","val","numberFormatter","renderContent","jsxs","Fragment","jsx","ButtonBox","BUTTON_TYPE","PAGE_MODE","EditableTableV2","FinancialService","Column","Text","i18n","SimpleDropDown","InputBox","INPUT_STYLE_TYPE","IconButton","BUTTON_TYPES","ToastCustom","ErrorDialog","SkeletonCustom","SaveComponent","initialInvestmentInfoData","InvestmentDetail","savedInvestmentInfo","onSaveInvestmentInfo","pageObj","setPageObj","assetOptions","setAssetOptions","setPageObjFromSavedInfo","getAssetTypeOptions","handleInputChange","handleAssetChange","onAddAsset","preparedAssets","asset","comments","amt","InputTextArea","initialPartnerDirectorData","initialLoanDocsInfo","initialKycTemplateListData","PartnerDirectorDetails","cardNumber","dropDownOptions","documentCategory","DOCUMENT_CATEGORY","ocrRelatedData","disabledSaveMenu","onSavePartnerDirectorDetails","onRemovePartnerDirectorDetails","params","useParams","pageMode","setPageMode","directorUid","setDirectorUid","kycDocumentTemplateList","setKycDocumentTemplateList","isLoadingKycDoc","setIsLoadingKycDoc","uniqueKycCardTracker","setUniqueKycCardTracker","populateOcr","setPopulateOcr","aadhaarVerificationStatus","setAadhaarVerificationStatus","documentUploaderRef","textConverter","useTextConverter","menuModel","getAllSavedKycDocuments","addressRef","onSaveSuccess","onRemove","KYCService","savedItems","kycDocuments","savedDocsName","getAllSectionsInfo","sections","section","savedItem","_e","_d","_g","_f","_i","_h","_k","_j","_n","_m","_l","err","getSavedKycDocuments","onSaveKycDocument","documentInfo","itemIndex","getSectionsByDocumentUid","enrichUpdatePartnerKycDocument","SUB_STAGE","validatePutAPIResponse","parsedOcrMeta","getMaskedUrlForSection","sectionType","DOCUMENT_SECTION","prepareMaskedDocSections","DOCUMENT_TYPE","item","STATIC_MASTER_TYPE_TOAST_TEXT","enrichCreatePartnerKycDocument","validatePostAPIResponse","onRemoveKycDocument","deleteKycDocInList","onPopulateWithOcr","enrichPopulateDocWithOcr","APPLICANT_TYPE","onVerifyAadhar","aadharOtpInfo","uid","enrichAadharValidation","handleChange","aadhaarValue","formatNumberToAadhaar","prevPageObj","onPrepopulateUsingKyc","response","PincodeService","onAddKycDocument","newDocumentList","addressData","uploadedDocsInfo","getFinalBasicDetailsData","_","index","updateUniqueTrackerList","list","kycDocTypeUid","documentUrl","documentNumber","dob","documentSections","docUrl","isActive","getSectionUid","sectionCode","renderKycDocuments","templateData","KYCV3","PLACE_OF_UPLOAD_KYC","renderDocumentUploader","useMemo","TextData","DocumentUploader","address","pincode","city","state","latitude","longitude","renderAddressSection","Address","VARIANTS","renderRemarks","remarks","renderBasicDetails","partnerName","relationShip","dobDate","DIN","profitSharing","mobileNo","SystemDatePicker","InputAddon","Section","initialPageData","initialOrgBasicInfoData","initialBankAccountDetailsData","dummySavedDocStructureInList","PageCorporateCoApplicants","uniqueKey","ShortUniqueId","isPageCorporateCoApplicantLoading","setIsPageCorporateCoApplicantLoading","currentTabDetails","setCurrentTabDetails","setApplicantId","activeIndex","setActiveIndex","selectedTabIndex","setSelectedTabIndex","isSameActiveIndex","setIsSameActiveIndex","corporateCoApplicants","setCorporateCoApplicants","navigateBack","setNavigateBack","tabAddedFlag","setTabAddedFlag","editorValidation","setEditorValidation","dropdownOptions","setDropdownOptions","pageData","setPageData","initiateAPICallForSection","setInitiateAPICallForSection","isRemoveTabWarningVisible","setIsRemoveTabWarningVisible","isSwitchTabWarningVisible","setIsSwitchTabWarningVisible","tabRef","organisationDetailsRef","bankAccountRef","partnerDirectorRef","historicalFinDetailsRef","investmentDetailRef","productEditorRef","rawMaterialEditorRef","businessModelEditorRef","addressDocUploaderRef","otherDocsRef","corporateCoApplicant","resetPageDataWithUID","getOrgBasicInfo","getOrgRegisteredAddress","handleTabChange","getApplicantId","ApplicantService","getCorporateCoApplicantList","initiateAPICallFor","callbackFunction","results","prevState","updateEmptyCorporateCoApplicants","isIgnoreLoader","activeCorporateCoApplicantObj","BasicInformation","updateOrganisationBasicInfo","AddressService","updateAddressData","getBankAccountOptions","getBankAccountInfo","corporateCoApplicantId","BankAccountDetailsService","savedBankAccountInfo","bankAccountInfo","updateBankAccountInfoObj","getHistoricalFinancialInfo","InvestmentInfoService","getInvestmentInfo","getSegmentOptions","getBusinessConstitutionOptions","getOwnerShipOptions","getNoOfEmp","getRelationShipOptions","getOtherDetails","OtherDetailsService","getPartnerDirectorDetails","savedPartnerDetails","partnerInfo","updatePartnerDirectorDetails","validateEditor","editorRef","name","validationRule","wordcount","getOtherDocumentsOfCorporateApplicant","OtherDocumentService","STAGE","preparedListOfOtherDocuments","document","structSavedDocStrucutureForOtherDocuments","orgBasicInfoData","checkDataHasValue","resetPageData","handleNavigateTab","handleBusinessModelEditorValidation","onSaveOrganisationDetails","enrichOrganisationBasicInfo","itemList","onEditAddressInfo","onCancelAddressInfo","onSaveAddress","enrichOrgRegisteredAddress","onUpdateOrgRegisteredAddress","onCreateOrgRegisteredAddress","previous","onAddMorePartnerDirectorDetails","newPartnerDirectorListItem","onAddMoreBankDetails","newBankAccountListItem","onSaveBankAccountInfo","enrichBankAccountDetailsObj","onAddMoreTabs","onDeleteTab","removeDeletedCoApplicant","onLazyLoadBankAccountInfo","functionsToCall","initialBankAccountInfoDropdownOptionsAPICall","func","onLazyLoadOtherDetails","onLazyLoadPartnerDirector","onRemoveBankAccountDetails","newBankAccountDetailsList","onSaveOtherDetails","enrichOrgOtherDetails","onCancelOtherDetails","onEditOtherDetails","onLazyLoadFinancialInfo","initialFinancialInfoDropdownOptionsAPICall","onLazyLoadOtherDocuments","historicalFinDetailsPageObj","preparedPayload","enrichCorpHistoricalFinDetails","investmentFinDetailPageObj","enrichCorpInvestmentFinDetails","enrichPartnerDirectorDetails","rej","newPartnerInfoList","onAddOtherDocuments","newDocument","onSaveOtherDocuments","payloadData","onCancelOtherDocuments","onRemoveOtherDocsFromList","docInfo","deletedOtherDoc","enrichOtherDocuments","LOAN_SECTION_KEY_TYPES","deleteDocInOtherDocsList","dropdownAPICallForOrgBasicInfo","newKycDocList","updatedCoApplicants","getOCRRelatedData","OCR_STAGE_NAMES","renderOrganisationDetails","isOrganisationDetailsLoading","organisationDetailsData","OrganisationDetails","PAGE_TYPE","renderAddress","isAddressLoading","addressInfoPageMode","renderOtherDetails","isOtherDetailsLoading","otherSectionMode","productServiceData","rawMaterialData","businessModelData","RichTextEditor","renderPartnerDirectorDetails","isPartnerDirectorInfoLoading","partnerDirectorInfoList","partnerDirectorInfo","refValue","renderBankAccountDetails","bankAccountInfoList","isBankAccountInfoLoading","BankAccountDetails","renderFinancialDetails","historicalFinDetails","investmentDetails","renderOtherDocumentsSection","OtherDocuments","LazyLoader","renderCorporateCoApplicantsTotal","Loader","SimpleTab","WarningDialog"],"mappings":"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"}