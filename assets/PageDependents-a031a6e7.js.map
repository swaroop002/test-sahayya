{"version":3,"file":"PageDependents-a031a6e7.js","sources":["../../src/views/transaction/PageDDE/Login/PageDependents/PageDependents.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ShortUniqueId from \"short-unique-id\";\n\n// --------- ---------- //\nimport ButtonBox from \"components/ButtonBox\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport LazyLoader from \"components/LazyLoader\";\nimport Loader from \"components/Loader\";\nimport SimpleTab from \"components/SimpleTab\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport WarningDialog from \"components/WarningDialog\";\nimport { ToastPositionType } from \"primereact/toast\";\n\n// --------- ---------- //\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\n\n// --------- ---------- //\nimport ApplicantService from \"services/ApplicantService\";\nimport KYCService from \"services/KYCService\";\nimport BasicInformationService from \"services/transaction/QDE/BasicInformation\";\n\n// --------- ---------- //\nimport BasicInformation, {\n  IBasicInformationRef,\n  initialBasicInformationData,\n} from \"components/BasicInformation\";\nimport { IKycDocuments } from \"views/transaction/PageQDE\";\n\n// --------- ---------- //\nimport {\n  IAadharOTP,\n  IAadharVerification,\n  IKycDocumentCardListInfo,\n  IPopulateOcr,\n} from \"components/KYCV3\";\n\nimport KYCV3 from \"components/KYCV3\";\n\n// --------- ---------- //\nimport {\n  checkDataHasValue,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\n\n// --------- ---------- //\nimport {\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  OCR_STAGE_NAMES,\n  PAGE_MODE,\n  PAGE_TYPE,\n  DOCUMENT_SECTION,\n  DOCUMENT_TYPE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\n// --------- ---------- //\nimport {\n  enrichAadharValidation,\n  enrichBasicInfoData,\n  enrichPopulateDocWithOcr,\n  enrichSaveKycDocument,\n  enrichUpdateKycDocument,\n  extractBasicObj,\n  initialKycTemplateListData,\n  updateBasicInfoObj,\n} from \"../Helper\";\nimport { PLACE_OF_UPLOAD_KYC } from \"components/MediaGallery/MediaGallery\";\n\n// --------------------------------- page interface ---------------------------------------------- //\ninterface IPageData {\n  basicInformation: { isBasicInfoLoading: boolean; basicInfo: any; basicInfoPageMode: string };\n  kycDocuments: {\n    isKycLoading: boolean;\n    kycDocList: IKycDocumentCardListInfo[];\n    uniqueKycCardTracker: string[];\n    populateOcr: IPopulateOcr;\n    aadharVerificationStatus: IAadharVerification;\n    savedDocuments: string[]; // saved documents name to check for PAN or Form60 mandatory validation\n  };\n}\n\nconst initialPageData: IPageData = {\n  basicInformation: {\n    isBasicInfoLoading: false,\n    basicInfo: { ...initialBasicInformationData },\n    basicInfoPageMode: PAGE_MODE.VIEW,\n  },\n  kycDocuments: {\n    isKycLoading: false,\n    kycDocList: [initialKycTemplateListData],\n    uniqueKycCardTracker: [],\n    populateOcr: { uid: \"\", success: false, failed: false },\n    aadharVerificationStatus: {\n      verified: false,\n      failedToVerify: false,\n    },\n    savedDocuments: [],\n  },\n};\n\nconst PageDependents = () => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n  const uniqueKey = new ShortUniqueId({ length: 5 });\n\n  // ----------------------- state -------------------------- //\n  // main page functionality states\n\n  const [isPageDependentLoading, setIsPageDependentLoading] = useState<boolean>(true);\n  const [currentTabDetails, setCurrentTabDetails] = useState<any>({\n    dependant: { name: \"\", key: \"\" },\n    index: null,\n  });\n  const [applicantId, setApplicantId] = useState<string>(\"\");\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n  const [selectedTabIndex, setSelectedTabIndex] = useState<number>(0);\n  const [isSameActiveIndex, setIsSameActiveIndex] = useState<boolean>(false);\n  const [dependants, setDependants] = useState<any>([{ firstName: \"New Tab\", key: uniqueKey() }]);\n  const [navigateBack, setNavigateBack] = useState(false); //NOSONAR\n  const [tabAddedFlag, setTabAddedFlag] = useState<boolean>(false);\n\n  // states for the rendering contents  ( use this instead of creating different states for each )\n  const [pageData, setPageData] = useState<IPageData>({ ...initialPageData });\n\n  const [initiateAPICallForSection, setInitiateAPICallForSection] = useState<any>({\n    basicInfoAPICall: false,\n  });\n\n  const [kycCardCount, setKycCardCount] = useState(1);\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isRemoveTabWarningVisible, setIsRemoveTabWarningVisible] = useState<boolean>(false);\n  const [isSwitchTabWarningVisible, setIsSwitchTabWarningVisible] = useState<boolean>(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------------------------- ref ------------------------------------------------ //\n  const tabRef = useRef<any>(null);\n  const toastMessageRef = useRef(null);\n\n  const basicInfoRef = useRef<IBasicInformationRef | null>(null);\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = (dependant: any, index: number) => [\n    {\n      className: \"\",\n      label: \"Remove Dependant\",\n      command: () => {\n        setCurrentTabDetails({ dependant: dependant, index: index });\n        setIsRemoveTabWarningVisible(true);\n      },\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    // initial empty dependency useEffect\n    // Do not add any dependency for this\n\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (dependants[activeIndex]?.uid) {\n      resetPageDataWithUID();\n      getBasicInfo();\n    }\n  }, [activeIndex, isSameActiveIndex]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (dependants[activeIndex]?.uid && !isPageDependentLoading) {\n      getBasicInfo();\n    }\n  }, [isPageDependentLoading, initiateAPICallForSection.basicInfoAPICall]);\n\n  useEffect(() => {\n    handleTabChange({ index: dependants.length - 1 });\n  }, [tabAddedFlag]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.PRIMARY, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setApplicantId(res.data?.results?.[0]?.uid);\n        return res.data?.results?.[0]?.uid ?? \"\";\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const generateDependantUid = async () => {\n    try {\n      const res = await BasicInformationService.generateDependantId(loanId);\n      if (validatePostAPIResponse(res)) {\n        const dependantsList = [...dependants];\n        dependantsList[activeIndex] = {\n          ...res?.data,\n          firstName: `Dep... ${activeIndex + 1}`,\n        };\n\n        setDependants([...dependantsList]);\n\n        setPageData((prev) => ({\n          ...prev,\n          basicInformation: {\n            ...prev.basicInformation,\n            basicInfo: updateBasicInfoObj(res?.data),\n          },\n        }));\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getDependentList = async (initiateAPICallFor?: string, callbackFunction?: any) => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.DEPENDANT, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        const results: any[] = res.data?.results?.map((item: any, index: number) => {\n          if (!item?.firstName && !item.lastName) {\n            return { ...item, firstName: `Dep... ${index + 1}` };\n          }\n\n          return { ...item };\n        });\n\n        setDependants(results);\n        setIsPageDependentLoading(false);\n\n        if (callbackFunction) {\n          callbackFunction(results);\n        }\n\n        if (initiateAPICallFor === \"BASIC_INFO\") {\n          setInitiateAPICallForSection((prevState: any) => {\n            return { ...prevState, basicInfoAPICall: !prevState.basicInfoAPICall };\n          });\n        }\n      } else {\n        updateEmptyDependents();\n        setIsPageDependentLoading(false);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getBasicInfo = async (isIgnoreLoader?: boolean) => {\n    const activeDependentObj = dependants[activeIndex];\n\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        basicInformation: {\n          ...prev.basicInformation,\n          isBasicInfoLoading: true,\n        },\n      }));\n    }\n\n    try {\n      const res = await BasicInformationService.getDde(activeDependentObj?.uid);\n      if (validateGetAPIResponse(res)) {\n        setPageData((prev) => ({\n          ...prev,\n          basicInformation: {\n            ...prev.basicInformation,\n            basicInfo: updateBasicInfoObj(res?.data),\n            isBasicInfoLoading: false,\n            basicInfoPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      } else {\n        setPageData((prev) => ({\n          ...prev,\n          basicInformation: {\n            ...prev.basicInformation,\n            isBasicInfoLoading: false,\n            basicInfoPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getAllSavedKycDocuments = async (dependantId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          isKycLoading: true,\n        },\n      }));\n    }\n\n    try {\n      const res = await KYCService.getKycDocument(loanId, dependantId);\n      if (validateGetAPIResponse(res)) {\n        const { data: savedItems } = res;\n        const kycDocuments: IKycDocumentCardListInfo[] = [];\n        const savedDocsName: string[] = [];\n\n        //get the section information for each saved doc\n        const getAllSectionsInfo = (sections: any[]) => {\n          const sectionsInfo = sections.map((section) => {\n            return {\n              sectionUid: section.uid ?? \"\",\n              fileName: section.fileName ?? \"\",\n              fileType: section.fileType ?? \"\",\n              sectionType: section.smDocSectionType ?? \"\",\n              url: section.url,\n            };\n          });\n          return sectionsInfo;\n        };\n\n        //iterating through each saved record to prepare template list object\n        for (const savedItem in savedItems) {\n          //below properties are common in all sections of the document that's why accessing the first item in the array and taking out necessary field data\n          kycDocuments.push({\n            listId: savedItem,\n            uid: savedItem,\n            docName: savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\",\n            docNo: savedItems[savedItem]?.[0].kyc?.docNo ?? \"\",\n            maskedDocNo: savedItems[savedItem]?.[0].kyc?.maskedDocNo ?? \"\",\n            dob: savedItems[savedItem]?.[0].kyc?.dob ?? \"\",\n            docSections: getAllSectionsInfo(savedItems[savedItem]),\n            isVerified: savedItems[savedItem]?.[0].kyc?.isVerified ?? false,\n          });\n\n          savedDocsName.push(savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\");\n        }\n\n        if (kycDocuments.length) {\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...kycDocuments],\n                uniqueKycCardTracker: [...savedDocsName],\n                isKycLoading: false,\n              },\n            };\n          });\n        } else {\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                isKycLoading: false,\n              },\n            };\n          });\n        }\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            isKycLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const handleTabChange = (e: any) => {\n    let basicInfo: any = basicInfoRef?.current?.getData();\n    basicInfo = extractBasicObj(basicInfo);\n\n    const isTabNamePresent = !!dependants?.[activeIndex]?.lastName;\n\n    if (e.index !== activeIndex && !isTabNamePresent && checkDataHasValue(basicInfo)) {\n      setIsSwitchTabWarningVisible(true);\n      setSelectedTabIndex(e.index);\n    } else if (e.index !== activeIndex) {\n      resetPageData();\n      setActiveIndex(e.index);\n      basicInfoRef?.current?.resetValidator();\n    }\n  };\n\n  const handleNavigateTab = () => {\n    resetPageData();\n    setActiveIndex(selectedTabIndex);\n    setIsSwitchTabWarningVisible(false);\n    basicInfoRef?.current?.resetValidator();\n  };\n\n  const handleAadharVerificationStatus = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        kycDocuments: {\n          ...prevState.kycDocuments,\n          aadharVerificationStatus: {\n            verified: false,\n            failedToVerify: false,\n          },\n        },\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSaveKycDocument = async (\n    documentInfo: IKycDocuments,\n    dependantId: string,\n    itemIndex: number\n  ) => {\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n\n    //update request\n    if (documentInfo.uid) {\n      const sections = await getSectionsByDocumentUid(documentInfo?.uid, dependantId);\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        dependantId,\n        documentInfo,\n        sections,\n        APPLICANT_TYPE.DEPENDANT\n      );\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          const updatedList = kycDocList.map((item) => {\n            if (item.uid === data.uid) {\n              return {\n                ...item,\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo,\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                docSections: prepareMaskedDocSections(data.kycDocuments),\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...updatedList],\n              },\n            };\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n\n    // create request\n    else {\n      const payload = enrichSaveKycDocument(\n        loanId,\n        dependantId,\n        documentInfo,\n        APPLICANT_TYPE.DEPENDANT\n      );\n      try {\n        const res = await KYCService.saveKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePostAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n          const updatedList = kycDocList.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid ?? \"\",\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                docSections: prepareMaskedDocSections(data.kycDocuments),\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...updatedList],\n                savedDocuments: [...prev.kycDocuments.savedDocuments, data.docType?.code],\n                uniqueKycCardTracker: prepareNewKycCardTracker(),\n              },\n            };\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveKycDocument = async (\n    documentInfo: IKycDocuments,\n    dependantId: string,\n    itemIndex?: number\n  ) => {\n    if (documentInfo.uid) {\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        dependantId,\n        documentInfo,\n        await getSectionsByDocumentUid(documentInfo?.uid, dependantId),\n        APPLICANT_TYPE.DEPENDANT\n      );\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          if (itemIndex !== undefined) {\n            deleteKycDocInList(itemIndex);\n          }\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onPopulateWithOcr = async (\n    documentInfo: IKycDocuments,\n    dependantId: string,\n    itemIndex: number\n  ) => {\n    const {\n      kycDocuments: { kycDocList, populateOcr },\n    } = pageData;\n    const payload = enrichPopulateDocWithOcr(\n      loanId,\n      dependantId,\n      populateOcr.uid,\n      documentInfo,\n      APPLICANT_TYPE.DEPENDANT\n    );\n    try {\n      const res = await KYCService.populateKycDocument(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        const updatedList = kycDocList.map((item, idx) => {\n          if (idx === itemIndex) {\n            return {\n              ...item,\n              uid: data.uid,\n              docName: data.docType?.code ?? \"\",\n              docNo: data.docNo ?? \"\",\n              dob: data.dob ?? \"\",\n            };\n          }\n          return item; // Return the unchanged item if it has a UID\n        });\n\n        setPageData((prev) => {\n          return {\n            ...prev,\n            kycDocuments: {\n              ...prev.kycDocuments,\n              kycDocList: [...updatedList],\n              uniqueKycCardTracker: prepareNewKycCardTracker(),\n              populateOcr: {\n                ...prev.kycDocuments.populateOcr,\n                uid: data.uid ?? \"\",\n                success: true,\n                failed: false,\n              },\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            populateOcr: {\n              ...prev.kycDocuments.populateOcr,\n              success: false,\n              failed: true,\n            },\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onVerifyAadhar = async (\n    documentInfo: IKycDocuments,\n    aadharOtpInfo: IAadharOTP,\n    dependantId: string,\n    itemIndex: number,\n    uid: string\n  ) => {\n    const payload = enrichAadharValidation(\n      loanId,\n      dependantId,\n      documentInfo,\n      aadharOtpInfo,\n      APPLICANT_TYPE.DEPENDANT,\n      uid\n    );\n\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n\n    try {\n      const res = await KYCService.validateAadhar(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n        const updatedList = kycDocList.map((item, idx) => {\n          if (idx === itemIndex) {\n            return {\n              ...item,\n              uid: data.uid,\n              docName: data.docType?.code,\n              docNo: data.docNo ?? \"\",\n              maskedDocNo: data.maskedDocNo ?? \"\",\n              dob: data.dob ?? \"\",\n            };\n          }\n          return item;\n        });\n\n        setPageData((prev) => {\n          return {\n            ...prev,\n            kycDocuments: {\n              ...prev.kycDocuments,\n              kycDocList: [...updatedList],\n              uniqueKycCardTracker: prepareNewKycCardTracker(),\n              aadharVerificationStatus: {\n                ...prev.kycDocuments.aadharVerificationStatus,\n                verified: true,\n              },\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            aadharVerificationStatus: {\n              ...prev.kycDocuments.aadharVerificationStatus,\n              failedToVerify: true,\n            },\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onAddMoreTabs = () => {\n    setDependants((prevState: any[]) => [\n      ...prevState,\n      {\n        firstName: `New Tab`,\n        key: uniqueKey(),\n      },\n    ]);\n\n    setTabAddedFlag((prevState: boolean) => !prevState);\n  };\n\n  const onDeleteTab = async (dependant: any, index: any) => {\n    if (!dependant?.uid) {\n      if (dependants.length === 1) {\n        updateEmptyDependents();\n        setIsRemoveTabWarningVisible(false);\n        resetPageData();\n        return;\n      }\n\n      removeDeletedDependent(index);\n      setIsRemoveTabWarningVisible(false);\n    } else {\n      try {\n        const res = await ApplicantService.deleteApplicantInfo(dependant?.uid);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          if (dependants.length === 1) {\n            updateEmptyDependents();\n            resetPageData();\n            setIsRemoveTabWarningVisible(false);\n            return;\n          }\n\n          removeDeletedDependent(index);\n\n          setIsRemoveTabWarningVisible(false);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveBasicInformations = () => {\n    const data = basicInfoRef?.current?.save();\n    if (!data) {\n      return Promise.resolve(true);\n    }\n\n    if (data) {\n      const payload = enrichBasicInfoData(data, loanId, applicantId, APPLICANT_TYPE.DEPENDANT);\n      if (data.uid) {\n        BasicInformationService.updateDde(payload)\n          .then((res: any) => {\n            if (validatePutAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setNavigateBack(true);\n\n              getDependentList(\"BASIC_INFO\", (itemList: any) => {\n                if (itemList.length - 1 < activeIndex) {\n                  setActiveIndex(itemList?.length - 1);\n                }\n              });\n            }\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      } else {\n        BasicInformationService.createBasicInformation(payload)\n          .then((res) => {\n            if (validatePostAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setNavigateBack(true);\n\n              getDependentList(\"BASIC_INFO\", (itemList: any) => {\n                if (itemList.length - 1 < activeIndex) {\n                  setActiveIndex(itemList?.length - 1);\n                }\n              });\n            }\n          })\n          .catch((err: any) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      }\n    }\n  };\n\n  const onEditBasicInfo = () => {\n    if (!dependants?.[activeIndex]?.uid) {\n      generateDependantUid();\n    }\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: {\n          ...prevState.basicInformation,\n          basicInfoPageMode: PAGE_MODE.CREATE,\n        },\n      };\n    });\n  };\n\n  const onCancelBasicInfo = () => {\n    basicInfoRef?.current?.cancel();\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: {\n          ...prevState.basicInformation,\n          basicInfoPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onLazyLoadKycDocuments = (dependant: any) => {\n    if (dependant?.uid) {\n      getAllSavedKycDocuments(dependant?.uid);\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getApplicantId();\n    getDependentList();\n  };\n\n  const getSavedKycDocuments = async (dependantId: string) => {\n    try {\n      const res = await KYCService.getKycDocument(loanId, dependantId);\n      if (validateGetAPIResponse(res)) {\n        const { data } = res;\n        return data;\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getSectionsByDocumentUid = async (uid: string, dependantId: string) => {\n    const savedDocuments = await getSavedKycDocuments(dependantId);\n    const sections = savedDocuments[uid];\n    return sections;\n  };\n\n  const prepareNewKycCardTracker = () => {\n    const {\n      kycDocuments: { uniqueKycCardTracker },\n    } = pageData;\n    const docNameArr = [...uniqueKycCardTracker];\n    //remove the last doc name in the array to avoid docName duplication\n    docNameArr.splice(docNameArr.length - 1, 1);\n    return [...docNameArr];\n  };\n\n  //add a kyc document in list\n  const onAddDocument = () => {\n    const newDocumentList = {\n      listId: `kyc-card-${kycCardCount + 1}`,\n      uid: \"\",\n      docName: \"\",\n      docNo: \"\",\n      maskedDocNo: \"\",\n      dob: \"\",\n      docSections: [],\n      isVerified: false,\n    };\n    setKycCardCount((prevCount) => prevCount + 1);\n\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          kycDocList: [...prev.kycDocuments.kycDocList, newDocumentList],\n          populateOcr: {\n            uid: \"\",\n            success: false,\n            failed: false,\n          },\n        },\n      };\n    });\n  };\n\n  //update the unique kyc card name tracker list\n  const updateUniqueTrackerList = (list: string[]) => {\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          uniqueKycCardTracker: [...list],\n        },\n      };\n    });\n  };\n\n  //delete kyc doc card in list\n  const deleteKycDocInList = (itemIndex?: number) => {\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n    const newKycDocList = kycDocList.filter((_, index) => index !== itemIndex);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          kycDocList: [...newKycDocList],\n        },\n      };\n    });\n  };\n\n  const removeDeletedDependent = (index: number) => {\n    const updatedDependents = [...dependants];\n    if (index >= 0 && index < dependants.length) {\n      // Check if the findIndexOfDependent is valid\n\n      updatedDependents.splice(index, 1); // Remove 1 element at the specified index\n      setDependants(updatedDependents);\n\n      autoUpdateActiveIndex(index);\n    }\n  };\n\n  const autoUpdateActiveIndex = (index: number) => {\n    if (index + 1 === dependants.length - 1 && activeIndex === index + 1) {\n      //\n    } else if (\n      (index === dependants.length - 1 && activeIndex === index) ||\n      (index !== dependants.length - 1 && activeIndex === dependants.length - 1) ||\n      index < activeIndex\n    ) {\n      setTimeout(() => {\n        setActiveIndex(activeIndex - 1);\n      }, 5);\n    } else if (index === activeIndex) {\n      resetPageData();\n      setIsSameActiveIndex((prevState: boolean) => !prevState);\n    }\n  };\n\n  const updateEmptyDependents = () => {\n    setDependants([\n      {\n        firstName: \"New Tab\",\n        key: uniqueKey(),\n      },\n    ]);\n  };\n\n  const resetPageData = () => {\n    setPageData({ ...initialPageData });\n  };\n\n  const resetPageDataWithUID = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: { ...prevState.basicInformation, isBasicInfoLoading: true },\n        kycDocuments: { ...prevState.kycDocuments, isKycLoading: true },\n      };\n    });\n  };\n\n  const getOCRRelatedData = (dependantId: string) => {\n    return {\n      ocrStageName: OCR_STAGE_NAMES.LOGIN,\n      ocrSubstageName: SUB_STAGE.DDE,\n      ocrPayloadData: {\n        loanUid: loanId,\n        applicant: {\n          uid: dependantId,\n        },\n      },\n    };\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n  const renderBasicInformation = (dependantId: string) => {\n    const { basicInfoPageMode, basicInfo, isBasicInfoLoading } = pageData.basicInformation;\n    return (\n      <BasicInformation\n        relationship\n        type=\"DDE\"\n        pageType={PAGE_TYPE.DEPENDANT}\n        pageMode={basicInfoPageMode}\n        ref={basicInfoRef}\n        data={basicInfo}\n        isLoading={isBasicInfoLoading}\n        ocrRelatedData={getOCRRelatedData(dependantId)}\n      />\n    );\n  };\n\n  const renderKycDocuments = (dependant: any) => {\n    const {\n      isKycLoading,\n      kycDocList,\n      uniqueKycCardTracker,\n      populateOcr,\n      aadharVerificationStatus,\n    } = pageData.kycDocuments;\n    return (\n      <div className=\"grid grid-cols-2 gap-5\">\n        {kycDocList.map((list, index) => {\n          return (\n            <div key={`document-${list.listId}`}>\n              {\n                <KYCV3\n                  mode={!dependant?.uid ? \"READ\" : \"EDIT\"}\n                  isLoading={isKycLoading}\n                  uid={list.uid}\n                  documentListIndex={index}\n                  docName={list.docName}\n                  docNo={list.docNo}\n                  dateOfBirth={list.dob}\n                  docSections={list.docSections}\n                  maskedDocNo={list.maskedDocNo}\n                  isVerified={list.isVerified}\n                  removeDocumentInList={deleteKycDocInList}\n                  cardNameList={uniqueKycCardTracker}\n                  handlerCardNameList={updateUniqueTrackerList}\n                  ocrStatus={populateOcr}\n                  onSave={(documentInfo: IKycDocuments, itemIndex: number) =>\n                    onSaveKycDocument(documentInfo, dependant?.uid, itemIndex)\n                  }\n                  onRemove={(documentInfo: IKycDocuments, itemIndex?: number) => {\n                    onRemoveKycDocument(documentInfo, dependant?.uid, itemIndex);\n                  }}\n                  onPopulate={(documentInfo: IKycDocuments, itemIndex: number) =>\n                    onPopulateWithOcr(documentInfo, dependant?.uid, itemIndex)\n                  }\n                  onVerifyAadhar={(\n                    documentInfo: IKycDocuments,\n                    aadharOtpInfo: IAadharOTP,\n                    itemIndex: number,\n                    uid: string\n                  ) => onVerifyAadhar(documentInfo, aadharOtpInfo, dependant?.uid, itemIndex, uid)}\n                  aadharVerificationStatus={aadharVerificationStatus}\n                  handlerAadharVerificationStatus={handleAadharVerificationStatus}\n                  placeOfUpload={PLACE_OF_UPLOAD_KYC.LOGIN_DEPENDANTS}\n                />\n              }\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderContent = (dependant: any, index: any) => {\n    return (\n      <div className=\"flex flex-col gap-4\" key={dependant?.key}>\n        <Section title=\"heading.basicInformation\">\n          <SaveComponent\n            pageMode={pageData.basicInformation.basicInfoPageMode}\n            onEdit={onEditBasicInfo}\n            onSave={onSaveBasicInformations}\n            onCancel={onCancelBasicInfo}\n          >\n            {renderBasicInformation(dependant?.uid)}\n          </SaveComponent>\n        </Section>\n\n        <Section title=\"KYC Documents\">\n          {!dependant?.uid ? (\n            <React.Fragment>{renderKycDocuments(dependant)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadKycDocuments(dependant)}>\n              <React.Fragment>\n                {renderKycDocuments(dependant)}\n                <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                    customLabel={\"Add Another Document\"}\n                    onClick={onAddDocument}\n                  />\n                </div>\n              </React.Fragment>\n            </LazyLoader>\n          )}\n        </Section>\n      </div>\n    );\n  };\n\n  const renderDependentsTotal = () => {\n    return (\n      <Text\n        className=\" \"\n        label={`( ${\n          dependants.length > 1\n            ? `${dependants.length} Dependants`\n            : `${dependants.length} Dependant`\n        } )`}\n      />\n    );\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    render: The Main return()\n    --------------------------------------------------------------------------------------------------\n  */\n  if (isPageDependentLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"scrollable-tab dynamic-tab relative deleteable-header\">\n        <SimpleTab\n          showTooltip\n          scrollable\n          enableTabMenu\n          tabHeaderMenuModel={(dependant: any, index: number) => menuModel(dependant, index)}\n          optionLabel={[\"firstName\", \"middleName\", \"lastName\"]}\n          optionKey={[\"uid\", \"key\"]}\n          headerClassName=\"dynamic-header\"\n          ref={tabRef}\n          activeIndex={activeIndex}\n          tabs={dependants}\n          onTabChange={handleTabChange}\n          renderContent={renderContent}\n        />\n\n        <div className=\"absolute top-0 right-0 text-[#A3A3A3] text-xs flex justify-evenly items-center w-[15%] space-x-4 pb-2.5 border-b\">\n          {renderDependentsTotal()}\n\n          <div className=\"\">\n            <ButtonBox buttonType={BUTTON_TYPE.ICON_BUTTON_ADD} onClick={onAddMoreTabs} />\n          </div>\n        </div>\n      </div>\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n\n      <WarningDialog\n        visible={isRemoveTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Remove dependant ?\"}\n        warningMessage={`Dependant ${currentTabDetails?.dependant?.firstName} will be removed`}\n        onCancel={() => setIsRemoveTabWarningVisible(false)}\n        onConfirm={() => {\n          onDeleteTab(currentTabDetails?.dependant, currentTabDetails?.index);\n        }}\n        onHide={() => {\n          //\n        }}\n      />\n\n      <WarningDialog\n        visible={isSwitchTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Discard added data ?\"}\n        warningMessage={`Your data will be lost if not saved before navigating to a different tab`}\n        onCancel={() => setIsSwitchTabWarningVisible(false)}\n        onConfirm={handleNavigateTab}\n        onHide={() => {\n          //\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PageDependents;\n"],"names":["initialPageData","initialBasicInformationData","PAGE_MODE","initialKycTemplateListData","PageDependents","loanId","useParams","uniqueKey","ShortUniqueId","isPageDependentLoading","setIsPageDependentLoading","useState","currentTabDetails","setCurrentTabDetails","applicantId","setApplicantId","activeIndex","setActiveIndex","selectedTabIndex","setSelectedTabIndex","isSameActiveIndex","setIsSameActiveIndex","dependants","setDependants","navigateBack","setNavigateBack","tabAddedFlag","setTabAddedFlag","pageData","setPageData","initiateAPICallForSection","setInitiateAPICallForSection","kycCardCount","setKycCardCount","position","setPosition","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","errorMessage","setErrorMessage","isRemoveTabWarningVisible","setIsRemoveTabWarningVisible","isSwitchTabWarningVisible","setIsSwitchTabWarningVisible","showDialogAPIError","setShowDialogAPIError","tabRef","useRef","toastMessageRef","basicInfoRef","menuModel","dependant","index","useEffect","init","_a","resetPageDataWithUID","getBasicInfo","handleTabChange","getApplicantId","res","ApplicantService","APPLICANT_TYPE","validateGetAPIResponse","_d","_c","_b","_g","_f","_e","err","parseStandardAPIErrorMessage","generateDependantUid","BasicInformationService","validatePostAPIResponse","dependantsList","prev","updateBasicInfoObj","getDependentList","initiateAPICallFor","callbackFunction","results","item","prevState","updateEmptyDependents","isIgnoreLoader","activeDependentObj","getAllSavedKycDocuments","dependantId","KYCService","savedItems","kycDocuments","savedDocsName","getAllSectionsInfo","sections","section","savedItem","_i","_h","_k","_j","_n","_m","_l","basicInfo","extractBasicObj","isTabNamePresent","checkDataHasValue","resetPageData","handleNavigateTab","handleAadharVerificationStatus","onSaveKycDocument","documentInfo","itemIndex","kycDocList","getSectionsByDocumentUid","payload","enrichUpdateKycDocument","SUB_STAGE","validatePutAPIResponse","data","parsedOcrMeta","getMaskedUrlForSection","sectionType","DOCUMENT_SECTION","prepareMaskedDocSections","DOCUMENT_TYPE","updatedList","STATIC_MASTER_TYPE_TOAST_TEXT","enrichSaveKycDocument","idx","prepareNewKycCardTracker","onRemoveKycDocument","deleteKycDocInList","onPopulateWithOcr","populateOcr","enrichPopulateDocWithOcr","onVerifyAadhar","aadharOtpInfo","uid","enrichAadharValidation","onAddMoreTabs","onDeleteTab","removeDeletedDependent","error","onSaveBasicInformations","enrichBasicInfoData","itemList","onEditBasicInfo","onCancelBasicInfo","onLazyLoadKycDocuments","getSavedKycDocuments","uniqueKycCardTracker","docNameArr","onAddDocument","newDocumentList","prevCount","updateUniqueTrackerList","list","newKycDocList","_","updatedDependents","autoUpdateActiveIndex","getOCRRelatedData","OCR_STAGE_NAMES","renderBasicInformation","basicInfoPageMode","isBasicInfoLoading","jsx","BasicInformation","PAGE_TYPE","renderKycDocuments","isKycLoading","aadharVerificationStatus","KYCV3","PLACE_OF_UPLOAD_KYC","renderContent","jsxs","Section","SaveComponent","LazyLoader","React","ButtonBox","BUTTON_TYPE","renderDependentsTotal","Text","Loader","SimpleTab","ToastCustom","ErrorDialog","WarningDialog"],"mappings":"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"}