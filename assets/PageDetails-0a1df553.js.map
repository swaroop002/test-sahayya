{"version":3,"file":"PageDetails-0a1df553.js","sources":["../../src/components/SourcingDetails/SourcingDetails.tsx","../../src/views/transaction/PageDDE/Login/PageDetails/PageDetails.tsx"],"sourcesContent":["import AclGuard from \"components/AclGuard\";\nimport AutoComplete from \"components/AutoComplete\";\nimport InputBox from \"components/InputBox\";\nimport Label from \"components/Label/Label\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport { IDropDownOption } from \"interface/component\";\nimport { numberFormatter } from \"locale\";\nimport { ChangeEvent, forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Branch from \"services/masterdata/OrgStruct/Branch/Branch\";\nimport PartnerMasterDataService from \"services/masterdata/Partners/PartnerMasterDataService\";\nimport ProductConfigProductService from \"services/masterdata/ProductConfig/ProductConfigProductService\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport UserService from \"services/masterdata/User/UserService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  convertMonthsToYearsAndMonths,\n  convertToIndianNumbering,\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport { INPUT_STYLE_TYPE, PAGE_MODE, SOURCE_AND_BRANCH_CHANNEL } from \"utils/Constant\";\n\ninterface IAutoComplete {\n  name: string;\n  uid: string;\n  parent?: { name?: string; uid: string };\n  code?: string;\n}\nexport interface ISourcingDetails {\n  uid?: string;\n  id?: string;\n  userUid?: string;\n  loanRequestDetails: {\n    // productType: any;\n    product?: IAutoComplete;\n    loanAmount: any;\n    loanAmountInWords?: string;\n    loanTenure: string;\n    loanTenureInWords?: string;\n  };\n  sourceAndBranch: {\n    channelType: string;\n    channel: IAutoComplete;\n    salesAgent?: IAutoComplete;\n    branch: IAutoComplete;\n  };\n}\ninterface SourcingDetailsProps {\n  mode: \"DDE\" | \"QDE\";\n  onSaveSuccess?: () => void;\n  onSaveFailure?: () => void;\n  pageMode?: any;\n  onError?: (message: string) => void;\n  data: ISourcingDetails;\n}\nexport interface ISourcingDetailsRef {\n  onSave: () => any;\n  onCancel: () => void;\n}\n\nexport const initialSourcingDetails = {\n  uid: \"\",\n  id: \"\",\n  userUid: \"\",\n  loanRequestDetails: {\n    product: {\n      name: \"\",\n      uid: \"\",\n    },\n    loanAmount: \"\",\n    loanAmountInWords: \"\",\n    loanTenure: \"\",\n    loanTenureInWords: \"\",\n  },\n  sourceAndBranch: {\n    channelType: \"\",\n    channel: {\n      name: \"\",\n      uid: \"\",\n    },\n    salesAgent: {\n      name: \"\",\n      uid: \"\",\n    },\n    branch: {\n      name: \"\",\n      uid: \"\",\n    },\n  },\n};\n\nconst SourcingDetails = forwardRef<ISourcingDetailsRef, SourcingDetailsProps>((props, ref) => {\n  const params: { loanUid?: string } = useParams();\n  const { pageMode: sourceDetailMode, data } = props;\n  let firstRender = true;\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [isLoading, setIsLoading] = useState(false);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<IAutoComplete[]>([]);\n  const [channelTypeList, setChannelTypeList] = useState<IDropDownOption[]>([]);\n  const [sourcingDetails, setSourcingDetails] = useState<ISourcingDetails>({ ...data });\n\n  const toastMessageRef = useRef(null);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  useImperativeHandle(ref, () => ({\n    onSave: onSaveSourcingDetails,\n    onCancel: onCancel,\n  }));\n  /*\n    -------------------------------------------------------\n      useEffect\n    -------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (firstRender) {\n      firstRender = false;\n    } else {\n      if (sourcingDetails?.sourceAndBranch?.channelType) {\n        resetValidator();\n        simpleValidator.current.showMessages();\n      } else {\n        resetValidator();\n      }\n    }\n  }, [sourcingDetails?.sourceAndBranch?.channelType]);\n\n  useEffect(() => {\n    setSourcingDetails((prevObj) => ({\n      ...prevObj,\n      ...data,\n    }));\n  }, [data]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n  const init = async () => {\n    if (props?.mode === \"DDE\") {\n      getChannelTypeList();\n    }\n  };\n  const getChannelTypeList = async () => {\n    try {\n      const res = await StaticMasterDataService.getAll(\n        0,\n        10,\n        `staticMasterType.code=CHANNEL_TYPE&isActive=true`\n      );\n      const list: IDropDownOption[] = [];\n      res?.data?.results?.forEach((channel: any) => {\n        list.push({ label: channel?.name, value: channel?.code, uid: channel?.uid });\n      });\n\n      setChannelTypeList(list);\n    } catch (err) {\n      console.error(err);\n      props.onError?.(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  const handleSourceAndBranchInputChange = (event: ChangeEvent<HTMLInputElement> | any) => {\n    const { name, value }: { name: any; value: any } = event.target;\n    if (typeof value === \"object\") {\n      setSourcingDetails((prevPageObj: any) => ({\n        ...prevPageObj,\n        sourceAndBranch: { ...prevPageObj.sourceAndBranch, [name]: value },\n      }));\n    } else {\n      setSourcingDetails((prevPageObj) => {\n        if (name === \"branch\" && sourcingDetails.sourceAndBranch?.salesAgent) {\n          return {\n            ...prevPageObj,\n            sourceAndBranch: {\n              ...prevPageObj.sourceAndBranch,\n              [name]: { name: value },\n              salesAgent: { name: \"\", uid: \"\" },\n            },\n          };\n        }\n        return {\n          ...prevPageObj,\n          sourceAndBranch: { ...prevPageObj.sourceAndBranch, [name]: { name: value } },\n        };\n      });\n    }\n  };\n\n  const handleLoanTenureInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setSourcingDetails((prevPageObj) => ({\n      ...prevPageObj,\n      loanRequestDetails: {\n        ...prevPageObj.loanRequestDetails,\n        [name]: value,\n        loanTenureInWords: convertMonthsToYearsAndMonths(value),\n      },\n    }));\n  };\n\n  const handleLoanRequestDetailsInputChange = (event: any) => {\n    const { name, value } = event.target;\n    if (typeof value === \"object\") {\n      setSourcingDetails((prevPageObj) => ({\n        ...prevPageObj,\n        loanRequestDetails: { ...prevPageObj.loanRequestDetails, [name]: value },\n      }));\n    } else {\n      setSourcingDetails((prevPageObj) => ({\n        ...prevPageObj,\n        loanRequestDetails: { ...prevPageObj.loanRequestDetails, [name]: { name: value } },\n      }));\n    }\n  };\n\n  const handleLoanAmountInputChange = (event: any) => {\n    const { name, value } = event.target;\n    const unformattedValue: number = currencyFormatToNumber(value);\n    setSourcingDetails((prevPageObj) => ({\n      ...prevPageObj,\n      loanRequestDetails: {\n        ...prevPageObj.loanRequestDetails,\n        [name]: numberFormatter(unformattedValue, \"en-IN\", 0),\n        loanAmountInWords: convertToIndianNumbering(unformattedValue),\n      },\n    }));\n  };\n\n  const handleSourceAndBranchDropdownChange = (event: ChangeEvent<HTMLInputElement> | any) => {\n    const { name, value } = event.target;\n\n    setSourcingDetails((prevPageObj) => ({\n      ...prevPageObj,\n      sourceAndBranch: {\n        ...prevPageObj.sourceAndBranch,\n        [name]: value,\n        ...(name === \"channelType\"\n          ? {\n              channel: {\n                name: \"\",\n                uid: \"\",\n              },\n            }\n          : {}),\n      },\n    }));\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSaveSourcingDetails = () => {\n    let isValid = false;\n    isValid = validateForm();\n    if (!isValid) {\n      return;\n    }\n\n    const enrichObj = prepareToUpdate();\n    return enrichObj;\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const getChannelNameValidation = () => {\n    if (\n      !sourcingDetails?.sourceAndBranch?.channelType ||\n      sourcingDetails?.sourceAndBranch?.channelType === SOURCE_AND_BRANCH_CHANNEL.DIRECT\n    ) {\n      return \"optional\";\n    }\n    return \"mandatory\";\n  };\n\n  const isChannelNameMandatory = () => {\n    if (\n      !sourcingDetails?.sourceAndBranch?.channelType ||\n      sourcingDetails?.sourceAndBranch?.channelType === SOURCE_AND_BRANCH_CHANNEL.DIRECT\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  // const\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const onCancel = () => {\n    simpleValidator?.current?.hideMessages();\n    init();\n  };\n\n  const prepareToUpdate = () => {\n    const finalData = {\n      product: {\n        uid: sourcingDetails?.loanRequestDetails?.product?.uid,\n      },\n      branch: {\n        uid: sourcingDetails?.sourceAndBranch?.branch?.uid,\n      },\n      amount: currencyFormatToNumber(sourcingDetails?.loanRequestDetails?.loanAmount),\n      amountInWords: sourcingDetails?.loanRequestDetails?.loanAmountInWords,\n      tenure: parseInt(sourcingDetails?.loanRequestDetails?.loanTenure),\n      tenureInWords: sourcingDetails?.loanRequestDetails?.loanTenureInWords,\n      salesAgent: {\n        uid: sourcingDetails?.sourceAndBranch?.salesAgent?.uid,\n      },\n      salesManager: {\n        uid: sourcingDetails?.sourceAndBranch?.salesAgent?.parent?.uid || null,\n      },\n      ...(props?.mode === \"DDE\"\n        ? {\n            userUid: sourcingDetails?.userUid,\n            // cha\n            id: sourcingDetails?.id,\n            uid: sourcingDetails?.uid,\n            smChannelType: sourcingDetails?.sourceAndBranch?.channelType,\n            smChannelName: isChannelNameDisabled()\n              ? \"\"\n              : sourcingDetails?.sourceAndBranch?.channel?.name,\n          }\n        : {}),\n    };\n    return finalData;\n  };\n\n  const isChannelNameDisabled = () => {\n    const channel: IDropDownOption | undefined = channelTypeList?.find(\n      (channel: IDropDownOption) => channel.value === channelType\n    );\n    if (channel?.value === SOURCE_AND_BRANCH_CHANNEL.DIRECT) {\n      return true;\n    }\n    return false;\n  };\n\n  const searchAutoCompleteProduct = async (event: any) => {\n    let suggestionsTemplate = [];\n    setIsLoading(true);\n    try {\n      await ProductConfigProductService.findByName(0, 50, event.query).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data.results];\n          setIsLoading(false);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const searchAutoCompleteSalesAgent = async (event: any) => {\n    let suggestionsTemplate = [];\n    // if(sourcingDetails?.sourceAndBranch?.branch?.uid){\n    setIsLoading(true);\n    try {\n      await UserService.getUserByBranchAndName(\n        0,\n        50,\n        sourcingDetails?.sourceAndBranch?.branch?.uid,\n        event.query\n      ).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data];\n          setIsLoading(false);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n    // }\n  };\n\n  const searchAutoCompleteBranch = async (event: any) => {\n    let suggestionsTemplate = [];\n    setIsLoading(true);\n    try {\n      await Branch.getFilterByName(0, 50, event.query).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data];\n          setIsLoading(false);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", code: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const searchAutoCompleteChannel = async (event: any) => {\n    let suggestionsTemplate: any[] = [];\n    setIsLoading(true);\n    try {\n      const res = await PartnerMasterDataService.getChannelName(\n        0,\n        50,\n        `&loanUid=${params?.loanUid}&channelType=${sourcingDetails?.sourceAndBranch?.channelType}&name=${event.query}`\n      );\n      if (res?.data && res.status === 200) {\n        suggestionsTemplate = [...res.data];\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const itemTemplate = (item: any, title: any, subTitle?: any) => {\n    if (item?.name === undefined || item?.name.length < 1) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={title} />\n        {subTitle ? <Text className=\"text-secondary-gray-500 text-xxs\" label={subTitle} /> : null}\n      </div>\n    );\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  const itemTemplateSalesAgent = (item: any) => {\n    return itemTemplate(item, `${item?.name} ${item?.lastName}`, `${item?.designation?.name}`);\n  };\n\n  const itemProductTemplate = (item: any) => {\n    return itemTemplate(item, `${item?.name}`);\n  };\n\n  const itemBranchTemplate = (item: any) => {\n    let subTitle = \"\";\n    if (item?.city?.name && item?.city?.state) {\n      subTitle = `${item?.city?.name}, ${item?.city?.state?.name}`;\n    }\n    return itemTemplate(item, `${item?.name}`, subTitle);\n  };\n\n  const itemTemplateChannelName = (item: any) => {\n    return itemTemplate(item, `${item?.name}`, item?.city?.name);\n  };\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  const {\n    loanRequestDetails: { product, loanAmount, loanAmountInWords, loanTenure, loanTenureInWords },\n    sourceAndBranch: { salesAgent, branch, channelType, channel },\n  } = sourcingDetails;\n  return (\n    <AclGuard override={{ read: sourceDetailMode === PAGE_MODE.VIEW }}>\n      <div className=\"grid grid-cols-4 gap-3\">\n        <div>\n          <AutoComplete\n            label=\"input.sourceDetails.product\"\n            name=\"product\"\n            value={product?.name}\n            variant={INPUT_STYLE_TYPE.PRIMARY}\n            suggestions={suggestionsTemplate}\n            completeMethod={searchAutoCompleteProduct}\n            onChange={handleLoanRequestDetailsInputChange}\n            itemTemplate={itemProductTemplate}\n            onBlur={validate}\n            // loader={isLoading}\n            validation={simpleValidator?.current?.message(\"product\", product?.uid, \"mandatory\")}\n          />\n        </div>\n        <div>\n          <InputBox\n            label=\"input.sourceDetails.loanAmount\"\n            name=\"loanAmount\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            onChange={handleLoanAmountInputChange}\n            onBlur={validate}\n            value={loanAmount}\n            className=\"text-right\"\n            validation={simpleValidator?.current?.message(\n              \"loanAmount\",\n              currencyFormatToNumber(loanAmount),\n              \"mandatory|onlyInteger|min:100000,num|max:50000000,num\"\n            )}\n          />\n        </div>\n        <div className=\"col-span-2 pb-5\">\n          <div className=\"group grid\">\n            <Label label={\"input.sourceDetails.loanAmountWords\"} />\n            <div className=\"mt-1\">\n              <Label label={loanAmountInWords} />\n            </div>\n          </div>\n        </div>\n        <div>\n          <InputBox\n            label=\"input.sourceDetails.loanTenure\"\n            name=\"loanTenure\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            onChange={handleLoanTenureInputChange}\n            onBlur={validate}\n            value={loanTenure}\n            className=\"text-right\"\n            validation={simpleValidator?.current?.message(\n              \"loanTenure\",\n              loanTenure,\n              \"mandatory|checkNumber|onlyInteger|min:12,num|max:360,num\"\n            )}\n          />\n        </div>\n        <div>\n          <TextData label=\"input.sourceDetails.loanTenureWords\" value={loanTenureInWords} />\n        </div>\n        <div></div>\n        <div></div>\n      </div>\n      <div className=\"flex flex-col gap-4\">\n        <Text label=\"Source & Branch\" className=\"text-xs font-bold text-primary-ptext-10000\" />\n        <div className=\"grid grid-cols-4 gap-3\">\n          {props?.mode === \"DDE\" ? (\n            <>\n              <div>\n                <SimpleDropDown\n                  label=\"label.dde.channelType\"\n                  name=\"channelType\"\n                  value={channelType}\n                  variant={INPUT_STYLE_TYPE.PRIMARY}\n                  options={channelTypeList}\n                  optionLabel=\"label\"\n                  optionValue=\"value\"\n                  onChange={handleSourceAndBranchDropdownChange}\n                  onBlur={validate}\n                  // loader={isLoading}\n                  validation={simpleValidator?.current?.message(\n                    \"channelType\",\n                    channelType,\n                    \"mandatory\"\n                  )}\n                />\n              </div>\n              <div>\n                <div>\n                  <AutoComplete\n                    label={\n                      isChannelNameMandatory()\n                        ? \"label.dde.channelNameMandatory\"\n                        : \"label.dde.channelName\"\n                    }\n                    name=\"channel\"\n                    value={!isChannelNameDisabled() ? channel?.name : \"\"}\n                    variant={INPUT_STYLE_TYPE.PRIMARY}\n                    suggestions={suggestionsTemplate}\n                    completeMethod={searchAutoCompleteChannel}\n                    onChange={handleSourceAndBranchInputChange}\n                    itemTemplate={itemTemplateChannelName}\n                    onBlur={validate}\n                    // loader={isLoading}\n                    validation={simpleValidator?.current?.message(\n                      \"channel\",\n                      channel?.uid,\n                      getChannelNameValidation()\n                    )}\n                    disabled={isChannelNameDisabled()}\n                  />\n                </div>\n              </div>\n              <div></div>\n              <div></div>\n            </>\n          ) : null}\n          <div>\n            <AutoComplete\n              label=\"input.sourceDetails.branch\"\n              name=\"branch\"\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              onBlur={validate}\n              suggestions={suggestionsTemplate}\n              completeMethod={searchAutoCompleteBranch}\n              onChange={handleSourceAndBranchInputChange}\n              itemTemplate={itemBranchTemplate}\n              value={branch?.name}\n              validation={simpleValidator?.current?.message(\"branch\", branch?.uid, \"mandatory\")}\n            />\n          </div>\n          <div>\n            <AutoComplete\n              label=\"input.sourceDetails.salesAgent\"\n              name=\"salesAgent\"\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              onBlur={validate}\n              value={salesAgent?.name}\n              suggestions={suggestionsTemplate}\n              completeMethod={searchAutoCompleteSalesAgent}\n              onChange={handleSourceAndBranchInputChange}\n              itemTemplate={itemTemplateSalesAgent}\n              validation={simpleValidator?.current?.message(\n                \"salesAgent\",\n                salesAgent?.uid,\n                \"mandatory\"\n              )}\n              disabled={!sourcingDetails?.sourceAndBranch?.branch?.uid ? true : false}\n            />\n          </div>\n\n          <div>\n            <InputBox\n              label=\"input.sourceDetails.salesManager\"\n              name=\"salesManager\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleSourceAndBranchInputChange}\n              onBlur={validate}\n              value={sourcingDetails?.sourceAndBranch?.salesAgent?.parent?.name ?? \"\"}\n              disabled\n            />\n          </div>\n          <div></div>\n        </div>\n      </div>\n    </AclGuard>\n  );\n});\n\nexport default SourcingDetails;\n","import ErrorDialog from \"components/ErrorDialog\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport SourcingDetails, {\n  ISourcingDetails,\n  ISourcingDetailsRef,\n  initialSourcingDetails,\n} from \"components/SourcingDetails\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { numberFormatter } from \"locale\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PartnerMasterDataService from \"services/masterdata/Partners/PartnerMasterDataService\";\nimport SourcingService from \"services/transaction/SourcingService\";\nimport { parseStandardAPIErrorMessage } from \"utils/CommonUtil\";\nimport { PAGE_MODE, STATIC_MASTER_TYPE_TOAST_TEXT, TOAST_STYLE_TYPE } from \"utils/Constant\";\n\ninterface IToastRef {\n  showFunction: () => void;\n}\nconst PageDetails = (props: RouteProps) => {\n  const params:{loanUid?:string} = useParams();\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [sourceDetailMode, setSourceDetailMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const toastMessageRef = useRef<IToastRef | null>(null);\n  const SourcingDetailsRef = useRef<ISourcingDetailsRef | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [sourcingDetails, setSourcingDetails] = useState<ISourcingDetails>({\n    ...initialSourcingDetails,\n  });\n  /*\n    -------------------------------------------------------\n      useEffect\n    -------------------------------------------------------\n  */\n\n  useEffect(() => {\n    getSourcingDetails();\n  }, []);\n\n  useEffect(() => {\n    // initialSourcingDetails\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  const getSourcingDetails = async () => {\n    try {\n      const res = await SourcingService.getDdeDetails(params?.loanUid);\n      const channelData: any = await PartnerMasterDataService.getChannelName(\n        0,\n        50,\n        `&loanUid=${params?.loanUid}&channelType=${res?.data?.smChannelType}&name=${res.data?.smChannelName}`\n      );\n      console.log(\"details \", res);\n      // chan\n      const formattedLoanAmount = numberFormatter(res.data?.amount, \"en-IN\", 0);\n      setSourcingDetails((prevState) => ({\n        ...prevState,\n        userUid: res.data?.userUid,\n        id: res.data?.id,\n        uid: res.data?.uid,\n        loanRequestDetails: {\n          ...prevState.loanRequestDetails,\n          product: res.data?.product,\n          loanAmount: formattedLoanAmount,\n          loanAmountInWords: res.data?.amountInWords,\n          loanTenure: res.data?.tenure,\n          loanTenureInWords: res.data?.tenureInWords,\n        },\n        sourceAndBranch: {\n          ...prevState.sourceAndBranch,\n          branch: res.data?.branch,\n          channelType: res.data?.smChannelType,\n          channel: {\n            name: channelData?.data?.[0]?.name ?? \"\",\n            uid: channelData?.data?.[0]?.uid ?? \"\",\n          },\n          salesAgent: res.data?.salesAgent ?? {\n            name: \"\",\n            uid: \"\",\n          },\n          // salesManager:\n        },\n      }));\n      setIsLoading(false);\n\n      // props.onGetSuccess?.();\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    const enrichObj = await SourcingDetailsRef?.current?.onSave();\n    if (enrichObj) {\n      return SourcingService.updateDde(enrichObj)\n        .then((res: any) => {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n          setErrorMessage(\"\");\n          setSourceDetailMode(PAGE_MODE.VIEW);\n        })\n        .catch((err: any) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    }\n  };\n\n  const onCancel = () => {\n    forceUpdate((prev) => !prev);\n    SourcingDetailsRef?.current?.onCancel();\n    forceUpdate((prev) => !prev);\n    setSourceDetailMode(PAGE_MODE.VIEW);\n    getSourcingDetails();\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const onError = (message: string) => {\n    setErrorMessage(message);\n  };\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  const renderHeaderContent = () => {\n    return (\n      <Text\n        label=\"label.dde.loanRequestDetails\"\n        className=\"text-xs font-bold text-primary-ptext-10000\"\n      />\n    );\n  };\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <Section title=\"heading.sourceDetails\">\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <SaveComponent\n            // title=\"Loan Request Details\"\n            renderHeaderContent={renderHeaderContent}\n            pageMode={sourceDetailMode}\n            onEdit={() => setSourceDetailMode(PAGE_MODE.CREATE)}\n            onSave={onSave}\n            onCancel={onCancel}\n          >\n            <SourcingDetails\n              mode=\"DDE\"\n              pageMode={sourceDetailMode}\n              ref={SourcingDetailsRef}\n              onError={onError}\n              data={sourcingDetails}\n            />\n          </SaveComponent>\n        )}\n      </Section>\n      <div className=\"\">\n        <ToastCustom\n          position={\"bottom-right\"}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n        />\n      </div>\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(PageDetails);\n"],"names":["initialSourcingDetails","SourcingDetails","forwardRef","props","ref","params","useParams","sourceDetailMode","data","firstRender","isLoading","setIsLoading","useState","forceUpdate","suggestionsTemplate","setSuggestionsTemplate","channelTypeList","setChannelTypeList","sourcingDetails","setSourcingDetails","useRef","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useImperativeHandle","onSaveSourcingDetails","onCancel","useEffect","init","_a","resetValidator","prevObj","getChannelTypeList","res","StaticMasterDataService","list","_b","channel","err","_c","parseStandardAPIErrorMessage","handleSourceAndBranchInputChange","event","name","value","prevPageObj","handleLoanTenureInputChange","convertMonthsToYearsAndMonths","handleLoanRequestDetailsInputChange","handleLoanAmountInputChange","unformattedValue","currencyFormatToNumber","numberFormatter","convertToIndianNumbering","handleSourceAndBranchDropdownChange","validate","validateForm","isValid","prepareToUpdate","getChannelNameValidation","SOURCE_AND_BRANCH_CHANNEL","isChannelNameMandatory","_d","_e","_f","_g","_h","_j","_i","_m","_l","_k","_n","isChannelNameDisabled","_p","_o","channelType","searchAutoCompleteProduct","ProductConfigProductService","error","searchAutoCompleteSalesAgent","UserService","searchAutoCompleteBranch","Branch","searchAutoCompleteChannel","PartnerMasterDataService","itemTemplate","item","title","subTitle","jsx","Text","jsxs","itemTemplateSalesAgent","itemProductTemplate","itemBranchTemplate","itemTemplateChannelName","product","loanAmount","loanAmountInWords","loanTenure","loanTenureInWords","salesAgent","branch","AclGuard","PAGE_MODE","AutoComplete","INPUT_STYLE_TYPE","InputBox","Label","TextData","Fragment","SimpleDropDown","PageDetails","setSourceDetailMode","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","SourcingDetailsRef","getSourcingDetails","SourcingService","channelData","formattedLoanAmount","prevState","onSave","enrichObj","STATIC_MASTER_TYPE_TOAST_TEXT","onError","message","renderHeaderContent","Section","SkeletonCustom","SaveComponent","ToastCustom","ErrorDialog","PageDetails$1","withRouter"],"mappings":"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"}