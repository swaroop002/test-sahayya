{"version":3,"file":"PageDocuments-59336a36.js","sources":["../../src/services/transaction/DDE/storyBoardRecommendationService.ts","../../src/views/transaction/PageDDE/Login/PageDocuments/SalesRecommendation/SalesRecommendation.tsx","../../src/views/transaction/PageDDE/Login/PageDocuments/PageDocuments.tsx"],"sourcesContent":["import BaseApiService from \"../../BaseApiService\";\n\n// ---------------- Default path ------------------ //\nconst DEFAULT_PATH = \"/custom/api/login\";\nconst RECOMMENDED_BY_DEFAULT_PATH = \"/custom/api/user/profile/manage/filter\";\n\nclass StoryBoardRecommendationService extends BaseApiService {\n  // ------------------------- To get sales recommendation list ----------------------------- //\n\n  getStoryBoardRecommendationDetails = (loanId: string, sectionType: string) => {\n    const endPoint =\n      DEFAULT_PATH + `/${loanId}/${sectionType}/storyboardrecommendation?isActive=true`;\n    return this.makeGetRequestWithAuth(endPoint);\n  };\n\n  // -------------------------- To create new sales recommendation or story board --------------------------- //\n\n  createStoryBoardRecommendation = (payload: any) => {\n    const endPoint = DEFAULT_PATH + `/dde/storyboardrecommendation`;\n    return this.makePostRequestWithAuth(endPoint, payload);\n  };\n\n  // -------------------------- To update new sales recommendation or story board --------------------------- //\n\n  updateStoryBoardRecommendation = (payload: any, subStage: string) => {\n    const endPoint = DEFAULT_PATH + `/${subStage}/storyboardrecommendation`;\n    return this.makePutRequestWithAuth(endPoint, payload);\n  };\n\n  // --------------------------- To search recommended by for sales recommendation ------------ //\n\n  findRecommendedBy = (start = 0, limit = 10, search = \"\", loanId = \"\") => {\n    const endPoint =\n      RECOMMENDED_BY_DEFAULT_PATH +\n      `/all?loanUid=${loanId}&name=${search}&start=${start}&limit=${limit}`;\n    return this.makeGetRequestWithAuth(endPoint);\n  };\n}\nexport default new StoryBoardRecommendationService();\n","import LoadingIcon from \"assets/img/common/Loading.svg\";\nimport AutoComplete from \"components/AutoComplete\";\nimport DatePicker from \"components/DatePicker\";\nimport InputTextArea from \"components/InputTextArea\";\nimport SaveComponent from \"components/Save\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\nimport Text from \"components/Text\";\nimport { RouteProps } from \"hoc/withRouter\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport { ChangeEvent, forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport storyBoardRecommendationService from \"services/transaction/DDE/storyBoardRecommendationService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { INPUT_STYLE_TYPE, PAGE_MODE, STATIC_MASTER_TYPE_TOAST_TEXT } from \"utils/Constant\";\n\n// ----------------- props ---------------------- //\nexport interface ISalesRecommendationRef {\n  save: () => ISalesRecommendationData | undefined;\n  remove: () => ISalesRecommendationData | undefined;\n  onSaveSuccess: () => void;\n}\n\nexport interface ISalesRecommendationData {\n  uid?: string;\n  isActive?: boolean;\n  recommendationDate: any;\n  recommendedBy: { name: string; uid: string };\n  recommendationDescription: string;\n}\n\ninterface IProps extends RouteProps {\n  data: ISalesRecommendationData;\n  isLoading?: boolean;\n  disabled?: boolean;\n  disabledSaveMenu?: boolean;\n  loanId?: string;\n  cardNumber?: number;\n  onSaveRecommendationDetails: () => void;\n  onRemoveSalesRecommendation?: () => void;\n}\n\nconst SalesRecommendation = forwardRef<ISalesRecommendationRef, IProps>((props, ref) => {\n  const {\n    data,\n    isLoading,\n    cardNumber,\n    disabled,\n    disabledSaveMenu,\n    loanId,\n    onSaveRecommendationDetails,\n    onRemoveSalesRecommendation,\n  } = props;\n\n  // ----------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<ISalesRecommendationData>(data);\n  const [pageMode, setPageMode] = useState<string>(PAGE_MODE.VIEW);\n  const [isSuggestionLoading, setIsSuggestionLoading] = useState(false);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<\n    {\n      name: string | undefined;\n      code: string | undefined;\n    }[]\n  >([]);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n  const menuModel = [\n    {\n      className: \"\",\n      label: \"Remove\",\n      command: () => {\n        onRemoveSalesRecommendation?.();\n      },\n      disabled: cardNumber === 0,\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  // initial rendering callback without conditions and dependency\n  // do not add dependency for this useEffect - create new useEffect if needed\n  useEffect(() => {\n    //init()\n  }, []);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    onSaveSuccess: onSaveSuccess,\n    remove: onRemove,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    setPageObj({\n      ...pageObj,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleFilterRecommendedByChange = (event: ChangeEvent<HTMLInputElement> | any) => {\n    const { name, value } = event.target;\n\n    if (typeof value === \"object\") {\n      setPageObj((prevPageObj: any) => ({\n        ...prevPageObj,\n        [name]: { name: value?.name, uid: value?.uid },\n      }));\n    } else {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        [name]: { name: value },\n      }));\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSaveSuccess = () => setPageMode(PAGE_MODE.VIEW);\n\n  const onRemove = () => {\n    return { ...pageObj, isActive: false };\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n    setPageObj({ ...pageObj });\n    return { ...pageObj };\n  };\n\n  const onCancel = () => {\n    if (simpleValidator) {\n      simpleValidator.current.visibleFields = [];\n    }\n    simpleValidator?.current?.hideMessages();\n\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const searchAutoCompleteRecommendedBy = async (event: any) => {\n    let suggestionsTemplate = [];\n    setIsSuggestionLoading(true);\n    try {\n      await storyBoardRecommendationService\n        .findRecommendedBy(0, 10, event.query, loanId)\n        .then((res) => {\n          if (res.status === 200) {\n            suggestionsTemplate = [...res.data];\n            setIsSuggestionLoading(false);\n          }\n        });\n    } catch (error) {\n      setPosition(\"top-right\");\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: undefined, code: undefined, uid: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const itemRecommendedByTemplate = (item: any) => {\n    if (item === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39\">\n          <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n          <Text className=\"text-primary-labelColor mt-2\" label=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item?.name} />\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    const { recommendationDate, recommendedBy, recommendationDescription } = pageObj;\n\n    return (\n      <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n        <div className=\"col-span-1\">\n          {/* Sys date */}\n          <SystemDatePicker\n            disabled={pageMode === PAGE_MODE.VIEW}\n            label={\"input.dde.document.recommendation.date\"}\n            name=\"recommendationDate\"\n            value={recommendationDate}\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            onChange={handleChange}\n            onBlur={validate}\n            placeholder=\"DD-MM-YYYY \"\n            validation={simpleValidator?.current?.message(\n              \"recommendationDate\",\n              recommendationDate,\n              \"mandatory\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <AutoComplete\n            variant={INPUT_STYLE_TYPE.PRIMARY}\n            label={\"input.dde.document.recommended.by\"}\n            placeholder={\"Enter recommended by\"}\n            name=\"recommendedBy\"\n            value={recommendedBy?.name}\n            suggestions={suggestionsTemplate}\n            completeMethod={searchAutoCompleteRecommendedBy}\n            onChange={handleFilterRecommendedByChange}\n            itemTemplate={itemRecommendedByTemplate}\n            loader={isLoading}\n            validation={simpleValidator?.current?.message(\n              \"recommendedBy\",\n              recommendedBy?.uid,\n              \"mandatory\"\n            )}\n            onBlur={validate}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n\n        <div className=\"col-span-2 h-auto\">\n          <InputTextArea\n            name=\"recommendationDescription\"\n            className=\"!h-24\"\n            label={\"input.dde.document.recommendation\"}\n            placeholder={\"Enter recommendation\"}\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            onChange={handleChange}\n            value={recommendationDescription}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              \"recommendationDescription\",\n              recommendationDescription,\n              \"mandatory\"\n            )}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className=\"\">\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <SaveComponent\n          disabled={disabled}\n          disabledMenu={disabledSaveMenu}\n          title={\"label.dde.recommendation\"}\n          titleArgs={{ count: cardNumber }}\n          pageMode={pageMode}\n          onCancel={onCancel}\n          onEdit={onEdit}\n          onSave={onSaveRecommendationDetails}\n          kebabModel={menuModel}\n        >\n          {renderContent()}\n        </SaveComponent>\n      )}\n    </div>\n  );\n});\n\nexport default SalesRecommendation;\n","import ButtonBox from \"components/ButtonBox\";\nimport {\n  IDocumentInfo,\n  ISavedDocumentRecords,\n  dummySavedDocStructureInList,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport LazyLoader from \"components/LazyLoader\";\nimport OtherDocuments, {\n  IOtherDocumentsRef,\n  LOAN_SECTION_KEY_TYPES,\n  STAGE,\n} from \"components/OtherDocuments/OtherDocuments\";\nimport RichTextEditor from \"components/RichTextEditor\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport ToastCustom from \"components/Toast\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ApplicantService from \"services/ApplicantService\";\nimport storyBoardRecommendationService from \"services/transaction/DDE/storyBoardRecommendationService\";\nimport OtherDocumentService from \"services/transaction/OtherDocumentService\";\nimport {\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  STORY_BOARD,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport {\n  enrichOtherDocuments,\n  enrichSalesRecommendation,\n  enrichStoryBoard,\n  initialSalesRecommendationData,\n  structSavedDocStrucutureForOtherDocuments,\n  updateSalesRecommendations,\n} from \"../Helper\";\nimport SalesRecommendation, {\n  ISalesRecommendationData,\n  ISalesRecommendationRef,\n} from \"./SalesRecommendation\";\n\n// --------------------------------- page interface ---------------------------------------------- //\n\ninterface IPageData {\n  storyBoard: {\n    isStoryBoardLoading: boolean;\n    isActive: boolean;\n    uid: string;\n    storyBoardData: string;\n    storyBoardMode: string;\n    storyBoardValidation:\n      | {\n          isStoryBoardValid?: boolean;\n          errorMessage: string;\n        }\n      | null\n      | undefined;\n  };\n  salesRecommendation: {\n    isSalesRecommendationLoading: boolean;\n    salesRecommendationList: ISalesRecommendationData[];\n  };\n  otherDocInfo: {\n    isOtherDocInfoLoading: boolean;\n    otherDocInfoList: ISavedDocumentRecords[];\n    sectionMode: string;\n  };\n}\n\n// ----------------------------------------- Functional component ------------------------------------- //\n\nconst PageDocuments = () => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n\n  // ----------------- states ---------------------- //\n  const [applicantId, setApplicantId] = useState(\"\");\n\n  const [pageData, setPageData] = useState<IPageData>({\n    storyBoard: {\n      isStoryBoardLoading: true,\n      isActive: true,\n      uid: \"\",\n      storyBoardData: \"\",\n      storyBoardMode: PAGE_MODE.VIEW,\n      storyBoardValidation: null,\n    },\n    salesRecommendation: {\n      isSalesRecommendationLoading: true,\n      salesRecommendationList: [initialSalesRecommendationData],\n    },\n    otherDocInfo: {\n      isOtherDocInfoLoading: true,\n      otherDocInfoList: [dummySavedDocStructureInList],\n      sectionMode: PAGE_MODE.VIEW,\n    },\n  });\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const salesRecommendationRef = useRef<ISalesRecommendationRef[]>([]);\n  const editorRef = useRef<any>(null);\n  const otherDocsRef = useRef<IOtherDocumentsRef | null>(null);\n\n  /*\n    -------------------------------------------------------\n      useEffect\n    -------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (applicantId) {\n      getOtherDocuments();\n    }\n  }, [applicantId]);\n\n  useEffect(() => {\n    getStoryBoard();\n  }, []);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const init = async () => {\n    getApplicantId();\n  };\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.PRIMARY, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setApplicantId(res.data?.results?.[0]?.uid);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getStoryBoard = async () => {\n    if (loanId) {\n      try {\n        const res = await storyBoardRecommendationService.getStoryBoardRecommendationDetails(\n          loanId,\n          STORY_BOARD.SALES_STORY_BOARD\n        );\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                storyBoard: {\n                  ...prevState.storyBoard,\n                  uid: res?.data?.[0]?.uid,\n                  isActive: res?.data?.[0]?.isActive,\n                  storyBoardData: res?.data?.[0]?.storyBoard,\n                  isStoryBoardLoading: false,\n                },\n              };\n            });\n          } else {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                storyBoard: {\n                  ...prevState.storyBoard,\n                  isStoryBoardLoading: false,\n                },\n              };\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            storyBoard: {\n              ...prevState.storyBoard,\n              isStoryBoardLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getSalesRecommendations = async () => {\n    if (loanId) {\n      try {\n        const res = await storyBoardRecommendationService.getStoryBoardRecommendationDetails(\n          loanId,\n          STORY_BOARD.SALES_RECOMMENDATION\n        );\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedSalesRecommendations = res?.data?.map((recommendation: any) => {\n              return updateSalesRecommendations(recommendation);\n            });\n\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                salesRecommendation: {\n                  salesRecommendationList: [...savedSalesRecommendations],\n                  isSalesRecommendationLoading: false,\n                },\n              };\n            });\n          } else {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                salesRecommendation: {\n                  ...prevState.salesRecommendation,\n                  isSalesRecommendationLoading: false,\n                  salesRecommendationList: [{ ...initialSalesRecommendationData }],\n                },\n              };\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            salesRecommendation: {\n              ...prevState.salesRecommendation,\n              isSalesRecommendationLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getOtherDocuments = async () => {\n    try {\n      const res = await OtherDocumentService.getDocument(loanId);\n\n      if (validateGetAPIResponse(res)) {\n        if (res?.data?.length > 0) {\n          const preparedListOfOtherDocuments = res?.data?.map((document: any) => {\n            return structSavedDocStrucutureForOtherDocuments(document);\n          });\n\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                otherDocInfoList: [...preparedListOfOtherDocuments],\n                isOtherDocInfoLoading: false,\n              },\n            };\n          });\n        } else {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                isOtherDocInfoLoading: false,\n              },\n            };\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          otherDocInfo: {\n            ...prev.otherDocInfo,\n            isOtherDocInfoLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  console.log(pageData.otherDocInfo);\n  /* \n    -------------------------------------------------------------------------------------------------------\n    Validators:\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const validateEditor = () => {\n    const wordcount = editorRef?.current?.editor?.plugins?.wordcount?.body.getCharacterCount();\n\n    if (wordcount < 200) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          storyBoard: {\n            ...prevState.storyBoard,\n            storyBoardValidation: {\n              ...prevState.storyBoard.storyBoardValidation,\n              errorMessage: \"Minimum 200 characters\",\n            },\n          },\n        };\n      });\n      return false;\n    }\n\n    if (wordcount > 500) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          storyBoard: {\n            ...prevState.storyBoard,\n            storyBoardValidation: {\n              ...prevState.storyBoard.storyBoardValidation,\n              errorMessage: \"Maximum 500 characters\",\n            },\n          },\n        };\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const handleEditorValidation = (e: any) => {\n    if (validateEditor()) {\n      if (pageData?.storyBoard?.storyBoardValidation?.errorMessage) {\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            storyBoard: {\n              ...prevState.storyBoard,\n              storyBoardValidation: {\n                ...prevState.storyBoard.storyBoardValidation,\n                errorMessage: \"\",\n              },\n            },\n          };\n        });\n      }\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCancelStoryBoard = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        storyBoard: {\n          ...prevState.storyBoard,\n          storyBoardMode: PAGE_MODE.VIEW,\n          storyBoardValidation: {\n            ...prevState.storyBoard?.storyBoardValidation,\n            errorMessage: \"\",\n          },\n        },\n      };\n    });\n  };\n\n  const onEditStoryBoard = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        storyBoard: {\n          ...prevState.storyBoard,\n          storyBoardMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onAddMoreSalesRecommendation = () => {\n    const newSalesRecommendationListItem = { ...initialSalesRecommendationData };\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        salesRecommendation: {\n          ...prevState.salesRecommendation,\n          salesRecommendationList: [\n            ...prevState.salesRecommendation.salesRecommendationList,\n            newSalesRecommendationListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onSaveStoryBoard = async () => {\n    const { uid, isActive } = pageData.storyBoard;\n\n    if (!validateEditor()) {\n      return;\n    }\n\n    if (editorRef.current?.editor?.getContent()) {\n      const payload = enrichStoryBoard(\n        { storyBoardData: editorRef.current?.editor?.getContent(), uid, isActive },\n        loanId\n      );\n\n      if (uid) {\n        try {\n          const res = await storyBoardRecommendationService.updateStoryBoardRecommendation(\n            payload,\n            SUB_STAGE.DDE\n          );\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            onCancelStoryBoard();\n            getStoryBoard();\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res = await storyBoardRecommendationService.createStoryBoardRecommendation(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            onCancelStoryBoard();\n            getStoryBoard();\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onSaveRecommendationDetails = async (index: number) => {\n    const data: ISalesRecommendationData | undefined =\n      salesRecommendationRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichSalesRecommendation(data, loanId);\n\n      if (data.uid) {\n        try {\n          const res = await storyBoardRecommendationService.updateStoryBoardRecommendation(\n            payload,\n            SUB_STAGE.DDE\n          );\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            salesRecommendationRef?.current?.[index]?.onSaveSuccess();\n            getSalesRecommendations();\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res = await storyBoardRecommendationService.createStoryBoardRecommendation(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            salesRecommendationRef?.current?.[index]?.onSaveSuccess();\n            getSalesRecommendations();\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onRemoveSalesRecommendation = async (index: number) => {\n    const data: ISalesRecommendationData | undefined =\n      salesRecommendationRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichSalesRecommendation(data, loanId);\n\n      if (data.uid) {\n        try {\n          const res = await storyBoardRecommendationService.updateStoryBoardRecommendation(\n            payload,\n            SUB_STAGE.DDE\n          );\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            salesRecommendationRef?.current?.[index]?.onSaveSuccess();\n            getSalesRecommendations();\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const newSalesRecommendationList =\n          pageData.salesRecommendation.salesRecommendationList.filter(\n            (_, idx: number) => idx !== index\n          );\n\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            salesRecommendation: {\n              ...prevState.salesRecommendation,\n              salesRecommendationList: [...newSalesRecommendationList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const onLazyLoadSalesRecommendation = () => {\n    const functionsToCall: any = [];\n    functionsToCall.push(getSalesRecommendations);\n\n    functionsToCall.forEach((func: any) => func());\n  };\n\n  const onAddOtherDocuments = () => {\n    const newDocument = {\n      ...dummySavedDocStructureInList,\n      listKey: Math.random().toString(36).substring(2),\n    };\n\n    setPageData((prev) => ({\n      ...prev,\n      otherDocInfo: {\n        ...prev.otherDocInfo,\n        otherDocInfoList: [...prev.otherDocInfo.otherDocInfoList, newDocument],\n      },\n    }));\n  };\n\n  //delete document uploader from other documents template list\n  const deleteDocInOtherDocsList = (itemIndex?: number) => {\n    setPageData((prev) => {\n      const newKycDocList = pageData.otherDocInfo.otherDocInfoList.filter(\n        (_, index) => index !== itemIndex\n      );\n      return {\n        ...prev,\n        otherDocInfo: { ...prev.otherDocInfo, otherDocInfoList: [...newKycDocList] },\n      };\n    });\n  };\n\n  const onSaveOtherDocuments = async () => {\n    const payloadData = otherDocsRef.current?.save();\n    if (!payloadData) {\n      return;\n    }\n\n    try {\n      const res = await OtherDocumentService.saveDocument(STAGE.LOGIN, SUB_STAGE.DDE, payloadData);\n\n      if (validatePutAPIResponse(res)) {\n        setPageData((prev: IPageData) => {\n          return {\n            ...prev,\n            otherDocInfo: {\n              ...prev.otherDocInfo,\n              isOtherDocInfoLoading: true,\n              sectionMode: PAGE_MODE.VIEW,\n            },\n          };\n        });\n        getOtherDocuments();\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onCancelOtherDocuments = () => {\n    getOtherDocuments();\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        otherDocInfo: {\n          ...prev.otherDocInfo,\n          sectionMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onRemoveOtherDocsFromList = async (docInfo: IDocumentInfo, itemIndex: number) => {\n    if (docInfo.uid) {\n      const deletedOtherDoc = { ...docInfo };\n      deletedOtherDoc.isActive = false;\n\n      const payloadData = enrichOtherDocuments([deletedOtherDoc], {\n        loanUid: loanId,\n        applicantUid: applicantId,\n        loanSectionKey: LOAN_SECTION_KEY_TYPES.documents,\n      });\n\n      try {\n        const res = await OtherDocumentService.saveDocument(\n          STAGE.LOGIN,\n          SUB_STAGE.DDE,\n          payloadData\n        );\n\n        if (validatePutAPIResponse(res)) {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              otherDocInfo: {\n                ...prev.otherDocInfo,\n                isOtherDocInfoLoading: true,\n              },\n            };\n          });\n          getOtherDocuments();\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n\n    if (itemIndex !== undefined) {\n      deleteDocInOtherDocsList(itemIndex);\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderRichTextEditor = () => {\n    const { isStoryBoardLoading, storyBoardMode, storyBoardData, storyBoardValidation } =\n      pageData.storyBoard;\n\n    return isStoryBoardLoading ? (\n      <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n    ) : (\n      <SaveComponent\n        disabledMenu\n        className=\"\"\n        title={\"label.dde.documents.storyBoard*\"}\n        pageMode={storyBoardMode}\n        onCancel={onCancelStoryBoard}\n        onEdit={onEditStoryBoard}\n        onSave={onSaveStoryBoard}\n      >\n        <RichTextEditor\n          ref={editorRef}\n          disabled={storyBoardMode === PAGE_MODE.VIEW}\n          validation={storyBoardValidation}\n          initialValue={storyBoardData}\n          onChange={handleEditorValidation}\n        />\n      </SaveComponent>\n    );\n  };\n\n  const renderSalesRecommendation = () => {\n    const { isSalesRecommendationLoading, salesRecommendationList } = pageData.salesRecommendation;\n\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {salesRecommendationList?.map((recommendation: any, index: number) => (\n          <SalesRecommendation\n            key={recommendation?.uid}\n            isLoading={isSalesRecommendationLoading}\n            loanId={loanId}\n            data={recommendation}\n            cardNumber={index + 1}\n            ref={(refValue) => {\n              salesRecommendationRef.current[index] = refValue as ISalesRecommendationRef;\n            }}\n            onSaveRecommendationDetails={() => onSaveRecommendationDetails(index)}\n            onRemoveSalesRecommendation={() => onRemoveSalesRecommendation(index)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderOtherDocuments = () => {\n    return (\n      <React.Fragment>\n        <OtherDocuments\n          ref={otherDocsRef}\n          isLoading={pageData.otherDocInfo.isOtherDocInfoLoading}\n          otherDocumentsData={pageData.otherDocInfo.otherDocInfoList}\n          sectionMode={pageData.otherDocInfo.sectionMode}\n          payloadInfo={{\n            loanUid: loanId,\n            applicantUid: applicantId,\n            loanSectionKey: LOAN_SECTION_KEY_TYPES.documents,\n          }}\n          onRemoveDocFromList={onRemoveOtherDocsFromList}\n        />\n      </React.Fragment>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      <div className=\"flex flex-col gap-5\">\n        <Section\n          title=\"heading.dde.documents\"\n          alertText={\"Sales story board should be of min 200 characters\"}\n        >\n          {renderRichTextEditor()}\n        </Section>\n\n        <Section title=\"heading.dde.salesRecommendation\">\n          <LazyLoader onLazyLoad={() => onLazyLoadSalesRecommendation()}>\n            {renderSalesRecommendation()}\n\n            <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n              <ButtonBox\n                buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                customLabel={\"label.dde.add.another.sales.recommendation\"}\n                onClick={onAddMoreSalesRecommendation}\n              />\n            </div>\n          </LazyLoader>\n        </Section>\n\n        <Section title={\"label.heading.otherDocuments\"}>\n          {!applicantId ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <LazyLoader>\n              <React.Fragment>\n                <SaveComponent\n                  title={\"\"}\n                  pageMode={pageData.otherDocInfo.sectionMode}\n                  onSave={onSaveOtherDocuments}\n                  onCancel={onCancelOtherDocuments}\n                  onEdit={() =>\n                    setPageData((prev) => ({\n                      ...prev,\n                      otherDocInfo: { ...prev.otherDocInfo, sectionMode: PAGE_MODE.CREATE },\n                    }))\n                  }\n                >\n                  {renderOtherDocuments()}\n                </SaveComponent>\n\n                <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                    customLabel={\"Add Another Document\"}\n                    onClick={onAddOtherDocuments}\n                  />\n                </div>\n              </React.Fragment>\n            </LazyLoader>\n          )}\n        </Section>\n      </div>\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PageDocuments;\n"],"names":["DEFAULT_PATH","RECOMMENDED_BY_DEFAULT_PATH","StoryBoardRecommendationService","BaseApiService","__publicField","loanId","sectionType","endPoint","payload","subStage","start","limit","search","storyBoardRecommendationService","SalesRecommendation","forwardRef","props","ref","data","isLoading","cardNumber","disabled","disabledSaveMenu","onSaveRecommendationDetails","onRemoveSalesRecommendation","pageObj","setPageObj","useState","pageMode","setPageMode","PAGE_MODE","isSuggestionLoading","setIsSuggestionLoading","position","setPosition","toastMessage","setToastMessage","triggerToast","setTriggerToast","suggestionsTemplate","setSuggestionsTemplate","forceUpdate","simpleValidator","useRef","SimpleReactValidator","getStandardValidator","messageReplace","prev","menuModel","useEffect","useImperativeHandle","onSave","onSaveSuccess","onRemove","validate","e","_b","_a","validateForm","isValid","handleChange","handleFilterRecommendedByChange","event","name","value","prevPageObj","onCancel","onEdit","searchAutoCompleteRecommendedBy","res","STATIC_MASTER_TYPE_TOAST_TEXT","itemRecommendedByTemplate","item","jsxs","jsx","LoadingIcon","Text","renderContent","recommendationDate","recommendedBy","recommendationDescription","SystemDatePicker","INPUT_STYLE_TYPE","AutoComplete","InputTextArea","_c","SkeletonCustom","SaveComponent","PageDocuments","useParams","applicantId","setApplicantId","pageData","setPageData","initialSalesRecommendationData","dummySavedDocStructureInList","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","salesRecommendationRef","editorRef","otherDocsRef","init","getOtherDocuments","getStoryBoard","getApplicantId","ApplicantService","APPLICANT_TYPE","validateGetAPIResponse","_d","err","parseStandardAPIErrorMessage","STORY_BOARD","prevState","_f","_e","error","getSalesRecommendations","savedSalesRecommendations","recommendation","updateSalesRecommendations","OtherDocumentService","preparedListOfOtherDocuments","document","structSavedDocStrucutureForOtherDocuments","validateEditor","wordcount","handleEditorValidation","onCancelStoryBoard","onEditStoryBoard","onAddMoreSalesRecommendation","newSalesRecommendationListItem","onSaveStoryBoard","uid","isActive","enrichStoryBoard","SUB_STAGE","validatePutAPIResponse","validatePostAPIResponse","index","enrichSalesRecommendation","newSalesRecommendationList","_","idx","onLazyLoadSalesRecommendation","functionsToCall","func","onAddOtherDocuments","newDocument","deleteDocInOtherDocsList","itemIndex","newKycDocList","onSaveOtherDocuments","payloadData","STAGE","onCancelOtherDocuments","onRemoveOtherDocsFromList","docInfo","deletedOtherDoc","enrichOtherDocuments","LOAN_SECTION_KEY_TYPES","renderRichTextEditor","isStoryBoardLoading","storyBoardMode","storyBoardData","storyBoardValidation","RichTextEditor","renderSalesRecommendation","isSalesRecommendationLoading","salesRecommendationList","refValue","renderOtherDocuments","React","OtherDocuments","Section","LazyLoader","ButtonBox","BUTTON_TYPE","ToastCustom"],"mappings":"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"}