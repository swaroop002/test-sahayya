{"version":3,"file":"PageFees-b3868d0c.js","sources":["../../src/views/transaction/PageDDE/Login/PageFees/PageFees.tsx"],"sourcesContent":["import EditDisabledIcon from \"assets/img/buttonIcons/Disabled_Edit.svg\";\nimport EditIcon from \"assets/img/buttonIcons/Edit.svg\";\nimport AddNewReceiptDialog, {\n  IAddNewReceiptDialogRef,\n  ILoanDataForReceipt,\n  ILoginFeeReceiptData,\n  MODULE_FOR_ADD_NEW_RECEIPT,\n  initialNewReceiptData,\n} from \"components/AddNewReceiptDialog/AddNewReceiptDialog\";\nimport ButtonBox from \"components/ButtonBox\";\nimport { Column } from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport IconButton from \"components/IconButton/IconButton\";\nimport MenuBox from \"components/MenuBox/MenuBox\";\nimport ReadOnlyTable from \"components/ReadOnlyTable/ReadOnlyTable\";\nimport Section from \"components/Section/Section\";\nimport SharePaymentDetailsDialog from \"components/SharePaymentDetailsDialog/SharePaymentDetails\";\nimport SimpleButton from \"components/SimpleButton/SimpleButton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport WarningDialog from \"components/WarningDialog/WarningDialog\";\nimport { currencyFormatter, numberFormatter } from \"locale\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ApplicantService from \"services/ApplicantService\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport FeeService from \"services/transaction/FeeService\";\nimport { formatDate, parseStandardAPIErrorMessage, validateGetAPIResponse } from \"utils/CommonUtil\";\nimport {\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  FEE_MODE_LABEL,\n  FEE_RECEIPT_STATUS,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { ICamBalanceRowData } from \"views/transaction/PageCAM/Sections/Balance/Balance\";\nimport { getReceiptStatusLabel } from \"views/transaction/fees/Helper\";\nimport { IDropDownOption, enrichForNewReceipt, updateReceiptDetailsPageObj } from \"../Helper\";\ninterface IDialog {\n  newReceipt: boolean;\n  sharePaymentDetails: boolean;\n}\n\nexport type TLoginReceiptStatusType =\n  | \"PENDING_DEPOSIT\"\n  | \"DEPOSITED\"\n  | \"CLEARED\"\n  | \"BOUNCED\"\n  | \"INVALID/FAILED\"\n  | \"INVALID\";\nexport interface ILoginFeeReceiptRowData {\n  amount: number;\n  instrumentDate: string;\n  receiptRefNo: string;\n  remarks: string;\n  smInstrumentType: string;\n  status: TLoginReceiptStatusType;\n  uid: string;\n  updatedAtSystemDate: string;\n  txnRefNo?: string;\n  depositAccount?: {\n    uid?: string;\n    accountNumber?: string;\n    holderName?: string;\n    ifsc?: {\n      branch?: string;\n    };\n  };\n  loanDocuments?: any[];\n  loan: {\n    uid: string;\n    applicantName: string;\n    lanId: string;\n  };\n}\n\ninterface IMenuModal {\n  className: string;\n  label: string;\n  receiptUid?: string;\n  command?: () => void;\n  disabled?: boolean;\n}\n\ninterface IMenuRef {\n  toggle: (e: any) => any;\n}\n\ninterface IDeleteReceipt {\n  showPopUp: boolean;\n  uid: string;\n}\n\nconst initialDeleteReceiptValues = {\n  showPopUp: false,\n  uid: \"\",\n};\n\nexport interface ILoanObjForReceipt extends ILoanDataForReceipt {\n  uid: any;\n}\nconst DIALOG: Record<any, keyof IDialog> = {\n  RECEIPT: \"newReceipt\",\n  SHARE_PAYMENT_DETAILS: \"sharePaymentDetails\",\n};\n\nconst PageFees = () => {\n  const params: { loanUid?: string } = useParams();\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n  const [dialogVisible, setDialogVisible] = useState<IDialog>({\n    newReceipt: false,\n    sharePaymentDetails: false,\n  });\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loanInfo, setLoanInfo] = useState<ILoanDataForReceipt>({\n    applicantName: \"\",\n    lanId: \"\",\n    loanUid: \"\",\n  });\n\n  const feeDataTableRef = useRef<any>(null);\n  const receiptDataTableRef = useRef<any>(null);\n  const balanceDataTableRef = useRef<any>(null);\n  const [instrumentTypeOptions, setInstrumentTypeOptions] = useState<IDropDownOption[]>([]);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n\n  const [deleteReceipt, setDeleteReceipt] = useState<IDeleteReceipt>({\n    ...initialDeleteReceiptValues,\n  });\n  const [receiptMenuModel, setReceiptMenuModel] = useState<IMenuModal[]>([\n    {\n      className: \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n      label: \"Delete\",\n      receiptUid: \"\",\n      command: function () {\n        onDeleteReceipt(\"\");\n      },\n    },\n  ]);\n  const [pageObjForEditReceipt, setPageObjForEditReceipt] = useState<ILoginFeeReceiptData>({\n    ...initialNewReceiptData,\n  });\n\n  const toastMessageRef = useRef(null);\n  const addReceiptRef = useRef<IAddNewReceiptDialogRef>(null);\n  const receiptDeleteMenuRef = useRef<any>(null);\n\n  /*\n    -------------------------------------------------------\n      useEffect\n    -------------------------------------------------------\n  */\n  useEffect(() => {\n    feeDataTableRef?.current?.search();\n    receiptDataTableRef?.current?.search();\n    balanceDataTableRef?.current?.search();\n    getInstrumentType();\n    getApplicantId();\n  }, []);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(\n        0,\n        20,\n        APPLICANT_TYPE.PRIMARY,\n        params?.loanUid ?? \"\"\n      );\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setLoanInfo({\n          lanId: res.data?.results?.[0].loan.lanId,\n          applicantName: `${res.data?.results?.[0]?.firstName} ${res.data?.results?.[0]?.lastName}`,\n          loanUid: res.data?.results?.[0].loan?.uid,\n        });\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getInstrumentType = async () => {\n    try {\n      const res = await StaticMasterDataService.getDropdownList(\"FEE_MODE\");\n      const options: any = [];\n      res?.data?.results.forEach((instrumentType: any) => {\n        options.push({ name: instrumentType?.name ?? \"\", value: instrumentType?.code });\n      });\n      setInstrumentTypeOptions(options);\n    } catch (err) {\n      console.error(err);\n      // onError?.(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /* \n  -------------------------------------------------------\n    Handlers\n  -------------------------------------------------------\n  */\n\n  /* \n    -------------------------------------------------------\n    Validators\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSharePaymentDetails = () => {\n    // forceUpdate((prev) => !prev);\n    // SourcingDetailsRef?.current?.onCancel();\n    // forceUpdate((prev) => !prev);\n    // setSourceDetailMode(PAGE_MODE.VIEW);\n  };\n\n  const onHideReceiptDialog = () => {\n    if (dialogVisible.newReceipt) {\n      onToggleDialog(DIALOG.RECEIPT);\n    } else {\n      setPageObjForEditReceipt({ ...initialNewReceiptData });\n    }\n  };\n\n  // const onAddNewReceipt = () => {\n  //   onto\n  // };\n\n  const onToggleDialog = (dialogName: keyof IDialog) => {\n    setDialogVisible((prevObj) => ({\n      ...prevObj,\n      [dialogName]: !prevObj[dialogName],\n    }));\n  };\n\n  const onSaveNewReceipt = async (data: ILoginFeeReceiptData) => {\n    const payload = enrichForNewReceipt(data);\n    if (payload) {\n      try {\n        let service;\n        if (payload?.uid) {\n          service = FeeService.updateDdeReceipt;\n        } else {\n          service = FeeService.createDdeReceipt;\n        }\n        await service?.(payload);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        receiptDataTableRef?.current?.search();\n        addReceiptRef.current?.onCloseAndClearData();\n\n        setPageObjForEditReceipt({ ...initialNewReceiptData });\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onEditReceipt = (rawData: ILoginFeeReceiptRowData) => {\n    setPageObjForEditReceipt((prevData) => ({\n      ...prevData,\n      ...updateReceiptDetailsPageObj(rawData),\n    }));\n  };\n\n  const onToggleReceiptDeleteMenu = (e: any, uid: string) => {\n    receiptDeleteMenuRef?.current?.toggle?.(e);\n\n    setReceiptMenuModel((prevObj) => {\n      const updatedMenuModel = [...prevObj];\n      updatedMenuModel[0] = { ...updatedMenuModel[0], command: () => onDeleteReceipt(uid) };\n      return updatedMenuModel;\n    });\n  };\n\n  const onDeleteReceipt = (receiptUid: string) => {\n    if (receiptUid) {\n      setDeleteReceipt((prevObj: IDeleteReceipt) => ({\n        ...prevObj,\n        showPopUp: true,\n        uid: receiptUid,\n      }));\n    }\n  };\n\n  const onDeleteReceiptConfirm = async () => {\n    // call delete api\n    try {\n      await FeeService.deleteDdeReceipt(deleteReceipt.uid);\n      setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      receiptDataTableRef?.current?.search();\n      setDeleteReceipt((prevObj) => ({ ...prevObj, ...initialDeleteReceiptValues }));\n      // addReceiptRef.current?.onCloseAndClearData();\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n  /* \n -------------------------------------------------------\n   Helper Functions\n -------------------------------------------------------\n  */\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n\n  const renderFeesId = (rowData: any) => {\n    return <span>{rowData?.feeRefNo}</span>;\n  };\n  const renderChargeName = (rowData: any) => {\n    return <span>{rowData?.chargeName}</span>;\n  };\n  const renderAmount = (rowData: any) => {\n    return <span>{currencyFormatter(rowData?.amount)}</span>;\n  };\n  const renderStatus = (rowData: any) => {\n    return <span>{rowData?.status}</span>;\n  };\n\n  const renderReceiptId = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{rowData?.receiptRefNo ?? \"\"}</span>;\n  };\n  const renderInstrumentType = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{FEE_MODE_LABEL?.[rowData?.smInstrumentType] ?? \"\"}</span>;\n  };\n  const renderInstrumentDate = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{formatDate(rowData.instrumentDate)}</span>;\n  };\n  const renderChequeTxId = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{rowData.txnRefNo}</span>; //check\n  };\n  const renderReceiptAmount = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{currencyFormatter(rowData.amount)}</span>;\n  };\n  const renderRemarks = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{rowData.remarks}</span>;\n  };\n  const renderUpdatedDate = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{formatDate(rowData.updatedAtSystemDate)}</span>;\n  };\n  const renderReceiptStatus = (rowData: ILoginFeeReceiptRowData) => {\n    return <span>{getReceiptStatusLabel(rowData?.status)}</span>;\n  };\n  const renderReceiptActions = (rowData: ILoginFeeReceiptRowData) => {\n    return (\n      <div className=\"grid grid-cols-2\">\n        <div className=\"\">\n          <IconButton\n            icon={\n              rowData.status === FEE_RECEIPT_STATUS.PENDING_DEPOSIT ? EditIcon : EditDisabledIcon\n            }\n            onClick={() => onEditReceipt(rowData)}\n            tooltip=\"Edit\"\n            tooltipOptions={{\n              position: \"top\",\n              className: \"text-xs font-Roboto bg-black text-white !p-1 rounded-md \",\n              showDelay: \"1000,\",\n              hideDelay: \"300\",\n            }}\n            disabled={rowData.status !== FEE_RECEIPT_STATUS.PENDING_DEPOSIT}\n          />\n        </div>\n        <ButtonBox\n          buttonType={BUTTON_TYPE.MENU}\n          disabled={rowData.status !== FEE_RECEIPT_STATUS.PENDING_DEPOSIT}\n          onClick={(e) => onToggleReceiptDeleteMenu(e, rowData.uid)}\n        />\n      </div>\n    );\n  };\n\n  const renderTotalFeesReceivable = (rowData: ICamBalanceRowData) => {\n    return <span>{rowData?.totalFeeAmt}</span>;\n  };\n  const renderTotalAmountReceived = (rowData: ICamBalanceRowData) => {\n    return <span>{rowData?.totalReceiptAmt}</span>;\n  };\n  const renderBalance = (rowData: ICamBalanceRowData) => {\n    return <span>{numberFormatter(rowData?.balanceReceiptAmt, \"en-IN\", 0)}</span>;\n  };\n\n  const renderReceiptSectionHeader = () => {\n    return (\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <div className=\"mr-6\">\n            <Text\n              className=\"text-xl font-bold text-primary-ptext-1000\"\n              label={\"heading.dde.receipts\"}\n            />\n          </div>\n          <SimpleButton\n            label=\"label.dde.sharePaymentDetails\"\n            onClick={() => onToggleDialog(DIALOG.SHARE_PAYMENT_DETAILS)}\n            variant=\"tertiary\"\n          />\n        </div>\n        <div>\n          <div className=\"\">\n            <ButtonBox\n              buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n              customLabel={\"label.dde.addReceipt\"}\n              onClick={() => onToggleDialog(DIALOG.RECEIPT)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  return (\n    <div className=\"flex flex-col gap-5 h-screen\">\n      <Section title={`heading.dde.fees`}>\n        <ReadOnlyTable\n          standardDataFormatPromise={FeeService.getDdeFeeList}\n          search={`&loan.uid=${params.loanUid}&isActive=true`}\n          ref={feeDataTableRef}\n          dataKey=\"uid\"\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Fee Id\"}\n            body={renderFeesId}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Charge Name\"}\n            body={renderChargeName}\n            style={{ minWidth: \"300px\" }}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Amount (₹)\"}\n            body={renderAmount}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Status\"}\n            body={renderStatus}\n          />\n        </ReadOnlyTable>\n      </Section>\n      <Section renderHeader={renderReceiptSectionHeader}>\n        <ReadOnlyTable\n          standardDataFormatPromise={FeeService.getDdeReceiptList}\n          search={`${params.loanUid}`}\n          ref={receiptDataTableRef}\n          dataKey=\"uid\"\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Receipt ID\"}\n            body={renderReceiptId}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Instrument type\"}\n            body={renderInstrumentType}\n            style={{ minWidth: \"100px\" }}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Instrument Date\"}\n            body={renderInstrumentDate}\n            style={{ minWidth: \"100px\" }}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Cheque/ TX Id\"}\n            body={renderChequeTxId}\n            style={{ minWidth: \"100px\" }}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Amount (₹)\"}\n            body={renderReceiptAmount}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Remarks\"}\n            body={renderRemarks}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Updated Date\"}\n            body={renderUpdatedDate}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Status\"}\n            body={renderReceiptStatus}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Actions\"}\n            body={renderReceiptActions}\n          />\n        </ReadOnlyTable>\n      </Section>\n      <Section title={`heading.dde.balance`}>\n        <ReadOnlyTable\n          standardDataFormatPromise={FeeService.getBalance}\n          search={`&loan.uid=${params.loanUid}`}\n          ref={balanceDataTableRef}\n          dataKey=\"uid\"\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Total Fees Receivable\"}\n            body={renderTotalFeesReceivable}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Total Amount Received\"}\n            body={renderTotalAmountReceived}\n            style={{ minWidth: \"300px\" }}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Balance\"}\n            body={renderBalance}\n          />\n          {/* <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={\"Actions\"}\n            body={renderReceiptActions}\n          /> */}\n        </ReadOnlyTable>\n      </Section>\n      <MenuBox\n        ref={receiptDeleteMenuRef}\n        model={receiptMenuModel}\n        variant=\"SECONDARY\"\n        buttonClassName=\"!bg-transparent\"\n        className=\"width-full-menubox bg-white  w-max p-1.5 rounded-xl mt-0.5 border shadow-autoCompletePanel\"\n      />\n      <SharePaymentDetailsDialog\n        visible={dialogVisible.sharePaymentDetails}\n        onHide={() => onToggleDialog(DIALOG.SHARE_PAYMENT_DETAILS)}\n        instrumentTypeOptions={instrumentTypeOptions}\n      />\n      <AddNewReceiptDialog\n        visible={dialogVisible.newReceipt || pageObjForEditReceipt?.uid ? true : false}\n        onHide={onHideReceiptDialog}\n        module={MODULE_FOR_ADD_NEW_RECEIPT.DDE}\n        instrumentTypeOptions={instrumentTypeOptions}\n        data={{ loanInfo, updateReceiptDetails: pageObjForEditReceipt }}\n        onSubmit={onSaveNewReceipt}\n        ref={addReceiptRef}\n      />\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <WarningDialog\n        visible={deleteReceipt.showPopUp}\n        className=\"w-76 !px-14\"\n        title={\"heading.dde.fees.receiptDelete\"}\n        warningMessage={`description.dde.fees.receiptDelete`}\n        onCancel={() => setDeleteReceipt((prevObj) => ({ ...prevObj, showPopUp: false }))}\n        onConfirm={() => {\n          return onDeleteReceiptConfirm();\n        }}\n        onHide={() => {\n          //\n        }}\n      />\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default PageFees;\n"],"names":["initialDeleteReceiptValues","DIALOG","PageFees","params","useParams","dialogVisible","setDialogVisible","useState","showDialogAPIError","setShowDialogAPIError","errorMessage","setErrorMessage","loanInfo","setLoanInfo","feeDataTableRef","useRef","receiptDataTableRef","balanceDataTableRef","instrumentTypeOptions","setInstrumentTypeOptions","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","deleteReceipt","setDeleteReceipt","receiptMenuModel","setReceiptMenuModel","onDeleteReceipt","pageObjForEditReceipt","setPageObjForEditReceipt","initialNewReceiptData","toastMessageRef","addReceiptRef","receiptDeleteMenuRef","useEffect","_a","_b","_c","getInstrumentType","getApplicantId","res","ApplicantService","APPLICANT_TYPE","validateGetAPIResponse","_f","_e","_d","_i","_h","_g","_l","_k","_j","err","parseStandardAPIErrorMessage","StaticMasterDataService","options","instrumentType","onHideReceiptDialog","onToggleDialog","dialogName","prevObj","onSaveNewReceipt","data","payload","enrichForNewReceipt","service","FeeService","STATIC_MASTER_TYPE_TOAST_TEXT","onEditReceipt","rawData","prevData","updateReceiptDetailsPageObj","onToggleReceiptDeleteMenu","uid","updatedMenuModel","receiptUid","onDeleteReceiptConfirm","renderFeesId","rowData","jsx","renderChargeName","renderAmount","currencyFormatter","renderStatus","renderReceiptId","renderInstrumentType","FEE_MODE_LABEL","renderInstrumentDate","formatDate","renderChequeTxId","renderReceiptAmount","renderRemarks","renderUpdatedDate","renderReceiptStatus","getReceiptStatusLabel","renderReceiptActions","jsxs","IconButton","FEE_RECEIPT_STATUS","EditIcon","EditDisabledIcon","ButtonBox","BUTTON_TYPE","e","renderTotalFeesReceivable","renderTotalAmountReceived","renderBalance","numberFormatter","renderReceiptSectionHeader","Text","SimpleButton","Section","ReadOnlyTable","Column","MenuBox","SharePaymentDetailsDialog","AddNewReceiptDialog","MODULE_FOR_ADD_NEW_RECEIPT","ToastCustom","WarningDialog","ErrorDialog"],"mappings":"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"}