{"version":3,"file":"PageGuarantors-be0facb2.js","sources":["../../src/views/transaction/PageDDE/Login/PageGuarantors/PageGuarantors.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ShortUniqueId from \"short-unique-id\";\n\n// --------- ---------- //\nimport ButtonBox from \"components/ButtonBox\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport LazyLoader from \"components/LazyLoader\";\nimport Loader from \"components/Loader\";\nimport SimpleTab from \"components/SimpleTab\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport WarningDialog from \"components/WarningDialog\";\n\n// ------------- ------------- //\n\nimport DocumentUploader, { IDocumentUploaderRef } from \"components/DocumentUploader\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\n\n// --------- ---------- //\nimport Address, { IAddressRef } from \"components/Address\";\nimport BasicInformation, { IBasicInformationRef } from \"components/BasicInformation\";\nimport KYCV3, {\n  IAadharOTP,\n  IAadharVerification,\n  IKycDocumentCardListInfo,\n  IPopulateOcr,\n} from \"components/KYCV3\";\nimport BankAccountDetails, {\n  IBankAccountDetails,\n  IBankAccountDetailsRef,\n} from \"../PageApplicant/BankAccountDetails\";\n\n// --------- ---------- //\nimport { ISectionDropdownOption } from \"interface/common\";\nimport { ToastPositionType } from \"primereact/toast\";\n\n// --------- ---------- //\nimport ApplicantService from \"services/ApplicantService\";\nimport KYCService from \"services/KYCService\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport BankAccountDetailsService from \"services/transaction/DDE/BankAccountDetailsService\";\nimport BasicInformationService from \"services/transaction/QDE/BasicInformation\";\nimport ResidentialService from \"services/transaction/QDE/Residential\";\n\n// --------- ---------- //\nimport {\n  checkDataHasValue,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\n\n// --------- ---------- //\nimport {\n  APPLICANT_TYPE,\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  DOCUMENT_SECTION,\n  DOCUMENT_TYPE,\n  OCR_STAGE_NAMES,\n  PAGE_MODE,\n  SECTION_NAME,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\n// --------- ---------- //\nimport { IKycDocuments } from \"views/transaction/PageQDE\";\n\n// --------- ---------- //\nimport {\n  enrichAadharValidation,\n  enrichAddressData,\n  enrichBankAccountDetailsObj,\n  enrichBasicInfoData,\n  enrichPopulateDocWithOcr,\n  enrichSaveKycDocument,\n  enrichUpdateKycDocument,\n  extractBasicObj,\n  initialBankAccountDetailsData,\n  initialKycTemplateListData,\n  updateAddressData,\n  updateBankAccountInfoObj,\n  updateBasicInfoObj,\n} from \"../Helper\";\nimport { PLACE_OF_UPLOAD_KYC } from \"components/MediaGallery/MediaGallery\";\n\n// --------------------------------- page interface ---------------------------------------------- //\ninterface IPageData {\n  basicInformation: { isBasicInfoLoading: boolean; basicInfo: any; basicInfoPageMode: string };\n  addressInfo: {\n    isAddressLoading: boolean;\n    address: any;\n    addressInfoPageMode: string;\n  };\n  kycDocuments: {\n    isKycLoading: boolean;\n    kycDocList: IKycDocumentCardListInfo[];\n    uniqueKycCardTracker: string[];\n    populateOcr: IPopulateOcr;\n    aadharVerificationStatus: IAadharVerification;\n    savedDocuments: string[]; // saved documents name to check for PAN or Form60 mandatory validation\n  };\n  bankAccount: { isBankAccountInfoLoading: boolean; bankAccountInfoList: IBankAccountDetails[] };\n}\n\nconst initialPageData: IPageData = {\n  basicInformation: {\n    isBasicInfoLoading: false,\n    basicInfo: {},\n    basicInfoPageMode: PAGE_MODE.VIEW,\n  },\n  addressInfo: {\n    isAddressLoading: false,\n    address: {},\n    addressInfoPageMode: PAGE_MODE.VIEW,\n  },\n  kycDocuments: {\n    isKycLoading: false,\n    kycDocList: [initialKycTemplateListData],\n    uniqueKycCardTracker: [],\n    populateOcr: { uid: \"\", success: false, failed: false },\n    aadharVerificationStatus: {\n      verified: false,\n      failedToVerify: false,\n    },\n    savedDocuments: [],\n  },\n  bankAccount: {\n    isBankAccountInfoLoading: false,\n    bankAccountInfoList: [initialBankAccountDetailsData],\n  },\n};\n\n// ----------------------------------------- Functional component ------------------------------------- //\n\nconst PageGuarantors = () => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n  const uniqueKey = new ShortUniqueId({ length: 5 });\n\n  // ---------------------------------------- state ---------------------------------------------- //\n  // main page functionality states\n\n  const [isPageGuarantorLoading, setIsPageGuarantorLoading] = useState<boolean>(true);\n  const [currentTabDetails, setCurrentTabDetails] = useState<any>({\n    guarantor: { name: \"New Tab\", key: \"\" },\n    index: null,\n  });\n  const [applicantId, setApplicantId] = useState<string>(\"\");\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n  const [selectedTabIndex, setSelectedTabIndex] = useState<number>(0);\n  const [isSameActiveIndex, setIsSameActiveIndex] = useState<boolean>(false);\n  const [guarantors, setGuarantors] = useState<any>([{ firstName: \"New Tab\", key: uniqueKey() }]);\n  const [navigateBack, setNavigateBack] = useState(false); //NOSONAR\n  const [tabAddedFlag, setTabAddedFlag] = useState<boolean>(false);\n  const [prepopulatedData, setPrepopulatedData] = useState<any>({});\n  const [prePopulateBasicInfo, setPrePopulateBasicInfo] = useState<boolean>(false);\n  const [prePopulateAddress, setPrePopulateAddress] = useState<boolean>(false);\n\n  const [dropdownOptions, setDropdownOptions] = useState<ISectionDropdownOption>({\n    EMPLOYMENT_NATURE_OPTION: [],\n    INDUSTRY_OPTION: [],\n    OCCUPATION_OPTION: [],\n    BUSINESS_MANAGED_BY_OPTION: [],\n    SEASONALITY_OPTION: [],\n    NO_EMPLOYEE_OPTION: [],\n  });\n\n  // states for the rendering contents  ( use this instead of creating different states for each )\n  const [pageData, setPageData] = useState<IPageData>({ ...initialPageData });\n\n  const [initiateAPICallForSection, setInitiateAPICallForSection] = useState<any>({\n    basicInfoAPICall: false,\n  });\n\n  const [kycCardCount, setKycCardCount] = useState(1);\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isRemoveTabWarningVisible, setIsRemoveTabWarningVisible] = useState<boolean>(false);\n  const [isSwitchTabWarningVisible, setIsSwitchTabWarningVisible] = useState<boolean>(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------------------------- ref ------------------------------------------------ //\n  const tabRef = useRef<any>(null);\n  const toastMessageRef = useRef(null);\n\n  const basicInfoRef = useRef<IBasicInformationRef | null>(null);\n  const addressRef = useRef<IAddressRef | null>(null);\n  const bankAccountRef = useRef<IBankAccountDetailsRef[]>([]);\n  const addressDocUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = (guarantor: any, index: number) => [\n    {\n      className: \"\",\n      label: \"Remove Guarantor\",\n      command: () => {\n        setCurrentTabDetails({ guarantor: guarantor, index: index });\n        setIsRemoveTabWarningVisible(true);\n      },\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    // initial empty dependency useEffect\n    // Do not add any dependency for this\n\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (guarantors[activeIndex]?.uid) {\n      resetPageDataWithUID();\n      getBasicInfo();\n    }\n  }, [activeIndex, isSameActiveIndex]);\n\n  useEffect(() => {\n    if (pageData?.basicInformation?.basicInfo?.uid && guarantors[activeIndex]?.uid) {\n      getResidentialAddress();\n    }\n  }, [pageData?.basicInformation?.basicInfo]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (guarantors[activeIndex]?.uid && !isPageGuarantorLoading) {\n      getBasicInfo();\n    }\n  }, [isPageGuarantorLoading, initiateAPICallForSection.basicInfoAPICall]);\n\n  useEffect(() => {\n    handleTabChange({ index: guarantors.length - 1 });\n  }, [tabAddedFlag]);\n\n  useEffect(() => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          address: {\n            ...prevState.addressInfo.address,\n            address: prepopulatedData?.address,\n            pincode: {\n              pinCode: prepopulatedData?.pincode?.pinCode,\n              uid: prepopulatedData?.pincode?.uid,\n            },\n          },\n        },\n      };\n    });\n  }, [prePopulateAddress]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const getGuarantorList = async (initiateAPICallFor?: string, callbackFunction?: any) => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.GUARANTOR, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        const results: any[] = res.data?.results?.map((item: any, index: number) => {\n          if (!item?.firstName && !item.lastName) {\n            return { ...item, firstName: `Guara... ${index + 1}` };\n          }\n\n          return { ...item };\n        });\n        setGuarantors(results);\n        setIsPageGuarantorLoading(false);\n\n        if (initiateAPICallFor === \"BASIC_INFO\") {\n          setInitiateAPICallForSection((prevState: any) => {\n            return { ...prevState, basicInfoAPICall: !prevState.basicInfoAPICall };\n          });\n        }\n\n        if (callbackFunction) {\n          callbackFunction(results);\n        }\n      } else {\n        setIsPageGuarantorLoading(false);\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.PRIMARY, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setApplicantId(res.data?.results?.[0]?.uid);\n        return res.data?.results?.[0]?.uid ?? \"\";\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getBasicInfo = async (isIgnoreLoader?: boolean) => {\n    const activeGuarantorObj = guarantors[activeIndex];\n\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        basicInformation: {\n          ...prev.basicInformation,\n          isBasicInfoLoading: true,\n        },\n      }));\n    }\n\n    try {\n      const res = await BasicInformationService.getDde(activeGuarantorObj?.uid);\n      if (validateGetAPIResponse(res)) {\n        setPageData((prev) => ({\n          ...prev,\n          basicInformation: {\n            ...prev.basicInformation,\n            basicInfo: updateBasicInfoObj(res?.data),\n            isBasicInfoLoading: false,\n            basicInfoPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      } else {\n        setPageData((prev) => ({\n          ...prev,\n          basicInformation: {\n            ...prev.basicInformation,\n            isBasicInfoLoading: false,\n            basicInfoPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getAllSavedKycDocuments = async (guarantorId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          isKycLoading: true,\n        },\n      }));\n    }\n\n    try {\n      const res = await KYCService.getKycDocument(loanId, guarantorId);\n      if (validateGetAPIResponse(res)) {\n        const { data: savedItems } = res;\n        const kycDocuments: IKycDocumentCardListInfo[] = [];\n        const savedDocsName: string[] = [];\n\n        //get the section information for each saved doc\n        const getAllSectionsInfo = (sections: any[]) => {\n          const sectionsInfo = sections.map((section) => {\n            return {\n              sectionUid: section.uid ?? \"\",\n              fileName: section.fileName ?? \"\",\n              fileType: section.fileType ?? \"\",\n              sectionType: section.smDocSectionType ?? \"\",\n              url: section.url,\n            };\n          });\n          return sectionsInfo;\n        };\n\n        //iterating through each saved record to prepare template list object\n        for (const savedItem in savedItems) {\n          //below properties are common in all sections of the document that's why accessing the first item in the array and taking out necessary field data\n          kycDocuments.push({\n            listId: savedItem,\n            uid: savedItem,\n            docName: savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\",\n            docNo: savedItems[savedItem]?.[0].kyc?.docNo ?? \"\",\n            maskedDocNo: savedItems[savedItem]?.[0].kyc?.maskedDocNo ?? \"\",\n            dob: savedItems[savedItem]?.[0].kyc?.dob ?? \"\",\n            docSections: getAllSectionsInfo(savedItems[savedItem]),\n            isVerified: savedItems[savedItem]?.[0].kyc?.isVerified ?? false,\n          });\n\n          savedDocsName.push(savedItems[savedItem]?.[0].kyc?.docType?.code ?? \"\");\n        }\n\n        if (kycDocuments.length) {\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...kycDocuments],\n                uniqueKycCardTracker: [...savedDocsName],\n                isKycLoading: false,\n              },\n            };\n          });\n        } else {\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                isKycLoading: false,\n              },\n            };\n          });\n        }\n      }\n    } catch (err) {\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            isKycLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getResidentialAddress = async (isIgnoreLoader?: boolean) => {\n    const activeGuarantorObj = guarantors[activeIndex];\n\n    if (!isIgnoreLoader) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        addressInfo: {\n          ...prev.addressInfo,\n          isAddressLoading: true,\n        },\n      }));\n    }\n\n    if (loanId && activeGuarantorObj?.uid) {\n      try {\n        const res = await ResidentialService.getAddressForDde(loanId, activeGuarantorObj?.uid);\n        if (validateGetAPIResponse(res) && Object.keys(res.data).length > 0) {\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            addressInfo: {\n              ...prev.addressInfo,\n              isAddressLoading: false,\n              address: updateAddressData(res.data),\n            },\n          }));\n        } else {\n          setPageData((prev) => ({\n            ...prev,\n            addressInfo: {\n              ...prev.addressInfo,\n              isAddressLoading: false,\n            },\n          }));\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const getBankAccountOptions = async () => {\n    const start = 0;\n    const limit = 200;\n    await StaticMasterDataService.getAll(\n      start,\n      limit,\n      `staticMasterType.code=ACCOUNT_TYPE&`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            ACCOUNT_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBankAccountInfo = async (guarantorId: string, isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          bankAccount: {\n            ...prevState.bankAccount,\n            isBankAccountInfoLoading: true,\n          },\n        };\n      });\n    }\n\n    if (loanId && guarantorId) {\n      try {\n        const res = await BankAccountDetailsService.getBankAccountDetails(loanId, guarantorId);\n        if (validateGetAPIResponse(res)) {\n          if (res?.data?.length > 0) {\n            const savedBankAccountInfo = res?.data?.map((bankAccountInfo: any) => {\n              return updateBankAccountInfoObj(bankAccountInfo);\n            });\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                bankAccount: {\n                  bankAccountInfoList: [...savedBankAccountInfo],\n                  isBankAccountInfoLoading: false,\n                },\n              };\n            });\n          } else {\n            setPageData((prevState: IPageData) => {\n              return {\n                ...prevState,\n                bankAccount: {\n                  ...prevState.bankAccount,\n                  isBankAccountInfoLoading: false,\n                  bankAccountInfoList: [{ ...initialBankAccountDetailsData }],\n                },\n              };\n            });\n          }\n        }\n      } catch (error) {\n        console.log(error);\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            bankAccount: {\n              ...prevState.bankAccount,\n              isBankAccountInfoLoading: false,\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const getSectionsByDocumentUid = async (uid: string, guarantorId: string) => {\n    const savedDocuments = await getSavedKycDocuments(guarantorId);\n    const sections = savedDocuments[uid];\n    return sections;\n  };\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const handleTabChange = (e: any) => {\n    let basicInfo: any = basicInfoRef?.current?.getData();\n    basicInfo = extractBasicObj(basicInfo);\n\n    if (\n      e.index !== activeIndex &&\n      !guarantors?.[activeIndex]?.uid &&\n      checkDataHasValue(basicInfo)\n    ) {\n      setIsSwitchTabWarningVisible(true);\n      setSelectedTabIndex(e.index);\n    } else if (e.index !== activeIndex) {\n      resetPageData();\n      setActiveIndex(e.index);\n    }\n  };\n\n  const handleNavigateTab = () => {\n    resetPageData();\n    setActiveIndex(selectedTabIndex);\n    setIsSwitchTabWarningVisible(false);\n  };\n\n  const handleAadharVerificationStatus = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        kycDocuments: {\n          ...prevState.kycDocuments,\n          aadharVerificationStatus: {\n            verified: false,\n            failedToVerify: false,\n          },\n        },\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSaveKycDocument = async (\n    documentInfo: IKycDocuments,\n    guarantorId: string,\n    itemIndex: number\n  ) => {\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n\n    //update request\n    if (documentInfo?.uid) {\n      const sections = await getSectionsByDocumentUid(documentInfo?.uid, guarantorId);\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        guarantorId,\n        documentInfo,\n        sections,\n        APPLICANT_TYPE.GUARANTOR\n      );\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          const updatedList = kycDocList.map((item) => {\n            if (item.uid === data.uid) {\n              return {\n                ...item,\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo,\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                docSections: prepareMaskedDocSections(data.kycDocuments),\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...updatedList],\n              },\n            };\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n\n          getGuarantorList(\"BASIC_INFO\", (itemList: any) => {\n            if (itemList.length - 1 < activeIndex) {\n              setActiveIndex(itemList?.length - 1);\n            }\n          });\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n\n    // create request\n    else {\n      const payload = enrichSaveKycDocument(\n        loanId,\n        guarantorId,\n        documentInfo,\n        APPLICANT_TYPE.GUARANTOR\n      );\n      try {\n        const res = await KYCService.saveKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePostAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileName: section.fileName ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return sections;\n          };\n\n          const updatedList = kycDocList.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid ?? \"\",\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                docSections: prepareMaskedDocSections(data.kycDocuments),\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n\n          setPageData((prev) => {\n            return {\n              ...prev,\n              kycDocuments: {\n                ...prev.kycDocuments,\n                kycDocList: [...updatedList],\n                savedDocuments: [...prev.kycDocuments.savedDocuments, data.docType?.code],\n                uniqueKycCardTracker: prepareNewKycCardTracker(),\n              },\n            };\n          });\n\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n\n          getGuarantorList(\"BASIC_INFO\", (itemList: any) => {\n            if (itemList.length - 1 < activeIndex) {\n              setActiveIndex(itemList?.length - 1);\n            }\n          });\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveKycDocument = async (\n    documentInfo: IKycDocuments,\n    guarantorId: string,\n    itemIndex?: number\n  ) => {\n    if (documentInfo.uid) {\n      const payload = enrichUpdateKycDocument(\n        loanId,\n        guarantorId,\n        documentInfo,\n        await getSectionsByDocumentUid(documentInfo?.uid, guarantorId),\n        APPLICANT_TYPE.GUARANTOR\n      );\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.DDE);\n        if (validatePutAPIResponse(res)) {\n          if (itemIndex !== undefined) {\n            deleteKycDocInList(itemIndex);\n          }\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onPopulateWithOcr = async (\n    documentInfo: IKycDocuments,\n    guarantorId: string,\n    itemIndex: number\n  ) => {\n    const {\n      kycDocuments: { kycDocList, populateOcr },\n    } = pageData;\n    const payload = enrichPopulateDocWithOcr(\n      loanId,\n      guarantorId,\n      populateOcr.uid,\n      documentInfo,\n      APPLICANT_TYPE.GUARANTOR\n    );\n    try {\n      const res = await KYCService.populateKycDocument(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        const updatedList = kycDocList.map((item, idx) => {\n          if (idx === itemIndex) {\n            return {\n              ...item,\n              uid: data.uid,\n              docName: data.docType?.code ?? \"\",\n              docNo: data.docNo ?? \"\",\n              dob: data.dob ?? \"\",\n            };\n          }\n          return item; // Return the unchanged item if it has a UID\n        });\n\n        getGuarantorList(\"BASIC_INFO\", (itemList: any) => {\n          if (itemList.length - 1 < activeIndex) {\n            setActiveIndex(itemList?.length - 1);\n          }\n        });\n\n        setPageData((prev) => {\n          return {\n            ...prev,\n            kycDocuments: {\n              ...prev.kycDocuments,\n              kycDocList: [...updatedList],\n              uniqueKycCardTracker: prepareNewKycCardTracker(),\n              populateOcr: {\n                ...prev.kycDocuments.populateOcr,\n                uid: data.uid ?? \"\",\n                success: true,\n                failed: false,\n              },\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            populateOcr: {\n              ...prev.kycDocuments.populateOcr,\n              success: false,\n              failed: true,\n            },\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onVerifyAadhar = async (\n    documentInfo: IKycDocuments,\n    aadharOtpInfo: IAadharOTP,\n    guarantorId: string,\n    itemIndex: number,\n    uid: string\n  ) => {\n    const payload = enrichAadharValidation(\n      loanId,\n      guarantorId,\n      documentInfo,\n      aadharOtpInfo,\n      APPLICANT_TYPE.GUARANTOR,\n      uid\n    );\n\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n\n    try {\n      const res = await KYCService.validateAadhar(payload, SUB_STAGE.DDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n        const updatedList = kycDocList.map((item, idx) => {\n          if (idx === itemIndex) {\n            return {\n              ...item,\n              uid: data.uid,\n              docName: data.docType?.code,\n              docNo: data.docNo ?? \"\",\n              maskedDocNo: data.maskedDocNo ?? \"\",\n              dob: data.dob ?? \"\",\n            };\n          }\n          return item;\n        });\n\n        getGuarantorList(\"BASIC_INFO\", (itemList: any) => {\n          if (itemList.length - 1 < activeIndex) {\n            setActiveIndex(itemList?.length - 1);\n          }\n        });\n\n        setPageData((prev) => {\n          return {\n            ...prev,\n            kycDocuments: {\n              ...prev.kycDocuments,\n              kycDocList: [...updatedList],\n              uniqueKycCardTracker: prepareNewKycCardTracker(),\n              aadharVerificationStatus: {\n                ...prev.kycDocuments.aadharVerificationStatus,\n                verified: true,\n              },\n            },\n          };\n        });\n      }\n    } catch (err) {\n      setPageData((prev) => {\n        return {\n          ...prev,\n          kycDocuments: {\n            ...prev.kycDocuments,\n            aadharVerificationStatus: {\n              ...prev.kycDocuments.aadharVerificationStatus,\n              failedToVerify: true,\n            },\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onSaveBankAccountInfo = async (index: number, guarantorId: string) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        guarantorId,\n        APPLICANT_TYPE.GUARANTOR\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            bankAccountRef?.current?.[index]?.onSaveSuccess();\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        try {\n          const res = await BankAccountDetailsService.createBankAccountDetail(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n\n            if (res.constructor.name === \"Object\") {\n              setPageData((prevState: IPageData) => {\n                const updatedList = pageData.bankAccount.bankAccountInfoList.map(\n                  (bankInfo: any) => {\n                    if (!bankInfo.uid) {\n                      return {\n                        ...data,\n                        uid: res?.data?.uid,\n                        id: res?.data?.id,\n                      };\n                    }\n                    return bankInfo; // Return the unchanged item if it has a UID\n                  }\n                );\n\n                return {\n                  ...prevState,\n                  bankAccount: {\n                    ...prevState.bankAccount,\n                    bankAccountInfoList: updatedList,\n                  },\n                };\n              });\n            }\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onAddMoreTabs = () => {\n    setGuarantors((prevState: any[]) => [\n      ...prevState,\n      {\n        firstName: \"New Tab\",\n        key: uniqueKey(),\n      },\n    ]);\n\n    setTabAddedFlag((prevState: boolean) => !prevState);\n  };\n\n  const onDeleteTab = async (guarantor: any, index: any) => {\n    if (!guarantor?.uid) {\n      if (guarantors.length === 1) {\n        updateEmptyGuarantors();\n        setIsRemoveTabWarningVisible(false);\n        resetPageData();\n        return;\n      }\n\n      removeDeletedGuarantor(index);\n      setIsRemoveTabWarningVisible(false);\n    } else {\n      try {\n        const res = await ApplicantService.deleteApplicantInfo(guarantor?.uid);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          if (guarantors.length === 1) {\n            updateEmptyGuarantors();\n            setIsRemoveTabWarningVisible(false);\n            resetPageData();\n            return;\n          }\n\n          removeDeletedGuarantor(index);\n          setIsRemoveTabWarningVisible(false);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveBasicInformations = () => {\n    const data = basicInfoRef?.current?.save();\n    if (!data) {\n      return Promise.resolve(true);\n    }\n\n    if (data) {\n      const payload = enrichBasicInfoData(data, loanId, applicantId, APPLICANT_TYPE.GUARANTOR);\n      if (data.uid) {\n        BasicInformationService.updateDde(payload)\n          .then((res: any) => {\n            if (validatePutAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setNavigateBack(true);\n\n              getGuarantorList(\"BASIC_INFO\");\n            }\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      } else {\n        BasicInformationService.createBasicInformation(payload)\n          .then((res) => {\n            if (validatePostAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setNavigateBack(true);\n              onEditAddressInfo();\n\n              getGuarantorList(\"BASIC_INFO\");\n            }\n          })\n          .catch((err: any) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      }\n    }\n  };\n\n  const onUpdateAddress = async (data: any) => {\n    return ResidentialService.saveForDde(data)\n      .then((res) => {\n        if (validatePutAPIResponse(res)) {\n          getResidentialAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n          setPageData((previous) => ({\n            ...previous,\n            addressInfo: { ...previous.addressInfo, addressInfoPageMode: PAGE_MODE.VIEW },\n          }));\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onPostAddress = async (payload: any) => {\n    return ResidentialService.save(payload)\n      .then((res) => {\n        if (validatePostAPIResponse(res)) {\n          getResidentialAddress();\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n          setPageData((previous) => ({\n            ...previous,\n            addressInfo: { ...previous.addressInfo, addressInfoPageMode: PAGE_MODE.VIEW },\n          }));\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onSaveAddress = async (guarantorId: string) => {\n    const data = addressRef?.current?.save();\n    const uploadedDocsInfo = addressDocUploaderRef?.current?.getUploadedData();\n\n    if (!data || !uploadedDocsInfo?.documentUid) {\n      return Promise.resolve(true);\n    }\n\n    if (data && uploadedDocsInfo) {\n      const payload = enrichAddressData(\n        {\n          ...data,\n          uid: pageData.addressInfo?.address?.uid,\n          addressDocumentsInfo: uploadedDocsInfo ?? {},\n        },\n        loanId,\n        guarantorId,\n        APPLICANT_TYPE.GUARANTOR\n      );\n      if (pageData.addressInfo?.address?.uid) {\n        onUpdateAddress(payload);\n      } else {\n        onPostAddress(payload);\n      }\n    }\n  };\n\n  const onEditBasicInfo = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: {\n          ...prevState.basicInformation,\n          basicInfoPageMode: PAGE_MODE.CREATE,\n        },\n      };\n    });\n  };\n\n  const onCancelBasicInfo = () => {\n    basicInfoRef?.current?.cancel();\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: {\n          ...prevState.basicInformation,\n          basicInfoPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onEditAddressInfo = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          addressInfoPageMode: PAGE_MODE.CREATE,\n        },\n      };\n    });\n  };\n\n  const onLazyLoadKyc = (guarantorId: string) => {\n    if (guarantorId) {\n      getAllSavedKycDocuments(guarantorId);\n    }\n  };\n  const onCancelAddressInfo = () => {\n    addressRef?.current?.resetValidator();\n    addressDocUploaderRef?.current?.resetValidator();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        addressInfo: {\n          ...prevState.addressInfo,\n          addressInfoPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onLazyLoadBankAccountInfo = (guarantorId: string) => {\n    const functionsToCall = [];\n    functionsToCall.push(initialBankAccountInfoDropdownOptionsAPICall);\n    if (guarantorId) {\n      functionsToCall.push(() => getBankAccountInfo(guarantorId));\n    }\n\n    functionsToCall.forEach((func) => func());\n  };\n\n  const onAddMoreBankDetails = () => {\n    const newBankAccountListItem = { ...initialBankAccountDetailsData };\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        bankAccount: {\n          ...prevState.bankAccount,\n          bankAccountInfoList: [\n            ...prevState.bankAccount.bankAccountInfoList,\n            newBankAccountListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onRemoveBankAccountDetails = async (index: number, guarantorId: string) => {\n    const data: IBankAccountDetails | undefined = bankAccountRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichBankAccountDetailsObj(\n        data,\n        loanId,\n        guarantorId,\n        APPLICANT_TYPE.GUARANTOR\n      );\n\n      if (data.uid) {\n        try {\n          const res = await BankAccountDetailsService.updateBankAccountDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            getBankAccountInfo(guarantorId);\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n            setTriggerToast(!triggerToast);\n          }\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const newBankAccountDetailsList = pageData.bankAccount.bankAccountInfoList.filter(\n          (_, idx: number) => idx !== index\n        );\n\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            bankAccount: {\n              ...prevState.bankAccount,\n              employmentInfoList: [...newBankAccountDetailsList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const onPrePopulate = async (guarantorId: string, section?: string) => {\n    return KYCService.getPopulateDocumentByKyc(loanId, guarantorId)\n      .then((res: any) => {\n        if (validateGetAPIResponse(res)) {\n          const [firstName, middleName, lastName] = res?.data?.name.split(\" \") ?? \"\";\n          res.data = {\n            ...res.data,\n            firstName: firstName,\n            middleName: middleName,\n            lastName: lastName,\n          };\n          setPrepopulatedData(res.data);\n\n          if (section === SECTION_NAME.ADDRESS) {\n            setPrePopulateAddress((prevState: boolean) => !prevState);\n          }\n\n          if (section === SECTION_NAME.BASIC_INFO) {\n            setPrePopulateBasicInfo((prevState: boolean) => !prevState);\n          }\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getApplicantId();\n    getGuarantorList();\n  };\n\n  const initialBankAccountInfoDropdownOptionsAPICall = () => {\n    getBankAccountOptions();\n  };\n\n  const getSavedKycDocuments = async (guarantorId: string) => {\n    try {\n      const res = await KYCService.getKycDocument(loanId, guarantorId);\n      if (validateGetAPIResponse(res)) {\n        const { data } = res;\n        return data;\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const prepareNewKycCardTracker = () => {\n    const {\n      kycDocuments: { uniqueKycCardTracker },\n    } = pageData;\n    const docNameArr = [...uniqueKycCardTracker];\n    //remove the last doc name in the array to avoid docName duplication\n    docNameArr.splice(docNameArr.length - 1, 1);\n    return [...docNameArr];\n  };\n\n  //add a kyc document in list\n  const onAddDocument = () => {\n    const newDocumentList = {\n      listId: `kyc-card-${kycCardCount + 1}`,\n      uid: \"\",\n      docName: \"\",\n      docNo: \"\",\n      maskedDocNo: \"\",\n      dob: \"\",\n      docSections: [],\n      isVerified: false,\n    };\n    setKycCardCount((prevCount) => prevCount + 1);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          kycDocList: [...prev.kycDocuments.kycDocList, newDocumentList],\n          populateOcr: {\n            uid: \"\",\n            success: false,\n            failed: false,\n          },\n        },\n      };\n    });\n  };\n\n  //update the unique kyc card name tracker list\n  const updateUniqueTrackerList = (list: string[]) => {\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          uniqueKycCardTracker: [...list],\n        },\n      };\n    });\n  };\n\n  //delete kyc doc card in list\n  const deleteKycDocInList = (itemIndex?: number) => {\n    const {\n      kycDocuments: { kycDocList },\n    } = pageData;\n    const newKycDocList = kycDocList.filter((_, index) => index !== itemIndex);\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        kycDocuments: {\n          ...prev.kycDocuments,\n          kycDocList: [...newKycDocList],\n        },\n      };\n    });\n  };\n\n  const removeDeletedGuarantor = (index: number) => {\n    const updatedGuarantors = [...guarantors];\n    if (index >= 0 && index < guarantors.length) {\n      // Check if the findIndexOfGuarantor is valid\n\n      updatedGuarantors.splice(index, 1); // Remove 1 element at the specified index\n      setGuarantors(updatedGuarantors);\n\n      if (index + 1 === guarantors.length - 1 && activeIndex === index + 1) {\n        //\n      } else if (\n        (index === guarantors.length - 1 && activeIndex === index) ||\n        (index !== guarantors.length - 1 && activeIndex === guarantors.length - 1) ||\n        index < activeIndex\n      ) {\n        setTimeout(() => {\n          setActiveIndex(activeIndex - 1);\n        }, 5);\n      } else if (index === activeIndex) {\n        resetPageData();\n        setIsSameActiveIndex((prevState: boolean) => !prevState);\n      }\n    }\n  };\n\n  const updateEmptyGuarantors = () => {\n    setGuarantors([\n      {\n        firstName: \"New Tab\",\n        key: uniqueKey(),\n      },\n    ]);\n  };\n\n  const resetPageData = () => {\n    setPageData({ ...initialPageData });\n  };\n\n  const resetPageDataWithUID = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        basicInformation: { ...prevState.basicInformation, isBasicInfoLoading: true },\n        addressInfo: { ...prevState.addressInfo, isAddressLoading: true },\n        kycDocuments: { ...prevState.kycDocuments, isKycLoading: true },\n        bankAccount: { ...prevState.bankAccount, isBankAccountInfoLoading: true },\n      };\n    });\n  };\n\n  const getOCRRelatedData = (guarantorId: string) => {\n    return {\n      ocrStageName: OCR_STAGE_NAMES.LOGIN,\n      ocrSubstageName: SUB_STAGE.DDE,\n      ocrPayloadData: {\n        loanUid: loanId,\n        applicant: {\n          uid: guarantorId,\n        },\n      },\n    };\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const basicInfoPrePopulatedData = useMemo(() => {\n    return prepopulatedData;\n  }, [prePopulateBasicInfo]);\n\n  const renderBasicInformation = (guarantor: any) => {\n    const { basicInfoPageMode, basicInfo, isBasicInfoLoading } = pageData.basicInformation;\n    return (\n      <BasicInformation\n        ref={basicInfoRef}\n        type=\"DDE\"\n        relationship\n        pageMode={basicInfoPageMode}\n        data={basicInfo}\n        isLoading={isBasicInfoLoading}\n        prePopulated={basicInfoPrePopulatedData}\n        ocrRelatedData={getOCRRelatedData(guarantor?.uid)}\n      />\n    );\n  };\n\n  const renderAddress = (guarantor: any) => {\n    const { addressInfoPageMode, address, isAddressLoading } = pageData.addressInfo;\n\n    return isAddressLoading ? (\n      <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n    ) : (\n      <Address ref={addressRef} variant={\"PRIMARY\"} pageMode={addressInfoPageMode} data={address}>\n        <TextData\n          label=\"Address Proof *\"\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n        <DocumentUploader\n          ref={addressDocUploaderRef}\n          mode={addressInfoPageMode}\n          mandatoryDocUpload\n          savedDocument={address.loanDocuments?.[0] ? address.loanDocuments[0] : {}}\n          queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF}\n          ocrStageName={OCR_STAGE_NAMES.LOGIN}\n          ocrSubstageName={SUB_STAGE.DDE}\n          ocrPayloadData={{\n            loanUid: loanId,\n            applicant: {\n              uid: guarantor?.uid,\n            },\n          }}\n        />\n      </Address>\n    );\n  };\n\n  const renderKycDocuments = (guarantor: any) => {\n    const {\n      isKycLoading,\n      kycDocList,\n      uniqueKycCardTracker,\n      populateOcr,\n      aadharVerificationStatus,\n    } = pageData.kycDocuments;\n    return (\n      <div className=\"grid grid-cols-2 gap-5\">\n        {kycDocList.map((list, index) => {\n          return (\n            <div key={`document-${list.listId}`}>\n              {\n                <KYCV3\n                  mode={\"EDIT\"}\n                  isLoading={isKycLoading}\n                  uid={list.uid}\n                  documentListIndex={index}\n                  docName={list.docName}\n                  docNo={list.docNo}\n                  dateOfBirth={list.dob}\n                  docSections={list.docSections}\n                  maskedDocNo={list.maskedDocNo}\n                  isVerified={list.isVerified}\n                  removeDocumentInList={deleteKycDocInList}\n                  cardNameList={uniqueKycCardTracker}\n                  handlerCardNameList={updateUniqueTrackerList}\n                  ocrStatus={populateOcr}\n                  onSave={(documentInfo: IKycDocuments, itemIndex: number) =>\n                    onSaveKycDocument(documentInfo, guarantor?.uid, itemIndex)\n                  }\n                  onRemove={(documentInfo: IKycDocuments, itemIndex?: number) => {\n                    onRemoveKycDocument(documentInfo, guarantor?.uid, itemIndex);\n                  }}\n                  onPopulate={(documentInfo: IKycDocuments, itemIndex: number) =>\n                    onPopulateWithOcr(documentInfo, guarantor?.uid, itemIndex)\n                  }\n                  onVerifyAadhar={(\n                    documentInfo: IKycDocuments,\n                    aadharOtpInfo: IAadharOTP,\n                    itemIndex: number,\n                    uid: string\n                  ) => onVerifyAadhar(documentInfo, aadharOtpInfo, guarantor?.uid, itemIndex, uid)}\n                  aadharVerificationStatus={aadharVerificationStatus}\n                  handlerAadharVerificationStatus={handleAadharVerificationStatus}\n                  placeOfUpload={PLACE_OF_UPLOAD_KYC.LOGIN_GUARANTORS}\n                />\n              }\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderBankAccountDetails = (guarantor: any): React.ReactNode => {\n    const { bankAccountInfoList, isBankAccountInfoLoading } = pageData.bankAccount;\n\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {bankAccountInfoList?.map((bankAccountInfo: any, index: number) => (\n          <BankAccountDetails\n            disabled={!guarantor?.uid}\n            key={bankAccountInfo?.uid}\n            ref={(refValue) => {\n              bankAccountRef.current[index] = refValue as IBankAccountDetailsRef;\n            }}\n            cardNumber={index + 1}\n            data={bankAccountInfo}\n            documentCategory={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BANK_ACCOUNT_DOCUMENT}\n            ocrRelatedData={getOCRRelatedData(guarantor?.uid)}\n            dropDownOptions={dropdownOptions}\n            isLoading={isBankAccountInfoLoading}\n            onRemoveBankAccountDetails={() => onRemoveBankAccountDetails(index, guarantor?.uid)}\n            onSaveBankAccountDetails={() => onSaveBankAccountInfo(index, guarantor?.uid)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderContent = (guarantor: any, index: any) => {\n    return (\n      <div className=\"flex flex-col gap-4\" key={guarantor?.key}>\n        {!guarantor?.uid && (\n          <Section title=\"KYC Documents\" className=\"mt-5\">\n            <React.Fragment>\n              {renderKycDocuments(guarantor)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Document\"}\n                  onClick={onAddDocument}\n                />\n              </div>\n            </React.Fragment>\n          </Section>\n        )}\n\n        <Section title=\"heading.basicInformation\">\n          <>\n            <SaveComponent\n              pageMode={pageData.basicInformation.basicInfoPageMode}\n              onEdit={onEditBasicInfo}\n              onSave={onSaveBasicInformations}\n              onCancel={onCancelBasicInfo}\n              onPrePopulate={() => onPrePopulate(guarantor?.uid, SECTION_NAME.BASIC_INFO)}\n              disablePrePopulate={!guarantor?.uid}\n              disabled={!guarantor?.uid}\n            >\n              {renderBasicInformation(guarantor)}\n            </SaveComponent>\n\n            <SaveComponent\n              disabled={!guarantor?.uid}\n              pageMode={pageData.addressInfo.addressInfoPageMode}\n              onEdit={onEditAddressInfo}\n              onSave={() => onSaveAddress(guarantor?.uid)}\n              onCancel={onCancelAddressInfo}\n              title={\"label.heading.residential.address\"}\n              onPrePopulate={() => onPrePopulate(guarantor?.uid, SECTION_NAME.ADDRESS)}\n              disablePrePopulate={!guarantor?.uid}\n            >\n              {renderAddress(guarantor)}\n            </SaveComponent>\n          </>\n        </Section>\n\n        {guarantor?.uid && (\n          <Section title=\"KYC Documents\">\n            <LazyLoader onLazyLoad={() => onLazyLoadKyc(guarantor?.uid)}>\n              {renderKycDocuments(guarantor)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Document\"}\n                  onClick={onAddDocument}\n                />\n              </div>\n            </LazyLoader>\n          </Section>\n        )}\n\n        <Section title=\"heading.dde.bankAccount.details\">\n          {!guarantor?.uid ? (\n            <React.Fragment>{renderBankAccountDetails(guarantor)}</React.Fragment>\n          ) : (\n            <LazyLoader onLazyLoad={() => onLazyLoadBankAccountInfo(guarantor?.uid)}>\n              {renderBankAccountDetails(guarantor)}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.bankAccount.details\"}\n                  onClick={onAddMoreBankDetails}\n                />\n              </div>\n            </LazyLoader>\n          )}\n        </Section>\n      </div>\n    );\n  };\n\n  const renderGuarantorsTotal = () => {\n    return (\n      <Text\n        className=\"\"\n        label={`\n          ( ${\n            guarantors.length > 1\n              ? `${guarantors.length} Guarantors`\n              : `${guarantors.length} Guarantor`\n          } )`}\n      />\n    );\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    render: The Main return()\n    --------------------------------------------------------------------------------------------------\n  */\n\n  if (isPageGuarantorLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"scrollable-tab dynamic-tab relative deleteable-header\">\n        <SimpleTab\n          showTooltip\n          scrollable\n          enableTabMenu\n          tabHeaderMenuModel={(guarantor: any, index: number) => menuModel(guarantor, index)}\n          optionLabel={[\"firstName\", \"middleName\", \"lastName\"]}\n          optionKey={[\"uid\", \"key\"]}\n          headerClassName=\"dynamic-header\"\n          ref={tabRef}\n          activeIndex={activeIndex}\n          tabs={guarantors}\n          onTabChange={handleTabChange}\n          renderContent={renderContent}\n        />\n\n        <div className=\"absolute top-0 right-0 text-[#A3A3A3] text-xs flex justify-evenly items-center w-[15%] space-x-4 pb-2.5 border-b\">\n          {renderGuarantorsTotal()}\n\n          <div className=\"\">\n            <ButtonBox buttonType={BUTTON_TYPE.ICON_BUTTON_ADD} onClick={onAddMoreTabs} />\n          </div>\n        </div>\n      </div>\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n\n      <WarningDialog\n        visible={isRemoveTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Remove Guarantor ?\"}\n        warningMessage={`Guarantor ${currentTabDetails?.guarantor?.firstName} will be removed`}\n        onCancel={() => setIsRemoveTabWarningVisible(false)}\n        onConfirm={() => {\n          onDeleteTab(currentTabDetails?.guarantor, currentTabDetails?.index);\n        }}\n        onHide={() => {\n          //\n        }}\n      />\n\n      <WarningDialog\n        visible={isSwitchTabWarningVisible}\n        className=\"w-76 !px-14\"\n        title={\"Discard added data ?\"}\n        warningMessage={`Your data will be lost if not saved before navigating to a different tab`}\n        onCancel={() => setIsSwitchTabWarningVisible(false)}\n        onConfirm={handleNavigateTab}\n        onHide={() => {\n          //\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PageGuarantors;\n"],"names":["initialPageData","PAGE_MODE","initialKycTemplateListData","initialBankAccountDetailsData","PageGuarantors","loanId","useParams","uniqueKey","ShortUniqueId","isPageGuarantorLoading","setIsPageGuarantorLoading","useState","currentTabDetails","setCurrentTabDetails","applicantId","setApplicantId","activeIndex","setActiveIndex","selectedTabIndex","setSelectedTabIndex","isSameActiveIndex","setIsSameActiveIndex","guarantors","setGuarantors","navigateBack","setNavigateBack","tabAddedFlag","setTabAddedFlag","prepopulatedData","setPrepopulatedData","prePopulateBasicInfo","setPrePopulateBasicInfo","prePopulateAddress","setPrePopulateAddress","dropdownOptions","setDropdownOptions","pageData","setPageData","initiateAPICallForSection","setInitiateAPICallForSection","kycCardCount","setKycCardCount","position","setPosition","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","errorMessage","setErrorMessage","isRemoveTabWarningVisible","setIsRemoveTabWarningVisible","isSwitchTabWarningVisible","setIsSwitchTabWarningVisible","showDialogAPIError","setShowDialogAPIError","tabRef","useRef","toastMessageRef","basicInfoRef","addressRef","bankAccountRef","addressDocUploaderRef","menuModel","guarantor","index","useEffect","init","_a","resetPageDataWithUID","getBasicInfo","_b","_c","getResidentialAddress","handleTabChange","prevState","getGuarantorList","initiateAPICallFor","callbackFunction","res","ApplicantService","APPLICANT_TYPE","validateGetAPIResponse","results","item","err","parseStandardAPIErrorMessage","getApplicantId","_d","_g","_f","_e","isIgnoreLoader","activeGuarantorObj","prev","BasicInformationService","updateBasicInfoObj","getAllSavedKycDocuments","guarantorId","KYCService","savedItems","kycDocuments","savedDocsName","getAllSectionsInfo","sections","section","savedItem","_i","_h","_k","_j","_n","_m","_l","ResidentialService","updateAddressData","error","getBankAccountOptions","StaticMasterDataService","getBankAccountInfo","BankAccountDetailsService","savedBankAccountInfo","bankAccountInfo","updateBankAccountInfoObj","getSectionsByDocumentUid","uid","getSavedKycDocuments","basicInfo","extractBasicObj","checkDataHasValue","resetPageData","handleNavigateTab","handleAadharVerificationStatus","onSaveKycDocument","documentInfo","itemIndex","kycDocList","payload","enrichUpdateKycDocument","SUB_STAGE","validatePutAPIResponse","data","parsedOcrMeta","getMaskedUrlForSection","sectionType","DOCUMENT_SECTION","prepareMaskedDocSections","DOCUMENT_TYPE","updatedList","STATIC_MASTER_TYPE_TOAST_TEXT","itemList","enrichSaveKycDocument","validatePostAPIResponse","idx","prepareNewKycCardTracker","onRemoveKycDocument","deleteKycDocInList","onPopulateWithOcr","populateOcr","enrichPopulateDocWithOcr","onVerifyAadhar","aadharOtpInfo","enrichAadharValidation","onSaveBankAccountInfo","enrichBankAccountDetailsObj","bankInfo","onAddMoreTabs","onDeleteTab","updateEmptyGuarantors","removeDeletedGuarantor","onSaveBasicInformations","enrichBasicInfoData","onEditAddressInfo","onUpdateAddress","previous","onPostAddress","onSaveAddress","uploadedDocsInfo","enrichAddressData","onEditBasicInfo","onCancelBasicInfo","onLazyLoadKyc","onCancelAddressInfo","onLazyLoadBankAccountInfo","functionsToCall","initialBankAccountInfoDropdownOptionsAPICall","func","onAddMoreBankDetails","newBankAccountListItem","onRemoveBankAccountDetails","newBankAccountDetailsList","_","onPrePopulate","firstName","middleName","lastName","SECTION_NAME","uniqueKycCardTracker","docNameArr","onAddDocument","newDocumentList","prevCount","updateUniqueTrackerList","list","newKycDocList","updatedGuarantors","getOCRRelatedData","OCR_STAGE_NAMES","basicInfoPrePopulatedData","useMemo","renderBasicInformation","basicInfoPageMode","isBasicInfoLoading","jsx","BasicInformation","renderAddress","addressInfoPageMode","address","isAddressLoading","SkeletonCustom","jsxs","Address","TextData","DocumentUploader","DOCUMENT_CATEGORY","renderKycDocuments","isKycLoading","aadharVerificationStatus","KYCV3","PLACE_OF_UPLOAD_KYC","renderBankAccountDetails","bankAccountInfoList","isBankAccountInfoLoading","BankAccountDetails","refValue","renderContent","Section","React","ButtonBox","BUTTON_TYPE","Fragment","SaveComponent","LazyLoader","renderGuarantorsTotal","Text","Loader","SimpleTab","ToastCustom","ErrorDialog","WarningDialog"],"mappings":"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"}