{"version":3,"file":"PageIncomeExpenseDetail-ccac0d26.js","sources":["../../src/views/transaction/PageCAM/Sections/BankAccountStatment/BankAccountStatement.tsx","../../src/views/transaction/PageCAM/Sections/BankStatementAnalysis/BankStatementAnalysis.tsx","../../src/views/transaction/PageCAM/Sections/BasicDetails/BasicDetails.tsx","../../node_modules/primereact/columngroup/columngroup.esm.js","../../node_modules/primereact/row/row.esm.js","../../src/views/transaction/PageCAM/Sections/CreditAndDebitTransactions/CreditAndDebitTransactions.tsx","../../src/views/transaction/PageCAM/Sections/MonthlyBankingAnalysis/MonthlyBankingAnalysis.tsx","../../src/views/transaction/PageCAM/Sections/MonthlyHouseholdExpense/MonthlyHouseholdExpense.tsx","../../src/views/transaction/PageCAM/PageIncomeExpenseDetail/PageIncomeExpenseDetail.tsx"],"sourcesContent":["import AclGuard from \"components/AclGuard\";\nimport DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentUploaderRef,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast\";\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { DOCUMENT_CATEGORY, PAGE_MODE, TOAST_STYLE_TYPE } from \"utils/Constant\";\n\n// interface IData extends ICamBankingAnalysisTab {\n//   loanUid:string;\n// }\n\nexport interface ICamBankAccountStatementPageObj {\n  // uid?:string;\n  // isLoading?:boolean;\n  savedDocuments: any[];\n}\n\nexport const initialCamBankAccountStatementPageOj: ICamBankAccountStatementPageObj = {\n  // uid:\"\",\n  // isLoading:false,\n  savedDocuments: [],\n};\n\ninterface IProps {\n  isLoading: boolean;\n  data: ICamBankAccountStatementPageObj;\n}\nconst BankAccountStatement: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, isLoading } = props;\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ICamBankAccountStatementPageObj>({\n    ...initialCamBankAccountStatementPageOj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const documentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n  useEffect(() => {\n    //call the api to get the details\n    console.log(\"bank account statement\",data);\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    // resetValidator();\n    // need to reset the document uploader\n    documentUploaderRef?.current?.resetDocUpload();\n    //call get api\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <div className=\"border border-primary-ptext-500  rounded-xl p-5 flex flex-col gap-3\">\n        <div>\n          <Text\n            label={\"label.cam.bankAccountStatement\"}\n            className=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n          />\n        </div>\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\" grid grid-cols-4 gap-3 \">\n              <div className=\"col-span-4\">\n                <DocumentUploader\n                  ref={documentUploaderRef}\n                  savedDocument={data?.savedDocuments?.[0] ? data.savedDocuments?.[0] : {}}\n                  mode={DOC_UPLOADER_MODE.VIEW}\n                  queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BANK_ACCOUNT_DOCUMENT} //document catergory\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </div>\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n});\n\nexport default BankAccountStatement;\n","import AclGuard from \"components/AclGuard\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport ToastCustom from \"components/Toast\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport LegalService from \"services/transaction/DDE/LegalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport {\n  DOCUMENT_CATEGORY,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE\n} from \"utils/Constant\";\nimport DocumentUploader, { DOC_UPLOADER_MODE, IDocumentInfo, IDocumentUploaderRef } from \"components/DocumentUploader/DocumentUploader\";\nimport { prepareAttributes, prepareDocSections } from \"views/transaction/PageDDE/Login/Helper\";\nimport { ICamBankingAnalysisTab } from \"../../PageIncomeExpenseDetail/PageIncomeExpenseDetail\";\nimport { useParams } from \"react-router-dom\";\nimport CamService from \"services/transaction/CamService\";\n\n// interface IData extends ICamBankingAnalysisTab {\n//   loanUid:string;\n// }\n\nexport interface ICamBankStatementAnalysisPageObj {\n  // uid:string;\n  // isLoading:boolean;\n  savedDocuments: any[];\n}\n\nexport const initialCamBankStatementAnalysisPageOj: ICamBankStatementAnalysisPageObj = {\n  savedDocuments: [],\n};\n\ninterface IProps {\n  data:ICamBankStatementAnalysisPageObj;\n  isLoading:boolean;\n  tab: ICamBankingAnalysisTab;\n  getDetailsCallback: () => void;\n}\nconst BankStatementAnalysis: React.FC<IProps> = forwardRef((props, ref) => {\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  const { data ,isLoading,tab ,getDetailsCallback} = props;\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ICamBankStatementAnalysisPageObj>({\n    ...initialCamBankStatementAnalysisPageOj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const documentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    onCancel: onCancel,\n  }));\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n  useEffect(() => {\n    //call the api to get the details\n    // console.log(\"call api\");\n    setPageObj((prevObj)=>({\n      ...prevObj,\n      savedDocuments:data.savedDocuments\n    }))\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n\n    const unSavedDocuments :IDocumentInfo|undefined=documentUploaderRef.current?.getUploadedData();\n    if(!unSavedDocuments){\n      return;\n    }\n    const payload = enrichForSave(unSavedDocuments);\n    try {\n      await CamService.updateBankStatementAnalysis(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n      getDetailsCallback?.();\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    getDetailsCallback?.();\n    // resetValidator();\n    // need to reset the document uploader\n    documentUploaderRef?.current?.resetDocUpload();\n    //call get api\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const enrichForSave = (unSavedDocument:IDocumentInfo) => {\n    return {\n      loan:{\n        uid:params?.loanUid\n      },\n      stage:{\n        uid:params?.stageUid\n      },\n      bankingDetail:{\n        uid:tab?.bankingDetailsUid\n      },\n      loanDocuments:unSavedDocument?.documentUid\n      ? [\n          {\n            uid: unSavedDocument?.uid,\n            docType: {\n              uid: unSavedDocument?.documentUid,\n            },\n            docNo:\n            unSavedDocument?.[\n                `${unSavedDocument.primaryKeyAttributeName}`\n              ] ?? null,\n            dob: unSavedDocument.dob\n              ? unSavedDocument.dob\n              : null,\n            // loanSectionKey: LOAN_SECTION_KEY.PERMANENT_ADDRESS_PROOF,\n            docCategory: unSavedDocument?.documentCategory,\n            attributes: prepareAttributes(unSavedDocument),\n            documentSections: prepareDocSections(\n              unSavedDocument?.documentSectionUrls\n            ),\n          },\n        ]\n      : [],\n    };\n  };\n\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        title=\"label.cam.bankStatementAnalysis\"\n        pageMode={pageMode}\n        // disabled={isLoading}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\" grid grid-cols-4 gap-3 \">\n              <div className=\"col-span-4\">\n                <DocumentUploader\n                  ref={documentUploaderRef}\n                  savedDocument={\n                    pageObj.savedDocuments?.[0]\n                      ? pageObj.savedDocuments?.[0]\n                      : {}\n                  }\n                  mode={\n                    pageMode === PAGE_MODE.VIEW ? DOC_UPLOADER_MODE.VIEW : DOC_UPLOADER_MODE.EDIT\n                  }\n                  queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BANK_STATEMENTS_ANALYSIS}\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </SaveComponent>\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n});\n\nexport default BankStatementAnalysis;\n","import AclGuard from \"components/AclGuard\";\nimport { EditableComponentRef } from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea/InputTextArea\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\nimport ToastCustom from \"components/Toast\";\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CamService from \"services/transaction/CamService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  currencyFormatToNumberIncludeNull,\n  getStandardValidator,\n  getStaticMasterNames,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport {\n  CAM_APPLICANT_TYPE_OPTIONS,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n  TO_AND_FROM_DATE_MESSAGE,\n} from \"utils/Constant\";\nimport { getNumber, showCurrency, showCurrencyIncludeNull } from \"../../Helper\";\nimport {\n  ICamBankingAnalysisTab,\n  ICamIncomeExpenseDetailsDropdownList,\n} from \"../../PageIncomeExpenseDetail/PageIncomeExpenseDetail\";\n\ninterface ICamBankingAnalysisBasicDetailsData extends ICamBankingAnalysisTab {\n  tab: ICamBankingAnalysisTab;\n  data: string;\n}\n\nexport interface ICamBankingAnalysisBasicDetailsPageObj {\n  // isLoading: boolean;\n  applicantType: string;\n  customer: string;\n  bankFinancier: string;\n  accountNumber: string;\n  accountHolderName: string;\n  accountType: string;\n  ifscCode: string;\n  branchName: string;\n  odLimit: string;\n  dateOfBankAccountOpening: string | Date;\n  bankStatementFrom: string | Date;\n  bankStatementTo: string | Date;\n  noOfMonths: string | number;\n  minChargeDetails: string;\n  remarks: string;\n  isCalculating?: boolean;\n  // dropdownOptions?:{\n  //   customer:string;\n  //   bank:string;\n  //   accountNumber:string;\n  // },\n  // properties: ICamSinglePropertyValuationData[];\n  // totalValuation: number | \"\";\n}\ninterface IProps {\n  dropDownOptions: ICamIncomeExpenseDetailsDropdownList;\n  data: ICamBankingAnalysisBasicDetailsPageObj;\n  isLoading?: boolean;\n  tab: ICamBankingAnalysisTab;\n  getDetailsCallback?: (options?: {\n    reloadRelatedSections?: boolean;\n    bankingDetailUid?: string;\n  }) => void;\n}\n\nexport const initialCamBankingBasicDetailsPageObj: ICamBankingAnalysisBasicDetailsPageObj = {\n  // isLoading: false,\n  applicantType: \"\",\n  customer: \"\",\n  bankFinancier: \"\",\n  accountNumber: \"\",\n  accountHolderName: \"\",\n  accountType: \"\",\n  ifscCode: \"\",\n  branchName: \"\",\n  odLimit: \"\",\n  dateOfBankAccountOpening: \"\",\n  bankStatementFrom: \"\",\n  bankStatementTo: \"\",\n  noOfMonths: \"\",\n  minChargeDetails: \"\",\n  remarks: \"\",\n  isCalculating: false,\n  // totalValuation: \"\",\n  // dropdownOptions:{\n  //   customer:\"\",\n  //   bank:\"\",\n  //   accountNumber:\"\"\n  // },\n};\n\nconst BasicDetails: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, dropDownOptions, tab, isLoading, getDetailsCallback } = props;\n\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ICamBankingAnalysisBasicDetailsPageObj>({\n    ...initialCamBankingBasicDetailsPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [timeOutLocal, setTimeOutLocal] = useState<any>(undefined);\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    //call the api to get the details\n    setPageObj((prevPagObj) => ({\n      ...prevPagObj,\n      ...data,\n    }));\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n  // pageObj\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  const calculate = async (data: ICamBankingAnalysisBasicDetailsPageObj) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      isCalculating: true,\n    }));\n    try {\n      // need to check if date is  valid on change\n      const payload = enrichForCalculation(data);\n      const res = await CamService.engine(payload);\n      // data\n\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        isCalculating: false,\n        noOfMonths: getNumber(res?.data?.noOfMonthsOfBankingStatement),\n      }));\n      // tableRef.current?.reportDataChange(updatedRowDataObj);\n    } catch (err) {\n      console.log(err);\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        isCalculating: false,\n      }));\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  const handleApplicantTypeChange = (e: any) => {\n    setPageObj((prevObj) => {\n      let updatedPageObj = { ...prevObj };\n\n      updatedPageObj = {\n        ...updatedPageObj,\n        applicantType: e.target.value,\n        customer: \"\",\n        bankFinancier: \"\",\n        accountNumber: \"\",\n        accountHolderName: \"\",\n        accountType: \"\",\n        ifscCode: \"\",\n        branchName: \"\",\n      };\n      return updatedPageObj;\n    });\n  };\n\n  const handleCustomerChange = (e: any) => {\n    setPageObj((prevObj) => {\n      let updatedPageObj = { ...prevObj };\n\n      updatedPageObj = {\n        ...updatedPageObj,\n        // applicantType:e.target.value,\n        customer: e.target.value,\n        bankFinancier: \"\",\n        accountNumber: \"\",\n        accountHolderName: \"\",\n        accountType: \"\",\n        ifscCode: \"\",\n        branchName: \"\",\n      };\n      return updatedPageObj;\n    });\n  };\n\n  const handleBankChange = (e: any) => {\n    setPageObj((prevObj) => {\n      let updatedPageObj = { ...prevObj };\n\n      updatedPageObj = {\n        ...updatedPageObj,\n        // applicantType:e.target.value,\n        // customer:e.target.value,\n        bankFinancier: e.target.value,\n        accountNumber: \"\",\n        accountHolderName: \"\",\n        accountType: \"\",\n        ifscCode: \"\",\n        branchName: \"\",\n      };\n      return updatedPageObj;\n    });\n  };\n\n  const handleAccountNumberChange = (e: any) => {\n    const accountDetails = dropDownOptions?.accountNumber?.find(\n      (record) => record?.uid === e.target.value\n    );\n    setPageObj((prevObj) => {\n      let updatedPageObj = { ...prevObj };\n\n      updatedPageObj = {\n        ...updatedPageObj,\n        accountNumber: e.target.value,\n        accountHolderName: accountDetails?.accountHolderName ?? \"\",\n        accountType: accountDetails?.smAccountType ?? \"\",\n        ifscCode: accountDetails?.ifsc?.ifscCode ?? \"\",\n        branchName: accountDetails?.ifsc?.branch ?? \"\",\n      };\n      return updatedPageObj;\n    });\n  };\n\n  const handleChange = (\n    e: any,\n    options?: { currency?: true; field?: keyof ICamBankingAnalysisBasicDetailsPageObj }\n  ) => {\n    setPageObj((prevObj) => {\n      let updatedPageObj = { ...prevObj };\n      if (options?.currency) {\n        // const unformattedValue = currencyFormatToNumber(e.target.value);\n        updatedPageObj = {\n          ...updatedPageObj,\n          [e.target.name]: showCurrency(e.target.value),\n        };\n      } else {\n        updatedPageObj = { ...updatedPageObj, [e.target.name]: e.target.value };\n      }\n      if (\n        updatedPageObj.accountNumber &&\n        (options?.field === \"bankStatementFrom\" || options?.field === \"bankStatementTo\")\n      ) {\n        debounce(calculate(updatedPageObj), 1200);\n      }\n      return updatedPageObj;\n    });\n  };\n\n  // const handleRecommendedLoanAmountChange = (e: any) => {\n  //   setPageObj((prevObj) => ({\n  //     ...prevObj,\n  //     [e.target.name]: numberFormatter(e.target.value,\"en-IN\", 0),\n  //   }));\n  // };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    const payload = enrichForSave();\n    try {\n      let service = CamService.createBankingBasicDetails;\n      if (data?.accountNumber) {\n        // data from get api has account number\n        service = CamService.updateBankingBasicDetails;\n      }\n      const res = await service(payload);\n      console.log(\"res\", res);\n\n      if (!data?.accountNumber) {\n        getDetailsCallback?.({\n          reloadRelatedSections: true,\n          bankingDetailUid: pageObj?.accountNumber,\n        });\n      } else {\n        getDetailsCallback?.();\n      }\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    resetValidator();\n\n    if (data?.accountNumber) {\n      getDetailsCallback?.();\n    } else {\n      setPageObj((prevPageObj) => ({ ...prevPageObj, ...initialCamBankingBasicDetailsPageObj }));\n    }\n    // setPageObj((prevPageObj) => ({ ...prevPageObj, ...initialCamBankingBasicDetailsPageObj }));\n    // if  form has existing saved  data then call api else clear all\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const enrichForCalculation = (data: ICamBankingAnalysisBasicDetailsPageObj) => {\n    const enrichObj = {\n      loanUid: params?.loanUid,\n      stageUid: params?.stageUid,\n      bankingStatementFrom: data?.bankStatementFrom,\n      bankingStatementTo: data?.bankStatementTo,\n    };\n    return enrichObj;\n  };\n\n  const debounce = (func: any, delay: any) => {\n    // for amount incl gst calc\n    clearTimeout(timeOutLocal);\n    setTimeOutLocal(setTimeout(func, delay));\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const enrichForSave = () => {\n    const enrichObj = {\n      loan: {\n        uid: params?.loanUid ?? \"\",\n      },\n      stage: {\n        uid: params?.stageUid ?? \"\",\n      },\n      isActive: true,\n      uid: tab.tabUid,\n      bankingDetail: {\n        uid: pageObj?.accountNumber, //will contain banking details uid\n        odCcLimit: getNumber(pageObj?.odLimit),\n        bankAccountOpeningDate: pageObj?.dateOfBankAccountOpening,\n        bankingStatementFrom: pageObj?.bankStatementFrom,\n        bankingStatementTo: pageObj?.bankStatementTo,\n        noOfMonthsOfBankingStatement: getNumber(pageObj?.noOfMonths),\n        minChargeDetails: pageObj?.minChargeDetails,\n        remarks: pageObj?.remarks,\n      },\n    };\n\n    // deletedRows = deletedRows.map((rowData: any) =>\n    //   updateLegalDocumentScrutinizedRowDataObj(rowData)\n    // );\n    // updatedRows = updatedRows.map((rowData: any) =>\n    //   updateLegalDocumentScrutinizedRowDataObj(rowData)\n    // );\n\n    return enrichObj;\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  const {\n    applicantType,\n    customer,\n    bankFinancier,\n    accountNumber,\n    accountHolderName,\n    accountType,\n    ifscCode,\n    branchName,\n    odLimit,\n    dateOfBankAccountOpening,\n    bankStatementFrom,\n    bankStatementTo,\n    noOfMonths,\n    minChargeDetails,\n    remarks,\n  } = pageObj;\n  return (\n    <>\n      <SaveComponent\n        title=\"label.dde.bankingDetails\"\n        pageMode={pageMode}\n        // disabled={isLoading || isLegalSectionAccessDisabled(legalStatus)}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n        disabled={pageObj?.isCalculating}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\"grid grid-cols-4 gap-3 \">\n              <div className=\"\">\n                <SimpleDropDown\n                  label=\"label.cam.applicantType*\"\n                  placeholder=\"placeholder.cam.applicantType\"\n                  name=\"applicantType\"\n                  value={applicantType}\n                  onChange={handleApplicantTypeChange}\n                  validation={simpleValidator?.current?.message(\n                    `applicantType`,\n                    applicantType,\n                    \"mandatory\"\n                  )}\n                  onBlur={validate}\n                  options={CAM_APPLICANT_TYPE_OPTIONS}\n                  optionLabel=\"name\"\n                  optionValue=\"code\"\n                  // disabled={productIncomeScheme === \"\"}\n                />\n              </div>\n              <div>\n                <SimpleDropDown\n                  label=\"label.cam.customerName*\"\n                  placeholder=\"placeholder.cam.customerName\"\n                  name=\"customer\"\n                  value={customer}\n                  onChange={handleCustomerChange}\n                  validation={simpleValidator?.current?.message(`customer`, customer, \"mandatory\")}\n                  onBlur={validate}\n                  options={\n                    applicantType !== \"\"\n                      ? dropDownOptions.customerName?.filter(\n                          (records) => records?.applicant?.applicantType === applicantType\n                        )\n                      : []\n                  }\n                  optionLabel=\"applicant.firstName\"\n                  optionValue=\"applicant.uid\"\n                  // disabled={productIncomeScheme === \"\"}\n                />\n              </div>\n              <div>\n                <SimpleDropDown\n                  label=\"label.cam.bankFinancierName*\"\n                  placeholder=\"placeholder.cam.bankFinancierName*\"\n                  name=\"bankFinancier\"\n                  value={bankFinancier}\n                  onChange={handleBankChange}\n                  validation={simpleValidator?.current?.message(\n                    `bankFinancier`,\n                    bankFinancier,\n                    \"mandatory\"\n                  )}\n                  onBlur={validate}\n                  options={\n                    customer !== \"\"\n                      ? dropDownOptions.bankFinancierName?.filter(\n                          (records) => records?.applicant?.uid === customer\n                        )\n                      : []\n                  }\n                  optionLabel=\"ifsc.bank.name\"\n                  optionValue=\"ifsc.bank.uid\"\n                  // disabled={productIncomeScheme === \"\"}\n                />\n              </div>\n              <div>\n                <SimpleDropDown\n                  label=\"label.cam.accountNumber*\"\n                  placeholder=\"placeholder.cam.accountNumber*\"\n                  name=\"accountNumber\"\n                  value={accountNumber}\n                  onChange={handleAccountNumberChange}\n                  validation={simpleValidator?.current?.message(\n                    `accountNumber`,\n                    accountNumber,\n                    \"mandatory\"\n                  )}\n                  onBlur={validate}\n                  options={\n                    bankFinancier !== \"\"\n                      ? dropDownOptions.accountNumber?.filter(\n                          (records) => records?.ifsc?.bank?.uid === bankFinancier\n                        )\n                      : []\n                  }\n                  optionLabel=\"accountNo\"\n                  optionValue=\"uid\"\n                  // disabled={productIncomeScheme === \"\"}\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.cam.accountHolderName*\"\n                  name=\"accountHolderName\"\n                  // className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={accountHolderName ?? \"\"}\n                  disabled\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.cam.accountType\"\n                  name=\"accountType\"\n                  // className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={getStaticMasterNames(accountType) ?? \"\"}\n                  disabled\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.cam.ifscCode\"\n                  name=\"ifscCode\"\n                  // className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={ifscCode ?? \"\"}\n                  disabled\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.cam.branchName\"\n                  name=\"emi\"\n                  // className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={branchName ?? \"\"}\n                  disabled\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.cam.odLimit*\"\n                  name=\"odLimit\"\n                  className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={odLimit ?? \"\"}\n                  onChange={(e) => handleChange(e, { currency: true })}\n                  validation={simpleValidator?.current?.message(\n                    `odLimit`,\n                    currencyFormatToNumberIncludeNull(odLimit),\n                    // odLimit,\n                    \"mandatory\"\n                  )}\n                  onBlur={validate}\n                />\n              </div>\n              <div>\n                <SystemDatePicker\n                  label=\"label.cam.dateOfBankAccountOpening*\"\n                  name=\"dateOfBankAccountOpening\"\n                  value={dateOfBankAccountOpening}\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={handleChange}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    `dateOfBankAccountOpening`,\n                    dateOfBankAccountOpening,\n                    \"mandatory\"\n                  )}\n                  placeholder=\"DD-MMM-YYYY \"\n                />\n              </div>\n              <div>\n                <SystemDatePicker\n                  label=\"label.cam.bankStatementFrom*\"\n                  name=\"bankStatementFrom\"\n                  // minDate={pageObj?.dateOfInitiation ?new Date(pageObj?.dateOfInitiation):undefined}\n                  value={bankStatementFrom}\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={(e: any) => handleChange(e, { field: \"bankStatementFrom\" })}\n                  onBlur={validate}\n                  // maxDate={bankStatementTo ? new Date(bankStatementTo):undefined}\n                  validation={simpleValidator?.current?.message(\n                    `bankStatementFrom`,\n                    bankStatementFrom,\n                    `mandatory|toAndFromDate:to,${TO_AND_FROM_DATE_MESSAGE.BANK_STATEMENT_FROM.value},${bankStatementTo??\"\"}`\n                  )}\n                  placeholder=\"DD-MMM-YYYY \"\n                />\n              </div>\n              <div>\n                <SystemDatePicker\n                  label=\"label.cam.bankStatementTo*\"\n                  name=\"bankStatementTo\"\n                  // minDate={pageObj?.dateOfInitiation ?new Date(pageObj?.dateOfInitiation):undefined}\n                  value={bankStatementTo}\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={(e: any) => handleChange(e, { field: \"bankStatementTo\" })}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    `bankStatementTo`,\n                    bankStatementTo,\n                    `mandatory|toAndFromDate:from,${TO_AND_FROM_DATE_MESSAGE.BANK_STATEMENT_TO.value},${bankStatementFrom??\"\"}`\n                  )}\n                  placeholder=\"DD-MMM-YYYY \"\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.cam.noOfMonths\"\n                  name=\"noOfMonths\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={noOfMonths ?? \"\"}\n                  className=\"text-right\"\n                  disabled\n                />\n              </div>\n              <div>\n                <InputTextArea\n                  name=\"minChargeDetails\"\n                  className=\"!min-h-20 !max-h-40 h-25\"\n                  label=\"label.cam.minChargeDetails*\"\n                  placeholder={\"placeholder.initiationInfo.description\"}\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  maxCount={200}\n                  onChange={handleChange}\n                  value={minChargeDetails}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    \"minChargeDetails\",\n                    minChargeDetails,\n                    \"mandatory\"\n                  )}\n                />\n              </div>\n              <div>\n                <InputTextArea\n                  name=\"remarks\"\n                  className=\"!min-h-20 !max-h-40 h-25\"\n                  label=\"label.cam.remarks*\"\n                  placeholder={\"placeholder.initiationInfo.description\"}\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  maxCount={200}\n                  onChange={handleChange}\n                  value={remarks}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\"remarks\", remarks, \"mandatory\")}\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default BasicDetails;\n","var ColumnGroup = function ColumnGroup() {};\nColumnGroup.displayName = 'ColumnGroup';\nColumnGroup.defaultProps = {\n  __TYPE: 'ColumnGroup'\n};\n\nexport { ColumnGroup };\n","import * as React from 'react';\nimport { ObjectUtils } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar Row = function Row(props) {\n  var otherProps = ObjectUtils.findDiffKeys(props, Row.defaultProps);\n  return /*#__PURE__*/React.createElement(\"tr\", _extends({\n    className: props.className,\n    style: props.style\n  }, otherProps), props.children);\n};\nRow.displayName = 'Row';\nRow.defaultProps = {\n  __TYPE: 'Row',\n  style: null,\n  className: null\n};\n\nexport { Row };\n","import AclGuard from \"components/AclGuard\";\nimport { Column, EditableComponentRef } from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport ReadOnlyTable from \"components/ReadOnlyTable/ReadOnlyTable\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast\";\nimport i18n from \"i18n\";\nimport { numberFormatter } from \"locale\";\nimport { ColumnGroup } from \"primereact/columngroup\";\nimport { Row } from \"primereact/row\";\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CamService from \"services/transaction/CamService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  toTitleCase,\n} from \"utils/CommonUtil\";\nimport {\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { getNumber, getNumberIncludeNull, showCurrencyIncludeNull } from \"../../Helper\";\nimport { ICamBankingAnalysisTab } from \"../../PageIncomeExpenseDetail/PageIncomeExpenseDetail\";\n\nexport interface ICamCreditAndDebitTransactionRowData {\n  uid: string;\n  month: string;\n  year: string;\n  creditTransactionNo: string | null | number;\n  creditTransactionAmount: string | number | null;\n  debitTransactionNo: string | number | null;\n  debitTransactionAmount: string | number | null;\n  checkBounceInward: string | null | number;\n  checkBounceOutward: string | null | number;\n}\n\ninterface IPageObj {\n  tableData: ICamCreditAndDebitTransactionRowData[];\n  total: {\n    creditTransactionNo: string | number;\n    creditTransactionAmount: string | number;\n    debitTransactionNo: string | number;\n    debitTransactionAmount: string | number;\n    checkBounceInward: string | number;\n    checkBounceOutward: string | number;\n  };\n}\ninterface IProps {\n  isLoading: boolean;\n  data: ICamCreditAndDebitTransactionRowData[];\n  tab: ICamBankingAnalysisTab;\n  getDetailsCallback?: () => void;\n}\n\nexport const initialPageObj: IPageObj = {\n  tableData: [],\n  // {\n  //   uid: \"123\",\n  //   month: \"Oct- 22\",\n  //   creditTransactionNo: \"123\",\n  //   creditTransactionAmount: 0,\n  //   debitTransactionNo: \"123\",\n  //   debitTransactionAmount: 234,\n  //   checkBounceInward: \"23\",\n  //   checkBounceOutward: \"34\",\n  // },\n  // ],\n  total: {\n    creditTransactionNo: \"\",\n    creditTransactionAmount: \"\",\n    debitTransactionNo: \"\",\n    debitTransactionAmount: \"\",\n    checkBounceInward: \"\",\n    checkBounceOutward: \"\",\n  },\n  // tableMonths:[\"Oct- 22(₹)\",\"Nov- 22(₹)\",\"Dec- 22(₹)\",\"Feb - 22(₹)\"],\n  // values:[[1,2,3,4],[5,2,3,4]]\n  // totalValuation: \"\",\n};\ntype TTableFiledKeys =\n  | \"MONTH\"\n  | \"CREDIT_TNX_NO\"\n  | \"CREDIT_TNX_AMOUNT\"\n  | \"DEBIT_TNX_NO\"\n  | \"DEBIT_TNX_AMOUNT\"\n  | \"INWARD_CHECK_BOUNCE\"\n  | \"OUTWARD_CHECK_BOUNCE\";\nconst TABLE_FIELDS: Record<TTableFiledKeys, keyof ICamCreditAndDebitTransactionRowData> = {\n  MONTH: \"month\",\n  CREDIT_TNX_NO: \"creditTransactionNo\",\n  CREDIT_TNX_AMOUNT: \"creditTransactionAmount\",\n  DEBIT_TNX_NO: \"debitTransactionNo\",\n  DEBIT_TNX_AMOUNT: \"debitTransactionAmount\",\n  INWARD_CHECK_BOUNCE: \"checkBounceInward\",\n  OUTWARD_CHECK_BOUNCE: \"checkBounceOutward\",\n};\n\nconst CreditAndDebitTransactions: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, isLoading, tab, getDetailsCallback } = props;\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<IPageObj>({\n    ...initialPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    //call the api to get the details\n    // console.log(\"call api\");\n    if (data?.length > 0) {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        tableData: data,\n      }));\n      updateAllTotalOnLoad();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n  // pageObj\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  const handleTableFieldChange = (\n    e: any,\n    options: {\n      rowData: ICamCreditAndDebitTransactionRowData;\n      field: keyof Omit<Omit<Omit<ICamCreditAndDebitTransactionRowData, \"uid\">, \"month\">, \"year\">;\n      currency?: boolean;\n    }\n  ) => {\n    setPageObj((prevPageObj) => {\n      const updatedPageObj = { ...prevPageObj };\n      const updatedRowDataIndex = updatedPageObj.tableData.findIndex(\n        (row: ICamCreditAndDebitTransactionRowData) =>\n          row.month === options.rowData.month && row.year === options.rowData.year\n      );\n      if (updatedRowDataIndex === -1) {\n        return updatedPageObj;\n      }\n      if (options.currency) {\n        // const unformattedValue = currencyFormatToNumber(e.target.value);\n        updatedPageObj.tableData[updatedRowDataIndex][`${options.field}`] = showCurrencyIncludeNull(\n          e.target.value\n        );\n        // updateTotalOfNetAppraisedMonthlyIncome(options.field);\n      } else {\n        updatedPageObj.tableData[updatedRowDataIndex][`${options.field}`] = e.target.value;\n      }\n      updateTotalValues(options.field);\n      return updatedPageObj;\n    });\n  };\n\n  // const handleRecommendedLoanAmountChange = (e: any) => {\n  //   setPageObj((prevObj) => ({\n  //     ...prevObj,\n  //     [e.target.name]: numberFormatter(e.target.value,\"en-IN\", 0),\n  //   }));\n  // };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    const payload = enrichForSave();\n    console.log(\"credit debit save data \", payload);\n\n    try {\n      await CamService.updateCreditDebitTransaction(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n      getDetailsCallback?.();\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    getDetailsCallback?.();\n    // if  form has existing saved  data then call api else clear all\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const updateAllTotalOnLoad = () => {\n    for (const key in pageObj?.total) {\n      let totalAmount = 0;\n      data?.forEach((record: ICamCreditAndDebitTransactionRowData) => {\n        totalAmount += getNumber(record?.[key as keyof ICamCreditAndDebitTransactionRowData]);\n      });\n\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        total: {\n          ...prevObj.total,\n          [key]: totalAmount,\n        },\n      }));\n    }\n  };\n\n  const updateTotalValues = (field: keyof ICamCreditAndDebitTransactionRowData) => {\n    setTimeout(() => {\n      let totalAmount = 0;\n      pageObj.tableData?.forEach((record: ICamCreditAndDebitTransactionRowData) => {\n        totalAmount += getNumber(record?.[field]);\n      });\n\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        total: {\n          ...prevObj.total,\n          [field]: totalAmount,\n        },\n      }));\n    }, 500);\n  };\n\n  const enrichForSave = () => {\n    const bankingAnalysis: any[] = [];\n    pageObj?.tableData?.forEach((record: ICamCreditAndDebitTransactionRowData) => {\n      const bankingAnalysisRowData = {\n        uid: record?.uid,\n        month: record?.month,\n        year: record?.year,\n        noOfCreditTransactions: getNumberIncludeNull(record?.creditTransactionNo),\n        noOfDebitTransactions: getNumberIncludeNull(record?.debitTransactionNo),\n        totalCreditAmount: getNumberIncludeNull(record?.creditTransactionAmount),\n        totalDebitAmount: getNumberIncludeNull(record?.debitTransactionAmount),\n        noOfInwardChequeBounce: getNumberIncludeNull(record?.checkBounceInward),\n        noOfOutwardChequeBounce: getNumberIncludeNull(record?.checkBounceOutward),\n      };\n      bankingAnalysis.push(bankingAnalysisRowData);\n    });\n    return {\n      loan: {\n        uid: params?.loanUid,\n      },\n      stage: {\n        uid: params?.stageUid,\n      },\n      bankingDetail: {\n        uid: tab?.bankingDetailsUid,\n      },\n      bankingAnalysis: bankingAnalysis,\n    };\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  const renderTotal = () => {\n    return <Text className=\" font-medium text-primary-ptext-1000  \" label={`label.cam.total`} />;\n  };\n\n  const renderMonth = (rowData: ICamCreditAndDebitTransactionRowData) => {\n    return (\n      <Text\n        className=\" text-xs text-secondary-labelColor \"\n        label={`${toTitleCase(rowData?.month)} ${rowData?.year}`}\n      />\n    );\n  };\n\n  const renderCreditTransactionNo = (rowData: ICamCreditAndDebitTransactionRowData) => {\n    return (\n      <div className=\"flex items-start mt-1\">\n        <InputBox\n          name={`creditTransactionNo${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"creditTransactionNo\" })}\n          onBlur={validate}\n          value={rowData?.creditTransactionNo ?? \"\"}\n          className=\"text-right\"\n          validation={simpleValidator?.current?.message(\n            `creditTransactionNo${rowData?.uid}`,\n            rowData?.creditTransactionNo,\n            \"checkNumber|onlyPositive\"\n          )}\n          // hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n  const renderCreditTransactionAmount = (rowData: ICamCreditAndDebitTransactionRowData) => {\n    return (\n      <div className=\"flex items-start mt-1\">\n        <InputBox\n          name={`creditTransactionAmount${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) =>\n            handleTableFieldChange(e, { rowData, field: \"creditTransactionAmount\", currency: true })\n          }\n          onBlur={validate}\n          value={rowData?.creditTransactionAmount ?? \"\"}\n          className=\"text-right\"\n          validation={simpleValidator?.current?.message(\n            `creditTransactionAmount${rowData?.uid}`,\n            getNumber(rowData?.creditTransactionAmount),\n            \"checkNumber|onlyPositive\"\n          )}\n          // hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderDebitTransactionNo = (rowData: ICamCreditAndDebitTransactionRowData) => {\n    return (\n      <div className=\"flex items-start mt-1\">\n        <InputBox\n          name={`debitTransactionNo${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"debitTransactionNo\" })}\n          onBlur={validate}\n          value={rowData?.debitTransactionNo ?? \"\"}\n          validation={simpleValidator?.current?.message(\n            `debitTransactionNo${rowData?.uid}`,\n            rowData?.debitTransactionNo,\n            \"checkNumber|onlyPositive\"\n          )}\n          // hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n  const renderDebitTransactionAmount = (rowData: ICamCreditAndDebitTransactionRowData) => {\n    return (\n      <div className=\"flex items-start mt-1\">\n        <InputBox\n          name={`debitTransactionAmount${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) =>\n            handleTableFieldChange(e, { rowData, field: \"debitTransactionAmount\", currency: true })\n          }\n          className=\"text-right\"\n          // onBlur={validate}\n          value={rowData?.debitTransactionAmount ?? \"\"}\n          validation={simpleValidator?.current?.message(\n            `debitTransactionAmount${rowData?.uid}`,\n            getNumber(rowData?.debitTransactionAmount),\n            \"checkNumber|onlyPositive\"\n          )}\n          // hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderNoOfInwardCheckBounces = (rowData: ICamCreditAndDebitTransactionRowData) => {\n    return (\n      <div className=\"flex items-start mt-1\">\n        <InputBox\n          name={`checkBounceInward${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"checkBounceInward\" })}\n          // onBlur={validate}\n          className=\"text-right\"\n          value={rowData?.checkBounceInward ?? \"\"}\n          validation={simpleValidator?.current?.message(\n            `checkBounceInward${rowData?.uid}`,\n            rowData?.checkBounceInward,\n            \"checkNumber|onlyPositive\"\n          )}\n          // hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderNoOfOutwardCheckBounces = (rowData: ICamCreditAndDebitTransactionRowData) => {\n    return (\n      <div className=\"flex items-start mt-1\">\n        <InputBox\n          name={`checkBounceOutward${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"checkBounceOutward\" })}\n          // onBlur={validate}\n          className=\"text-right\"\n          value={rowData?.checkBounceOutward ?? \"\"}\n          validation={simpleValidator?.current?.message(\n            `checkBounceOutward${rowData?.uid}`,\n            rowData?.checkBounceOutward,\n            \"checkNumber|onlyPositive\"\n          )}\n          // hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderTotalNoOfCreditTransaction = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={`${pageObj?.total.creditTransactionNo}`}\n      />\n    );\n  };\n  const renderTotalOfCreditTransactionAmount = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={`₹${numberFormatter(getNumber(pageObj?.total.creditTransactionAmount), \"en-IN\", 0)}`}\n      />\n    );\n  };\n  const renderTotalNoOfDebitTransaction = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={`${pageObj?.total?.debitTransactionNo}`}\n      />\n    );\n  };\n  const renderTotalOfDebitTransactionAmount = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={`₹${numberFormatter(getNumber(pageObj?.total?.debitTransactionAmount), \"en-IN\", 0)}`}\n      />\n    );\n  };\n  const renderTotalNoOfInwardChequeBounces = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={`${pageObj?.total?.checkBounceInward}`}\n      />\n    );\n  };\n  const renderTotalNoOfOutwardChequeBounces = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={`${pageObj?.total?.checkBounceOutward}`}\n      />\n    );\n  };\n\n  const headerGroup = (\n    <ColumnGroup>\n      <Row>\n        <Column\n          className=\"pl-6 py-3 font-medium text-xs border-r border-secondary-stext-300\"\n          header={i18n.t(\"label.cam.month\")}\n          rowSpan={2}\n          field={TABLE_FIELDS.MONTH}\n        />\n        <Column\n          className=\"pl-6 font-medium text-xs py-1.5 table-header-of-sub-header bg-secondary-steelBlue-200 \"\n          header={i18n.t(\"label.cam.creditTransaction\")}\n          colSpan={2}\n        />\n        <Column\n          className=\"pl-6 font-medium text-xs py-1.5 table-header-of-sub-header bg-secondary-steelBlue-200 \"\n          header={i18n.t(\"label.cam.debitTransaction\")}\n          colSpan={2}\n        />\n        <Column\n          className=\"pl-6 font-medium text-xs py-1.5 table-header-of-sub-header bg-secondary-steelBlue-200 \"\n          header={i18n.t(\"label.cam.noOfChequeBounces\")}\n          colSpan={2}\n        />\n      </Row>\n      <Row>\n        <Column\n          className=\"pl-6 font-medium text-xs py-1.5 \"\n          header={i18n.t(\"label.cam.no\")}\n          colSpan={1}\n          field={TABLE_FIELDS.CREDIT_TNX_NO}\n        />\n        <Column\n          className=\"pl-6  font-medium text-xs  py-1.5 \"\n          header={i18n.t(\"label.cam.amount(₹)\")}\n          colSpan={1}\n          field={TABLE_FIELDS.CREDIT_TNX_AMOUNT}\n        />\n        <Column\n          className=\"pl-6 font-medium text-xs py-1.5 \"\n          header={i18n.t(\"label.cam.no\")}\n          colSpan={1}\n          field={TABLE_FIELDS.DEBIT_TNX_NO}\n        />\n        <Column\n          className=\"pl-6 font-medium text-xs  py-1.5 \"\n          header={i18n.t(\"label.cam.amount(₹)\")}\n          colSpan={1}\n          field={TABLE_FIELDS.DEBIT_TNX_AMOUNT}\n        />\n        <Column\n          className=\"pl-6 font-medium text-xs py-1.5 \"\n          header={i18n.t(\"label.cam.noOfInward\")}\n          colSpan={1}\n          field={TABLE_FIELDS.INWARD_CHECK_BOUNCE}\n        />\n        <Column\n          className=\"pl-6 font-medium text-xs py-1.5 \"\n          header={i18n.t(\"label.cam.noOfOutward\")}\n          colSpan={1}\n          field={TABLE_FIELDS.OUTWARD_CHECK_BOUNCE}\n        />\n      </Row>\n    </ColumnGroup>\n  );\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  // const { isLoading } = pageObj;\n  return (\n    <>\n      <SaveComponent\n        title=\"label.cam.creditAndDebit\"\n        pageMode={pageMode}\n        // disabled={isLoading || isLegalSectionAccessDisabled(legalStatus)}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <ReadOnlyTable\n              value={pageObj.tableData}\n              className=\" share-payment-details-table\"\n              ref={tableRef}\n              dataKey=\"uid\"\n              headerColumnGroup={headerGroup}\n            >\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6 min-w-24\"\n                header={i18n.t(\"label.cam.month\")}\n                body={renderMonth}\n                footer={renderTotal}\n                field={TABLE_FIELDS.MONTH}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-right text-xs  p-1 h-12 pl-6\"\n                header={i18n.t(\"label.cam.no\")}\n                body={renderCreditTransactionNo}\n                footer={renderTotalNoOfCreditTransaction}\n                field={TABLE_FIELDS.DEBIT_TNX_NO}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-right text-xs  p-1 h-12 pl-6 \"\n                header={i18n.t(\"label.cam.amount(₹)\")}\n                body={renderCreditTransactionAmount}\n                footer={renderTotalOfCreditTransactionAmount}\n                field={TABLE_FIELDS.DEBIT_TNX_AMOUNT}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-right text-xs  p-1 h-12 pl-6\"\n                header={i18n.t(\"label.cam.no\")}\n                body={renderDebitTransactionNo}\n                footer={renderTotalNoOfDebitTransaction}\n                field={TABLE_FIELDS.CREDIT_TNX_NO}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-right text-xs  p-1 h-12 pl-6\"\n                header={i18n.t(\"label.cam.amount(₹)\")}\n                body={renderDebitTransactionAmount}\n                footer={renderTotalOfDebitTransactionAmount}\n                field={TABLE_FIELDS.CREDIT_TNX_AMOUNT}\n              />\n\n              <Column\n                className=\"text-primary-ptext-1000 text-right text-xs  p-1 h-12 pl-6\"\n                header={i18n.t(\"label.cam.noOfInward\")}\n                body={renderNoOfInwardCheckBounces}\n                footer={renderTotalNoOfInwardChequeBounces}\n                field={TABLE_FIELDS.INWARD_CHECK_BOUNCE}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-right text-xs  p-1 h-12 pl-6\"\n                header={i18n.t(\"label.cam.noOfOutward\")}\n                body={renderNoOfOutwardCheckBounces}\n                footer={renderTotalNoOfOutwardChequeBounces}\n                field={TABLE_FIELDS.OUTWARD_CHECK_BOUNCE}\n              />\n            </ReadOnlyTable>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default CreditAndDebitTransactions;\n","import AclGuard from \"components/AclGuard\";\nimport { Column, EditableComponentRef } from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport ReadOnlyTable from \"components/ReadOnlyTable/ReadOnlyTable\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast\";\nimport { numberFormatter } from \"locale\";\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport LegalService from \"services/transaction/DDE/LegalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  toTitleCase,\n} from \"utils/CommonUtil\";\nimport {\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TCamMonthlyBankingAnalysisDay,\n  TCamMonthlyBankingAnalysisMonths,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { updateLegalDocumentScrutinizedRowDataObj } from \"views/transaction/PageDDE/Legal/Helper\";\nimport { ICamBankingAnalysisTab } from \"../../PageIncomeExpenseDetail/PageIncomeExpenseDetail\";\nimport DynamicColumnTable from \"components/DynamicColumnTable/DynamicColumnTable\";\nimport { getNumberIncludeNull, showCurrencyIncludeNull } from \"../../Helper\";\nimport CamService from \"services/transaction/CamService\";\nimport { useParams } from \"react-router-dom\";\n// import {ran} from \"typescript\"\n\nexport interface ICamMonthlyBankingAnalysisRowData {\n  uid?: string;\n  month: string;\n  year: number;\n  amount:string |number | null;\n}\nexport interface ICamMonthlyBankingAnalysisData {\n  //input/ output\n  dayOfMonth: TCamMonthlyBankingAnalysisDay;\n  bankingAnalysis: ICamMonthlyBankingAnalysisRowData[];\n}\n\ninterface ITableRow {\n  DAY: TCamMonthlyBankingAnalysisDay;\n  [key: string]: number | null | string;\n}\ninterface ITableColumn {\n  label: string;\n  key: keyof ITableRow;\n}\n\ninterface IPageObj {\n  rows: ITableRow[];\n  columns: ITableColumn[];\n  inputFields: string[] | [];\n}\ninterface IProps {\n  isLoading: boolean;\n  data: ICamMonthlyBankingAnalysisData[];\n  tab: ICamBankingAnalysisTab;\n  getDetailsCallback?: () => void;\n}\n\nexport const initialPageObj: IPageObj = {\n  columns: [],\n  rows: [],\n  inputFields: [],\n};\nconst COLUMN_KEY_DAY = \"DAY\";\n\nconst MonthlyBankingAnalysis: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, isLoading, tab, getDetailsCallback } = props;\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<IPageObj>({\n    ...initialPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    // structure the data which is accepted by component\n    console.log(\"call api\");\n    const rows: ITableRow[] = [];\n    const columns: ITableColumn[] = [];\n    const totalColumns = data?.[0]?.bankingAnalysis?.length;\n    const inputFields: string[] = [];\n    if (data?.length > 0 && totalColumns > 0) {\n      columns.push({ label: \"Day/Month\", key: COLUMN_KEY_DAY });\n      // get all columns\n      for (const record of data[0].bankingAnalysis) {\n        const key = `${record?.month}${record?.year}`;\n        const label = `${toTitleCase(record?.month)}-${record?.year} (₹)`;\n        inputFields.push(key);\n        columns.push({ label: label, key: key });\n      }\n      // get all rows\n      for (let recordIndex = 0; recordIndex < data?.length; recordIndex++) {\n        const day = data?.[recordIndex]?.dayOfMonth;\n        let row: ITableRow = {\n          [COLUMN_KEY_DAY]: day,\n        };\n\n        for (let columnIndex = 0; columnIndex < totalColumns; columnIndex++) {\n          const month = data?.[recordIndex]?.bankingAnalysis?.[columnIndex]?.month;\n          const year = data?.[recordIndex]?.bankingAnalysis?.[columnIndex]?.year;\n          const amount = data?.[recordIndex]?.bankingAnalysis?.[columnIndex]?.amount;\n          row = {\n            ...row,\n            [`${month}${year}`]: showCurrencyIncludeNull(amount),\n          };\n        }\n        rows.push(row);\n      }\n      // let {DAY,...rowDataExceptDay}=rows?.[0]\n      //  let inputFieldList:keyof ITableRow[] | [] = Object.keys(rowDataExceptDay);\n\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        columns: columns,\n        rows: rows,\n        inputFields: inputFields,\n      }));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    console.log(\"monthly banking analysis\", pageObj);\n  }, [pageObj]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n  // pageObj\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  // const handleChange = (e: any, options?: { currency: true }) => {\n  //   setPageObj((prevObj) => {\n  //     let updatedPageObj = { ...prevObj };\n  //     if (options?.currency) {\n  //       const unformattedValue = currencyFormatToNumber(e.target.value);\n  //       updatedPageObj = {\n  //         ...updatedPageObj,\n  //         [e.target.name]: numberFormatter(unformattedValue, \"en-IN\", 0),\n  //       };\n  //     } else {\n  //       updatedPageObj = { ...updatedPageObj, [e.target.name]: e.target.value };\n  //     }\n  //     return updatedPageObj;\n  //   });\n  // };\n\n  const handleChange = (\n    e: any,\n    options: { row: ITableRow; column: ITableColumn; index: number }\n  ) => {\n    // console.log(\"handle change\");\n    setPageObj((prevPageObj) => {\n      const updatedPageObj = { ...prevPageObj };\n      updatedPageObj.rows[options.index][options.column.key] = showCurrencyIncludeNull(\n        e.target.value\n      );\n      return updatedPageObj;\n    });\n  };\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    const payload = enrichForSave();\n    console.log(\"onSave payload\", payload);\n\n    try {\n      await CamService.updateMonthlyBankingAnalysis(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n      getDetailsCallback?.();\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    // resetValidator();\n    getDetailsCallback?.();\n    // if  form has existing saved  data then call api else clear all\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const getMonthAndYearFromKey = (columnKey: string) => {\n    //  let monthlabel= toTitleCase(month);\n    const month = columnKey?.substring(0, 3) ?? \"\";\n    const year = columnKey?.substring(3) ?? \"\";\n\n    return { month, year: Number(year) };\n  };\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const enrichForSave = () => {\n    const monthlyBankingAnalysis: ICamMonthlyBankingAnalysisData[] = [];\n    for (const record of pageObj.rows) {\n      const allKeyList = Object.keys(record);\n      const rowData: ICamMonthlyBankingAnalysisData = {\n        dayOfMonth: record?.DAY,\n        bankingAnalysis: [],\n      };\n      const bankingAnalysisList: ICamMonthlyBankingAnalysisRowData[] = [];\n\n      const savedDataRow: ICamMonthlyBankingAnalysisData | undefined = data?.find(\n        (row: any) => row?.dayOfMonth === record?.DAY\n      );\n\n      for (const key of allKeyList) {\n        if (key === COLUMN_KEY_DAY) {\n          continue;\n        }\n        const keyData = getMonthAndYearFromKey(key);\n        const savedDataCell: ICamMonthlyBankingAnalysisRowData | undefined =\n          savedDataRow?.bankingAnalysis?.find(\n            (column) => column.month === keyData?.month && column.year === keyData?.year\n          );\n        const bankingAnalysisRecord: ICamMonthlyBankingAnalysisRowData = {\n          uid: savedDataCell?.uid??undefined,\n          amount: getNumberIncludeNull(record?.[key]),\n          month: keyData?.month,\n          year: keyData?.year,\n        };\n\n        bankingAnalysisList.push(bankingAnalysisRecord);\n      }\n      rowData.bankingAnalysis = bankingAnalysisList;\n      monthlyBankingAnalysis.push(rowData);\n    }\n\n    return {\n      loan: {\n        uid: params?.loanUid,\n      },\n      stage: {\n        uid: params?.stageUid,\n      },\n      bankingDetail: {\n        uid: tab?.bankingDetailsUid,\n      },\n      monthlyBankingAnalysis: monthlyBankingAnalysis,\n    };\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  // const { isLoading } = pageObj;\n  return (\n    <>\n      <SaveComponent\n        title=\"label.cam.monthlyBankingAnalysis\"\n        pageMode={pageMode}\n        // disabled={isLoading || isLegalSectionAccessDisabled(legalStatus)}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <DynamicColumnTable\n              //  key={}\n              rows={pageObj?.rows}\n              columns={pageObj?.columns}\n              inputFields={pageObj?.inputFields}\n              handleChange={handleChange}\n            />\n            \n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default MonthlyBankingAnalysis;\n","import AclGuard from \"components/AclGuard\";\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport EditableTableV2, {\n  Column,\n  EditableComponentRef,\n} from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast\";\nimport i18n from \"i18n\";\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CamService from \"services/transaction/CamService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  CAM_APPLICANT_TYPE_OPTIONS,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport {\n  getNumber,\n  getString,\n  showCurrency,\n  updateCamMonthlyHouseholdExpenseRowDataObj,\n} from \"../../Helper\";\nimport { ICamIncomeExpenseDetailsDropdownList } from \"../../PageIncomeExpenseDetail/PageIncomeExpenseDetail\";\n\nexport interface ICamMonthlyHouseholdExpensePageObj {\n  total: {\n    amount: string;\n  };\n}\ninterface IProps {\n  dropDownOptions: ICamIncomeExpenseDetailsDropdownList;\n  data: ICamMonthlyHouseholdExpensePageObj;\n  getDetailsCallback?: () => void;\n}\n\nexport interface ICamMonthlyExpenseRowData {\n  uid: string;\n  smCustomerType: string;\n  smExpenseType: string;\n  smExpenseFrequency: string;\n  amount: string | number;\n  remarks: string;\n  isActive: boolean;\n}\n\nconst initialTableRowData: ICamMonthlyExpenseRowData = {\n  uid: \"\",\n  smCustomerType: \"\",\n  smExpenseType: \"\",\n  smExpenseFrequency: \"\",\n  amount: \"\",\n  remarks: \"\",\n  isActive: true,\n};\n\nexport const initialCamMonthlyHouseholdExpensePageObj: ICamMonthlyHouseholdExpensePageObj = {\n  total: {\n    amount: \"\",\n  },\n};\n\nconst MonthlyHouseholdExpenses: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, dropDownOptions, getDetailsCallback } = props;\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ICamMonthlyHouseholdExpensePageObj>({\n    ...initialCamMonthlyHouseholdExpensePageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      ...data,\n    }));\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  const handleTableFieldChange = (\n    e: any,\n    options: {\n      rowData: ICamMonthlyExpenseRowData;\n      field: keyof ICamMonthlyExpenseRowData;\n      currency?: boolean;\n    }\n  ) => {\n    let rowDataObj: ICamMonthlyExpenseRowData = { ...options.rowData };\n    if (options.currency) {\n      rowDataObj = {\n        ...rowDataObj,\n        [`${options.field}`]: showCurrency(e.target.value),\n      };\n      // updateTotalAmount(options.field);\n    } else {\n      rowDataObj = {\n        ...rowDataObj,\n        [`${options.field}`]: e.target.value,\n      };\n    }\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    const payload = enrichForSave();\n    try {\n      await CamService.updateMonthlyExpense(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n      tableRef.current?.clearAll();\n      tableRef.current?.search();\n      getDetailsCallback?.(); // to get total\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    resetValidator();\n    tableRef.current?.clearAll();\n    tableRef.current?.search();\n    getDetailsCallback?.(); // to get total\n    // if  form has existing saved  data then call api else clear all\n  };\n\n  const onAddDocument = () => {\n    tableRef.current?.addRow({ ...initialTableRowData });\n  };\n\n  const onDeleteRow = (rowData: ICamMonthlyExpenseRowData) => {\n    tableRef.current?.deleteRow(rowData);\n    // updateTotalAmount(\"amount\");\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const enrichForSave = () => {\n    console.log(\"enrich for save\");\n    let addRows = tableRef.current?.getAddedRecords() ?? [];\n    let deletedRows = tableRef.current?.getDeletedRecords() ?? [];\n    let updatedRows = tableRef.current?.getUpdatedRecords() ?? [];\n    addRows = addRows.map((rowData: any) => updateCamMonthlyHouseholdExpenseRowDataObj(rowData));\n    deletedRows = deletedRows.map((rowData: any) =>\n      updateCamMonthlyHouseholdExpenseRowDataObj(rowData)\n    );\n    updatedRows = updatedRows.map((rowData: any) =>\n      updateCamMonthlyHouseholdExpenseRowDataObj(rowData)\n    );\n\n    const monthlyExpenses = [...addRows, ...deletedRows, ...updatedRows];\n    return {\n      loan: {\n        uid: params?.loanUid,\n      },\n      stage: {\n        uid: params?.stageUid,\n      },\n      monthlyExpenses: monthlyExpenses,\n    };\n  };\n\n  const updateTotalAmount = (field: keyof ICamMonthlyExpenseRowData) => {\n      const allRecords = tableRef.current?.getCurrentRecords();\n      let totalAmount = 0;\n      allRecords?.forEach((record: ICamMonthlyExpenseRowData) => {\n        totalAmount += getNumber(record?.[field]);\n      });\n\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        total: {\n          ...prevObj.total,\n          [field]: totalAmount,\n        },\n      }));\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  const renderCustomerType = (rowData: ICamMonthlyExpenseRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.customerType\"\n          name={`smCustomerType${rowData?.uid}`}\n          value={rowData?.smCustomerType}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={CAM_APPLICANT_TYPE_OPTIONS}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"smCustomerType\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `smCustomerType${rowData?.uid}`,\n            rowData.smCustomerType,\n            \"mandatory\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderExpenseType = (rowData: ICamMonthlyExpenseRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.expenseType\"\n          name={`smExpenseType${rowData?.uid}`}\n          value={rowData?.smExpenseType}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={dropDownOptions.expenseType}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"smExpenseType\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `expenseType${rowData?.uid}`,\n            rowData.smExpenseType,\n            \"mandatory\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderExpenseFrequency = (rowData: ICamMonthlyExpenseRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.expenseFrequency\"\n          name={`smExpenseFrequency${rowData?.uid}`}\n          value={rowData?.smExpenseFrequency}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={dropDownOptions.expenseFrequency}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"smExpenseFrequency\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `expenseFrequency${rowData?.uid}`,\n            rowData.smExpenseFrequency,\n            \"mandatory\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderAmount = (rowData: ICamMonthlyExpenseRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`amount${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"amount\", currency: true })}\n          className=\"text-right\"\n          onBlur={validate}\n          value={rowData?.amount}\n          validation={simpleValidator?.current?.message(\n            `amount${rowData?.uid}`,\n            currencyFormatToNumber(getString(rowData?.amount)),\n            \"mandatory|checkNumber|onlyPositive\"\n          )}\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderRemark = (rowData: ICamMonthlyExpenseRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`remarks${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"remarks\" })}\n          // className=\"text-right\"\n          onBlur={validate}\n          value={rowData?.remarks}\n          validation={simpleValidator?.current?.message(\n            `remarks${rowData?.uid}`,\n            currencyFormatToNumber(getString(rowData?.remarks)),\n            \"mandatory\"\n          )}\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <div className=\"\">\n        <IconButton\n          buttonType={BUTTON_TYPES.DELETE}\n          onClick={() => onDeleteRow(rowData)}\n          disabled={pageMode === PAGE_MODE.VIEW}\n          tooltipOptions={{\n            position: \"left\",\n            className: \"text-xs font-Roboto bg-black text-white !p-1 rounded-md \",\n            showDelay: \"1000,\",\n            hideDelay: \"300\",\n          }}\n        />\n      </div>\n    );\n  };\n\n  const renderTotal = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000  \"\n        label={`label.cibilDetails.enquirySummary.thead.total`}\n      />\n    );\n  };\n\n  const renderTotalOfAmount = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={`₹${showCurrency(pageObj?.total?.amount)}`}\n      />\n    );\n  };\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  return (\n    <>\n      <SaveComponent\n        title=\"\"\n        pageMode={pageMode}\n        // disabled={isLoading || isLegalSectionAccessDisabled(legalStatus)}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n          <div className=\" grid grid-cols-4 gap-3  \">\n            <div className=\"col-span-4\">\n              {typeof pageMode === \"string\" ? (\n                <>\n                  <div className=\"flex mb-3 justify-end\">\n                    <div className=\" mr-3 self-center\">\n                      <ButtonBox\n                        buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                        customLabel={\"label.cam.add\"}\n                        onClick={onAddDocument}\n                      />\n                    </div>\n                  </div>\n\n                  <EditableTableV2\n                    ref={tableRef}\n                    uniqueKey=\"uid\"\n                    standardDataFormatPromise={CamService.getMonthlyExpense}\n                    search={`&stage.uid=${params?.stageUid}&loan.uid=${params?.loanUid}&isActive=true`}\n                    mode={\"UPDATE\"}\n                    // scrollable\n                    className=\"table-auto-height\"\n                    onUpdateCallback={()=>{\n                      updateTotalAmount(\"amount\")\n                    }}\n                  >\n                    <Column\n                      header={i18n.t(\"label.cam.applicantType\")}\n                      className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6  min-w-40\"\n                      body={renderCustomerType}\n                      footer={renderTotal}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.expenseType\")}\n                      className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6 min-w-40\"\n                      body={renderExpenseType}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.expenseFrequency\")}\n                      className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6 min-w-40\"\n                      body={renderExpenseFrequency}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.amount(₹)\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderAmount}\n                      footer={renderTotalOfAmount}\n                      footerClassName=\" text-right\"\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.remarks\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6 \"\n                      body={renderRemark}\n                    />\n                    <Column\n                      header={i18n.t(\"label.investmentInfo.table.colTitle.action\")}\n                      className=\"text-primary-ptext-1000 text-right text-xs h-12 px-6 \"\n                      style={{ minWidth: \"50px\", width: \"50px\" }}\n                      body={renderActions}\n                      // alignFrozen=\"right\"\n                      // frozen\n                    />\n                  </EditableTableV2>\n                </>\n              ) : null}\n            </div>\n          </div>\n        </AclGuard>\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default MonthlyHouseholdExpenses;\n","import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport Section from \"components/Section/Section\";\nimport SimpleTab from \"components/SimpleTab/SimpleTab\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport ToastCustom from \"components/Toast\";\nimport WarningDialog from \"components/WarningDialog/WarningDialog\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport CamService from \"services/transaction/CamService\";\nimport ShortUniqueId from \"short-unique-id\";\nimport { parseStandardAPIErrorMessage } from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  CAM_APPLICANT_TYPE,\n  CAM_APPLICANT_TYPE_LABEL,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TCamApplicantType,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { IDropDownOptions } from \"views/transaction/PageDDE/Login/Helper\";\nimport {\n  updateCamBankAccountStatementObj,\n  updateCamBankStatementAnalysisPageObj,\n  updateCamBankingBasicDetailsObj,\n  updateCamBankingSummaryPageObj,\n  updateCamCreditDebitTransactionTable,\n  updateCamIncomeEligibilityPageObj,\n  updateCamMonthlyBankingAnalysisData,\n  updateCamMonthlyHouseholdExpensePageObj,\n} from \"../Helper\";\nimport BankAccountStatement, {\n  ICamBankAccountStatementPageObj,\n  initialCamBankAccountStatementPageOj,\n} from \"../Sections/BankAccountStatment/BankAccountStatement\";\nimport BankStatementAnalysis, {\n  ICamBankStatementAnalysisPageObj,\n  initialCamBankStatementAnalysisPageOj,\n} from \"../Sections/BankStatementAnalysis/BankStatementAnalysis\";\nimport BankingSummary, {\n  ICamBankingSummaryRowData,\n} from \"../Sections/BankingSummray/BankingSummary\";\nimport BasicDetails, {\n  ICamBankingAnalysisBasicDetailsPageObj,\n  initialCamBankingBasicDetailsPageObj,\n} from \"../Sections/BasicDetails/BasicDetails\";\nimport CreditAndDebitTransactions, {\n  ICamCreditAndDebitTransactionRowData,\n} from \"../Sections/CreditAndDebitTransactions/CreditAndDebitTransactions\";\nimport IncomeEligibilityCalculation, {\n  ICamIncomeEligibilityCalculationPageObj,\n  initialCamIncomeEligibilityCalculationPageObj,\n} from \"../Sections/IncomeEligibilityCalculation/IncomeEligibilityCalculation\";\nimport MonthlyBankingAnalysis, {\n  ICamMonthlyBankingAnalysisData,\n} from \"../Sections/MonthlyBankingAnalysis/MonthlyBankingAnalysis\";\nimport MonthlyHouseholdExpenses, {\n  ICamMonthlyHouseholdExpensePageObj,\n  initialCamMonthlyHouseholdExpensePageObj,\n} from \"../Sections/MonthlyHouseholdExpense/MonthlyHouseholdExpense\";\n\nexport interface ICamBankingBasicDetailDropdown {\n  uid?: string;\n  applicant?: {\n    uid: string;\n    applicantType?: TCamApplicantType;\n    firstName?: string;\n    fullName?: string;\n  };\n  ifsc?: {\n    ifscCode?: string;\n    branch?: string;\n    bank?: {\n      uid?: string;\n      name?: string;\n    };\n  };\n  accountNo?: string;\n  accountHolderName?: string;\n  smAccountType?: string;\n}\nexport interface ICamIncomeExpenseDetailsDropdownList {\n  typeOfApplicant?: IDropDownOptions[];\n  customerName?: ICamBankingBasicDetailDropdown[];\n  bankFinancierName?: ICamBankingBasicDetailDropdown[];\n  accountNumber?: ICamBankingBasicDetailDropdown[];\n  accountType?: IDropDownOptions[];\n  customerType?: IDropDownOptions[];\n  expenseType?: IDropDownOptions[];\n  expenseFrequency?: IDropDownOptions[];\n}\n\ninterface IBusinessProofRowData {\n  uid: string;\n  documentProof: string;\n  documentYearFrom: string;\n  documentYearTo: string;\n  remark: string;\n}\n\nexport interface ICamBankingAnalysisTab {\n  name?: string;\n  tabUid?: string;\n  bankingDetailsUid?: string;\n  disabled: boolean;\n  key?: string;\n}\ninterface IPageObj {\n  dropdownOptions: ICamIncomeExpenseDetailsDropdownList;\n  isLoading: {\n    monthlyBankingAnalysis: boolean;\n    incomeEligibilityCalculations: boolean;\n    bankingBasicDetail: boolean;\n    creditDebitTransaction: boolean;\n    tabs: boolean; //  also loader for bankingSummary\n    bankStatementAnalysis: boolean;\n    monthlyHouseholdExpense: boolean;\n  };\n  bakingAnalysis: {\n    tabs: ICamBankingAnalysisTab[];\n    index?: number;\n    deleteWarningPopup?: boolean;\n    deleteTabUid: string;\n  };\n  bankingBasicDetail: ICamBankingAnalysisBasicDetailsPageObj;\n  monthlyBankingAnalysis: ICamMonthlyBankingAnalysisData[];\n  creditDebitTransaction: ICamCreditAndDebitTransactionRowData[];\n  bankAccountStatement: ICamBankAccountStatementPageObj;\n  bankStatementAnalysis: ICamBankStatementAnalysisPageObj;\n  bankingSummary: ICamBankingSummaryRowData[];\n  incomeEligibilityCalculations: ICamIncomeEligibilityCalculationPageObj;\n  monthlyHouseholdExpense: ICamMonthlyHouseholdExpensePageObj;\n}\n\nconst initialPageOj: IPageObj = {\n  dropdownOptions: {\n    typeOfApplicant: [],\n    accountNumber: [],\n    accountType: [],\n    bankFinancierName: [],\n  },\n  bakingAnalysis: {\n    tabs: [],\n    index: 0,\n    deleteWarningPopup: false,\n    deleteTabUid: \"\",\n  },\n  bankingBasicDetail: { ...initialCamBankingBasicDetailsPageObj },\n  monthlyBankingAnalysis: [],\n  bankAccountStatement: { ...initialCamBankAccountStatementPageOj },\n  bankStatementAnalysis: { ...initialCamBankStatementAnalysisPageOj },\n  bankingSummary: [],\n  incomeEligibilityCalculations: { ...initialCamIncomeEligibilityCalculationPageObj },\n  monthlyHouseholdExpense: { ...initialCamMonthlyHouseholdExpensePageObj },\n  creditDebitTransaction: [],\n  isLoading: {\n    tabs: false, //  also loader for bankingSummary\n    creditDebitTransaction: false,\n    monthlyBankingAnalysis: false,\n    incomeEligibilityCalculations: false,\n    bankingBasicDetail: false,\n    bankStatementAnalysis: false,\n    monthlyHouseholdExpense: false,\n  },\n};\n\nconst PageIncomeExpenseDetail = () => {\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n  const uniqueKey = new ShortUniqueId({ length: 5 });\n\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<any>(\"\");\n  const [pageObj, setPageObj] = useState<IPageObj>({ ...initialPageOj });\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n\n  // ref\n  const toastMessageRef = useRef(null);\n  const tabRef = useRef<any>(null);\n\n  const [, forceUpdate] = useState<boolean>(false);\n\n  // --------------------------- global variables ---------------------- //\n\n  const menuModel = (tabDetails: ICamBankingAnalysisTab, index: number) => [\n    {\n      className: \"\",\n      label: \"Remove\",\n      command: () => {\n        const savedTabs = pageObj.bakingAnalysis.tabs.filter((tab) => tab.tabUid !== \"\");\n        // console.log(\"savedTabs\", savedTabs);\n        if (savedTabs.length === 1 && tabDetails?.tabUid) {\n          return;\n        }\n        // toggleTabs(true);\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          bakingAnalysis: {\n            ...prevPageObj.bakingAnalysis,\n            deleteTabUid: tabDetails?.tabUid ?? \"\",\n            deleteWarningPopup: true,\n          },\n        }));\n        // handleTabChange({ index: index });\n      },\n    },\n  ];\n\n  /*\n       -------------------------------------------------------\n         useEffect\n       -------------------------------------------------------\n     */\n\n  useEffect(() => {\n    init();\n  }, [params?.loanUid, params?.stageUid]);\n\n  const init = () => {\n    getAllTabs({ onLoad: true });\n    basicDetailsAllDropdownOptions();\n    getStageDetails();\n    getExpenseFrequencyOptions();\n    getExpenseTypeOptions();\n  };\n\n  useEffect(() => {\n    if (\n      pageObj?.isLoading?.bankingBasicDetail ||\n      pageObj?.isLoading?.monthlyBankingAnalysis ||\n      pageObj?.isLoading?.creditDebitTransaction ||\n      pageObj?.isLoading?.tabs\n    ) {\n      toggleTabs(true);\n    } else {\n      toggleTabs(false);\n    }\n  }, [\n    pageObj?.isLoading?.bankingBasicDetail,\n    pageObj?.isLoading?.monthlyBankingAnalysis,\n    pageObj?.creditDebitTransaction,\n    pageObj?.isLoading?.tabs,\n  ]);\n  /*\n      -------------------------------------------------------\n        Service Calls\n      -------------------------------------------------------\n    */\n\n  const getAllTabs = async (options?: { ignoreLoader?: boolean; onLoad?: boolean }) => {\n    try {\n      if (!options?.ignoreLoader) {\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            tabs: true,\n          },\n        }));\n      }\n      const res = await CamService.getBankingAnalysisTabs(\n        params?.stageUid ?? \"\",\n        params?.loanUid ?? \"\"\n      );\n      if (res?.data?.results?.length === 0) {\n        // no existing\n        // console.log(\"test\");\n        // onAddMoreTabs();\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          bakingAnalysis: {\n            ...prevPageObj.bakingAnalysis,\n            tabs: [\n              {\n                tabUid: \"\",\n                applicantType: \"\",\n                disabled: false,\n                name: \"New Tab\",\n                bankingDetailsUid: \"\",\n              },\n            ],\n            index: 0,\n          },\n          // bankingSummary:updateCamBankingSummaryPageObj(res?.data?.results),\n          isLoading: {\n            ...prevPageObj.isLoading,\n            tabs: false,\n          },\n        }));\n        // updateCamBankingSummaryPageObj\n      } else {\n        //  At least one tab  exist\n        if (options?.onLoad) {\n          const bankingDetailUid = res?.data?.results?.[0]?.bankingDetail?.uid;\n          getBasicDetailsAndAccountStatement(bankingDetailUid ?? \"\");\n          getBankStatementAnalysis(bankingDetailUid ?? \"\");\n          getMonthlyBankingAnalysis(bankingDetailUid ?? \"\");\n          getCreditDebitTransactions(bankingDetailUid ?? \"\");\n        }\n        const tabs: ICamBankingAnalysisTab[] = [];\n\n        res?.data?.results?.forEach((tab: any) => {\n          const name = getTabNameForAllTabs(tab);\n          const record: ICamBankingAnalysisTab = {\n            tabUid: tab?.uid,\n            bankingDetailsUid: tab?.bankingDetail?.uid ?? \"\",\n            name: name,\n            disabled: false,\n          };\n          tabs.push(record);\n        });\n\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          bakingAnalysis: {\n            ...prevPageObj.bakingAnalysis,\n            tabs: tabs,\n          },\n          bankingSummary: [...updateCamBankingSummaryPageObj(res?.data?.results)],\n          isLoading: {\n            ...prevPageObj.isLoading,\n            tabs: false,\n          },\n        }));\n      }\n    } catch (err) {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        isLoading: {\n          ...prevPageObj.isLoading,\n          tabs: false,\n        },\n      }));\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const deleteTab = async (tabUid: string) => {\n    try {\n      const payload = enrichForTabDelete(tabUid);\n      await CamService.updateBankingBasicDetails(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      // getAllTabs({ onLoad: true });\n      const currentIndex = pageObj?.bakingAnalysis?.index ?? 0;\n      let getIndex = 0;\n      if (currentIndex === 0) {\n        //more than one tab exist is the pre-requisite\n        getIndex = 1;\n      } else {\n        getIndex = currentIndex - 1;\n      }\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        bakingAnalysis: {\n          ...prevPageObj.bakingAnalysis,\n          deleteTabUid: \"\",\n          deleteWarningPopup: false,\n        },\n      }));\n      handleTabChange({ index: getIndex }, true);\n      // updateCamCreditDebitTransactionTable\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const basicDetailsAllDropdownOptions = async () => {\n    try {\n      const res = await CamService.bankingDetailsSearch(\n        params?.loanUid ?? \"\",\n        `&applicant.applicantType:in=[${CAM_APPLICANT_TYPE.PRIMARY},${CAM_APPLICANT_TYPE.CO_APPLICANT},${CAM_APPLICANT_TYPE.GUARANTOR}]`\n      );\n      const customerList: any[] = [];\n      const bankNameList: any[] = [];\n      const accountNumberList: any[] = [];\n      res?.data?.results?.forEach((customer: any) => {\n        if (!customerList?.some((record) => record.applicant?.uid === customer?.applicant?.uid)) {\n          customerList.push(customer);\n        }\n        if (!bankNameList?.some((record) => record?.ifsc?.bank?.uid === customer.ifsc?.bank?.uid)) {\n          bankNameList.push(customer);\n        }\n        if (!accountNumberList?.some((record) => record?.accountNo === customer.accountNo)) {\n          accountNumberList.push(customer);\n        }\n      });\n\n      setPageObj((prevState: any) => ({\n        ...prevState,\n        dropdownOptions: {\n          ...prevState?.dropdownOptions,\n          customerName: customerList,\n          bankFinancierName: bankNameList,\n          accountNumber: accountNumberList,\n        },\n      }));\n\n      // updateDropdownOptions(\"bankFinancierName\", res?.data?.results);\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getBasicDetailsAndAccountStatement = async (\n    bankingDetailUid: string,\n    ignoreLoader?: boolean\n  ) => {\n    if (bankingDetailUid) {\n      if (!ignoreLoader) {\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            bankingBasicDetail: true,\n          },\n        }));\n      }\n      // let tabDetails =pageObj?.\n      try {\n        const res = await CamService.getBankingBasicDetailsAndAccountStatement(\n          bankingDetailUid ?? \"\"\n        );\n        setPageObj((prevPageObj) => {\n          const updatedPageObj: IPageObj = {\n            ...prevPageObj,\n            bankingBasicDetail: {\n              ...prevPageObj.bankingBasicDetail,\n              ...updateCamBankingBasicDetailsObj(res?.data),\n            },\n            bankAccountStatement: {\n              ...prevPageObj.bankAccountStatement,\n              ...updateCamBankAccountStatementObj(res?.data),\n            },\n            isLoading: {\n              ...prevPageObj.isLoading,\n              bankingBasicDetail: false,\n            },\n          };\n          // const currentIndex: any = updatedPageObj.bakingAnalysis.index;\n          // if (currentIndex && currentIndex <updatedPageObj.bakingAnalysis.tabs?.length ) {\n          //   updatedPageObj.bakingAnalysis.tabs[currentIndex].name = getTabName(res?.data) ?? \"\";\n          // }\n          return updatedPageObj;\n        });\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            bankingBasicDetail: false,\n          },\n        }));\n      }\n    }\n  };\n\n  const getBankStatementAnalysis = async (bankingDetailUid: string, ignoreLoader?: boolean) => {\n    if (bankingDetailUid) {\n      if (!ignoreLoader) {\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            bankStatementAnalysis: true,\n          },\n        }));\n      }\n      try {\n        const res = await CamService.getBankStatementAnalysis(\n          params?.stageUid ?? \"\",\n          bankingDetailUid\n        );\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          bankStatementAnalysis: {\n            ...prevPageObj.bankStatementAnalysis,\n            ...updateCamBankStatementAnalysisPageObj(res?.data),\n          },\n          isLoading: {\n            ...prevPageObj.isLoading,\n            bankStatementAnalysis: false,\n          },\n        }));\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            bankStatementAnalysis: false,\n          },\n        }));\n      }\n    }\n  };\n\n  const getMonthlyBankingAnalysis = async (bankingDetailUid: string, ignoreLoader?: boolean) => {\n    if (bankingDetailUid) {\n      if (!ignoreLoader) {\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            monthlyBankingAnalysis: true,\n          },\n        }));\n      }\n      try {\n        const res = await CamService.getMonthlyBankingAnalysis(\n          params?.stageUid ?? \"\",\n          bankingDetailUid\n        );\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          monthlyBankingAnalysis: updateCamMonthlyBankingAnalysisData(res?.data),\n          isLoading: {\n            ...prevPageObj.isLoading,\n            monthlyBankingAnalysis: false,\n          },\n        }));\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            monthlyBankingAnalysis: false,\n          },\n        }));\n      }\n    }\n  };\n\n  const getCreditDebitTransactions = async (bankingDetailUid: string, ignoreLoader?: boolean) => {\n    if (bankingDetailUid) {\n      if (!ignoreLoader) {\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            creditDebitTransaction: true,\n          },\n        }));\n      }\n      try {\n        const res = await CamService.getCreditDebitTransaction(\n          params?.stageUid ?? \"\",\n          bankingDetailUid\n        );\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          creditDebitTransaction: updateCamCreditDebitTransactionTable(res?.data),\n          isLoading: {\n            ...prevPageObj.isLoading,\n            creditDebitTransaction: false,\n          },\n        }));\n        // updateCamCreditDebitTransactionTable\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          isLoading: {\n            ...prevPageObj.isLoading,\n            creditDebitTransaction: false,\n          },\n        }));\n      }\n    }\n  };\n\n  const getStageDetails = async (ignoreLoader?: boolean) => {\n    if (!ignoreLoader) {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        isLoading: {\n          ...prevPageObj.isLoading,\n          incomeEligibilityCalculations: true,\n          monthlyHouseholdExpense: true,\n        },\n      }));\n    }\n    try {\n      const res = await CamService.getCamStageDetails(params?.stageUid ?? \"\");\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        incomeEligibilityCalculations: {\n          ...prevPageObj.incomeEligibilityCalculations,\n          ...updateCamIncomeEligibilityPageObj(res?.data),\n        },\n        monthlyHouseholdExpense: {\n          ...prevPageObj.monthlyHouseholdExpense,\n          ...updateCamMonthlyHouseholdExpensePageObj(res?.data),\n        },\n        isLoading: {\n          ...prevPageObj.isLoading,\n          incomeEligibilityCalculations: false,\n          monthlyHouseholdExpense: false,\n        },\n      }));\n    } catch (e) {\n      setErrorMessage(parseStandardAPIErrorMessage(e));\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        isLoading: {\n          ...prevPageObj.isLoading,\n          incomeEligibilityCalculations: false,\n          monthlyHouseholdExpense: false,\n        },\n      }));\n    }\n  };\n\n  const onGetBasicDetailsCallback = (\n    bankingDetailsUid?: string,\n    option?: { reloadRelatedSections?: boolean }\n  ) => {\n    getBasicDetailsAndAccountStatement(bankingDetailsUid ?? \"\", true);\n    getAllTabs({ ignoreLoader: true, onLoad: false });\n    if (option?.reloadRelatedSections) {\n      //  need to reload  all the time ?. need to confirm\n      getMonthlyBankingAnalysis(bankingDetailsUid ?? \"\");\n      getCreditDebitTransactions(bankingDetailsUid ?? \"\");\n    }\n  };\n\n  const getExpenseFrequencyOptions = async () => {\n    try {\n      const res = await StaticMasterDataService.getAll(\n        0,\n        50,\n        \"staticMasterType.code=FREQUENCY_OF_EXPENSE&\"\n      );\n      updateDropdownOptions(\"expenseFrequency\", res?.data?.results);\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getExpenseTypeOptions = async () => {\n    try {\n      const res = await StaticMasterDataService.getAll(\n        0,\n        50,\n        \"staticMasterType.code=TYPE_OF_EXPENSE&\"\n      );\n      updateDropdownOptions(\"expenseType\", res?.data?.results);\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /*\n      -------------------------------------------------------\n        Handlers\n      -------------------------------------------------------\n    */\n  const handleTabChange = (e: any, reloadTabs?: boolean) => {\n    if (pageObj?.bakingAnalysis?.index !== e.index) {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        bakingAnalysis: {\n          ...prevPageObj.bakingAnalysis,\n          index: e.index,\n        },\n      }));\n      // call api's after tab change\n      const applicantBankingAnalysis: ICamBankingAnalysisTab | undefined = pageObj?.bakingAnalysis\n        ?.tabs?.[e.index]\n        ? { ...pageObj.bakingAnalysis.tabs[e.index] }\n        : undefined;\n      if (applicantBankingAnalysis?.tabUid) {\n        // data existing tab\n        getBasicDetailsAndAccountStatement(applicantBankingAnalysis?.bankingDetailsUid ?? \"\");\n        getBankStatementAnalysis(applicantBankingAnalysis?.bankingDetailsUid ?? \"\");\n        getMonthlyBankingAnalysis(applicantBankingAnalysis?.bankingDetailsUid ?? \"\");\n        getCreditDebitTransactions(applicantBankingAnalysis?.bankingDetailsUid ?? \"\");\n      } else {\n        // unsaved data tab\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          bankingBasicDetail: {\n            ...initialCamBankingBasicDetailsPageObj,\n          },\n          monthlyBankingAnalysis: [],\n          creditDebitTransaction: [],\n          bankAccountStatement: {\n            ...initialCamBankAccountStatementPageOj,\n          },\n          bankStatementAnalysis: { ...initialCamBankStatementAnalysisPageOj },\n        }));\n      }\n      if (reloadTabs) {\n        getAllTabs({ ignoreLoader: true });\n      }\n    }\n  };\n\n  /* \n      --------------------------------------------------------\n      Validators\n      --------------------------------------------------------\n    */\n\n  /*\n      -------------------------------------------------------\n        Button Click Handlers\n      -------------------------------------------------------\n    */\n\n  const onAddMoreTabs = () => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      bakingAnalysis: {\n        ...prevObj.bakingAnalysis,\n        tabs: [\n          ...prevObj.bakingAnalysis.tabs,\n          {\n            applicantType: \"\",\n            disabled: false,\n            name: \"New Tab\",\n            bankingDetailsUid: \"\",\n            tabUid: \"\",\n          },\n        ],\n        index: prevObj.bakingAnalysis.tabs.length,\n      },\n      bankingBasicDetail: { ...initialCamBankingBasicDetailsPageObj },\n      monthlyBankingAnalysis: [],\n      creditDebitTransaction: [],\n      bankAccountStatement: {\n        ...initialCamBankAccountStatementPageOj,\n      },\n      bankStatementAnalysis: { ...initialCamBankStatementAnalysisPageOj },\n    }));\n    // setTabAddedFlag((prevState: boolean) => !prevState);\n  };\n\n  const onHideWarningPopup = () => {\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      bakingAnalysis: {\n        ...prevPageObj.bakingAnalysis,\n        deleteWarningPopup: false,\n        deleteTabUid: \"\",\n      },\n    }));\n  };\n\n  const onConfirmDeleteTab = () => {\n    // saved tab is deleted\n    if (pageObj?.bakingAnalysis?.deleteTabUid) {\n      deleteTab(pageObj?.bakingAnalysis?.deleteTabUid);\n    } else {\n      // unsaved tab is deleted\n      const currentIndex = pageObj?.bakingAnalysis?.index ?? 0;\n      const deleteTabDetails = { ...pageObj?.bakingAnalysis };\n      let getIndex = 0;\n      if (currentIndex === 0) {\n        //more than one tab exist is the pre-requisite\n        getIndex = 1;\n      } else {\n        getIndex = currentIndex - 1;\n      }\n\n      handleTabChange({ index: getIndex });\n      setPageObj((prevPageObj) => {\n        const updatedPageObj = { ...prevPageObj };\n        const prevIndex = prevPageObj.bakingAnalysis.index ?? 0;\n        updatedPageObj.bakingAnalysis = {\n          ...prevPageObj.bakingAnalysis,\n          deleteWarningPopup: false,\n          tabs: deleteTabDetails?.tabs.filter((tab, index) => index !== currentIndex),\n        };\n        return updatedPageObj;\n      });\n    }\n  };\n\n  /*\n      -------------------------------------------------------\n        Helper Functions\n      -------------------------------------------------------\n    */\n\n  const enrichForTabDelete = (tabUid: string) => {\n    return {\n      uid: tabUid,\n      isActive: false,\n    };\n  };\n\n  const updateDropdownOptions = (\n    key: keyof ICamIncomeExpenseDetailsDropdownList,\n    options: any[]\n  ) => {\n    setPageObj((prevState: any) => ({\n      ...prevState,\n      dropdownOptions: {\n        ...prevState?.dropdownOptions,\n        [key]: options ?? [],\n      },\n    }));\n  };\n\n  const getTabNameForAllTabs = (data: any) => {\n    const tabName = `${\n      CAM_APPLICANT_TYPE_LABEL?.[\n        data?.bankingDetail?.applicant?.applicantType as keyof typeof CAM_APPLICANT_TYPE_LABEL\n      ] ?? \"\"\n    } - ${data?.bankingDetail?.applicant?.firstName ?? \"\"} ${data?.ifsc?.bank?.name ?? \"\"} ${\n      data?.bankingDetail?.accountNo ?? \"\"\n    }`;\n    // applicant type\n    return tabName;\n  };\n\n  const getTabName = (data: any) => {\n    // get tab name for single tab on save basic details\n    const tabName = `${\n      CAM_APPLICANT_TYPE_LABEL?.[\n        data?.applicant?.applicant as keyof typeof CAM_APPLICANT_TYPE_LABEL\n      ] ?? \"\"\n    } - ${data?.applicant?.firstName ?? \"\"} ${data?.ifsc?.bank?.name ?? \"\"} ${\n      data?.accountNo ?? \"\"\n    }`;\n    // applicant type\n    return tabName;\n  };\n\n  const getMonthlyHouseholdExpenseDropdownOptions = () => {\n    return {\n      customerType: pageObj?.dropdownOptions.customerType,\n      expenseType: pageObj?.dropdownOptions.expenseType,\n      expenseFrequency: pageObj?.dropdownOptions.expenseFrequency,\n    };\n  };\n\n  const toggleTabs = (isDisable: boolean) => {\n    setPageObj((prevPageObj) => {\n      const updatedPageObj = { ...prevPageObj };\n      updatedPageObj.bakingAnalysis.tabs.map((tab: ICamBankingAnalysisTab) => {\n        tab.disabled = isDisable;\n      });\n      return updatedPageObj;\n    });\n  };\n\n  const getBasicDetailsDropdownOptions = () => {\n    return {\n      // typeOfApplicant: pageObj?.dropdownOptions?.typeOfApplicant,\n      customerName: pageObj?.dropdownOptions?.customerName,\n      bankFinancierName: pageObj?.dropdownOptions?.bankFinancierName,\n      accountNumber: pageObj?.dropdownOptions?.accountNumber,\n    };\n  };\n\n  /*\n      -------------------------------------------------------\n        Sectional Renders\n      -------------------------------------------------------\n    */\n\n  const renderTabContent = (tab: ICamBankingAnalysisTab, index: any) => {\n    return pageObj?.isLoading?.tabs ? (\n      <div className=\"pt-6\">\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      </div>\n    ) : (\n      <div className=\"grid gap-5\">\n        <div className=\"mt-5\">\n          <BasicDetails\n            isLoading={pageObj?.isLoading.bankingBasicDetail}\n            data={pageObj?.bankingBasicDetail}\n            tab={tab}\n            dropDownOptions={getBasicDetailsDropdownOptions()}\n            getDetailsCallback={(options) =>\n              onGetBasicDetailsCallback(\n                options?.bankingDetailUid ? options?.bankingDetailUid : tab?.bankingDetailsUid,\n                options\n              )\n            }\n          />\n        </div>\n        {pageObj?.monthlyBankingAnalysis.length > 0 ? (\n          <MonthlyBankingAnalysis\n            isLoading={pageObj?.isLoading?.monthlyBankingAnalysis}\n            data={pageObj?.monthlyBankingAnalysis}\n            tab={tab}\n            getDetailsCallback={() => {\n              getMonthlyBankingAnalysis(tab?.bankingDetailsUid ?? \"\", false);\n              getAllTabs({ ignoreLoader: true }); // to get updated banking summary\n            }}\n            // getDetailsCallback={}\n          />\n        ) : null}\n        {pageObj?.creditDebitTransaction.length > 0 ? (\n          <CreditAndDebitTransactions\n            isLoading={pageObj?.isLoading?.creditDebitTransaction}\n            data={pageObj?.creditDebitTransaction}\n            tab={tab}\n            getDetailsCallback={() => {\n              getCreditDebitTransactions(tab?.bankingDetailsUid ?? \"\", false);\n              getAllTabs({ ignoreLoader: true }); // to get updated banking summary\n            }}\n          />\n        ) : null}\n        <BankAccountStatement //can create single section for  updater\n          data={pageObj?.bankAccountStatement}\n          isLoading={pageObj?.isLoading?.bankingBasicDetail} //\n          // dropDownOptions={getBasicDetailsDropdownOptions()}\n        />\n        <BankStatementAnalysis\n          isLoading={pageObj?.isLoading?.bankStatementAnalysis}\n          data={pageObj?.bankStatementAnalysis}\n          tab={tab}\n          getDetailsCallback={() => getBankStatementAnalysis(tab?.bankingDetailsUid ?? \"\", true)}\n          // dropDownOptions={getBasicDetailsDropdownOptions()}\n        />\n      </div>\n    );\n  };\n\n  /*\n      -------------------------------------------------------\n      Main Renders\n      -------------------------------------------------------\n    */\n  return (\n    <div className=\"grid gap-5\">\n      {/* <InsuranceDetails\n        dropDownOptions={getInsuranceDetailsDropdownOptions()}\n        isLoading={pageObj?.isLoading.insuranceDetails}\n      /> */}\n\n      <Section title=\"label.cam.bankingAnalysis\">\n        <div className=\"flex justify-between\">\n          <div className=\"relative w-full scrollable-tab dynamic-tab deleteable-header\">\n            <SimpleTab\n              showTooltip\n              enableTabMenu\n              // enableTabMenu\n              scrollable\n              tabHeaderMenuModel={(tab: ICamBankingAnalysisTab, index: number) =>\n                menuModel(tab, index)\n              }\n              optionLabel={[\"name\"]}\n              optionKey={\"bankingDetailsUid\"}\n              headerClassName=\"document-check-tabs\"\n              ref={tabRef}\n              activeIndex={pageObj.bakingAnalysis.index}\n              tabs={pageObj.bakingAnalysis.tabs}\n              onTabChange={handleTabChange}\n              renderContent={renderTabContent}\n              // headerClassName=\" document-check-tabs \"\n            />\n          </div>\n          <div className=\"\">\n            <ButtonBox buttonType={BUTTON_TYPE.ICON_BUTTON_ADD} onClick={onAddMoreTabs} />\n          </div>\n        </div>\n      </Section>\n      <Section title=\"label.cam.bankingSummary\">\n        <BankingSummary\n          isLoading={pageObj?.isLoading?.tabs}\n          data={pageObj?.bankingSummary}\n          // getDetailsCallback={()=>getAllTabs({onLoad:false ,ignoreLoader:true})}\n        />\n      </Section>\n      <Section title=\"label.cam.incomeEligibilityCalculation&BriefSummary\">\n        <IncomeEligibilityCalculation\n          isLoading={pageObj.isLoading.incomeEligibilityCalculations}\n          data={pageObj?.incomeEligibilityCalculations}\n          getDetailsCallback={() => getStageDetails(true)}\n        />\n      </Section>\n      <Section title=\"label.cam.monthlyHouseHoldExpense\">\n        <MonthlyHouseholdExpenses\n          data={pageObj?.monthlyHouseholdExpense}\n          dropDownOptions={getMonthlyHouseholdExpenseDropdownOptions()}\n          getDetailsCallback={() => getStageDetails(true)}\n        />\n      </Section>\n\n      <WarningDialog\n        visible={pageObj.bakingAnalysis.deleteWarningPopup}\n        className=\"w-76 !px-14\"\n        title={\"Remove Tab ?\"}\n        warningMessage={`This  tab will be removed .`}\n        onCancel={onHideWarningPopup}\n        onConfirm={onConfirmDeleteTab}\n        onHide={() => {\n          //\n        }}\n      />\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n    </div>\n  );\n};\n\nexport default PageIncomeExpenseDetail;\n"],"names":["initialCamBankAccountStatementPageOj","BankAccountStatement","forwardRef","props","ref","data","isLoading","useState","pageMode","setPageMode","PAGE_MODE","toastMessage","setToastMessage","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","useRef","documentUploaderRef","forceUpdate","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","_a","jsxs","jsx","Text","SkeletonCustom","AclGuard","DocumentUploader","_b","DOC_UPLOADER_MODE","DOCUMENT_CATEGORY","ToastCustom","TOAST_STYLE_TYPE","ErrorDialog","initialCamBankStatementAnalysisPageOj","BankStatementAnalysis","params","useParams","tab","getDetailsCallback","pageObj","setPageObj","useImperativeHandle","onSave","onCancel","prevObj","unSavedDocuments","payload","enrichForSave","CamService","STATIC_MASTER_TYPE_TOAST_TEXT","error","parseStandardAPIErrorMessage","onEdit","unSavedDocument","prepareAttributes","prepareDocSections","SaveComponent","initialCamBankingBasicDetailsPageObj","BasicDetails","dropDownOptions","timeOutLocal","setTimeOutLocal","React","simpleValidator","prevPagObj","calculate","enrichForCalculation","res","getNumber","err","handleApplicantTypeChange","e","updatedPageObj","handleCustomerChange","handleBankChange","handleAccountNumberChange","accountDetails","record","handleChange","options","showCurrency","debounce","validate","validateForm","isValid","service","resetValidator","prevPageObj","func","delay","applicantType","customer","bankFinancier","accountNumber","accountHolderName","accountType","ifscCode","branchName","odLimit","dateOfBankAccountOpening","bankStatementFrom","bankStatementTo","noOfMonths","minChargeDetails","remarks","Fragment","SimpleDropDown","CAM_APPLICANT_TYPE_OPTIONS","_c","records","_d","_e","_f","_g","InputBox","INPUT_STYLE_TYPE","getStaticMasterNames","_h","currencyFormatToNumberIncludeNull","SystemDatePicker","_i","_j","TO_AND_FROM_DATE_MESSAGE","_k","InputTextArea","_l","_m","ColumnGroup","_extends","target","i","source","key","Row","otherProps","ObjectUtils","React.createElement","initialPageObj","TABLE_FIELDS","CreditAndDebitTransactions","tableRef","updateAllTotalOnLoad","handleTableFieldChange","updatedRowDataIndex","row","showCurrencyIncludeNull","updateTotalValues","totalAmount","field","bankingAnalysis","bankingAnalysisRowData","getNumberIncludeNull","renderTotal","renderMonth","rowData","toTitleCase","renderCreditTransactionNo","renderCreditTransactionAmount","renderDebitTransactionNo","renderDebitTransactionAmount","renderNoOfInwardCheckBounces","renderNoOfOutwardCheckBounces","renderTotalNoOfCreditTransaction","renderTotalOfCreditTransactionAmount","numberFormatter","renderTotalNoOfDebitTransaction","renderTotalOfDebitTransactionAmount","renderTotalNoOfInwardChequeBounces","renderTotalNoOfOutwardChequeBounces","headerGroup","Column","i18n","ReadOnlyTable","COLUMN_KEY_DAY","MonthlyBankingAnalysis","rows","columns","totalColumns","inputFields","label","recordIndex","day","columnIndex","month","year","amount","getMonthAndYearFromKey","columnKey","monthlyBankingAnalysis","allKeyList","bankingAnalysisList","savedDataRow","keyData","savedDataCell","column","bankingAnalysisRecord","DynamicColumnTable","initialTableRowData","initialCamMonthlyHouseholdExpensePageObj","MonthlyHouseholdExpenses","rowDataObj","onAddDocument","onDeleteRow","addRows","deletedRows","updatedRows","updateCamMonthlyHouseholdExpenseRowDataObj","monthlyExpenses","updateTotalAmount","allRecords","renderCustomerType","renderExpenseType","renderExpenseFrequency","renderAmount","currencyFormatToNumber","getString","renderRemark","renderActions","IconButton","BUTTON_TYPES","renderTotalOfAmount","ButtonBox","BUTTON_TYPE","EditableTableV2","initialPageOj","initialCamIncomeEligibilityCalculationPageObj","PageIncomeExpenseDetail","ShortUniqueId","toastMessageVariant","setToastMessageVariant","tabRef","menuModel","tabDetails","index","init","getAllTabs","basicDetailsAllDropdownOptions","getStageDetails","getExpenseFrequencyOptions","getExpenseTypeOptions","toggleTabs","bankingDetailUid","getBasicDetailsAndAccountStatement","getBankStatementAnalysis","getMonthlyBankingAnalysis","getCreditDebitTransactions","tabs","name","getTabNameForAllTabs","updateCamBankingSummaryPageObj","deleteTab","tabUid","enrichForTabDelete","currentIndex","getIndex","handleTabChange","CAM_APPLICANT_TYPE","customerList","bankNameList","accountNumberList","prevState","ignoreLoader","updateCamBankingBasicDetailsObj","updateCamBankAccountStatementObj","updateCamBankStatementAnalysisPageObj","updateCamMonthlyBankingAnalysisData","updateCamCreditDebitTransactionTable","updateCamIncomeEligibilityPageObj","updateCamMonthlyHouseholdExpensePageObj","onGetBasicDetailsCallback","bankingDetailsUid","option","StaticMasterDataService","updateDropdownOptions","reloadTabs","applicantBankingAnalysis","onAddMoreTabs","onHideWarningPopup","onConfirmDeleteTab","deleteTabDetails","CAM_APPLICANT_TYPE_LABEL","getMonthlyHouseholdExpenseDropdownOptions","isDisable","getBasicDetailsDropdownOptions","renderTabContent","Section","SimpleTab","BankingSummary","IncomeEligibilityCalculation","WarningDialog"],"mappings":"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","x_google_ignoreList":[3,4]}