{"version":3,"file":"PageInitiateStage-f9759816.js","sources":["../../src/components/ExistingDocUploader/ExistingDocUploader.tsx","../../src/views/transaction/PageDDE/StageAndStatus/PageInitiateStage/PageInitiateStage.tsx"],"sourcesContent":["import { useTextConverter } from \"hook/CustomHooks\";\nimport React, {\n  BaseSyntheticEvent,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\n\n// --------- ---------- //\n\n// --------- ---------- //\nimport ButtonBox from \"components/ButtonBox\";\nimport DialogBox from \"components/Dialog\";\nimport EditableTableV2 from \"components/EditableTableV2\";\nimport ImagePreview from \"components/ImagePreview\";\nimport ReadOnlyTable from \"components/ReadOnlyTable\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport { Column } from \"primereact/column\";\n\n// --------- ---------- //\n\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport MediaGallery, {\n  IMediaInfo,\n  initialMediaGallerySectionInfo,\n} from \"components/MediaGallery/MediaGallery\";\nimport MenuBox from \"components/MenuBox/MenuBox\";\nimport SelectButtonBox from \"components/SelectButtonBox/SelectButtonBox\";\nimport DocumentService from \"services/DocumentService\";\nimport { formatDate } from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  EXISTING_DOC_TOGGLE_OPTIONS,\n  EXISTING_DOC_TYPES,\n  INPUT_STYLE_TYPE,\n} from \"utils/Constant\";\n\nexport interface IExistingDocumentRef {\n  getSelectedDocumentList: () => any;\n}\n\ninterface IProps {\n  disabled?: boolean;\n  loanId?: string;\n  title?: string | JSX.Element;\n}\n\nconst ExistingDocUploader = forwardRef<IExistingDocumentRef, IProps>((props, ref) => {\n  const { disabled, loanId, title } = props;\n\n  // ----------------- states ---------------------- //\n  const [documentList, setDocumentList] = useState<any[]>([]);\n  const [showMediaGallery, setShowMediaGallery] = useState<boolean>(false);\n  const [currentItemToViewInGallery, setCurrentItemToViewInGallery] = useState<IMediaInfo>({\n    ...initialMediaGallerySectionInfo,\n  });\n  const [isExistingDocDialogVisible, setIsExistingDocDialogVisible] = useState<boolean>(false);\n  const [searchText, setSearchText] = useState<string>(\"\");\n  const [documentToggleValue, setDocumentToggleValue] = useState<string>(\n    EXISTING_DOC_TOGGLE_OPTIONS?.[0]?.value\n  );\n\n  // --------------------- ref ---------------------------- //\n  const existingDocTableRef = useRef<any>(null);\n  const selectedDocsActionMenuRef = useRef<any>(null);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------------- global variables ---------------------- //\n\n  const selectedDocsActionMenuModel: any[] = [\n    {\n      items: [],\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (isExistingDocDialogVisible) {\n      setTimeout(() => {\n        existingDocTableRef?.current?.search();\n      }, 10);\n    }\n  }, [isExistingDocDialogVisible, searchText, documentToggleValue]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n  const selectedDocsTableRef: any = useRef<any>();\n\n  useImperativeHandle(ref, () => ({\n    getSelectedDocumentList: getSelectedDocumentList,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleSearchChange = (e: any) => {\n    setSearchText(e?.target?.value);\n  };\n\n  const handleDocumentToggleChange = (e: any) => {\n    if (e.value != null) {\n      setDocumentToggleValue(e.value);\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onAddMore = () => {\n    setIsExistingDocDialogVisible(true);\n  };\n\n  const onCloseExistingDocDialog = () => {\n    setDocumentToggleValue(EXISTING_DOC_TOGGLE_OPTIONS?.[0]?.value);\n    setIsExistingDocDialogVisible(false);\n  };\n\n  const onUploadDocument = (rowData: any) => {\n    const updatedData: any[] = [...documentList];\n\n    updatedData.unshift({ ...rowData });\n\n    setDocumentList([...updatedData]);\n\n    setDocumentToggleValue(EXISTING_DOC_TOGGLE_OPTIONS?.[0]?.value);\n    setIsExistingDocDialogVisible(false);\n  };\n\n  const onDeleteSelectedDocument = (event: any, rowData: any) => {\n    const filteredData: any[] = documentList.filter((ele: any) => ele.uid !== rowData.uid);\n    setDocumentList([...filteredData]);\n  };\n\n  const onClickSelectedDocsMenu = (e: any, rowData: any) => {\n    // dynamic menu options array\n    const dynamicActionMenuOptions: any[] = [];\n\n    dynamicActionMenuOptions.push(\n      // --------------------Stop Delegation ------------------------  //\n      {\n        label: \"Remove\",\n        //icon: //JSX element,\n        className: \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n        command: () => {\n          onDeleteSelectedDocument(e, rowData);\n        },\n      }\n    );\n\n    // common menu options\n    const menu: any[] = [...dynamicActionMenuOptions];\n\n    selectedDocsActionMenuModel[0].items = [...menu];\n    selectedDocsActionMenuRef?.current?.show(e);\n  };\n\n  const onViewFile = (e: BaseSyntheticEvent, rowData: any) => {\n    const preparedInfoInList: IMediaInfo = {\n      uid: rowData?.uid,\n      placeOfUpload: \"\",\n      name: \"\",\n      fileName: rowData.fileName,\n      fileType: rowData.fileType,\n      download: \"\",\n      category: rowData?.isLoanDocument\n        ? rowData?.loanDocument?.docCategory ?? \"-\"\n        : rowData?.isKycDocument\n        ? \"KYC\"\n        : \"-\",\n      type: rowData?.isLoanDocument\n        ? rowData?.loanDocument?.docType?.name ?? \"-\"\n        : rowData?.isKycDocument\n        ? rowData?.kyc?.docType?.name ?? \"-\"\n        : \"-\",\n      sectionName: rowData?.isLoanDocument\n        ? rowData?.section ?? \"-\"\n        : rowData?.isKycDocument\n        ? rowData?.smDocSectionType ?? \"-\"\n        : \"-\",\n      url: rowData?.url,\n    };\n\n    setCurrentItemToViewInGallery(preparedInfoInList);\n    setShowMediaGallery(true);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const getSelectedDocumentList = () => {\n    return [...documentList];\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const renderPreview = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        <ImagePreview url={rowData?.url} className=\"w-14 h-14\" />\n      </div>\n    );\n  };\n\n  const renderDocCategory = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {documentToggleValue === EXISTING_DOC_TYPES.LOAN_DOCUMENT\n          ? rowData?.loanDocument?.docCategory ?? \"-\"\n          : documentToggleValue === EXISTING_DOC_TYPES.KYC_DOCUMENT\n          ? \"KYC\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderDocType = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {documentToggleValue === EXISTING_DOC_TYPES.LOAN_DOCUMENT\n          ? rowData?.loanDocument?.docType?.name ?? \"-\"\n          : documentToggleValue === EXISTING_DOC_TYPES.KYC_DOCUMENT\n          ? rowData?.kyc?.docType?.name ?? \"-\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderDocSection = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {documentToggleValue === EXISTING_DOC_TYPES.LOAN_DOCUMENT\n          ? rowData?.section ?? \"-\"\n          : documentToggleValue === EXISTING_DOC_TYPES.KYC_DOCUMENT\n          ? rowData?.smDocSectionType ?? \"-\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderFileName = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.fileName ?? \"-\"}</div>;\n  };\n\n  const renderStageSection = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.loanDocument?.stage?.name ?? \"-\"}</div>;\n  };\n  const renderCustomerName= (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.loanDocument?.applicant?.fullName ??rowData?.kyc?.applicant?.fullName ??  \"-\"}</div>;\n  };\n  const renderCustomerType = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.loanDocument?.applicant?.applicantType ?? rowData?.kyc?.applicant?.applicantType??\"-\"}</div>;\n  };\n\n  const renderUploadedOn = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">{formatDate(rowData?.updatedAtSystemDate) ?? \"-\"}</div>\n    );\n  };\n\n  const renderAction = (rowData: any) => {\n    const documentSpecificData: any = {\n      isLoanDocument: documentToggleValue === EXISTING_DOC_TYPES.LOAN_DOCUMENT,\n      isKycDocument: documentToggleValue === EXISTING_DOC_TYPES.KYC_DOCUMENT,\n    };\n\n    return (\n      <div className=\"flex items-center\">\n        <ButtonBox\n          buttonType={BUTTON_TYPE.UPLOAD_PRIMARY_WITHOUT_LABEL}\n          onClick={() => onUploadDocument({ ...rowData, ...documentSpecificData })}\n          className=\"mr-0.5\"\n        />\n      </div>\n    );\n  };\n\n  const renderApplicantType = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.isLoanDocument\n          ? rowData?.loanDocument?.applicant?.applicantType ?? \"-\"\n          : rowData?.isKycDocument\n          ? rowData?.kyc?.applicant?.applicantType\n          : \"-\"}\n      </div>\n    );\n  };\n  const renderSelectedDocCategory = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.isLoanDocument\n          ? rowData?.loanDocument?.docCategory ?? \"-\"\n          : rowData?.isKycDocument\n          ? \"KYC\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderSelectedDocType = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.isLoanDocument\n          ? rowData?.loanDocument?.docType?.name ?? \"-\"\n          : rowData?.isKycDocument\n          ? rowData?.kyc?.docType?.name ?? \"-\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderSelectedDocSection = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.isLoanDocument\n          ? rowData?.section ?? \"-\"\n          : rowData?.isKycDocument\n          ? rowData?.smDocSectionType ?? \"-\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderSelectedDocumentAction = (rowData: any) => {\n    return (\n      <div className=\"flex justify-start items-center space-x-4\">\n        <div className=\"flex items-center\">\n          <IconButton\n            buttonType={BUTTON_TYPES.VIEW}\n            onClick={(e: BaseSyntheticEvent) => {\n              onViewFile(e, rowData);\n            }}\n          />\n        </div>\n\n        <div className=\"flex items-center\">\n          <ButtonBox\n            buttonType={BUTTON_TYPE.MENU}\n            onClick={(e: any) => onClickSelectedDocsMenu(e, rowData)}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  // Table which displays existing documents\n  const renderExistingDocTable = () => {\n    const dynamicExistingDocumentService: any =\n      documentToggleValue === EXISTING_DOC_TYPES.LOAN_DOCUMENT\n        ? DocumentService.getDocumentList\n        : DocumentService.getKycDocumentList;\n\n    const dynamicExistingDocSearchParam: any =\n      documentToggleValue === EXISTING_DOC_TYPES.LOAN_DOCUMENT\n        ? `loan.uid=${loanId}&isActive=true&loanDocument.docCategory:lk=${searchText}`\n        : `loan.uid=${loanId}&isActive=true`;\n\n    return (\n      <div className=\"flex flex-col justify-start items-start w-full h-full\">\n        <ReadOnlyTable\n          standardDataFormatPromise={dynamicExistingDocumentService}\n          dataKey=\"id\"\n          search={dynamicExistingDocSearchParam}\n          ref={existingDocTableRef}\n          className={\"border-none flex flex-col h-full existing-doc-table\"}\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.preview\")}\n            body={renderPreview}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.category\")}\n            body={renderDocCategory}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.type\")}\n            body={renderDocType}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.section\")}\n            body={renderDocSection}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.file.name\")}\n            body={renderFileName}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.stage.section\")}\n            body={renderStageSection}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.customerName\")}\n            body={renderCustomerName}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.customerType\")}\n            body={renderCustomerType}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.uploaded.on\")}\n            body={renderUploadedOn}\n          />\n          <Column\n            frozen\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.existing.doc.action\")}\n            body={renderAction}\n          />\n        </ReadOnlyTable>\n      </div>\n    );\n  };\n\n  const renderExistingDocumentPortal = () => {\n    return (\n      <DialogBox\n        className=\"!w-[90%] !py-4 px-8\"\n        visible={isExistingDocDialogVisible}\n        closable={false}\n      >\n        <div className=\"flex flex-col justify-start items-center space-y-4 w-full h-full \">\n          <div className=\"flex justify-between items-center w-full\">\n            <Text\n              className=\"text-base text-primary-primaryTextColor font-bold\"\n              label={\"label.heading.upload.existing.file\"}\n            />\n\n            <ButtonBox\n              buttonType={BUTTON_TYPE.CLOSE_OUTLINE}\n              onClick={onCloseExistingDocDialog}\n              className=\"mr-0.5\"\n            />\n          </div>\n\n          <div className=\"flex justify-start items-center w-full\">\n            <div className=\"w-74\">\n              <SelectButtonBox\n                optionLabel=\"name\"\n                optionValue=\"value\"\n                value={documentToggleValue}\n                options={EXISTING_DOC_TOGGLE_OPTIONS}\n                onChange={handleDocumentToggleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex flex-col justify-start items-start w-full\">\n            <div className=\"w-74\">\n              <InputBox\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                label={\"label.text.search.document.category\"}\n                name=\"searchText\"\n                className=\"\"\n                value={searchText}\n                onChange={handleSearchChange}\n                disabled={documentToggleValue === EXISTING_DOC_TYPES.KYC_DOCUMENT}\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full h-full\">{renderExistingDocTable()}</div>\n        </div>\n      </DialogBox>\n    );\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------------\n    render: The Main return()\n    --------------------------------------------------------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      <div className=\"mt-3 flex flex-col gap-5 w-full\">\n        <div className=\"flex justify-between items-center\">\n          {title && typeof title === \"string\" ? (\n            <TextData label={title} titleClass=\"text-primary-sideBarBgColor text-xs mb-1\" />\n          ) : (\n            title\n          )}\n          <div className=\"self-end\">\n            <ButtonBox buttonType={BUTTON_TYPE.ADD_ASSET} onClick={onAddMore} />\n          </div>\n        </div>\n\n        <div>\n          <EditableTableV2\n            ref={selectedDocsTableRef}\n            uniqueKey=\"uid\"\n            paginator={false}\n            value={documentList}\n            className={`h-auto existing-doc-read-table ${\n              documentList?.length ? \"!min-h-auto\" : \"!min-h-50\"\n            }`}\n          >\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.stages.initiate.applicantType\")}\n              body={renderApplicantType}\n            />\n            <Column\n              header={textConverter(\"label.existing.document.category\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderSelectedDocCategory}\n            />\n            <Column\n              header={textConverter(\"label.existing.document.type\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderSelectedDocType}\n            />\n            <Column\n              header={textConverter(\"label.existing.document.section\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderSelectedDocSection}\n            />\n            <Column\n              header={textConverter(\"label.existing.document.action\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderSelectedDocumentAction}\n            />\n          </EditableTableV2>\n        </div>\n      </div>\n\n      {renderExistingDocumentPortal()}\n\n      <MediaGallery\n        visible={showMediaGallery}\n        onToggleVisibility={() => setShowMediaGallery((prev) => !prev)}\n        list={[]}\n        currentSection={currentItemToViewInGallery}\n      />\n\n      <MenuBox\n        ref={selectedDocsActionMenuRef}\n        model={selectedDocsActionMenuModel}\n        variant=\"SECONDARY\"\n        buttonClassName=\"!bg-transparent\"\n        className=\"width-full-menubox bg-white  w-max p-1.5 rounded-md mt-0.5 border shadow-autoCompletePanel\"\n      />\n    </React.Fragment>\n  );\n});\n\nexport default ExistingDocUploader;\n","import { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// --------- ---------- //\nimport AutoComplete from \"components/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport ExistingDocUploader, { IExistingDocumentRef } from \"components/ExistingDocUploader\";\nimport InputTextArea from \"components/InputTextArea\";\nimport RadioButton from \"components/RadioButton\";\nimport ReadOnlyTable from \"components/ReadOnlyTable\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport ChipsBox from \"components/base/BaseChips/BaseChips\";\nimport { Column } from \"primereact/column\";\nimport { ToastPositionType } from \"primereact/toast\";\n\n// --------- ---------- //\nimport { linkAuthRoute, linkBasePath } from \"routes\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\n// --------- ---------- //\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n} from \"utils/CommonUtil\";\n\n// --------- ---------- //\nimport {\n  ADDRESS_TYPE_LABEL,\n  ADDRESS_TYPE_VALUES,\n  APPLICANT_TYPE,\n  APPLICANT_TYPE_LABEL,\n  BUTTON_TYPE,\n  INPUT_STYLE_TYPE,\n  POSITION,\n  RCU_TYPE,\n  STAGE_OPTIONS,\n  STAGE_TYPE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n  VENDOR_TYPE_OPTIONS,\n} from \"utils/Constant\";\n\n// --------- ---------- //\nimport {\n  LINK_DDE_STAGE_AND_STATUS,\n  LINK_DDE_STAGE_AND_STATUS_STAGES,\n  LINK_LOAN_DETAIL,\n} from \"../../../../../transactionRoutes\";\n\n// --------- ---------- //\nimport ApplicantService from \"services/ApplicantService\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport StageService from \"services/transaction/DDE/StageService\";\nimport InputError from \"components/InputError/InputError\";\n\n// --------------------------------- page interface ---------------------------------------------- //\n\ninterface IUploaderDetails {\n  isUploaderVisible: boolean;\n  uploaderPosition: string;\n}\n\ninterface IInitiateData {\n  stage: string;\n  stageType?: string;\n  assignee: { name: string; uid: string };\n  autoComplete2?: { name: string; uid: string };\n  ccEmail: any[];\n  meetingDate?: string;\n  mobileNo?: string;\n  description?: string;\n}\n\ntype IProps = RouteProps;\n\ninterface INewStagePayload {\n  loan: { uid: string };\n  stageName: any;\n  assignee: { uid: string } | null;\n  delegate?: { uid: string } | null;\n  partner?: { uid: string } | null;\n  internalVendor?: { uid: string } | null;\n  address?: { uid: string } | null;\n  remarks?: any;\n  smStageType?: any;\n  stageInitiationDetail?: { ccEmail: string };\n  applicant: { uid: string } | null; // Define applicant as an optional property\n  stageDocuments?: any[];\n  legal?: any;\n  pd?: any;\n  rcu?: any;\n  technical?: any;\n}\n\nconst initialInitiateData = {\n  stage: \"\",\n  stageType: \"\",\n  assignee: { name: \"\", uid: \"\" },\n  autoComplete2: { name: \"\", uid: \"\" },\n  ccEmail: [],\n  meetingDate: \"\",\n  mobileNo: \"\",\n  description: \"\",\n};\n\nconst PageInitiateStage: React.FC<IProps> = (props: IProps) => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n\n  // ----------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<IInitiateData>({ ...initialInitiateData });\n  const [applicantId, setApplicantId] = useState<string>(\"\");\n  const [stageNameOptions, setStageNameOptions] = useState<any[]>([]);\n  const [stageTypeOptions, setStageTypeOptions] = useState<any>({\n    [STAGE_TYPE.RCU_REPORT]: [],\n    [STAGE_TYPE.TECHNICAL_REPORT]: [],\n    [STAGE_TYPE.LEGAL_REPORT]: [],\n    [STAGE_TYPE.PD]: [],\n  });\n\n  const [tableSelectionDetails, setTableSelectionDetails] = useState<any>({\n    selectedRowData: {},\n    selectionObj: {},\n  });\n\n  const [hideAutoComplete2, setHideAutoComplete2] = useState<boolean>(false);\n  const [hideStageType, setHideStageType] = useState<boolean>(true);\n  const [uploaderDetails, setUploaderDetails] = useState<IUploaderDetails>({\n    isUploaderVisible: false,\n    uploaderPosition: POSITION.TOP,\n  });\n\n  const [isAssigneeSuggestionLoading, setIsAssigneeSuggestionLoading] = useState(false);\n  const [isDelegateSuggestionLoading, setIsDelegateSuggestionLoading] = useState(false);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<\n    {\n      name: string | undefined;\n      code: string | undefined;\n    }[]\n  >([]);\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [chipsErrorMessage, setChipsErrorMessage] = useState<string>(\"\"); //NOSONAR\n  const [chipsHasError, setChipsHasError] = useState<boolean>(false); //NOSONAR\n  const [navigateBack, setNavigateBack] = useState(false);\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const profileTableRef = useRef<any>(null);\n  const propertyTableRef = useRef<any>(null);\n  const customerTableRef = useRef<any>(null);\n  const chipRef = useRef<any>(null);\n  const existingDocsRef = useRef<IExistingDocumentRef>(null);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  const hideTypeDropdownList = [\n    \"QC\",\n    \"DEDUPE\",\n    \"CAM_AND_RECOMMENDATION\",\n    \"FINANCIAL_APPROVAL\",\n    \"IN_PRINCIPAL_APPROVAL\",\n    \"FINAL_APPROVAL\",\n  ];\n\n  const typeWithBottomUploader = [\n    STAGE_TYPE.LEGAL_REPORT,\n    STAGE_TYPE.TECHNICAL_REPORT,\n    STAGE_TYPE.PD,\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    // initial empty dependency useEffect\n    // Do not add any dependency for this\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (pageObj?.stage) {\n      // to handle functionalities on change of stage\n      updateStateDependentOnStage();\n\n      if (\n        propertyTableRef &&\n        propertyTableRef?.current &&\n        (pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT ||\n          pageObj?.stage === STAGE_TYPE.LEGAL_REPORT)\n      ) {\n        const propertyRecords = propertyTableRef?.current?.getCurrentRecords() ?? [];\n\n        if (propertyRecords.length === 1) {\n          setTableSelectionDetails((prevState: any) => {\n            return {\n              ...prevState,\n              selectedRowData: { ...(propertyRecords?.[0] ?? {}) },\n              selectionObj: {\n                [propertyRecords?.[0]?.uid]: true,\n              },\n            };\n          });\n        }\n      }\n    }\n  }, [pageObj?.stage]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getStageName = async () => {\n    try {\n      const res = await StageService.getStageName(loanId);\n      if (validateGetAPIResponse(res)) {\n        const initiateStageNameOptions = res?.data?.map((item: any, index: number) => {\n          return STAGE_OPTIONS?.[item?.stageName as keyof typeof STAGE_OPTIONS];\n        });\n\n        setStageNameOptions(initiateStageNameOptions);\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getApplicantId = async () => {\n    try {\n      const res = await ApplicantService.getApplicantInfo(0, 20, APPLICANT_TYPE.PRIMARY, loanId);\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setApplicantId(res.data?.results?.[0]?.uid);\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getRCUTypeOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=RCU_TYPE&\").then(\n      (res) => {\n        if (validateGetAPIResponse(res)) {\n          setStageTypeOptions((prevState: any) => {\n            return {\n              ...prevState,\n              [STAGE_TYPE.RCU_REPORT]: [...(res.data.results ?? [])],\n            };\n          });\n        }\n      }\n    );\n  };\n\n  const getVendorTypeOptions = () => {\n    StaticMasterDataService.getAll(\n      0,\n      1000,\n      \"staticMasterType.code=VENDOR_TYPE&\"\n    ).then((res) => {\n      if (validateGetAPIResponse(res)) {\n        setStageTypeOptions((prevState: any) => {\n          return {\n            ...prevState,\n            [STAGE_TYPE.TECHNICAL_REPORT]: [...(res.data.results ?? [])],\n            [STAGE_TYPE.LEGAL_REPORT]: [...(res.data.results ?? [])],\n          };\n        });\n      }\n    });\n  };\n\n  const getPDOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=PD_TYPE&\").then(\n      (res) => {\n        if (validateGetAPIResponse(res)) {\n          setStageTypeOptions((prevState: any) => {\n            return {\n              ...prevState,\n              [STAGE_TYPE.PD]: [...(res.data.results ?? [])],\n            };\n          });\n        }\n      }\n    );\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------------\n    Validators:\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    if (e.target.name === \"stageType\") {\n      setPageObj((prevState: any) => {\n        return {\n          ...prevState,\n          autoComplete2: { name: \"\", uid: \"\" },\n          [e.target.name]: e.target.value,\n        };\n      });\n    } else {\n      setPageObj((prevState: any) => {\n        return {\n          ...prevState,\n          [e.target.name]: e.target.value,\n        };\n      });\n    }\n  };\n\n  const handleAutoCompleteChange = (event: any) => {\n    const { name, value } = event.target;\n\n    if (typeof value === \"object\") {\n      setPageObj((prevState: any) => ({\n        ...prevState,\n        [name]: { name: value?.name, uid: value?.uid },\n      }));\n    } else {\n      setPageObj((prevState: any) => ({\n        ...prevState,\n        [name]: { name: value, uid: \"\" },\n      }));\n    }\n  };\n\n  const handleTableSelection = (event: any, rowData: any) => {\n    setTableSelectionDetails((prevState: any) => {\n      return {\n        ...prevState,\n        selectedRowData: { ...rowData },\n        selectionObj: {\n          [event.target.name]: event.checked,\n        },\n      };\n    });\n  };\n\n  const handleCCChange = (e: any) => {\n    setPageObj((prevState: any) => ({\n      ...prevState,\n      ccEmail: e.value,\n    }));\n\n    setChipsErrorMessage(\"\");\n    setChipsHasError(false);\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCancel = () => {\n    const URL =\n      LINK_LOAN_DETAIL +\n      LINK_DDE_STAGE_AND_STATUS +\n      \"/\" +\n      loanId +\n      LINK_DDE_STAGE_AND_STATUS_STAGES;\n\n    props?.navigate(URL);\n  };\n\n  const onInitiate = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    const payload = enrichNewStage();\n\n    try {\n      const res = await StageService.initiateStage(payload);\n\n      if (validatePostAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.INITIATED);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setTriggerToast(!triggerToast);\n        setNavigateBack(true);\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getApplicantId();\n    getStageName();\n  };\n\n  const enrichNewStage = () => {\n    const selectedDocuments: any[] = existingDocsRef?.current?.getSelectedDocumentList();\n\n    const payload: INewStagePayload = {\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: applicantId,\n      },\n      stageName: pageObj?.stage,\n      assignee: {\n        uid: pageObj?.assignee?.uid,\n      },\n      delegate: null,\n      partner: null,\n      remarks: pageObj?.description,\n      smStageType: pageObj?.stageType,\n      stageInitiationDetail: {\n        ccEmail: pageObj?.ccEmail.length ? JSON.stringify(pageObj?.ccEmail) : \"\",\n      },\n      stageDocuments:\n        Array.isArray(selectedDocuments) && selectedDocuments.length\n          ? updateSelectedExistDoc(selectedDocuments)\n          : [],\n    };\n\n    if (pageObj?.stage === STAGE_TYPE.PD && tableSelectionDetails?.selectedRowData?.uid) {\n      payload.applicant = { uid: tableSelectionDetails?.selectedRowData?.uid };\n    } else {\n      payload.applicant = { uid: applicantId };\n    }\n\n    if (\n      (pageObj?.stage === STAGE_TYPE.LEGAL_REPORT ||\n        pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT ||\n        pageObj?.stage === STAGE_TYPE.RCU_REPORT) &&\n      tableSelectionDetails?.selectedRowData?.uid\n    ) {\n      payload.address = { uid: tableSelectionDetails?.selectedRowData?.uid };\n    } else {\n      payload.address = null;\n    }\n\n    if (\n      pageObj?.stage === STAGE_TYPE.LEGAL_REPORT ||\n      pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT ||\n      pageObj?.stage === STAGE_TYPE.RCU_REPORT\n    ) {\n      if (pageObj?.autoComplete2?.uid) {\n        if (pageObj.stageType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_INTERNAL) {\n          payload.internalVendor = { uid: pageObj?.autoComplete2?.uid };\n          payload.partner = null;\n        } else {\n          payload.partner = { uid: pageObj?.autoComplete2?.uid };\n          payload.internalVendor = null;\n        }\n      }\n    } else {\n      if (pageObj?.autoComplete2?.uid) {\n        payload.delegate = { uid: pageObj?.autoComplete2?.uid };\n      }\n    }\n\n    if (pageObj?.stage === STAGE_TYPE.LEGAL_REPORT) {\n      payload.legal = {};\n    }\n\n    if (pageObj?.stage === STAGE_TYPE.PD) {\n      payload.pd = {};\n    }\n\n    if (pageObj?.stage === STAGE_TYPE.RCU_REPORT) {\n      payload.rcu = {};\n    }\n\n    if (pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT) {\n      payload.technical = {};\n    }\n\n    return payload;\n  };\n\n  const updateSelectedExistDoc = (documents: any[]) => {\n    return documents.map((document: any) => {\n      return {\n        loan: {},\n        loanDocumentSection: document?.isLoanDocument ? { uid: document?.uid ?? \"\" } : null,\n        kycDocument: document?.isKycDocument ? { uid: document?.uid ?? \"\" } : null,\n        stageDocType: document?.isLoanDocument\n          ? document?.loanDocument?.docType?.name\n          : document?.isKycDocument\n          ? document?.kyc?.docType?.name\n          : \"\",\n        stage: {},\n        isSharedAtInitiation: true,\n      };\n    });\n  };\n\n  function dynamicTypeLabel() {\n    const { stage } = pageObj;\n\n    switch (stage) {\n      case STAGE_TYPE.RCU_REPORT:\n        return \"label.text.stage.initiate.RCU.type\";\n      case STAGE_TYPE.TECHNICAL_REPORT:\n      case STAGE_TYPE.LEGAL_REPORT:\n        return \"label.text.stage.initiate.vendor.type\";\n      case STAGE_TYPE.PD:\n        return \"label.text.stage.initiate.PD.type\";\n      default:\n        return \"\";\n    }\n  }\n\n  function dynamicAutoComplete1Label() {\n    const { stage } = pageObj;\n    if (\n      stage === STAGE_TYPE.RCU_REPORT ||\n      stage === STAGE_TYPE.TECHNICAL_REPORT ||\n      stage === STAGE_TYPE.LEGAL_REPORT\n    )\n      return \"label.text.stage.initiate.internal.assignee\";\n\n    return \"label.text.stage.initiate.assign.to*\";\n  }\n\n  const dynamicAutoComplete2LabelConfig = [\n    {\n      condition: (stage: any, stageType: any) =>\n        (stage === STAGE_TYPE.LEGAL_REPORT &&\n          stageType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_INTERNAL) ||\n        (stage === STAGE_TYPE.TECHNICAL_REPORT &&\n          stageType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_INTERNAL),\n      label: \"label.text.stage.initiate.internal.vendor\",\n    },\n    {\n      condition: (stage: any, stageType: any) =>\n        (stage === STAGE_TYPE.LEGAL_REPORT &&\n          stageType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_EXTERNAL) ||\n        (stage === STAGE_TYPE.TECHNICAL_REPORT &&\n          stageType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_EXTERNAL),\n      label: \"label.text.stage.initiate.external.vendor\",\n    },\n    {\n      condition: (stage: any) =>\n        [STAGE_TYPE.RCU_REPORT, STAGE_TYPE.TECHNICAL_REPORT, STAGE_TYPE.LEGAL_REPORT].includes(\n          stage\n        ),\n      label: \"label.text.stage.initiate.external.vendor\",\n    },\n    {\n      condition: (stage: any) => stage === STAGE_TYPE.PD,\n      label: \"label.text.stage.initiate.PD.type\",\n    },\n    {\n      condition: () => true, // Default condition always evaluates to true\n      label: \"label.text.stage.initiate.delegate\",\n    },\n  ];\n\n  function dynamicAutoComplete2Label() {\n    const { stage, stageType } = pageObj;\n\n    const matchedLabelConfig = dynamicAutoComplete2LabelConfig.find((config) =>\n      config.condition(stage, stageType)\n    );\n\n    return matchedLabelConfig ? matchedLabelConfig.label : \"label.text.stage.initiate.delegate\";\n  }\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const searchAutoComplete2 = (event: any) => {\n    if (\n      pageObj?.stage === STAGE_TYPE.RCU_REPORT ||\n      pageObj?.stage === STAGE_TYPE.LEGAL_REPORT ||\n      pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT\n    ) {\n      if (pageObj?.stageType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_INTERNAL) {\n        searchInternalVendor(event);\n      } else {\n        searchExternalVendor(event);\n      }\n      return;\n    }\n\n    searchAssignee(event);\n  };\n\n  const searchAssignee = async (event: any) => {\n    const { originalEvent } = event;\n\n    let suggestionsTemplate = [];\n    if (originalEvent?.target?.name === \"assignee\") setIsAssigneeSuggestionLoading(true);\n\n    if (originalEvent?.target?.name === \"autoComplete2\") setIsDelegateSuggestionLoading(true);\n\n    try {\n      await StageService.findStageAssignee(0, 10, `${event.query}`, loanId, pageObj?.stage).then(\n        (res) => {\n          if (validateGetAPIResponse(res)) {\n            suggestionsTemplate = [...res.data];\n            if (originalEvent?.target?.name === \"assignee\") setIsAssigneeSuggestionLoading(false);\n\n            if (originalEvent?.target?.name === \"autoComplete2\")\n              setIsDelegateSuggestionLoading(false);\n          }\n        }\n      );\n    } catch (error) {\n      setPosition(\"top-right\");\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: undefined, code: undefined, uid: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const searchExternalVendor = async (event: any) => {\n    let suggestionsTemplate = [];\n\n    setIsDelegateSuggestionLoading(true);\n\n    try {\n      const search = `&isActive=true&name=${event.query.toLowerCase()}&loanUid=${loanId}&stage=${\n        pageObj?.stage\n      }`;\n      await StageService.getExternalVendor(0, 20, search).then((res) => {\n        if (validateGetAPIResponse(res)) {\n          suggestionsTemplate = [...res.data];\n\n          setIsDelegateSuggestionLoading(false);\n        }\n      });\n    } catch (error) {\n      setPosition(\"top-right\");\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: undefined, code: undefined, uid: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const searchInternalVendor = async (event: any) => {\n    let suggestionsTemplate = [];\n\n    setIsDelegateSuggestionLoading(true);\n\n    try {\n      const search = `&isActive=true&name=${event.query.toLowerCase()}&loanUid=${loanId}&stageName=${\n        pageObj?.stage\n      }`;\n      await StageService.getInternalVendor(0, 20, search).then((res) => {\n        if (validateGetAPIResponse(res)) {\n          suggestionsTemplate = [...res.data];\n\n          setIsDelegateSuggestionLoading(false);\n        }\n      });\n    } catch (error) {\n      setPosition(\"top-right\");\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: undefined, code: undefined, uid: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const updateStateDependentOnStage = () => {\n    setPageObj((prevState: any) => {\n      return {\n        ...prevState,\n        stageType: \"\",\n        assignee: { name: \"\", uid: \"\" },\n        autoComplete2: { name: \"\", uid: \"\" },\n        meetingDate: \"\",\n        mobileNo: \"\",\n      };\n    });\n\n    setTableSelectionDetails((prevState: any) => {\n      return {\n        selectedRowData: {},\n        selectionObj: {},\n      };\n    });\n\n    setStageTypeOptions({\n      [STAGE_TYPE.RCU_REPORT]: [],\n      [STAGE_TYPE.TECHNICAL_REPORT]: [],\n      [STAGE_TYPE.LEGAL_REPORT]: [],\n      [STAGE_TYPE.PD]: [],\n    });\n    setHideAutoComplete2(pageObj?.stage === STAGE_TYPE.PD);\n    setHideStageType(hideTypeDropdownList.includes(pageObj?.stage));\n\n    setUploaderDetails((prevState: IUploaderDetails) => {\n      return {\n        ...prevState,\n        isUploaderVisible: !hideTypeDropdownList.includes(pageObj?.stage),\n        uploaderPosition: typeWithBottomUploader.includes(pageObj?.stage)\n          ? POSITION.BOTTOM\n          : POSITION.TOP,\n      };\n    });\n\n    resetValidator();\n\n    if (pageObj?.stage === STAGE_TYPE.RCU_REPORT) getRCUTypeOptions();\n\n    if (\n      pageObj?.stage === STAGE_TYPE.LEGAL_REPORT ||\n      pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT\n    ) {\n      getVendorTypeOptions();\n      propertyTableRef?.current?.search();\n    }\n\n    if (pageObj?.stage === STAGE_TYPE.PD) {\n      getPDOptions();\n      customerTableRef?.current?.search();\n    }\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const assigneeItemTemplate = (item: any) => {\n    if (item?.name === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item?.name} />\n      </div>\n    );\n  };\n\n  const renderSelect = (rowData: any) => {\n    return (\n      <RadioButton\n        hideLabel\n        hideErrorRow\n        name={`${rowData?.uid}`}\n        checked={tableSelectionDetails?.selectionObj?.[rowData?.uid]}\n        onChange={(e) => handleTableSelection(e, rowData)}\n      />\n    );\n  };\n\n  const renderPropertyType = (rowData: any) => {\n    return <div className=\"flex items-center\">{ADDRESS_TYPE_LABEL?.[rowData?.primaryAddressType as keyof typeof ADDRESS_TYPE_LABEL] ?? \"-\"}</div>;\n  };\n  const renderApplicantType = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {/* @ts-ignore: will */}\n        {APPLICANT_TYPE_LABEL[rowData?.applicant?.applicantType] ?? \"-\"}\n      </div>\n    );\n  };\n\n  const renderAddressType = (rowData: any) => {\n    return <div className=\"flex items-center\">{ADDRESS_TYPE_LABEL?.[rowData?.primaryAddressType as keyof typeof ADDRESS_TYPE_LABEL] ?? \"-\"}</div>;\n  };\n\n  const renderAddress = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.address ?? \"-\"}</div>;\n  };\n\n  const renderPincode = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.pincode?.pinCode ?? \"-\"}</div>;\n  };\n\n  const renderCity = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.city?.name ?? \"-\"}</div>;\n  };\n\n  const renderState = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.city?.state?.name}</div>;\n  };\n\n  const renderCustomerType = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {/* @ts-ignore: will */}\n        {APPLICANT_TYPE_LABEL[rowData?.applicantType] ?? \"-\"}\n      </div>\n    );\n  };\n\n  const renderCustomerNameHeader = () => {\n    return (\n      <div className=\"flex justify-start items-center w-full\">\n        <Text label={\"label.stages.initiate.customer.name\"} className=\"w-1/2 truncate\" />\n      </div>\n    );\n  };\n\n  const renderCustomerName = (rowData: any) => {\n    return (\n      <div className=\"flex items-center justify-start w-full\">\n        <div className=\"w-1/2 truncate\">\n          {rowData?.firstName || rowData?.middleName || rowData?.lastName\n            ? ` ${rowData?.firstName ?? \"\"} ${rowData?.middleName ?? \"\"} ${rowData?.lastName ?? \"\"}`\n            : \"-\"}\n        </div>\n      </div>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <div className=\"flex justify-between items-start w-full\">\n        <div>\n          <Text\n            className=\"text-primary-primaryTextColor font-bold\"\n            label={\"heading.stages.initiate.new.stage\"}\n          />\n        </div>\n\n        <div className=\"flex gap-4\">\n          <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancel} />\n\n          <ButtonBox\n            buttonType={BUTTON_TYPE.INITIATE}\n            className=\"create-button\"\n            onClickWithLoader={onInitiate}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderExistingDocuments = () => {\n    return (\n      <div className=\"flex w-full h-full\">\n        <ExistingDocUploader\n          loanId={loanId}\n          ref={existingDocsRef}\n          title={\n            pageObj?.stage === STAGE_TYPE.PD\n              ? \"label.stages.documents\"\n              : \"label.stages.documents.verification\"\n          }\n        />\n      </div>\n    );\n  };\n\n  const renderProfileCheckTable = () => {\n    return (\n      <div className=\"flex flex-col justify-start items-start space-y-2 mt-4\">\n        <Text\n          className=\"text-xs text-primary-sideBarBgColor\"\n          label={\"label.table.heading.stage.profile.check\"}\n        />\n\n        <div className=\"flex flex-col justify-start items-start w-full\">\n          <ReadOnlyTable\n            standardDataFormatPromise={StageService.getPropertyDetails}\n            dataKey=\"id\"\n            search={`loan.uid=${loanId}&isActive=true&primaryAddressType:notnull=''`}\n            ref={profileTableRef}\n            hidePaginator\n          >\n            <Column\n              className=\"text-primary-ptext-1000 text-xs p-1 h-12 px-3 flex justify-center items-center\"\n              header={textConverter(\"label.stages.initiate.select\")}\n              body={renderSelect}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.stages.initiate.applicantType\")}\n              body={renderApplicantType}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.stages.initiate.addressType\")}\n              body={renderAddressType}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n              header={textConverter(\"label.stages.initiate.address\")}\n              body={renderAddress}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.stages.initiate.pincode\")}\n              body={renderPincode}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.stages.initiate.city\")}\n              body={renderCity}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.stages.initiate.state\")}\n              body={renderState}\n            />\n          </ReadOnlyTable>\n        </div>\n      </div>\n    );\n  };\n\n  const renderPropertyTable = () => {\n    return (\n      <div className=\" flex flex-col justify-start items-start space-y-2 mt-4 mb-5\">\n        <Text\n          className=\"text-xs text-primary-sideBarBgColor\"\n          label={\n            pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT\n              ? \"label.table.heading.stage.properties.evaluation\"\n              : pageObj?.stage === STAGE_TYPE.LEGAL_REPORT\n              ? \"label.table.heading.stage.property.details\"\n              : \"\"\n          }\n        />\n\n        <ReadOnlyTable\n          standardDataFormatPromise={StageService.getPropertyDetails}\n          dataKey=\"id\"\n          search={`loan.uid=${loanId}&primaryAddressType=${ADDRESS_TYPE_VALUES.COLLATERAL_PROPERTY}&isActive=true`}\n          ref={propertyTableRef}\n          hidePaginator\n          className=\"table-auto-height\"\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-xs p-1 h-12 px-3 flex justify-center items-center\"\n            header={textConverter(\"label.stages.initiate.select\")}\n            body={renderSelect}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.propertyType\")}\n            body={renderPropertyType}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.applicantType\")}\n            body={renderApplicantType}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.address\")}\n            body={renderAddress}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.pincode\")}\n            body={renderPincode}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.city\")}\n            body={renderCity}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.state\")}\n            body={renderState}\n          />\n        </ReadOnlyTable>\n        <div className=\"h-4 flex  items-start mb-1.5\">\n          <InputError\n            validation={simpleValidator?.current?.message(\n              `propertyForLegalOrTechnical`,\n              Object.keys?.(tableSelectionDetails?.selectionObj),\n              \"mandatoryElementInArray\"\n            )}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderCustomerTable = () => {\n    return (\n      <div className=\" flex flex-col justify-start items-start space-y-2 mt-4 mb-5\">\n        <Text\n          className=\"text-xs text-primary-sideBarBgColor font-medium\"\n          label={\"label.table.heading.stage.customer.selection\"}\n        />\n\n        <ReadOnlyTable\n          standardDataFormatPromise={StageService.getCustomerDetails}\n          dataKey=\"id\"\n          search={`applicantType:in=['${APPLICANT_TYPE.PRIMARY}','${APPLICANT_TYPE.CO_APPLICANT}']&loan.uid=${loanId}&isActive=true`}\n          ref={customerTableRef}\n          hidePaginator\n          className=\"table-auto-height\"\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-xs p-1 h-12 px-3 flex justify-center items-center w-1/2\"\n            header={textConverter(\"label.stages.initiate.select\")}\n            body={renderSelect}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.customer.type\")}\n            body={renderCustomerType}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 w-full flex justify-start stage-status-customer-name\"\n            header={renderCustomerNameHeader()}\n            body={renderCustomerName}\n          />\n        </ReadOnlyTable>\n        <div className=\"h-4 flex  items-start mb-1.5\">\n          <InputError\n            validation={simpleValidator?.current?.message(\n              `selectCustomerForPd`,\n              Object.keys?.(tableSelectionDetails?.selectionObj),\n              \"mandatoryElementInArray\"\n            )}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderSelectableTable = () => {\n    return (\n      <div className=\"w-full\">\n        {pageObj?.stage === STAGE_TYPE.RCU_REPORT ? renderProfileCheckTable() : null}\n        {pageObj?.stage === STAGE_TYPE.LEGAL_REPORT ||\n        pageObj?.stage === STAGE_TYPE.TECHNICAL_REPORT\n          ? renderPropertyTable()\n          : null}\n        {pageObj?.stage === STAGE_TYPE.PD ? renderCustomerTable() : null}\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    const { stage, stageType, assignee, autoComplete2, ccEmail, description } = pageObj;\n    const { isUploaderVisible, uploaderPosition } = uploaderDetails;\n\n    return (\n      <div className=\"flex flex-col justify-start items-start space-y-2 w-full\">\n        <div className=\"w-1/2 flex flex-col justify-start items-start space-y-2\">\n          <div className=\"flex justify-between items-center space-x-2 w-full\">\n            <div className={`w-full`}>\n              <SimpleDropDown\n                label={\"label.text.stage.initiate.stage\"}\n                placeholder=\"Select Stage\"\n                value={stage}\n                name=\"stage\"\n                onChange={handleChange}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(`stage`, stage, \"mandatory\")}\n                options={stageNameOptions}\n                optionLabel=\"label\"\n                optionValue=\"value\"\n                className=\"!w-full\"\n              />\n            </div>\n\n            <div className={`w-full`}>\n              {!hideStageType ? (\n                stageTypeOptions?.[stage]?.length ? (\n                  <SimpleDropDown\n                    label={dynamicTypeLabel()}\n                    placeholder=\"Select type\"\n                    value={stageType}\n                    name=\"stageType\"\n                    onChange={handleChange}\n                    validation={simpleValidator?.current?.message(\n                      `stageType`,\n                      stageType,\n                      \"mandatory\"\n                    )}\n                    onBlur={validate}\n                    options={stageTypeOptions?.[stage]}\n                    optionLabel=\"name\"\n                    optionValue=\"code\"\n                  />\n                ) : (\n                  <SkeletonCustom\n                    height=\"1.563rem\"\n                    width=\"100%\"\n                    borderRadius=\"8px\"\n                    animation=\"wave\"\n                  />\n                )\n              ) : null}\n            </div>\n          </div>\n\n          <div className=\"flex justify-between items-center space-x-2 w-full\">\n            <div className=\"w-full\">\n              <AutoComplete\n                disabled={!stage}\n                variant={INPUT_STYLE_TYPE.PRIMARY}\n                label={dynamicAutoComplete1Label()}\n                placeholder=\"\"\n                name=\"assignee\"\n                value={assignee?.name}\n                suggestions={suggestionsTemplate}\n                completeMethod={searchAssignee}\n                onChange={handleAutoCompleteChange}\n                itemTemplate={assigneeItemTemplate}\n                loader={isAssigneeSuggestionLoading}\n                validation={simpleValidator?.current?.message(\n                  \"assignee\",\n                  assignee?.uid,\n                  \"mandatory\"\n                )}\n                onBlur={validate}\n              />\n            </div>\n\n            <div className=\"w-full\">\n              {!hideAutoComplete2 ? (\n                <AutoComplete\n                  disabled={!stage}\n                  variant={INPUT_STYLE_TYPE.PRIMARY}\n                  label={dynamicAutoComplete2Label()}\n                  placeholder=\"\"\n                  name=\"autoComplete2\"\n                  value={autoComplete2?.name}\n                  suggestions={suggestionsTemplate}\n                  completeMethod={searchAutoComplete2}\n                  onChange={handleAutoCompleteChange}\n                  itemTemplate={assigneeItemTemplate}\n                  loader={isDelegateSuggestionLoading}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    \"autoComplete2\",\n                    autoComplete2?.uid,\n                    `${\n                      stageType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_EXTERNAL ||\n                      stageType === RCU_TYPE.RCU_TYPE_SAMPLING\n                        ? \"mandatory\"\n                        : \"optional\"\n                    }`\n                  )}\n                />\n              ) : null}\n            </div>\n          </div>\n\n          <div className=\"w-full\">\n            <ChipsBox\n              className={\"\"}\n              name=\"ccEmail\"\n              value={ccEmail}\n              label={\"CC\"}\n              onChange={handleCCChange}\n              placeholder={ccEmail?.length !== 0 ? \"\" : \"Enter email(s)\"}\n              ref={chipRef}\n              setParentError={setChipsErrorMessage}\n              setHasError={setChipsHasError}\n            />\n          </div>\n        </div>\n\n        {isUploaderVisible && uploaderPosition === POSITION.TOP ? renderExistingDocuments() : null}\n        {renderSelectableTable()}\n        {isUploaderVisible && uploaderPosition === POSITION.BOTTOM\n          ? renderExistingDocuments()\n          : null}\n\n        <div className=\"w-1/2  pt-5\">\n          <InputTextArea\n            name=\"description\"\n            className=\"!h-40 \"\n            label={\"input.text.title.description\"}\n            placeholder={\"\"}\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            maxCount={200}\n            onChange={handleChange}\n            value={description}\n            autoResize\n          />\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white rounded-xl py-5 px-6 flex flex-col justify-start items-start flex-1\">\n        {renderHeader()}\n\n        {renderContent()}\n      </div>\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n        onRemove={() => {\n          if (navigateBack) {\n            const URL =\n              linkBasePath +\n              linkAuthRoute +\n              LINK_LOAN_DETAIL +\n              LINK_DDE_STAGE_AND_STATUS +\n              \"/\" +\n              loanId +\n              LINK_DDE_STAGE_AND_STATUS_STAGES;\n\n            window.location.href = URL;\n          }\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(PageInitiateStage);\n"],"names":["ExistingDocUploader","forwardRef","props","ref","disabled","loanId","title","documentList","setDocumentList","useState","showMediaGallery","setShowMediaGallery","currentItemToViewInGallery","setCurrentItemToViewInGallery","initialMediaGallerySectionInfo","isExistingDocDialogVisible","setIsExistingDocDialogVisible","searchText","setSearchText","documentToggleValue","setDocumentToggleValue","_b","_a","EXISTING_DOC_TOGGLE_OPTIONS","existingDocTableRef","useRef","selectedDocsActionMenuRef","textConverter","useTextConverter","selectedDocsActionMenuModel","useEffect","selectedDocsTableRef","useImperativeHandle","getSelectedDocumentList","handleSearchChange","e","handleDocumentToggleChange","onAddMore","onCloseExistingDocDialog","onUploadDocument","rowData","updatedData","onDeleteSelectedDocument","event","filteredData","ele","onClickSelectedDocsMenu","dynamicActionMenuOptions","menu","onViewFile","preparedInfoInList","_c","_e","_d","renderPreview","jsx","ImagePreview","renderDocCategory","EXISTING_DOC_TYPES","renderDocType","renderDocSection","renderFileName","renderStageSection","renderCustomerName","renderCustomerType","renderUploadedOn","renderAction","documentSpecificData","ButtonBox","BUTTON_TYPE","renderApplicantType","renderSelectedDocCategory","renderSelectedDocType","renderSelectedDocSection","renderSelectedDocumentAction","jsxs","IconButton","BUTTON_TYPES","renderExistingDocTable","dynamicExistingDocumentService","DocumentService","dynamicExistingDocSearchParam","ReadOnlyTable","Column","renderExistingDocumentPortal","DialogBox","Text","SelectButtonBox","InputBox","INPUT_STYLE_TYPE","React","TextData","EditableTableV2","MediaGallery","prev","MenuBox","initialInitiateData","PageInitiateStage","useParams","pageObj","setPageObj","applicantId","setApplicantId","stageNameOptions","setStageNameOptions","stageTypeOptions","setStageTypeOptions","STAGE_TYPE","tableSelectionDetails","setTableSelectionDetails","hideAutoComplete2","setHideAutoComplete2","hideStageType","setHideStageType","uploaderDetails","setUploaderDetails","POSITION","isAssigneeSuggestionLoading","setIsAssigneeSuggestionLoading","isDelegateSuggestionLoading","setIsDelegateSuggestionLoading","suggestionsTemplate","setSuggestionsTemplate","position","setPosition","toastMessage","setToastMessage","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","chipsErrorMessage","setChipsErrorMessage","chipsHasError","setChipsHasError","navigateBack","setNavigateBack","toastMessageRef","profileTableRef","propertyTableRef","customerTableRef","chipRef","existingDocsRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","hideTypeDropdownList","typeWithBottomUploader","init","updateStateDependentOnStage","propertyRecords","prevState","getStageName","res","StageService","validateGetAPIResponse","initiateStageNameOptions","item","index","STAGE_OPTIONS","err","parseStandardAPIErrorMessage","getApplicantId","ApplicantService","APPLICANT_TYPE","getRCUTypeOptions","StaticMasterDataService","getVendorTypeOptions","getPDOptions","validate","validateForm","isValid","handleChange","handleAutoCompleteChange","name","value","handleTableSelection","handleCCChange","onCancel","URL","LINK_LOAN_DETAIL","LINK_DDE_STAGE_AND_STATUS","LINK_DDE_STAGE_AND_STATUS_STAGES","onInitiate","payload","enrichNewStage","validatePostAPIResponse","STATIC_MASTER_TYPE_TOAST_TEXT","selectedDocuments","updateSelectedExistDoc","_f","_g","VENDOR_TYPE_OPTIONS","_h","_i","_j","_k","documents","document","dynamicTypeLabel","stage","dynamicAutoComplete1Label","dynamicAutoComplete2LabelConfig","stageType","dynamicAutoComplete2Label","matchedLabelConfig","config","resetValidator","searchAutoComplete2","searchInternalVendor","searchExternalVendor","searchAssignee","originalEvent","search","assigneeItemTemplate","renderSelect","RadioButton","renderPropertyType","renderAddressType","renderAddress","renderPincode","renderCity","renderState","renderCustomerNameHeader","renderHeader","renderExistingDocuments","renderProfileCheckTable","renderPropertyTable","ADDRESS_TYPE_VALUES","InputError","renderCustomerTable","renderSelectableTable","renderContent","assignee","autoComplete2","ccEmail","description","isUploaderVisible","uploaderPosition","SimpleDropDown","SkeletonCustom","AutoComplete","RCU_TYPE","ChipsBox","InputTextArea","ErrorDialog","ToastCustom","linkBasePath","linkAuthRoute","PageInitiateStage$1","withRouter"],"mappings":"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"}