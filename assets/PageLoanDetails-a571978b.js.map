{"version":3,"file":"PageLoanDetails-a571978b.js","sources":["../../src/views/transaction/PageCAM/Sections/Balance/Balance.tsx","../../src/views/transaction/PageCAM/Sections/IncomeDetails/IncomeDetails.tsx","../../src/views/transaction/PageCAM/Sections/InsuranceDetails/InsuranceDetails.tsx","../../src/views/transaction/PageCAM/Sections/RepaymentHistoryTable/RepaymentHistoryTable.tsx","../../src/views/transaction/PageCAM/PageLoanDetails/PageLoanDetails.tsx"],"sourcesContent":["import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport DialogBox from \"components/Dialog/Dialog\";\nimport { Column } from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport ReadOnlyTable from \"components/ReadOnlyTable/ReadOnlyTable\";\nimport Text from \"components/Text/Text\";\nimport TextButton from \"components/TextButton/TextButton\";\nimport ToastCustom from \"components/Toast\";\nimport i18n from \"i18n\";\nimport { numberFormatter } from \"locale\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport FeeService from \"services/transaction/FeeService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { formatDate, getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { BUTTON_TYPE, FEE_MODE_LABEL, PAGE_MODE, TOAST_STYLE_TYPE } from \"utils/Constant\";\nimport { getReceiptStatusLabel } from \"views/transaction/fees/Helper\";\nimport { IFeeCollectionReceiptRowData } from \"views/transaction/fees/PageReceipts/PageReceipts\";\n\nexport interface ICamBalancePageObj {\n  isReceiptDialogVisible: boolean;\n}\ninterface IProps {\n  // isLoading: boolean;\n  // dropDownOptions: ICamLoanDetailsDropdownList;\n  ref?: any;\n  data: ICamBalancePageObj;\n  // getDetailsCallback: () => void;\n}\nexport interface ICamBalanceRef {\n  onSearch: () => void;\n}\n\nexport interface ICamBalanceRowData {\n  uid: string;\n  totalFeeAmt: number;\n  totalReceiptAmt: number;\n  balanceReceiptAmt: number;\n}\n\n// interface ICamReceiptRowData {\n//   uid: string;\n//   loanApplicationNumber: string;\n//   receiptId: string;\n//   instrumentType: string;\n//   instrumentDate: string;\n//   chequeId: string;\n//   amount: number;\n//   remark: string;\n//   updatedDate: string;\n//   status: TLoginReceiptStatusType;\n// }\n\nexport const initialCamBalanceData: ICamBalancePageObj = {\n  isReceiptDialogVisible: false,\n  // totalValuation: \"\",\n};\n\nconst Balance: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data } = props;\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ICamBalancePageObj>({\n    ...initialCamBalanceData,\n  });\n\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const balanceDataTableRef = React.useRef<any>(null);\n  const receiptDataTableRef = React.useRef<any>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n\n  useImperativeHandle(ref, () => ({\n    onSearch: onSearch,\n  }));\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      ...data,\n    }));\n    // when add the properties  add the  validations for the properties\n    // resetAllSectionValidations(data?.properties?.length);\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, []);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n  const onToggleReceiptDialog = () => {\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      isReceiptDialogVisible: !prevPageObj.isReceiptDialogVisible,\n    }));\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const onSearch = () => {\n    balanceDataTableRef.current.search();\n    // receiptDataTableRef.current.search();\n  };\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  const renderTotalFeesReceivable = (rowData: ICamBalanceRowData) => {\n    return <span>{numberFormatter(rowData.totalFeeAmt, \"en-IN\", 0)}</span>;\n  };\n  const renderTotalAmountReceived = (rowData: ICamBalanceRowData) => {\n    return <span>{numberFormatter(rowData.totalReceiptAmt, \"en-IN\", 0)}</span>;\n  };\n  const renderBalance = (rowData: ICamBalanceRowData) => {\n    return <span>{numberFormatter(rowData.balanceReceiptAmt, \"en-IN\", 0)}</span>;\n  };\n\n  // const renderLoanApplicationNumber = (rowData: IFeeCollectionReceiptRowData) => {\n  //   return <span>{rowData.loan?.lanId}</span>;\n  // };\n  const renderReceiptId = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{rowData.receiptRefNo}</span>;\n  };\n  const renderInstrumentType = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{FEE_MODE_LABEL?.[rowData.smInstrumentType] ?? \"\"}</span>;\n  };\n  const renderInstrumentDate = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{formatDate(rowData.instrumentDate)}</span>;\n  };\n\n  const renderChequeId = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{rowData.txnRefNo}</span>;\n  };\n  const renderReceiptAmount = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{numberFormatter(rowData.amount, \"en-IN\", 0)}</span>;\n  };\n  const renderRemark = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{rowData.remarks}</span>;\n  };\n  const renderUpdatedDate = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{formatDate(rowData.updatedAt)}</span>;\n  };\n  const renderStatus = (rowData: IFeeCollectionReceiptRowData) => {\n    return <span>{getReceiptStatusLabel(rowData?.status)}</span>;\n  };\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  // const { productIncomeScheme, product, incomeScheme, financierName, lendingType } = pageObj;\n  return (\n    <>\n      <div className=\"border border-primary-ptext-500 rounded-xl p-5 flex flex-col gap-3 \">\n        <div className=\"flex justify-between\">\n          <Text className=\"\" label={\"heading.dde.balance\"} />\n          <div>\n            <TextButton\n              label=\"label.cam.viewReceipts\"\n              className=\"text-primary-copyTextColor text-sm cursor-pointer\"\n              onClick={onToggleReceiptDialog}\n              // disabled={!pageObj?.loanUid ? true : false}\n            />\n          </div>\n        </div>\n        <ReadOnlyTable\n          standardDataFormatPromise={FeeService.getBalance}\n          search={`&loan.uid=${params.loanUid}`}\n          ref={balanceDataTableRef}\n          dataKey=\"uid\"\n          className=\"table-auto-height\"\n          paginator={false}\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.totalFeeReceivable\")}\n            body={renderTotalFeesReceivable}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.totalAmountReceived\")}\n            body={renderTotalAmountReceived}\n            style={{ minWidth: \"300px\" }}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.balance\")}\n            body={renderBalance}\n          />\n        </ReadOnlyTable>\n      </div>\n      <DialogBox\n        onHide={onToggleReceiptDialog}\n        visible={pageObj.isReceiptDialogVisible}\n        modal\n        closable={false}\n        className={`p-6 min-h-122 h-fit lg:w-[1000px]`}\n      >\n        <div className=\"flex items-center justify-between \">\n          <div>\n            <Text\n              className=\"text-base font-bold  text-primary-primaryTextColor\"\n              label={\"label.cam.receipts\"}\n            />\n          </div>\n          <div>\n            <ButtonBox buttonType={BUTTON_TYPE.CLOSE_OUTLINE} onClick={onToggleReceiptDialog} />\n          </div>\n        </div>\n        <ReadOnlyTable\n          standardDataFormatPromise={FeeService.getFeeCollectionReceipt}\n          search={`&loan.uid=${params.loanUid}`}\n          ref={receiptDataTableRef}\n          dataKey=\"uid\"\n        >\n          {/* <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.loanApplicationNo\")}\n            body={renderLoanApplicationNumber}\n          /> */}\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.receiptId\")}\n            body={renderReceiptId}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.InstrumentType\")}\n            body={renderInstrumentType}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.InstrumentDate\")}\n            body={renderInstrumentDate}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.cheque/TxId\")}\n            body={renderChequeId}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.amount\")}\n            body={renderReceiptAmount}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.remarks\")}\n            body={renderRemark}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.updatedDate\")}\n            body={renderUpdatedDate}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n            header={i18n.t(\"label.cam.status\")}\n            body={renderStatus}\n          />\n        </ReadOnlyTable>\n      </DialogBox>\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default Balance;\n","import AclGuard from \"components/AclGuard\";\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport EditableTableV2, {\n  Column,\n  EditableComponentRef,\n} from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast\";\nimport i18n from \"i18n\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CamService from \"services/transaction/CamService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  CAM_APPLICANT_TYPE,\n  CAM_APPLICANT_TYPE_OPTIONS,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TCamApplicantType,\n  TOAST_STYLE_TYPE,\n  YesOrNoOptionsWithBooleanValue,\n} from \"utils/Constant\";\nimport { getNumber, getString, showCurrency, updateCamIncomeDetailsTableObj } from \"../../Helper\";\nimport { ICamLoanDetailsDropdownList } from \"../../PageLoanDetails/PageLoanDetails\";\n\nexport interface ICamIncomeDetailsPageObj {\n  total: {\n    appraisedNetMonthlyIncome: number;\n    monthlyObligation: number;\n  };\n  roi: number;\n  tenure: number;\n  // customerNameOptions?: any[];\n  row?: {\n    isCalculating: boolean;\n    uid: string;\n  };\n  // properties: ICamSinglePropertyValuationData[];\n  // totalValuation: number | \"\";\n}\ninterface IProps {\n  dropDownOptions: ICamLoanDetailsDropdownList;\n  data: ICamIncomeDetailsPageObj;\n  getDetailsCallback?: () => void;\n  ref?: any;\n}\nexport interface ICamIncomeDetailsRef {\n  onSearch: () => void;\n}\n\nexport interface ICamIncomeDetailsRowData {\n  uid?: string;\n  applicant?: {\n    uid?: string;\n    applicantType?: TCamApplicantType | \"\";\n    fullName?: string;\n    // middleName:string;\n    // lastName:string;\n  };\n  incomeScheme?: {\n    uid?: string;\n    name?: string;\n  };\n  appraisedNetMonthlyIncome: string | number;\n  monthlyObligation: string | number;\n  isIncomeConsidered: boolean | \"\";\n  foir: string | number;\n  maxEmi: string | number;\n  emiFactor: string | number;\n  eligibility: string | number;\n  isActive: boolean;\n\n  // applicantType: string;\n  // customerName: string;\n  // incomeScheme: string;\n}\n\nexport const initialCamIncomeDetailsData: ICamIncomeDetailsPageObj = {\n  total: {\n    appraisedNetMonthlyIncome: 0,\n    monthlyObligation: 0,\n  },\n  roi: 0,\n  tenure: 0,\n  // customerNameOptions: [],\n  row: {\n    isCalculating: false,\n    uid: \"\",\n  },\n};\n\nconst initialTableRowData: ICamIncomeDetailsRowData = {\n  uid: \"\",\n  isActive: true,\n  // applicantType: \"\",\n  // customerName: \"\",\n  // incomeScheme: \"\",\n  applicant: {\n    applicantType: \"\",\n    fullName: \"\",\n    // lastName:\"\",\n    // middleName:\"\"\n  },\n  incomeScheme: {\n    uid: \"\",\n    name: \"\",\n  },\n  appraisedNetMonthlyIncome: \"\",\n  isIncomeConsidered: \"\",\n  monthlyObligation: \"\",\n  foir: \"\",\n  maxEmi: \"\",\n  emiFactor: \"\",\n  eligibility: \"\",\n};\n\nconst IncomeDetails: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, dropDownOptions, getDetailsCallback } = props;\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ICamIncomeDetailsPageObj>({\n    ...initialCamIncomeDetailsData,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [timeOutLocal, setTimeOutLocal] = useState<any>(undefined);\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  useImperativeHandle(ref, () => ({\n    onSearch: onSearch,\n  }));\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    // if (data?.total) {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      total: { ...data.total },\n    }));\n    // when add the properties  add the  validations for the properties\n    // resetAllSectionValidations(data?.properties?.length);\n    // }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  const calculate = async (rowData: ICamIncomeDetailsRowData) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      row: {\n        ...prevObj.row,\n        isCalculating: true,\n        uid: rowData?.uid ?? \"\",\n      },\n    }));\n    try {\n      const payload = enrichForCalculation(rowData);\n      const res = await CamService.engine(payload);\n      // loanFeeAmountIncludingGst\n\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        row: {\n          ...prevObj.row,\n          isCalculating: false,\n          uid: \"\",\n        },\n      }));\n\n      const allRecords = tableRef?.current?.getCurrentRecords();\n      const editedRecord = allRecords?.find((record) => record.uid === rowData?.uid);\n      // const updatedRowDataObj: ICamIncomeDetailsRowData = {\n      //   ...editedRecord,\n      //   amountIncludingGst: numberFormatter(res?.data?.loanFeeAmountIncludingGst, \"en-IN\", 0),\n      // };\n\n      const updatedRowDataObj: ICamIncomeDetailsRowData = {\n        ...editedRecord,\n        monthlyObligation: showCurrency(res?.data?.incDetailMonthlyObligation),\n        eligibility: showCurrency(res?.data?.incDetailEligibility),\n        emiFactor: showCurrency(res?.data?.incDetailEmiFactor),\n        maxEmi: showCurrency(res?.data?.incDetailMaxEmi),\n      };\n      tableRef.current?.reportDataChange(updatedRowDataObj);\n    } catch (err) {\n      console.log(err);\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        row: {\n          ...prevObj.row,\n          isCalculating: false,\n          uid: \"\",\n        },\n      }));\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleApplicantTypeChange = (e: any, rowData: ICamIncomeDetailsRowData) => {\n    let rowDataObj: ICamIncomeDetailsRowData = { ...rowData };\n    rowDataObj = {\n      ...rowDataObj,\n      applicant: {\n        ...rowDataObj.applicant,\n        applicantType: e.target.value,\n        uid: \"\",\n      },\n      // monthlyObligation: \"\",\n      // maxEmi: \"\",\n      // emiFactor: \"\",\n      // eligibility: \"\",\n      // foir: \"\",\n    };\n\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  const handleCustomerNameChange = (e: any, rowData: ICamIncomeDetailsRowData) => {\n    let rowDataObj: ICamIncomeDetailsRowData = { ...rowData };\n    rowDataObj = {\n      ...rowDataObj,\n      applicant: {\n        ...rowDataObj.applicant,\n        uid: e.target.value,\n      },\n      // monthlyObligation: \"\",\n      // maxEmi: \"\",\n      // emiFactor: \"\",\n      // eligibility: \"\",\n      // foir: \"\",\n    };\n\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  const handleIncomeSchemeChange = (e: any, rowData: ICamIncomeDetailsRowData) => {\n    const productIncomeScheme = dropDownOptions.productIncomeSchemeForIncomeDetail?.find(\n      (record) => record?.uid === e.target.value\n    );\n\n    let rowDataObj: ICamIncomeDetailsRowData = { ...rowData };\n    rowDataObj = {\n      ...rowDataObj,\n      incomeScheme: {\n        ...rowDataObj.incomeScheme,\n        uid: e.target.value,\n      },\n      foir: productIncomeScheme?.details?.[0]?.maxFoir ?? \"\", // this value depends on  income scheme\n      monthlyObligation: \"\",\n      maxEmi: \"\",\n      emiFactor: \"\",\n      eligibility: \"\",\n      // foir: \"\",\n    };\n    calculate(rowDataObj);\n    // debounce(() => calculate(rowDataObj), 1200);\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  const handleTableFieldChange = (\n    e: any,\n    options: {\n      rowData: ICamIncomeDetailsRowData;\n      field: keyof ICamIncomeDetailsRowData;\n      currency?: boolean;\n    }\n  ) => {\n    let rowDataObj: ICamIncomeDetailsRowData = { ...options.rowData };\n    if (options.currency) {\n      rowDataObj = {\n        ...rowDataObj,\n        [`${options.field}`]: showCurrency(e.target.value),\n      };\n      // updateTotalAmount(options.field);\n      if (options?.field === \"appraisedNetMonthlyIncome\") {\n        debounce(() => calculate(rowDataObj), 1200);\n      }\n    } else {\n      rowDataObj = {\n        ...rowDataObj,\n        [`${options.field}`]: e.target.value,\n      };\n    }\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  const handleIsIncomeSchemeConsideredChange = (e: any, rowData: ICamIncomeDetailsRowData) => {\n    let rowDataObj: ICamIncomeDetailsRowData = { ...rowData };\n\n    if (e.target.value === false) {\n      rowDataObj = {\n        ...rowDataObj,\n        isIncomeConsidered: e.target.value,\n        monthlyObligation: \"\",\n        maxEmi: \"\",\n        emiFactor: \"\",\n        eligibility: \"\",\n        foir: \"\",\n      };\n    } else {\n      const productIncomeScheme = dropDownOptions.productIncomeSchemeForIncomeDetail?.find(\n        (record) => record?.uid === rowData?.incomeScheme?.uid\n      );\n      rowDataObj = {\n        ...rowDataObj,\n        isIncomeConsidered: e.target.value,\n        foir: productIncomeScheme?.details?.[0]?.maxFoir ?? \"\",\n      };\n      calculate(rowDataObj);\n    }\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    const payload = enrichForSave();\n    try {\n      await CamService.updateIncomeDetails(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n      getDetailsCallback?.();\n      tableRef.current?.clearAll();\n      tableRef.current?.search();\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    resetValidator();\n    tableRef.current?.clearAll();\n    tableRef.current?.search();\n    getDetailsCallback?.();\n  };\n\n  const onAddDocument = () => {\n    tableRef.current?.addRow({ ...initialTableRowData });\n  };\n\n  const onDeleteRow = (rowData: ICamIncomeDetailsRowData) => {\n    tableRef.current?.deleteRow(rowData);\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const onSearch = () => {\n    tableRef?.current?.search();\n    // receiptDataTableRef.current.search();\n  };\n\n  const debounce = (func: any, delay: any) => {\n    // for amount incl gst calc\n    clearTimeout(timeOutLocal);\n    setTimeOutLocal(setTimeout(func, delay));\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const enrichForCalculation = (rowData: ICamIncomeDetailsRowData) => {\n    const enrichObj = {\n      loanUid: params?.loanUid,\n      stageUid: params?.stageUid,\n      applicantUid: rowData?.applicant?.uid,\n      incDetailFoir: getNumber(rowData?.foir),\n      roi: data?.roi,\n      tenure: data?.tenure,\n      incDetailAppraisedMonthlyIncome: getNumber(rowData?.appraisedNetMonthlyIncome),\n    };\n    return enrichObj;\n  };\n\n  const enrichForSave = () => {\n    console.log(\"enrich for save\");\n    let addRows = tableRef.current?.getAddedRecords() ?? [];\n    let deletedRows = tableRef.current?.getDeletedRecords() ?? [];\n    let updatedRows = tableRef.current?.getUpdatedRecords() ?? [];\n    addRows = addRows.map((rowData: any) => updateCamIncomeDetailsTableObj(rowData));\n\n    deletedRows = deletedRows.map((rowData: any) => updateCamIncomeDetailsTableObj(rowData));\n    updatedRows = updatedRows.map((rowData: any) => updateCamIncomeDetailsTableObj(rowData));\n\n    const incomeDetails = [...addRows, ...deletedRows, ...updatedRows];\n    return {\n      loan: {\n        uid: params?.loanUid,\n      },\n      stage: {\n        uid: params?.stageUid,\n      },\n      incomeDetails: incomeDetails,\n    };\n  };\n\n  const updateTotalAmount = (field: keyof ICamIncomeDetailsRowData) => {\n      const allRecords = tableRef.current?.getCurrentRecords();\n      let totalAmount = 0;\n      allRecords?.forEach((record: ICamIncomeDetailsRowData) => {\n        totalAmount += getNumber(record?.[field]);\n      });\n     \n      setPageObj((prevObj) => ({\n        ...prevObj,\n        total: {\n          ...prevObj.total,\n          [field]: totalAmount,\n        },\n      }));\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  const renderApplicantType = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.applicantType\"\n          name={`applicantType${rowData?.uid}`}\n          value={rowData?.applicant?.applicantType}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={CAM_APPLICANT_TYPE_OPTIONS?.filter(\n            (record) => record.code !== CAM_APPLICANT_TYPE.GUARANTOR\n          )}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e: any) => handleApplicantTypeChange(e, rowData)}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `applicantType${rowData?.uid}`,\n            rowData.applicant?.applicantType,\n            \"mandatory\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderCustomerName = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.customerName\"\n          name={`customerName${rowData?.uid}`}\n          value={rowData?.applicant?.uid}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={\n            rowData?.applicant?.applicantType === CAM_APPLICANT_TYPE.PRIMARY\n              ? dropDownOptions.customerName?.filter(\n                  (option) => option?.applicantType === CAM_APPLICANT_TYPE.PRIMARY\n                )\n              : rowData?.applicant?.applicantType === CAM_APPLICANT_TYPE.CO_APPLICANT\n              ? dropDownOptions.customerName?.filter(\n                  (option) => option?.applicantType === CAM_APPLICANT_TYPE.CO_APPLICANT\n                )\n              : rowData?.applicant?.applicantType === CAM_APPLICANT_TYPE.GUARANTOR\n              ? dropDownOptions.customerName?.filter(\n                  (option) => option?.applicantType === CAM_APPLICANT_TYPE.GUARANTOR\n                )\n              : []\n          }\n          optionLabel=\"fullName\"\n          optionValue=\"uid\"\n          onChange={(e) => handleCustomerNameChange(e, rowData)}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `customerName${rowData?.uid}`,\n            rowData.applicant?.uid,\n            \"mandatory\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderIncomeScheme = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4 pr-3 \">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.incomeScheme\"\n          className=\" selected-label-w-135\"\n          name={`incomeScheme${rowData?.uid}`}\n          value={rowData?.incomeScheme?.uid}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={dropDownOptions.productIncomeSchemeForIncomeDetail}\n          optionLabel=\"incomeSchemeName.name\"\n          optionValue=\"uid\"\n          onChange={(e) => handleIncomeSchemeChange(e, rowData)}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `incomeScheme${rowData?.uid}`,\n            rowData.incomeScheme?.uid,\n            \"mandatory\"\n          )}\n          disabled={pageObj?.row?.isCalculating && pageObj?.row?.uid !== rowData?.uid}\n        />\n      </div>\n    );\n  };\n\n  const renderAppraisedNetMonthlyIncome = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`appraisedNetMonthlyIncome${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) =>\n            handleTableFieldChange(e, {\n              rowData,\n              field: \"appraisedNetMonthlyIncome\",\n              currency: true,\n            })\n          }\n          className=\"text-right\"\n          onBlur={validate}\n          value={showCurrency(rowData?.appraisedNetMonthlyIncome)}\n          validation={simpleValidator?.current?.message(\n            `appraisedNetMonthlyIncome${rowData?.uid}`,\n            currencyFormatToNumber(getString(rowData?.appraisedNetMonthlyIncome)),\n            \"mandatory|checkNumber|onlyPositive|min:1,num\"\n          )}\n          hideLabel\n          disabled={pageObj?.row?.isCalculating && pageObj?.row?.uid !== rowData?.uid}\n        />\n      </div>\n    );\n  };\n\n  const renderIsIncomeSchemeConsidered = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.incomeScheme\"\n          name={`isIncomeConsidered${rowData?.uid}`}\n          value={rowData?.isIncomeConsidered}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={YesOrNoOptionsWithBooleanValue}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e) => handleIsIncomeSchemeConsideredChange(e, rowData)}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `isIncomeConsidered${rowData?.uid}`,\n            rowData.isIncomeConsidered,\n            \"mandatory\"\n          )}\n          disabled={pageObj?.row?.isCalculating && pageObj?.row?.uid !== rowData?.uid}\n        />\n      </div>\n    );\n  };\n\n  const renderMonthlyObligation = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`monthlyObligation${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={showCurrency(rowData?.monthlyObligation)}\n          className=\"text-right \"\n          disabled\n          hideLabel\n        />\n      </div>\n    );\n  };\n\n  const renderFoir = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`foir${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={rowData?.foir}\n          disabled\n          className=\"text-right \"\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderMaxEmi = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`maxEmi${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"maxEmi\", currency: true })}\n          value={showCurrency(rowData?.maxEmi)}\n          className=\"text-right\"\n          disabled\n          hideLabel\n        />\n      </div>\n    );\n  };\n\n  const renderEmiFactor = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`maxEmi${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={showCurrency(rowData?.emiFactor)}\n          className=\"text-right\"\n          disabled\n          hideLabel\n        />\n      </div>\n    );\n  };\n\n  const renderEligibility = (rowData: ICamIncomeDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`eligibility${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) =>\n            handleTableFieldChange(e, { rowData, field: \"eligibility\", currency: true })\n          }\n          value={showCurrency(rowData?.eligibility)}\n          className=\"text-right\"\n          disabled\n          hideLabel\n        />\n      </div>\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <div className=\"\">\n        <IconButton\n          buttonType={BUTTON_TYPES.DELETE}\n          onClick={() => onDeleteRow(rowData)}\n          disabled={pageMode === PAGE_MODE.VIEW}\n          tooltipOptions={{\n            position: \"left\",\n            className: \"text-xs font-Roboto bg-black text-white !p-1 rounded-md \",\n            showDelay: \"1000,\",\n            hideDelay: \"300\",\n          }}\n        />\n      </div>\n    );\n  };\n\n  const renderTotal = () => {\n    return (\n      <Text\n        className=\"font-medium  text-primary-ptext-1000\"\n        label={`label.cibilDetails.enquirySummary.thead.total`}\n      />\n    );\n  };\n\n  const renderTotalOfNetAppraisedMonthlyIncome = () => {\n    const total = showCurrency(pageObj?.total?.appraisedNetMonthlyIncome);\n    return (\n      <Text\n        className=\"font-medium text-right  text-primary-ptext-1000\"\n        label={pageObj?.total?.appraisedNetMonthlyIncome > 0 ? `₹${total}` : \"\"}\n      />\n    );\n  };\n\n  const renderTotalOfMonthlyObligation = () => {\n    const total = showCurrency(pageObj?.total?.monthlyObligation);\n    return (\n      <Text\n        className=\"font-medium text-right  text-primary-ptext-1000\"\n        label={pageObj?.total?.monthlyObligation > 0 ? `₹${total}` : \"\"}\n      />\n    );\n  };\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  return (\n    <>\n      <SaveComponent\n        title=\"label.cam.incomeDetails\"\n        pageMode={pageMode}\n        // disabled={isLoading || isLegalSectionAccessDisabled(legalStatus)}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n          <div className=\"grid grid-cols-4 gap-3 \">\n            <div className=\"col-span-4\">\n              {typeof pageMode === \"string\" ? (\n                <>\n                  <div className=\"flex justify-end mb-3\">\n                    <div className=\"self-center mr-3 \">\n                      <ButtonBox\n                        buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                        customLabel={\"label.cam.add\"}\n                        onClick={onAddDocument}\n                      />\n                    </div>\n                  </div>\n\n                  <EditableTableV2\n                    ref={tableRef}\n                    uniqueKey=\"uid\"\n                    standardDataFormatPromise={CamService.getIncomeDetails}\n                    search={`&loan.uid=${params?.loanUid}&isActive=true&stage.uid=${params?.stageUid}`}\n                    mode={\"UPDATE\"}\n                    className=\"table-auto-height\"\n                   onUpdateCallback={()=>{\n                    updateTotalAmount(\"appraisedNetMonthlyIncome\");\n                    updateTotalAmount(\"monthlyObligation\");\n                   }}\n                  >\n                    <Column\n                      header={i18n.t(\"label.cam.applicantType\")}\n                      className=\"h-12 pl-6 text-xs text-left text-primary-ptext-1000 min-w-35\"\n                      body={renderApplicantType}\n                      footer={renderTotal}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.customerName\")}\n                      className=\"h-12 pl-6 text-xs text-left text-primary-ptext-1000 min-w-50\"\n                      body={renderCustomerName}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.incomeScheme\")}\n                      className=\"h-12 pl-6 text-xs  text-primary-ptext-1000 max-w-135 w-37\"\n                      body={renderIncomeScheme}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.appraisedNetMonthlyIncome\")}\n                      className=\"h-12 pl-6 text-xs table-header-right text-primary-ptext-1000\"\n                      body={renderAppraisedNetMonthlyIncome}\n                      footer={renderTotalOfNetAppraisedMonthlyIncome}\n                      footerClassName=\" text-right\"\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.isIncomeConsidered\")}\n                      className=\"h-12 pl-6 text-xs table-header-right text-primary-ptext-1000\"\n                      body={renderIsIncomeSchemeConsidered}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.monthlyObligation\")}\n                      className=\"h-12 pl-6 text-xs table-header-right text-primary-ptext-1000\"\n                      body={renderMonthlyObligation}\n                      footer={renderTotalOfMonthlyObligation}\n                      footerClassName=\" text-right\"\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.foir(AsPerPolicy)\")}\n                      className=\"h-12 pl-6 text-xs table-header-right text-primary-ptext-1000\"\n                      body={renderFoir}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.maxEmi\")}\n                      className=\"h-12 pl-6 text-xs table-header-right text-primary-ptext-1000\"\n                      body={renderMaxEmi}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.emiFactor\")}\n                      className=\"h-12 pl-6 text-xs table-header-right text-primary-ptext-1000\"\n                      body={renderEmiFactor}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.eligibility\")}\n                      className=\"h-12 pl-6 text-xs table-header-right text-primary-ptext-1000\"\n                      body={renderEligibility}\n                    />\n                    <Column\n                      header={i18n.t(\"label.investmentInfo.table.colTitle.action\")}\n                      className=\"h-12 px-6 text-xs text-right text-primary-ptext-1000\"\n                      style={{ minWidth: \"50px\", width: \"50px\" }}\n                      body={renderActions}\n                    />\n                  </EditableTableV2>\n                </>\n              ) : null}\n            </div>\n          </div>\n        </AclGuard>\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default IncomeDetails;\n","import AclGuard from \"components/AclGuard\";\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport EditableTableV2, {\n  Column,\n  EditableComponentRef,\n} from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport FileUploadBox from \"components/FileUploadBox/FileUploadBox\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport InputError from \"components/InputError\";\nimport MediaGallery, {\n  IMediaInfo,\n  initialMediaGallerySectionInfo,\n} from \"components/MediaGallery/MediaGallery\";\nimport MenuBox from \"components/MenuBox/MenuBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section/Section\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast\";\nimport i18n from \"i18n\";\nimport { numberFormatter } from \"locale\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport FileUploadService from \"services/FileUploadService\";\nimport CamService from \"services/transaction/CamService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  CAM_APPLICANT_TYPE,\n  CAM_APPLICANT_TYPE_OPTIONS,\n  DOCUMENT_CATEGORY,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n  VARIANTS,\n} from \"utils/Constant\";\nimport {\n  getNumber,\n  getString,\n  showCurrency,\n  updateCamInsuranceDetailsRowDataObj,\n} from \"../../Helper\";\nimport { ICamLoanDetailsDropdownList } from \"../../PageLoanDetails/PageLoanDetails\";\n\nexport interface ICamInsuranceDetailsData {\n  documentSection: string;\n  docTypeUid: string;\n}\n\nexport interface ICamInsuranceDetailsPageObj {\n  total: {\n    premiumAmountInclusiveGst: number;\n  };\n}\n\ninterface IProps {\n  isLoading: boolean;\n  dropDownOptions: ICamLoanDetailsDropdownList;\n  data?: ICamInsuranceDetailsData;\n  getDetailsCallback: () => void;\n}\n\nexport interface ICamInsuranceDetailsRowData {\n  uid?: string;\n  isActive: boolean;\n  smApplicantType: string;\n  smInsuranceType: string;\n  smVendor: string;\n  premiumAmountInclusiveGst: string | number;\n  docCategory?: string;\n  loanDocument: {\n    uid?: string;\n    docType: {\n      uid: string;\n      name?: string;\n    };\n    stage?: {\n      loan?: {\n        applicantName: string;\n      };\n    };\n    docCategory: string;\n    documentSections: {\n      uid?: any;\n      section: string;\n      fileName: string;\n      fileType: string;\n      thumbUrl: string;\n      url: string;\n      sectionName?: string;\n    }[];\n  };\n}\n\nexport const initialCamInsuranceDetailsData: ICamInsuranceDetailsData = {\n  docTypeUid: \"\",\n  documentSection: \"\",\n};\n\nexport const initialInsuranceDetailsPageObj: ICamInsuranceDetailsPageObj = {\n  total: {\n    premiumAmountInclusiveGst: 0,\n  },\n};\nconst initialTableRowData: ICamInsuranceDetailsRowData = {\n  smApplicantType: \"\",\n  smInsuranceType: \"\",\n  smVendor: \"\",\n  premiumAmountInclusiveGst: \"\",\n  isActive: true,\n  loanDocument: {\n    uid: \"\",\n    docType: {\n      uid: \"\",\n    },\n    docCategory: \"\",\n    documentSections: [],\n  },\n};\n\nconst InsuranceDetails: React.FC<IProps> = forwardRef((props, ref) => {\n  const { dropDownOptions, isLoading, data, getDetailsCallback } = props;\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  const [pageObj, setPageObj] = useState({ ...initialInsuranceDetailsPageObj });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [currentItemToViewInGallery, setCurrentItemToViewInGallery] = useState<IMediaInfo>({\n    ...initialMediaGallerySectionInfo,\n  });\n  const [showMediaGallery, setShowMediaGallery] = useState<boolean>(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n  const actionMenuRef = useRef<any>(null);\n  const premiumAmountHeaderRef = useRef<any>(null);\n\n  useImperativeHandle(ref, () => ({\n    refresh: onSearch,\n  }));\n\n  // --------------------------- global variables ---------------------- //\n  const actionMenuModel: any[] = [\n    {\n      items: [],\n    },\n  ];\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  // useEffect(() => {\n  //   if (typeof data?.totalPremium === \"number\") {\n  //     setPageObj((prevObj) => ({\n  //       ...prevObj,\n  //       ...data,\n  //     }));\n  //   }\n  // }, [data]);\n\n  useEffect(() => {\n    console.log(\"data\", data);\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n  const handleChange = (\n    e: any,\n    options: {\n      rowData: ICamInsuranceDetailsRowData;\n      field: keyof ICamInsuranceDetailsRowData;\n      currency?: boolean;\n    }\n  ) => {\n    console.log(\"handle change\");\n    let rowDataObj: ICamInsuranceDetailsRowData = { ...options.rowData };\n\n    if (options.currency) {\n      // const unformattedValue: number = currencyFormatToNumber(e.target.value);\n      rowDataObj = {\n        ...rowDataObj,\n        [options.field]: showCurrency(e.target.value),\n      };\n      // updateTotalPremium(options.field);\n    } else {\n      rowDataObj = {\n        ...rowDataObj,\n        [`${options.field}`]: e.target.value,\n      };\n    }\n\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onAddDocument = () => {\n    tableRef.current?.addRow({ ...initialTableRowData });\n  };\n\n  const onSave = async () => {\n    console.log(\"save\");\n\n    if (!validateForm()) {\n      return;\n    }\n    const payload = enrichForSave();\n\n    try {\n      await CamService.updateInsuranceDetails(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n      getDetailsCallback?.();\n      tableRef.current?.clearAll();\n      tableRef.current?.search();\n      // need to reset the table component data\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    resetValidator();\n    tableRef.current?.clearAll();\n    tableRef.current?.search();\n    // setTimeout(() => {\n    //   updateTotalPremium(\"premiumAmountInclusiveGst\");\n    // }, 500);\n    // need to reset the table component data\n  };\n\n  const onDeleteRow = (rowData: ICamInsuranceDetailsRowData) => {\n    tableRef.current?.deleteRow(rowData);\n    // updateTotalPremium(\"premiumAmountInclusiveGst\");\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n\n  const onUploadDocument = async (e: any, rowData: ICamInsuranceDetailsRowData) => {\n    const file = e.files[0];\n    // Generate a unique object name\n    const timestamp = new Date().getTime();\n    const randomString = Math.random().toString(36).substring(2, 8);\n    const fileNameSplit = file?.name?.split(\".\");\n    let fileNameWithoutExtension = \"\";\n    if (fileNameSplit?.length > 1) {\n      for (let i = 0; i < fileNameSplit.length - 1; i++) {\n        if (i === fileNameSplit.length - 1) {\n          break;\n        }\n        fileNameWithoutExtension += fileNameSplit[i];\n      }\n      const objectName = `${fileNameWithoutExtension}_${timestamp}_${randomString}.${\n        fileNameSplit[fileNameSplit.length - 1]\n      }`;\n\n      try {\n        const res = await FileUploadService.saveFile(file, objectName);\n        updateAttachmentInTable(res.data, rowData);\n        //\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onViewFile = (e: any, rowData: ICamInsuranceDetailsRowData) => {\n    let preparedInfoInList: IMediaInfo = {\n      uid: \"\",\n      placeOfUpload: \"\",\n      name: \"\",\n      fileName: \"\",\n      fileType: \"\",\n      download: \"\",\n      category: \"\",\n      type: \"\",\n      sectionName: \"\",\n      url: \"\",\n    };\n\n    if (rowData?.loanDocument) {\n      preparedInfoInList = {\n        uid: rowData?.loanDocument?.uid ?? \"\",\n        placeOfUpload: \"\",\n        name: rowData?.loanDocument?.stage?.loan?.applicantName ?? \"-\",\n        fileName: rowData?.loanDocument?.documentSections?.[0]?.fileName ?? \"-\",\n        fileType: rowData?.loanDocument?.documentSections?.[0]?.fileType ?? \"-\",\n        download: \"\",\n        category: rowData?.loanDocument?.docCategory ?? \"-\",\n        type: rowData?.loanDocument?.docType?.name ?? \"-\",\n        sectionName: rowData?.loanDocument?.documentSections?.[0]?.sectionName ?? \"-\",\n        url: rowData?.loanDocument?.documentSections?.[0]?.url ?? \"\",\n      };\n    }\n\n    setCurrentItemToViewInGallery(preparedInfoInList);\n    setShowMediaGallery(true);\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const updateTotalPremium = (field: keyof ICamInsuranceDetailsRowData) => {\n    const allRecords = tableRef.current?.getCurrentRecords();\n    let totalAmount = 0;\n    allRecords?.forEach((record: ICamInsuranceDetailsRowData) => {\n      totalAmount += getNumber(record?.[field]);\n    });\n\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      total: {\n        ...prevObj.total,\n        [field]: totalAmount,\n      },\n    }));\n  };\n\n  const updateAttachmentInTable = (signedData: any, rowData: ICamInsuranceDetailsRowData) => {\n    const updatedRowData: ICamInsuranceDetailsRowData = {\n      ...rowData,\n      loanDocument: {\n        ...rowData.loanDocument,\n        docType: {\n          ...rowData.loanDocument.docType,\n          uid: data?.docTypeUid ?? \"\",\n        },\n        docCategory: DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_EXCHANGE_DOCUMENTS,\n        documentSections: [\n          {\n            uid: rowData?.loanDocument?.documentSections?.[0]?.uid,\n            section: data?.documentSection ?? \"\",\n            fileName: signedData?.fileName,\n            fileType: signedData?.contentType,\n            thumbUrl: signedData?.thumbUrl,\n            url: signedData?.url,\n          },\n        ],\n      },\n    };\n    tableRef.current?.reportDataChange(updatedRowData);\n  };\n\n  const enrichForSave = () => {\n    console.log(\"enrich for save\");\n    let enrichObj = {};\n    let addRows = tableRef.current?.getAddedRecords() ?? [];\n    let deletedRows = tableRef.current?.getDeletedRecords() ?? [];\n    let updatedRows = tableRef.current?.getUpdatedRecords() ?? [];\n    addRows = addRows.map((rowData: any) => ({\n      ...rowData,\n      premiumAmountInclusiveGst: getNumber(rowData?.premiumAmountInclusiveGst),\n    }));\n    updatedRows = updatedRows.map((rowData: any) => updateCamInsuranceDetailsRowDataObj(rowData));\n\n    deletedRows = deletedRows.map((rowData: any) => updateCamInsuranceDetailsRowDataObj(rowData));\n    // updatedRows = updatedRows.map((rowData: any) =>\n    //   updateLegalDocumentScrutinizedRowDataObj(rowData)\n    // );\n\n    let stageInsurances = [...addRows, ...deletedRows, ...updatedRows];\n\n    // no change save\n    if (stageInsurances.length === 0) {\n      let allRows = tableRef.current?.getCurrentRecords() ?? [];\n      allRows = allRows.map((rowData: any) => updateCamInsuranceDetailsRowDataObj(rowData));\n      stageInsurances = [...allRows];\n    }\n\n    enrichObj = {\n      loan: {\n        uid: params?.loanUid,\n      },\n      stage: {\n        uid: params?.stageUid,\n      },\n      totalInsuranceAmount: pageObj?.total?.premiumAmountInclusiveGst,\n      stageInsurances,\n    };\n    return enrichObj;\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const onSearch = () => {\n    tableRef.current?.search();\n  };\n\n  const onClickActionMenu = (e: any, rowData: any) => {\n    // dynamic menu options array\n    const dynamicActionMenuOptions: any[] = [];\n\n    dynamicActionMenuOptions.push(\n      // --------------------Stop Delegation ------------------------  //\n      {\n        label: \"Remove\",\n        //icon: //JSX element,\n        className: \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n        command: () => {\n          onDeleteRow(rowData);\n        },\n      }\n    );\n\n    // common menu options\n    const menu: any[] = [...dynamicActionMenuOptions];\n\n    actionMenuModel[0].items = [...menu];\n    actionMenuRef?.current?.show(e);\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  const renderTypeOfApplicant = (rowData: ICamInsuranceDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.typeOfApplicant\"\n          name={`smApplicantType${rowData?.uid}`}\n          value={rowData?.smApplicantType}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={CAM_APPLICANT_TYPE_OPTIONS?.filter(\n            (record) => record.code !== CAM_APPLICANT_TYPE.GUARANTOR\n          )}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e) => handleChange(e, { rowData, field: \"smApplicantType\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `smApplicantType${rowData?.uid}`,\n            rowData.smApplicantType,\n            \"mandatory\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderTypeOfInsurance = (rowData: ICamInsuranceDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.typeOfInsurance\"\n          name={`smInsuranceType${rowData?.uid}`}\n          value={rowData?.smInsuranceType}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={dropDownOptions.typeOfInsurance}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e) => handleChange(e, { rowData, field: \"smInsuranceType\" })}\n          // temporary validation hide\n          // onBlur={validate}\n          // validation={simpleValidator?.current?.message(\n          //   `smInsuranceType${rowData?.uid}`,\n          //   rowData.smInsuranceType,\n          //   \"mandatory\"\n          // )}\n        />\n      </div>\n    );\n  };\n\n  const renderVender = (rowData: ICamInsuranceDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"label.cam.selectVendor\"\n          name={`smVendor${rowData?.uid}`}\n          value={rowData?.smVendor}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={dropDownOptions.vender}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          onChange={(e) => handleChange(e, { rowData, field: \"smVendor\" })}\n          // temporary validation hide\n          // onBlur={validate}\n          // validation={simpleValidator?.current?.message(\n          //   `smVendor${rowData?.uid}`,\n          //   rowData.smVendor,\n          //   \"mandatory\"\n          // )}\n        />\n      </div>\n    );\n  };\n\n  const renderPremiumAmount = (rowData: ICamInsuranceDetailsRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`premiumAmountInclusiveGst${rowData?.uid}`}\n          className=\"text-right\"\n          hideLabel\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={showCurrency(rowData?.premiumAmountInclusiveGst)}\n          onBlur={validate}\n          onChange={(e) =>\n            handleChange(e, {\n              rowData: rowData,\n              field: \"premiumAmountInclusiveGst\",\n              currency: true,\n            })\n          }\n          validation={simpleValidator?.current?.message(\n            `premiumAmountInclusiveGst${rowData?.uid}`,\n            currencyFormatToNumber(getString(rowData?.premiumAmountInclusiveGst)),\n            \"mandatory|checkNumber|onlyPositive\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderAttachment = (rowData: ICamInsuranceDetailsRowData) => {\n    // let\n    return (\n      <div className=\"flex flex-col items-center pb-1.5\">\n        <div className={`w-6 mt-3 file-upload-${rowData?.uid}`}>\n          <FileUploadBox\n            onSelect={(e: any) => onUploadDocument(e, rowData)}\n            // disabled={isLegalSectionAccessDisabled(legalStatus)}\n            variant={VARIANTS.TERTIARY}\n            tooltipContent={\"Attachment\"}\n            tooltipId={rowData?.uid}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n        <div className=\"mt-1.5\">\n          <InputError\n            validation={simpleValidator?.current?.message(\n              `file${rowData?.uid}`,\n              rowData.loanDocument?.documentSections?.[0]?.fileName,\n              \"mandatory\"\n            )}\n            // hideErrorRow={hideErrorRow}\n            // errorClassNames={errorClassNames}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <div className=\"flex justify-center items-center pb-2\">\n        {rowData?.loanDocument?.documentSections?.[0]?.url ? (\n          <IconButton buttonType={BUTTON_TYPES.VIEW} onClick={(e: any) => onViewFile(e, rowData)} />\n        ) : null}\n        <div className={rowData?.loanDocument?.documentSections?.[0]?.url ? \"ml-3\" : \"ml-9\"}>\n          <ButtonBox\n            buttonType={BUTTON_TYPE.MENU}\n            onClick={(e: any) => onClickActionMenu(e, rowData)}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderTotal = () => {\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000  \"\n        label={`label.cibilDetails.enquirySummary.thead.total`}\n      />\n    );\n  };\n\n  const renderTotalPremiumAmount = () => {\n    const total = numberFormatter(pageObj?.total?.premiumAmountInclusiveGst);\n    return (\n      <Text\n        className=\" font-medium text-primary-ptext-1000 text-right\"\n        label={pageObj?.total?.premiumAmountInclusiveGst > 0 ? `₹${total}` : \"\"}\n      />\n    );\n  };\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  return (\n    <Section title=\"label.cam.insuranceDetails\">\n      <>\n        <SaveComponent\n          title=\"label.cam.premiumDetails\"\n          // renderHeaderContent={renderSaveComponentHeader}\n          // disabled={isLegalSectionAccessDisabled(legalStatus)}\n          className=\"\"\n          pageMode={pageMode}\n          onSave={onSave}\n          onCancel={onCancel}\n          onEdit={onEdit}\n        >\n          {isLoading ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n              <div className=\"flex justify-end  items-center\">\n                <div className=\" mr-3  self-center\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                    customLabel={\"label.legal.addInsurance\"}\n                    onClick={onAddDocument}\n                    // disabled={disableAddNew}\n                  />\n                </div>\n              </div>\n              <div>\n                {params?.loanUid && params?.stageUid ? (\n                  <EditableTableV2\n                    ref={tableRef}\n                    uniqueKey=\"uid\"\n                    standardDataFormatPromise={CamService.getInsuranceDetails}\n                    search={`loanUid=${params?.loanUid}&stageUid=${\n                      params?.stageUid\n                    }&isActive=${true}`}\n                    mode={\"UPDATE\"}\n                    paginator={false}\n                    onUpdateCallback={() => {\n                      console.log(\"test123\");\n                      updateTotalPremium(\"premiumAmountInclusiveGst\");\n                    }}\n                    className=\"table-auto-height\"\n                    // rowGroupFooterTemplate={footerTemplate}\n                  >\n                    <Column\n                      header={i18n.t(\"label.cam.typeOfApplicant\")}\n                      className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n                      body={renderTypeOfApplicant}\n                      footer={renderTotal}\n                    />\n\n                    <Column\n                      header={i18n.t(\"label.cam.typeOfInsurance\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderTypeOfInsurance}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.vendor\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderVender}\n                    />\n\n                    <Column\n                      header={() => (\n                        <div ref={premiumAmountHeaderRef}>\n                          <Text className=\"\" label={\"label.cam.premiumAmount\"} />\n                        </div>\n                      )}\n                      className=\"  text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      style={{ minWidth: \"230px\", width: \"230px\" }}\n                      body={renderPremiumAmount}\n                      footer={renderTotalPremiumAmount}\n                      footerClassName=\" text-right\"\n                    />\n\n                    <Column\n                      header={i18n.t(\"label.cam.attachment\")}\n                      className=\"text-primary-ptext-1000 text-right text-xs h-12 px-6 flex justify-center min-w-40\"\n                      // style={{ minWidth: \"114px\", width: \"114px\" }}\n                      body={renderAttachment}\n                    />\n                    <Column\n                      header={i18n.t(\"label.investmentInfo.table.colTitle.action\")}\n                      className=\"text-primary-ptext-1000 text-right text-xs h-12 px-6\"\n                      style={{ minWidth: \"50px\", width: \"50px\" }}\n                      body={renderActions}\n                    />\n                  </EditableTableV2>\n                ) : null}\n              </div>\n            </AclGuard>\n          )}\n        </SaveComponent>\n        <ToastCustom\n          position={\"bottom-right\"}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={TOAST_STYLE_TYPE.PRIMARY}\n        />\n        <MediaGallery\n          visible={showMediaGallery}\n          onToggleVisibility={() => setShowMediaGallery((prev) => !prev)}\n          list={[]}\n          currentSection={currentItemToViewInGallery}\n        />\n        <MenuBox\n          ref={actionMenuRef}\n          model={actionMenuModel}\n          variant=\"SECONDARY\"\n          buttonClassName=\"!bg-transparent\"\n          className=\"width-full-menubox bg-white  w-max p-1.5 rounded-md mt-0.5 border shadow-autoCompletePanel\"\n        />\n\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </>\n    </Section>\n  );\n});\n\nexport default InsuranceDetails;\n","import AclGuard from \"components/AclGuard\";\nimport EditableTableV2, {\n  Column,\n  EditableComponentRef,\n} from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport ToastCustom from \"components/Toast\";\nimport i18n from \"i18n\";\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CamService from \"services/transaction/CamService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport {\n  CAM_APPLICANT_TYPE_OPTIONS,\n  INPUT_STYLE_TYPE,\n  LOAN_PURPOSE_OPTIONS,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TCamApplicantType,\n  TOAST_STYLE_TYPE,\n  YES_NO_OPTIONS,\n} from \"utils/Constant\";\nimport { getNumber, showCurrency, updateCamRepaymentHistoryTableObj } from \"../../Helper\";\nimport { ICamLoanDetailsDropdownList } from \"../../PageLoanDetails/PageLoanDetails\";\n\nexport interface ICamRepaymentHistoryTablePageObj {\n  loanUid: string;\n  // properties: ICamSinglePropertyValuationData[];\n  // totalValuation: number | \"\";\n}\ninterface IProps {\n  dropDownOptions: ICamLoanDetailsDropdownList;\n  data: ICamRepaymentHistoryTablePageObj;\n  getDetailsCallback?: () => void;\n}\n\nexport interface ICamRepaymentHistoryTableRowData {\n  uid?: string;\n  // customerName?: string;\n  applicant?: {\n    fullName?: string;\n  };\n  stage?: {\n    applicant?: {\n      applicantType?: TCamApplicantType | \"\";\n    };\n  };\n  bank?: {\n    name?: string; //bank name\n    type?: {\n      name?: string; //financier type\n    };\n  };\n  smPurpose?: string;\n  nameOfInstitution?: string;\n  sanctionedAmount?: string | number;\n  outstandingAmount?: string | number;\n  balanceTenor?: string;\n  emiAmount?: string;\n  pastDefaults?: string;\n  sanctionedTenor?: string;\n  noOfBounces?: string;\n  roi?: string | number;\n  emiPaid?: string | number;\n  obligated?: string;\n  highestDpd?: string | number;\n  highestDpdMonth?: string;\n  overdueAmount?: string | number;\n  remarks?: string;\n  smConsideredForBt?: string;\n  isActiveCam?: boolean;\n  isActive?:boolean;\n}\n\nexport const initialCamRepaymentHistoryPageObj: ICamRepaymentHistoryTablePageObj = {\n  loanUid: \"\",\n};\n\nconst initialTableRowData: ICamRepaymentHistoryTableRowData = {\n  uid: \"\",\n  // customerName: \"\",\n  applicant: {\n    fullName: \"\",\n  },\n  stage: {\n    applicant: {\n      applicantType: \"\",\n    },\n  },\n  bank: {\n    name: \"\",\n  },\n  smPurpose: \"\",\n  nameOfInstitution: \"\",\n  sanctionedAmount: \"\",\n  outstandingAmount: \"\",\n  balanceTenor: \"\",\n  emiAmount: \"\",\n  pastDefaults: \"\",\n  sanctionedTenor: \"\",\n  noOfBounces: \"\",\n  roi: \"\",\n  emiPaid: \"\",\n  obligated: \"\",\n  highestDpd: \"\",\n  highestDpdMonth: \"\",\n  overdueAmount: \"\",\n  remarks: \"\",\n  smConsideredForBt: \"\",\n};\n\nconst RepaymentHistoryTable: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, dropDownOptions, getDetailsCallback } = props;\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ICamRepaymentHistoryTablePageObj>({\n    ...initialCamRepaymentHistoryPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  // ref\n  const toastMessageRef = useRef(null);\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    if (data?.loanUid) {\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        ...data,\n      }));\n      // when add the properties  add the  validations for the properties\n      // resetAllSectionValidations(data?.properties?.length);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleTableFieldChange = (\n    e: any,\n    options: {\n      rowData: ICamRepaymentHistoryTableRowData;\n      field: keyof ICamRepaymentHistoryTableRowData;\n      currency?: boolean;\n    }\n  ) => {\n    let rowDataObj: ICamRepaymentHistoryTableRowData = { ...options.rowData };\n    if (options.currency) {\n      // const unformattedValue = currencyFormatToNumber(e.target.value);\n      rowDataObj = {\n        ...rowDataObj,\n        [`${options.field}`]: showCurrency(e.target.value),\n      };\n      // updateTotalOfNetAppraisedMonthlyIncome(options.field);\n    } else {\n      rowDataObj = {\n        ...rowDataObj,\n        [`${options.field}`]: e.target.value,\n      };\n    }\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    const payload = enrichForSave();\n    try {\n      await CamService.updateRepaymentHistory(payload);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setPageMode(PAGE_MODE.VIEW);\n      tableRef.current?.clearAll();\n      tableRef.current?.search();\n      getDetailsCallback?.();\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    resetValidator();\n    tableRef.current?.clearAll();\n    tableRef.current?.search();\n    // if  form has existing saved  data then call api else clear all\n    // getDetailsCallback?.();\n  };\n\n  const onAddDocument = () => {\n    tableRef.current?.addRow({ ...initialTableRowData });\n  };\n\n  const onDeleteRow = (rowData: ICamRepaymentHistoryTableRowData) => {\n    tableRef.current?.deleteRow(rowData);\n    resetValidator();\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const enrichForSave = () => {\n    console.log(\"enrich for save\");\n    let addRows = tableRef.current?.getAddedRecords() ?? [];\n    let deletedRows = tableRef.current?.getDeletedRecords() ?? [];\n    let updatedRows = tableRef.current?.getUpdatedRecords() ?? [];\n    addRows = addRows.map((rowData: any) => ({\n      ...rowData,\n      loan: {\n        uid: params?.loanUid,\n      },\n      // stage: {\n      //   uid: params?.stageUid,\n      // },\n      ...updateCamRepaymentHistoryTableObj(rowData),\n    }));\n    deletedRows = deletedRows.map((rowData: any) => ({\n      loan: {\n        uid: params?.loanUid,\n      },\n      // stage: {\n      //   uid: params?.stageUid,\n      // },\n      ...updateCamRepaymentHistoryTableObj(rowData, { delete: true }),\n    }));\n    updatedRows = updatedRows.map((rowData: any) => ({\n      loan: {\n        uid: params?.loanUid,\n      },\n      // stage: {\n      //   uid: params?.stageUid,\n      // },\n      ...updateCamRepaymentHistoryTableObj(rowData),\n    }));\n\n    const enrichData = [...addRows, ...deletedRows, ...updatedRows];\n    return enrichData;\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  const renderApplicantType = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.applicantType\"\n          name={`applicantType${rowData?.uid}`}\n          value={rowData?.stage?.applicant?.applicantType}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={CAM_APPLICANT_TYPE_OPTIONS}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          disabled\n        />\n      </div>\n    );\n  };\n\n  const renderCustomerName = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"w-44 pt-4\">\n        <InputBox\n          name={`customerName${rowData?.uid}`}\n          className=\" truncate\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={`${rowData?.applicant?.fullName ?? \"\"}`}\n          disabled\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderSource = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.applicantType\"\n          name={`source${rowData?.uid}`}\n          value={rowData?.bank?.type?.name}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={rowData?.bank?.name ? [`${rowData?.bank?.type?.name}`] : []}\n          disabled\n        />\n      </div>\n    );\n  };\n\n  const renderPurpose = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.purposeOfLoan\"\n          name={`purpose${rowData?.uid}`}\n          value={rowData?.smPurpose}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={LOAN_PURPOSE_OPTIONS}\n          optionLabel=\"name\"\n          optionValue=\"value\"\n          disabled\n        />\n      </div>\n    );\n  };\n\n  const renderNameOfInstitute = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"w-44 pt-4\">\n        <InputBox\n          name={`nameOfInstitute${rowData?.uid}`}\n          className=\"truncate\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={rowData?.bank?.name ?? \"\"}\n          disabled\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderSanctionAmount = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`sanctionAmount${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={showCurrency(rowData?.sanctionedAmount ?? \"\")}\n          disabled\n          hideLabel\n        />\n      </div>\n    );\n  };\n\n  const renderOutstandingAmount = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`outstandingAmount${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={showCurrency(rowData?.outstandingAmount ?? \"\")}\n          disabled\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderBalanceTenor = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`balanceTenor${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={rowData?.balanceTenor}\n          disabled\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderEmi = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`emi${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={showCurrency(rowData?.emiAmount ?? \"\")}\n          disabled\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderPastDefaults = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`pastDefault${rowData?.uid}`}\n          placeholder=\"placeholder.cam.pastDefaults\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={showCurrency(rowData?.pastDefaults ?? \"\")}\n          disabled\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderSanctionTenor = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`sanctionTenor${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={rowData?.sanctionedTenor ?? \"\"}\n          hideLabel\n          disabled\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderNoOfBounces = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`noOfBounces${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={rowData?.noOfBounces ?? \"\"}\n          hideLabel\n          disabled\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderRoi = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`roi${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={rowData?.roi}\n          hideLabel\n          disabled\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderEmiPaid = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`emiPaid${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={showCurrency(rowData?.emiPaid ?? \"\")}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"emiPaid\", currency: true })}\n          onBlur={validate}\n          validation={simpleValidator?.current?.message(\n            `emiPaid${rowData?.uid}`,\n            getNumber(rowData.emiPaid),\n            rowData?.isActive ? \"mandatory|checkNumber|onlyPositive\":\"optional\"\n          )}\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderObligated = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.obligated\"\n          name={`obligated${rowData?.uid}`}\n          value={rowData?.obligated}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={YES_NO_OPTIONS}\n          optionLabel=\"label\"\n          optionValue=\"value\"\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"obligated\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `obligated${rowData?.uid}`,\n            rowData.obligated,\n            rowData?.isActive? \"mandatory\":\"optional\"\n          )}\n          // disabled\n        />\n      </div>\n    );\n  };\n\n  const renderHighestDpds = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`highestDpd${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={rowData?.highestDpd}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"highestDpd\" })}\n          onBlur={validate}\n          validation={simpleValidator?.current?.message(\n            `highestDpd${rowData?.uid}`,\n            getNumber(rowData.highestDpd),\n            rowData?.isActive? \"mandatory|checkNumber|onlyPositive\":\"optional\"\n          )}\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderHighestDpdsMonth = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`highestDpdMonth${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={rowData?.highestDpdMonth}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"highestDpdMonth\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `highestDpdMonth${rowData?.uid}`,\n            rowData.highestDpdMonth,\n            rowData?.isActive?\"mandatory\":\"optional\"\n          )}\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderOverDueAmount = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`overdueAmount${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className=\"text-right\"\n          value={showCurrency(rowData?.overdueAmount ?? \"\")}\n          onChange={(e) =>\n            handleTableFieldChange(e, { rowData, field: \"overdueAmount\", currency: true })\n          }\n          onBlur={validate}\n          validation={simpleValidator?.current?.message(\n            `overdueAmount${rowData?.uid}`,\n            getNumber(rowData.overdueAmount),\n            rowData?.isActive?\"mandatory|checkNumber|onlyPositive\":\"optional\"\n          )}\n          hideLabel\n        />\n      </div>\n    );\n  };\n\n  const renderRemarkOrClarification = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <InputBox\n          name={`remarks${rowData?.uid}`}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={rowData?.remarks}\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"remarks\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `remarks${rowData?.uid}`,\n            rowData.remarks,\n            rowData?.isActive? \"mandatory\":\"optional\"\n          )}\n          hideLabel\n          // hideErrorRow\n        />\n      </div>\n    );\n  };\n\n  const renderConsideredForBt = (rowData: ICamRepaymentHistoryTableRowData) => {\n    return (\n      <div className=\"pt-4\">\n        <SimpleDropDown\n          hideLabel\n          placeholder=\"placeholder.cam.consideredForBt\"\n          name={`smConsideredForBt${rowData?.uid}`}\n          value={rowData?.smConsideredForBt}\n          variant={INPUT_STYLE_TYPE.PRIMARY}\n          options={YES_NO_OPTIONS}\n          optionLabel=\"label\"\n          optionValue=\"value\"\n          onChange={(e) => handleTableFieldChange(e, { rowData, field: \"smConsideredForBt\" })}\n          onBlur={validate}\n          // loader={isLoading}\n          validation={simpleValidator?.current?.message(\n            `smConsideredForBt${rowData?.uid}`,\n            rowData.smConsideredForBt,\n            rowData?.isActive? \"mandatory\":\"optional\"\n          )}\n          // disabled\n        />\n      </div>\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <div className=\"\">\n        <IconButton\n          buttonType={BUTTON_TYPES.DELETE}\n          onClick={() => onDeleteRow(rowData)}\n          disabled={pageMode === PAGE_MODE.VIEW}\n          tooltipOptions={{\n            position: \"left\",\n            className: \"text-xs font-Roboto bg-black text-white !p-1 rounded-md \",\n            showDelay: \"1000,\",\n            hideDelay: \"300\",\n          }}\n        />\n      </div>\n    );\n  };\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n  return (\n    <>\n      <SaveComponent\n        title=\"label.cam.repaymentHistory\"\n        pageMode={pageMode}\n        // disabled={isLoading || isLegalSectionAccessDisabled(legalStatus)}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n          <div className=\" grid grid-cols-4 gap-3  \">\n            <div className=\"col-span-4\">\n              {typeof pageMode === \"string\" ? (\n                <>\n                  {/* <div className=\"flex mb-3 justify-end\">\n                    <div className=\" mr-3 self-center\">\n                      <ButtonBox\n                        buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                        customLabel={\"label.cam.add\"}\n                        onClick={onAddDocument}\n                      />\n                    </div>\n                  </div> */}\n\n                  <EditableTableV2\n                    ref={tableRef}\n                    uniqueKey=\"uid\"\n                    standardDataFormatPromise={CamService.getRepaymentHistoryTable}\n                    search={`&loan.uid=${params?.loanUid}&isActiveCam=true`}\n                    mode={\"UPDATE\"}\n                    // scrollable\n                    className=\"table-auto-height\"\n                  >\n                    <Column\n                      header={i18n.t(\"label.cam.typeOfApplicant\")}\n                      className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n                      body={renderApplicantType}\n                      // footer={renderTotal}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.customerName\")}\n                      className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6  w-50 max-w-50\"\n                      body={renderCustomerName}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.source(Bank/Financier)\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderSource}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.purpose(home/personal)\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderPurpose}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.nameOfInstitution\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6 w-50 max-w-50\"\n                      body={renderNameOfInstitute}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.sanctionAmount\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderSanctionAmount}\n                    />\n\n                    <Column\n                      header={i18n.t(\"label.cam.outstandingAmount\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderOutstandingAmount}\n                    />\n\n                    <Column\n                      header={i18n.t(\"label.cam.balanceTenor\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderBalanceTenor}\n                    />\n\n                    <Column\n                      header={i18n.t(\"label.cam.emi(₹)\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderEmi}\n                    />\n                    {/* done */}\n                    <Column\n                      header={i18n.t(\"label.cam.pastDefaults\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderPastDefaults}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.sanctionTenor\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderSanctionTenor}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.noOfBounces\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderNoOfBounces}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.roi(%)\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderRoi}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.emiPaid\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderEmiPaid}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.obligated(y/n)\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6 min-w-30\"\n                      body={renderObligated}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.highestDpd's\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderHighestDpds}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.highestDpd'sMonth\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderHighestDpdsMonth}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.overdueAmount(₹)\")}\n                      className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderOverDueAmount}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.remarks/clarifications\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderRemarkOrClarification}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.considerForBt(yes/no)\")}\n                      className=\" text-primary-ptext-1000 text-xs h-12 pl-6\"\n                      body={renderConsideredForBt}\n                    />\n                    <Column\n                      header={i18n.t(\"label.cam.action\")}\n                      className=\"text-primary-ptext-1000 text-right text-xs h-12 px-6 column-shadow-right min-w-12 w-12\"\n                      // style={{ minWidth: \"50px\", width: \"50px\" }}\n                      body={renderActions}\n                      alignFrozen=\"right\"\n                      frozen\n                    />\n                  </EditableTableV2>\n                </>\n              ) : null}\n            </div>\n          </div>\n        </AclGuard>\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default RepaymentHistoryTable;\n","import ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport Section from \"components/Section/Section\";\nimport ToastCustom from \"components/Toast\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { CAM_APPLICANT_TYPE, DOCUMENT_CATEGORY, PAGE_MODE, TOAST_STYLE_TYPE } from \"utils/Constant\";\nimport { IDropDownOptions } from \"views/transaction/PageDDE/Login/Helper\";\nimport Balance, {\n  ICamBalancePageObj,\n  ICamBalanceRef,\n  initialCamBalanceData,\n} from \"../Sections/Balance/Balance\";\nimport FinalLoanDetails, {\n  ICamFinalLoanDetailsPageObj,\n  initialCamFinalLoanDetailsData,\n} from \"../Sections/FinalLoanDetails/FinalLoanDetails\";\nimport FinancierLoanNumber, {\n  ICamFinancierLoanNumberPageObj,\n  initialCamFinancierLoanNumberData,\n} from \"../Sections/FinancierLoanNumber/FinancierLoanNumber\";\nimport IncomeDetails, {\n  ICamIncomeDetailsPageObj,\n  ICamIncomeDetailsRef,\n  initialCamIncomeDetailsData,\n} from \"../Sections/IncomeDetails/IncomeDetails\";\nimport InsuranceDetails, {\n  initialCamInsuranceDetailsData,\n  ICamInsuranceDetailsData,\n} from \"../Sections/InsuranceDetails/InsuranceDetails\";\nimport LoanTags, {\n  ICamLoanTagsPageObj,\n  initialCamLoanTagsData,\n} from \"../Sections/LoanTags/LoanTags\";\nimport { initialCamPropertyValuationData } from \"../Sections/PropertyValuation\";\nimport PropertyValuation, {\n  ICamPropertyValuationData,\n} from \"../Sections/PropertyValuation/PropertyValuation\";\nimport SchemeDetails, {\n  ICamProductIncomeSchemeDropdownOption,\n  ICamSchemeDetailsPageObj,\n  ICamSchemeDetailsRef,\n  initialCamSchemeDetailsData,\n} from \"../Sections/SchemeDetails/SchemeDetails\";\nimport Summary, { ICamSummaryPageObj, initialCamSummaryData } from \"../Sections/Summary/Summary\";\nimport RepaymentHistoryTable, {\n  ICamRepaymentHistoryTablePageObj,\n  initialCamRepaymentHistoryPageObj,\n} from \"../Sections/RepaymentHistoryTable/RepaymentHistoryTable\";\nimport RepaymentHistoryComment, {\n  ICamRepaymentHistoryCommentPageObj,\n  initialRepaymentHistoryCommentPageObj,\n} from \"../Sections/RepaymentHistoryComment/RepaymentHistoryComment\";\nimport { useParams } from \"react-router-dom\";\nimport { parseStandardAPIErrorMessage, validateGetAPIResponse } from \"utils/CommonUtil\";\nimport DocumentCategoryService from \"services/DocumentCategoryService\";\nimport DocumentService from \"services/DocumentService\";\nimport CamService from \"services/transaction/CamService\";\nimport {\n  updateCamFinalLoanDetailsObj,\n  updateCamIncomeDetailsObj,\n  updateCamOnlyValuationTotalObj,\n  updateCamRepaymentHistoryCommentObj,\n  updateCamSchemeDetailsObj,\n  updateCamSummaryObj,\n  updateCamValuationListObj,\n} from \"../Helper\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport StageService from \"services/transaction/DDE/StageService\";\n\nexport interface ICamLoanDetailsDropdownList {\n  typeOfApplicant?: IDropDownOptions[];\n  typeOfInsurance?: IDropDownOptions[];\n  vender?: IDropDownOptions[];\n  productIncomeScheme?: ICamProductIncomeSchemeDropdownOption[]; //main used in scheme details\n  productIncomeSchemeForIncomeDetail?: ICamProductIncomeSchemeDropdownOption[]; //it has different filters\n  chargeName?: IDropDownOptions[];\n  interestType?: IDropDownOptions[];\n  transactionType?: IDropDownOptions[];\n  employeeLoan?: IDropDownOptions[];\n  tags?: IDropDownOptions[];\n  customerName?: {\n    applicantType?: string;\n    fullName?: string;\n    uid?: string;\n  }[];\n  incomeScheme?: IDropDownOptions[];\n  purposeOfLoan?: IDropDownOptions[];\n  pastDefaults?: IDropDownOptions[];\n  obligated?: IDropDownOptions[];\n  sourceOfLoan?: IDropDownOptions[];\n  postDefaults?: IDropDownOptions[];\n}\n\ninterface IBusinessProofRowData {\n  uid: string;\n  documentProof: string;\n  documentYearFrom: string;\n  documentYearTo: string;\n  remark: string;\n}\n\ninterface IPageObj {\n  dropdownOptions: ICamLoanDetailsDropdownList;\n  isLoading: {\n    insuranceDetails: boolean;\n    propertyValuation: boolean;\n    schemeDetails: boolean;\n    finalLoanDetails: boolean;\n    summary: boolean;\n    repaymentHistoryComment: boolean;\n  };\n  insuranceDetails: ICamInsuranceDetailsData;\n  propertyValuation: ICamPropertyValuationData;\n  schemeDetails: ICamSchemeDetailsPageObj;\n  balance: ICamBalancePageObj;\n  finalLoanDetails: ICamFinalLoanDetailsPageObj;\n  loanTags: ICamLoanTagsPageObj;\n  financierLoanNumbers: ICamFinancierLoanNumberPageObj;\n  incomeDetails: ICamIncomeDetailsPageObj;\n  summary: ICamSummaryPageObj;\n  repaymentHistoryTable: ICamRepaymentHistoryTablePageObj;\n  repaymentHistoryComment: ICamRepaymentHistoryCommentPageObj;\n}\n\nconst initialPageOj: IPageObj = {\n  dropdownOptions: {\n    typeOfApplicant: [],\n    typeOfInsurance: [],\n    vender: [],\n    chargeName: [],\n    productIncomeScheme: [], //main\n    productIncomeSchemeForIncomeDetail: [], //for income details\n  },\n  insuranceDetails: { ...initialCamInsuranceDetailsData },\n  schemeDetails: { ...initialCamSchemeDetailsData },\n  finalLoanDetails: { ...initialCamFinalLoanDetailsData },\n  balance: { ...initialCamBalanceData },\n  loanTags: { ...initialCamLoanTagsData },\n  financierLoanNumbers: { ...initialCamFinancierLoanNumberData },\n  propertyValuation: { ...initialCamPropertyValuationData },\n  incomeDetails: { ...initialCamIncomeDetailsData },\n  summary: { ...initialCamSummaryData },\n  repaymentHistoryTable: { ...initialCamRepaymentHistoryPageObj },\n  repaymentHistoryComment: { ...initialRepaymentHistoryCommentPageObj },\n  isLoading: {\n    insuranceDetails: true,\n    propertyValuation: false,\n    finalLoanDetails: false,\n    schemeDetails: false,\n    summary: false,\n    repaymentHistoryComment: false,\n  },\n};\n\nconst PageLoanDetails = () => {\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<any>(\"\");\n  const [pageObj, setPageObj] = useState<IPageObj>({ ...initialPageOj });\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n\n  // ref\n  const toastMessageRef = useRef(null);\n  const balanceRef = useRef<ICamBalanceRef>(null);\n  const schemeDetailsRef = useRef<ICamSchemeDetailsRef>(null);\n  const incomeDetailsRef = useRef<ICamIncomeDetailsRef>(null);\n\n  const [, forceUpdate] = useState<boolean>(false);\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n       -------------------------------------------------------\n         useEffect\n       -------------------------------------------------------\n     */\n  // useEffect(() => {\n  //   init();\n  // }, []);\n\n  useEffect(() => {\n    if (params.stageUid && params?.loanUid) {\n      init();\n    }\n  }, [params.loanUid, params.stageUid]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  // useEffect(() => {\n  //   if (errorMessage) {\n  //     setShowDialogAPIError(true);\n  //   }\n  // }, [pageObj?.schemeDetails?.productIncomeScheme]);\n\n  const init = () => {\n    getInsuranceDetailsDocData();\n    getStageDetails(false, {\n      callbackPropertyValuationDetails: getPropertyValuationDetails,\n      callbackIncomeSchemeOptions: getIncomeSchemeOptionsForIncomeDetails,\n      callbackInterestTypeOptions: getInterestType,\n    });\n    getProductIncomeSchemeOptionsForSchemeDetails();\n    // getFeeChargeNameOptions();\n    getTransactionTypeOptions();\n    getCustomerNameOptions();\n    getInsuranceVendorOptions();\n    getTypeOfInsuranceOptions();\n    getLoanTagsOptions();\n  };\n  /*\n      -------------------------------------------------------\n        Service Calls\n      -------------------------------------------------------\n    */\n  const getInsuranceDetailsDocData = async () => {\n    // documentCategoryService.getDocumentCategory  - to document type uid\n    //documentService.getDocument  - to  get the sections\n    try {\n      const dateForDocUid = await DocumentCategoryService.getDocumentCategory(\n        0,\n        10,\n        DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_EXCHANGE_DOCUMENTS\n      );\n      const docTypeUid: string = dateForDocUid?.data?.results?.[0]?.documentType?.uid;\n      const dataForSection = await DocumentService.getDocument(docTypeUid);\n      let documentSection: string;\n      if (dataForSection.data.documentSections) {\n        for (const section of dataForSection.data.documentSections) {\n          if (section?.isActive) {\n            documentSection = section?.section?.code;\n            break;\n          }\n        }\n      }\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        insuranceDetails: {\n          ...prevPageObj.insuranceDetails,\n          docTypeUid: docTypeUid ?? \"\",\n          documentSection: documentSection ?? \"\",\n        },\n        isLoading: {\n          ...prevPageObj.isLoading,\n          insuranceDetails: false,\n        },\n      }));\n    } catch (e) {\n      setErrorMessage(parseStandardAPIErrorMessage(e));\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        isLoading: {\n          ...prevPageObj.isLoading,\n          insuranceDetails: false,\n        },\n      }));\n    }\n  };\n\n  const getStageDetails = async (\n    ignoreLoader?: boolean,\n    options?: {\n      callbackPropertyValuationDetails?: (stageData: any) => Promise<void>;\n      getOnlyPropertyValuationTotal?: boolean;\n      callbackIncomeSchemeOptions?: (stageData: any) => Promise<void>;\n      callbackInterestTypeOptions?: (stageData: any) => Promise<void>;\n    }\n  ) => {\n    if (!ignoreLoader) {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        isLoading: {\n          ...prevPageObj.isLoading,\n          repaymentHistoryComment: true,\n          summary: true,\n          schemeDetails: true,\n          finalLoanDetails: true,\n          propertyValuation: true,\n        },\n      }));\n    }\n    try {\n      const res = await CamService.getCamStageDetails(params?.stageUid ?? \"\");\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        repaymentHistoryComment: {\n          ...prevPageObj.repaymentHistoryComment,\n          ...updateCamRepaymentHistoryCommentObj(res?.data),\n        },\n        summary: {\n          ...prevPageObj.summary,\n          ...updateCamSummaryObj(res?.data),\n        },\n        schemeDetails: {\n          ...prevPageObj.schemeDetails,\n          ...updateCamSchemeDetailsObj(res?.data),\n        },\n        finalLoanDetails: {\n          ...prevPageObj.finalLoanDetails,\n          ...updateCamFinalLoanDetailsObj(res?.data),\n        },\n        incomeDetails: {\n          ...prevPageObj.incomeDetails,\n          ...updateCamIncomeDetailsObj(res?.data),\n        },\n        ...(options?.getOnlyPropertyValuationTotal\n          ? {\n              propertyValuation: {\n                ...prevPageObj.propertyValuation,\n                ...updateCamOnlyValuationTotalObj(res?.data),\n              },\n            }\n          : {}),\n        isLoading: {\n          ...prevPageObj.isLoading,\n          repaymentHistoryComment: false,\n          summary: false,\n          schemeDetails: false,\n          finalLoanDetails: false,\n        },\n      }));\n      if (!options?.getOnlyPropertyValuationTotal) {\n        options?.callbackPropertyValuationDetails?.(res?.data);\n      }\n      options?.callbackIncomeSchemeOptions?.(res?.data);\n      options?.callbackInterestTypeOptions?.(res?.data);\n      // getInterestType\n    } catch (e) {\n      // updateCamFinalLoanDetailsObj\n      setErrorMessage(parseStandardAPIErrorMessage(e));\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        isLoading: {\n          ...prevPageObj.isLoading,\n          repaymentHistoryComment: false,\n          schemeDetails: false,\n          finalLoanDetails: false,\n        },\n      }));\n    }\n  };\n\n  const getPropertyValuationDetails = async (stageData: any) => {\n    try {\n      const res = await CamService.getValuationList(params?.loanUid ?? \"\", params?.stageUid ?? \"\");\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n\n        propertyValuation: {\n          ...prevPageObj.propertyValuation,\n          ...updateCamValuationListObj(stageData, res?.data),\n        },\n        isLoading: {\n          ...prevPageObj.isLoading,\n          propertyValuation: false,\n        },\n      }));\n      // updateCamValuationListObj\n    } catch (e) {\n      // updateCamFinalLoanDetailsObj\n      setErrorMessage(parseStandardAPIErrorMessage(e));\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        isLoading: {\n          ...prevPageObj.isLoading,\n          propertyValuation: false,\n        },\n      }));\n    }\n  };\n\n  const getProductIncomeSchemeOptionsForSchemeDetails = async () => {\n    try {\n      const res = await CamService.getProductIncomeSchemeOptions(`?loanUid=${params?.loanUid}`);\n      updateDropdownOptions(\"productIncomeScheme\", res?.data);\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  // const getFeeChargeNameOptions = async () => {\n  //   try {\n  //     const res = await CamService.getProductIncomeSchemeOptions(\n  //       `?start=0&limit=50&loanUid=${params?.loanUid}`\n  //     );\n  //     updateDropdownOptions(\"chargeName\", res?.data?.results);\n  //   } catch (err) {\n  //     setErrorMessage(parseStandardAPIErrorMessage(err));\n  //   }\n  // };\n\n  const getTransactionTypeOptions = () => {\n    StaticMasterDataService.getAll(0, 50, \"staticMasterType.code=TRANSACTION_TYPE\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"transactionType\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getTypeOfInsuranceOptions = () => {\n    StaticMasterDataService.getAll(0, 50, \"staticMasterType.code=TYPE_OF_INSURANCE\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"typeOfInsurance\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getInsuranceVendorOptions = () => {\n    StaticMasterDataService.getAll(0, 50, \"staticMasterType.code=INSURANCE_VENDOR\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"vender\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getLoanTagsOptions = () => {\n    StaticMasterDataService.getAll(0, 50, \"staticMasterType.code=LOAN_TAGS\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"tags\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getCustomerNameOptions = async () => {\n    try {\n      const res = await StageService.getCustomerDetails(\n        0,\n        50,\n        `&applicantType:in=[${CAM_APPLICANT_TYPE.PRIMARY},${CAM_APPLICANT_TYPE.CO_APPLICANT},${CAM_APPLICANT_TYPE.GUARANTOR}]&loan.uid=${params?.loanUid}`\n      );\n      updateDropdownOptions(\"customerName\", res?.data?.results);\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getIncomeSchemeOptionsForIncomeDetails = async (stageData: any) => {\n    try {\n      const res = await CamService.getProductIncomeSchemeOptions(\n        `?bankUid=${stageData?.productIncomeScheme?.bank?.uid}&lendingTypeUid=${stageData?.productIncomeScheme?.lendingType?.uid}&loanUid=${params?.loanUid}`\n      );\n      updateDropdownOptions(\"productIncomeSchemeForIncomeDetail\", res?.data);\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getInterestType = async (stageData: any) => {\n    try {\n      const res = await CamService.getInterestType(\n        `bankUid=${stageData?.productIncomeScheme?.bank?.uid}&lendingTypeUid=${stageData?.productIncomeScheme?.lendingType?.uid}&productUid=${stageData?.productIncomeScheme?.product?.uid}`\n      );\n      updateDropdownOptions(\"interestType\", res?.data);\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /*\n      -------------------------------------------------------\n        Handlers\n      -------------------------------------------------------\n    */\n\n  /* \n      --------------------------------------------------------\n      Validators\n      --------------------------------------------------------\n    */\n\n  /*\n      -------------------------------------------------------\n        Button Click Handlers\n      -------------------------------------------------------\n    */\n\n  /*\n      -------------------------------------------------------\n        Helper Functions\n      -------------------------------------------------------\n    */\n  const updateDropdownOptions = (key: keyof ICamLoanDetailsDropdownList, options: any[]) => {\n    setPageObj((prevState: any) => ({\n      ...prevState,\n      dropdownOptions: {\n        ...prevState?.dropdownOptions,\n        [key]: options ?? [],\n      },\n    }));\n  };\n\n  const getInsuranceDetailsDropdownOptions = () => {\n    return {\n      typeOfApplicant: pageObj?.dropdownOptions?.typeOfApplicant,\n      typeOfInsurance: pageObj?.dropdownOptions?.typeOfInsurance,\n      vender: pageObj?.dropdownOptions?.vender,\n    };\n  };\n\n  const getSchemeDetailsDropdownOptions = () => {\n    return {\n      productIncomeScheme: pageObj?.dropdownOptions?.productIncomeScheme,\n      // chargeName: pageObj?.dropdownOptions?.chargeName,\n    };\n  };\n\n  const getFinalLoanDetailsDropdownOptions = () => {\n    return {\n      interestType: pageObj?.dropdownOptions?.interestType,\n      transactionType: pageObj?.dropdownOptions?.transactionType,\n      employeeLoan: pageObj?.dropdownOptions?.employeeLoan,\n    };\n  };\n\n  const getLoanTagsDropdownOptions = () => {\n    return {\n      tags: pageObj?.dropdownOptions?.tags,\n    };\n  };\n\n  const getIncomeDetailsDropdownOptions = () => {\n    return {\n      customerName: pageObj?.dropdownOptions?.customerName,\n      productIncomeSchemeForIncomeDetail:\n        pageObj?.dropdownOptions?.productIncomeSchemeForIncomeDetail,\n    };\n  };\n\n  const getRepaymentHistoryTableDropdownOptions = () => {\n    return {\n      typeOfApplicant: pageObj?.dropdownOptions.typeOfApplicant,\n      customerName: pageObj?.dropdownOptions.customerName,\n      sourceOfLoan: pageObj?.dropdownOptions.sourceOfLoan,\n      purposeOfLoan: pageObj?.dropdownOptions.purposeOfLoan,\n      pastDefaults: pageObj?.dropdownOptions.postDefaults,\n    };\n  };\n\n  /*\n      -------------------------------------------------------\n        Sectional Renders\n      -------------------------------------------------------\n    */\n\n  /*\n      -------------------------------------------------------\n      Main Renders\n      -------------------------------------------------------\n    */\n  return (\n    <div className=\"grid gap-5\">\n      <InsuranceDetails\n        dropDownOptions={getInsuranceDetailsDropdownOptions()}\n        isLoading={pageObj?.isLoading.insuranceDetails}\n        data={pageObj?.insuranceDetails}\n        getDetailsCallback={() => {\n          getStageDetails(true); // for final loan details and summary\n        }}\n      />\n\n      <Section title=\"label.cam.eligibility\">\n        <>\n          <SchemeDetails\n            ref={schemeDetailsRef}\n            isLoading={pageObj?.isLoading.schemeDetails}\n            dropDownOptions={getSchemeDetailsDropdownOptions()}\n            data={pageObj?.schemeDetails}\n            getDetailsCallback={(options?: { isProductIncomeSchemeUpdated?: boolean }) => {\n              balanceRef?.current?.onSearch();\n              if (options?.isProductIncomeSchemeUpdated) {\n                incomeDetailsRef?.current?.onSearch(); // need updated income scheme and final loan details on product income scheme change\n              }\n              getStageDetails(true, {\n                callbackIncomeSchemeOptions: getIncomeSchemeOptionsForIncomeDetails,\n                callbackInterestTypeOptions: getInterestType,\n              });\n            }}\n          />\n\n          <Balance\n            ref={balanceRef}\n            data={pageObj?.balance}\n            //  getDetailsCallback={}\n          />\n          <FinalLoanDetails\n            isLoading={pageObj?.isLoading.finalLoanDetails}\n            dropDownOptions={getFinalLoanDetailsDropdownOptions()}\n            data={pageObj?.finalLoanDetails}\n            getDetailsCallback={() => {\n              schemeDetailsRef?.current?.refreshFeeTable();\n              getStageDetails(true);\n            }}\n          />\n          <LoanTags\n            dropDownOptions={getLoanTagsDropdownOptions()}\n            // data={pageObj?.loanTags}\n            //  getDetailsCallback={}\n          />\n          <FinancierLoanNumber\n            data={pageObj?.financierLoanNumbers}\n            //  getDetailsCallback={}\n          />\n        </>\n      </Section>\n\n      <PropertyValuation\n        isLoading={pageObj?.isLoading.propertyValuation}\n        data={pageObj?.propertyValuation}\n        getDetailsCallback={(onlyFinalTotal?: boolean) =>\n          getStageDetails(true, {\n            callbackPropertyValuationDetails: getPropertyValuationDetails,\n            getOnlyPropertyValuationTotal: onlyFinalTotal,\n          })\n        }\n      />\n\n      <Section title=\"heading.repayment.history\">\n        <>\n          <RepaymentHistoryTable\n            data={pageObj?.repaymentHistoryTable}\n            dropDownOptions={getRepaymentHistoryTableDropdownOptions()}\n            getDetailsCallback={() => {\n              incomeDetailsRef?.current?.onSearch();\n              getStageDetails(true);\n            }}\n          />\n          <RepaymentHistoryComment\n            isLoading={pageObj?.isLoading?.repaymentHistoryComment}\n            data={pageObj?.repaymentHistoryComment}\n            getDetailsCallback={() => {\n              getStageDetails(true);\n            }}\n          />\n        </>\n      </Section>\n\n      <Section title=\"heading.cam.incomeDetails\">\n        <IncomeDetails\n          ref={incomeDetailsRef}\n          dropDownOptions={getIncomeDetailsDropdownOptions()}\n          data={pageObj?.incomeDetails}\n          getDetailsCallback={() => getStageDetails(true)}\n        />\n      </Section>\n\n      <Section title=\"label.cam.summary\">\n        <Summary\n          isLoading={pageObj?.isLoading?.summary}\n          // dropDownOptions={getIncomeDetailsDropdownOptions()}\n          data={pageObj?.summary}\n          //  getDetailsCallback={}\n        />\n      </Section>\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n    </div>\n  );\n};\n\nexport default PageLoanDetails;\n"],"names":["initialCamBalanceData","Balance","forwardRef","props","ref","data","params","useParams","pageObj","setPageObj","useState","toastMessage","setToastMessage","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","useRef","balanceDataTableRef","React","receiptDataTableRef","useImperativeHandle","onSearch","useEffect","prevObj","_a","onToggleReceiptDialog","prevPageObj","renderTotalFeesReceivable","rowData","numberFormatter","renderTotalAmountReceived","renderBalance","renderReceiptId","jsx","renderInstrumentType","FEE_MODE_LABEL","renderInstrumentDate","formatDate","renderChequeId","renderReceiptAmount","renderRemark","renderUpdatedDate","renderStatus","getReceiptStatusLabel","jsxs","Fragment","Text","TextButton","ReadOnlyTable","FeeService","Column","i18n","DialogBox","ButtonBox","BUTTON_TYPE","ToastCustom","TOAST_STYLE_TYPE","ErrorDialog","initialCamIncomeDetailsData","initialTableRowData","IncomeDetails","dropDownOptions","getDetailsCallback","pageMode","setPageMode","PAGE_MODE","timeOutLocal","setTimeOutLocal","tableRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","calculate","payload","enrichForCalculation","res","CamService","allRecords","updatedRowDataObj","record","showCurrency","_b","_c","_d","_e","_f","err","parseStandardAPIErrorMessage","handleApplicantTypeChange","e","rowDataObj","handleCustomerNameChange","handleIncomeSchemeChange","productIncomeScheme","handleTableFieldChange","options","debounce","handleIsIncomeSchemeConsideredChange","validate","validateForm","isValid","onSave","enrichForSave","STATIC_MASTER_TYPE_TOAST_TEXT","error","onEdit","onCancel","resetValidator","onAddDocument","onDeleteRow","func","delay","getNumber","addRows","deletedRows","updatedRows","updateCamIncomeDetailsTableObj","incomeDetails","updateTotalAmount","field","totalAmount","renderApplicantType","SimpleDropDown","INPUT_STYLE_TYPE","CAM_APPLICANT_TYPE_OPTIONS","CAM_APPLICANT_TYPE","renderCustomerName","option","_g","_i","_h","renderIncomeScheme","renderAppraisedNetMonthlyIncome","InputBox","currencyFormatToNumber","getString","renderIsIncomeSchemeConsidered","YesOrNoOptionsWithBooleanValue","renderMonthlyObligation","renderFoir","renderMaxEmi","renderEmiFactor","renderEligibility","renderActions","IconButton","BUTTON_TYPES","renderTotal","renderTotalOfNetAppraisedMonthlyIncome","total","renderTotalOfMonthlyObligation","SaveComponent","AclGuard","EditableTableV2","initialCamInsuranceDetailsData","initialInsuranceDetailsPageObj","InsuranceDetails","isLoading","currentItemToViewInGallery","setCurrentItemToViewInGallery","initialMediaGallerySectionInfo","showMediaGallery","setShowMediaGallery","actionMenuRef","premiumAmountHeaderRef","actionMenuModel","handleChange","onUploadDocument","file","timestamp","randomString","fileNameSplit","fileNameWithoutExtension","i","objectName","FileUploadService","updateAttachmentInTable","onViewFile","preparedInfoInList","_j","_k","_m","_l","_p","_o","_n","_s","_r","_q","updateTotalPremium","signedData","updatedRowData","DOCUMENT_CATEGORY","enrichObj","updateCamInsuranceDetailsRowDataObj","stageInsurances","allRows","onClickActionMenu","dynamicActionMenuOptions","menu","renderTypeOfApplicant","renderTypeOfInsurance","renderVender","renderPremiumAmount","renderAttachment","FileUploadBox","VARIANTS","InputError","renderTotalPremiumAmount","Section","SkeletonCustom","MediaGallery","MenuBox","initialCamRepaymentHistoryPageObj","RepaymentHistoryTable","updateCamRepaymentHistoryTableObj","renderSource","renderPurpose","LOAN_PURPOSE_OPTIONS","renderNameOfInstitute","renderSanctionAmount","renderOutstandingAmount","renderBalanceTenor","renderEmi","renderPastDefaults","renderSanctionTenor","renderNoOfBounces","renderRoi","renderEmiPaid","renderObligated","YES_NO_OPTIONS","renderHighestDpds","renderHighestDpdsMonth","renderOverDueAmount","renderRemarkOrClarification","renderConsideredForBt","initialPageOj","initialCamSchemeDetailsData","initialCamFinalLoanDetailsData","initialCamLoanTagsData","initialCamFinancierLoanNumberData","initialCamPropertyValuationData","initialCamSummaryData","initialRepaymentHistoryCommentPageObj","PageLoanDetails","toastMessageVariant","setToastMessageVariant","balanceRef","schemeDetailsRef","incomeDetailsRef","init","getInsuranceDetailsDocData","getStageDetails","getPropertyValuationDetails","getIncomeSchemeOptionsForIncomeDetails","getInterestType","getProductIncomeSchemeOptionsForSchemeDetails","getTransactionTypeOptions","getCustomerNameOptions","getInsuranceVendorOptions","getTypeOfInsuranceOptions","getLoanTagsOptions","dateForDocUid","DocumentCategoryService","docTypeUid","dataForSection","DocumentService","documentSection","section","ignoreLoader","updateCamRepaymentHistoryCommentObj","updateCamSummaryObj","updateCamSchemeDetailsObj","updateCamFinalLoanDetailsObj","updateCamIncomeDetailsObj","updateCamOnlyValuationTotalObj","stageData","updateCamValuationListObj","updateDropdownOptions","StaticMasterDataService","validateGetAPIResponse","StageService","key","prevState","getInsuranceDetailsDropdownOptions","getSchemeDetailsDropdownOptions","getFinalLoanDetailsDropdownOptions","getLoanTagsDropdownOptions","getIncomeDetailsDropdownOptions","getRepaymentHistoryTableDropdownOptions","SchemeDetails","FinalLoanDetails","LoanTags","FinancierLoanNumber","PropertyValuation","onlyFinalTotal","RepaymentHistoryComment","Summary"],"mappings":"mgFAqDO,MAAMA,GAA4C,CACvD,uBAAwB,EAE1B,EAEMC,GAA4BC,EAAA,WAAW,CAACC,EAAOC,KAAQ,CACrD,KAAA,CAAE,KAAAC,CAAS,EAAAF,EACXG,EAAkDC,KAOlD,CAACC,EAASC,CAAU,EAAIC,WAA6B,CACzD,GAAGV,EAAA,CACJ,EAEK,CAACW,EAAcC,CAAe,EAAIF,WAAS,EAAE,EAC7C,CAACG,GAAcC,EAAe,EAAIJ,WAAS,EAAK,EAChD,CAACK,EAAcC,EAAe,EAAIN,WAAS,EAAE,EAC7C,CAACO,EAAoBC,CAAqB,EAAIR,WAAS,EAAK,EAE5DS,EAAkBC,SAAO,IAAI,EAC7BC,GAAsBC,GAAM,OAAY,IAAI,EAC5CC,GAAsBD,GAAM,OAAY,IAAI,EAIlDE,EAAA,oBAAoBpB,GAAK,KAAO,CAC9B,SAAAqB,CACA,EAAA,EAUFC,EAAAA,UAAU,IAAM,CACdjB,EAAYkB,IAAa,CACvB,GAAGA,EACH,GAAGtB,CACH,EAAA,CAAA,EAGD,CAACA,CAAI,CAAC,EAETqB,EAAAA,UAAU,IAAM,OACVP,GAAA,MAAAA,EAAiB,SAAWR,IAAiB,MAE/CiB,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,eAC1BhB,EAAgB,EAAE,EACpB,EACC,CAACD,EAAcE,EAAY,CAAC,EAE/Ba,EAAAA,UAAU,IAAM,CACVX,GACFG,EAAsB,EAAI,CAC5B,EACC,CAACH,CAAY,CAAC,EAEjBW,EAAAA,UAAU,IAAM,CACVX,GACFG,EAAsB,EAAI,CAE9B,EAAG,CAAE,CAAA,EAyBL,MAAMW,EAAwB,IAAM,CAClCpB,EAAYqB,IAAiB,CAC3B,GAAGA,EACH,uBAAwB,CAACA,EAAY,sBACrC,EAAA,CAAA,EAQEL,EAAW,IAAM,CACrBJ,GAAoB,QAAQ,QAAO,EAQ/BU,EAA6BC,SACzB,OAAM,CAAA,SAAAC,GAAgBD,EAAQ,YAAa,QAAS,CAAC,CAAE,CAAA,EAE3DE,EAA6BF,SACzB,OAAM,CAAA,SAAAC,GAAgBD,EAAQ,gBAAiB,QAAS,CAAC,CAAE,CAAA,EAE/DG,EAAiBH,SACb,OAAM,CAAA,SAAAC,GAAgBD,EAAQ,kBAAmB,QAAS,CAAC,CAAE,CAAA,EAMjEI,EAAmBJ,GAChBK,EAAAA,IAAC,OAAM,CAAA,SAAAL,EAAQ,YAAa,CAAA,EAE/BM,EAAwBN,GAA0C,QACtE,aAAQ,OAAM,CAAA,WAAAJ,GAAAW,KAAA,YAAAX,GAAiBI,EAAQ,oBAAqB,EAAG,CAAA,CAAA,EAE3DQ,EAAwBR,GACpBK,EAAA,IAAA,OAAA,CAAM,SAAWI,GAAAT,EAAQ,cAAc,CAAE,CAAA,EAG7CU,GAAkBV,GACfK,EAAAA,IAAC,OAAM,CAAA,SAAAL,EAAQ,QAAS,CAAA,EAE3BW,EAAuBX,SACnB,OAAM,CAAA,SAAAC,GAAgBD,EAAQ,OAAQ,QAAS,CAAC,CAAE,CAAA,EAEtDY,EAAgBZ,GACbK,EAAAA,IAAC,OAAM,CAAA,SAAAL,EAAQ,OAAQ,CAAA,EAE1Ba,GAAqBb,GACjBK,EAAA,IAAA,OAAA,CAAM,SAAWI,GAAAT,EAAQ,SAAS,CAAE,CAAA,EAExCc,GAAgBd,GACZK,EAAA,IAAA,OAAA,CAAM,SAAsBU,GAAAf,GAAA,YAAAA,EAAS,MAAM,CAAE,CAAA,EASvD,OAEIgB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,sEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAX,EAAA,IAACa,GAAK,CAAA,UAAU,GAAG,MAAO,sBAAuB,QAChD,MACC,CAAA,SAAAb,EAAA,IAACc,GAAA,CACC,MAAM,yBACN,UAAU,oDACV,QAAStB,CAAA,CAAA,EAGb,CAAA,EACF,EACAmB,EAAA,KAACI,GAAA,CACC,0BAA2BC,GAAW,WACtC,OAAQ,aAAa/C,EAAO,UAC5B,IAAKe,GACL,QAAQ,MACR,UAAU,oBACV,UAAW,GAEX,SAAA,CAAAgB,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,8BAA8B,EAC7C,KAAMxB,CAAA,CACR,EACAM,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,+BAA+B,EAC9C,KAAMrB,EACN,MAAO,CAAE,SAAU,OAAQ,CAAA,CAC7B,EACAG,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,mBAAmB,EAClC,KAAMpB,CAAA,CACR,CAAA,CAAA,CACF,CAAA,EACF,EACAa,EAAA,KAACQ,GAAA,CACC,OAAQ3B,EACR,QAASrB,EAAQ,uBACjB,MAAK,GACL,SAAU,GACV,UAAW,oCAEX,SAAA,CAACwC,EAAAA,KAAA,MAAA,CAAI,UAAU,qCACb,SAAA,CAAAX,MAAC,MACC,CAAA,SAAAA,EAAA,IAACa,GAAA,CACC,UAAU,qDACV,MAAO,oBAAA,CAAA,EAEX,EACAb,EAAAA,IAAC,OACC,SAACA,EAAAA,IAAAoB,GAAA,CAAU,WAAYC,GAAY,cAAe,QAAS7B,CAAA,CAAuB,CACpF,CAAA,CAAA,EACF,EACAmB,EAAA,KAACI,GAAA,CACC,0BAA2BC,GAAW,wBACtC,OAAQ,aAAa/C,EAAO,UAC5B,IAAKiB,GACL,QAAQ,MAOR,SAAA,CAAAc,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,qBAAqB,EACpC,KAAMnB,CAAA,CACR,EACAC,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,0BAA0B,EACzC,KAAMjB,CAAA,CACR,EACAD,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,0BAA0B,EACzC,KAAMf,CAAA,CACR,EACAH,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,uBAAuB,EACtC,KAAMb,EAAA,CACR,EACAL,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,kBAAkB,EACjC,KAAMZ,CAAA,CACR,EACAN,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,mBAAmB,EAClC,KAAMX,CAAA,CACR,EACAP,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,uBAAuB,EACtC,KAAMV,EAAA,CACR,EACAR,EAAA,IAACiB,EAAA,CACC,UAAU,2DACV,OAAQC,EAAK,EAAE,kBAAkB,EACjC,KAAMT,EAAA,CACR,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EACAT,EAAA,IAACsB,GAAA,CACC,SAAU,eACV,IAAKxC,EACL,UAAWR,EACX,QAASiD,GAAiB,OAAA,CAC5B,EAEAvB,EAAA,IAACwB,GAAA,CACC,OAAQ,IAAM,CACZ3C,EAAsB,EAAK,EAC3BF,GAAgB,EAAE,CACpB,EACA,QAASC,EACT,aAAAF,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CAAC,EC1PY+C,GAAwD,CACnE,MAAO,CACL,0BAA2B,EAC3B,kBAAmB,CACrB,EACA,IAAK,EACL,OAAQ,EAER,IAAK,CACH,cAAe,GACf,IAAK,EACP,CACF,EAEMC,GAAgD,CACpD,IAAK,GACL,SAAU,GAIV,UAAW,CACT,cAAe,GACf,SAAU,EAGZ,EACA,aAAc,CACZ,IAAK,GACL,KAAM,EACR,EACA,0BAA2B,GAC3B,mBAAoB,GACpB,kBAAmB,GACnB,KAAM,GACN,OAAQ,GACR,UAAW,GACX,YAAa,EACf,EAEMC,GAAkC9D,EAAA,WAAW,CAACC,EAAOC,KAAQ,CACjE,KAAM,CAAE,KAAAC,EAAM,gBAAA4D,EAAiB,mBAAAC,CAAA,EAAuB/D,EAChDG,EAAkDC,KAMlD,CAACC,EAASC,CAAU,EAAIC,WAAmC,CAC/D,GAAGoD,EAAA,CACJ,EACK,CAACK,GAAUC,EAAW,EAAI1D,EAAAA,SAAS2D,EAAU,IAAI,EACjD,CAAC1D,EAAcC,EAAe,EAAIF,WAAS,EAAE,EAC7C,CAACG,EAAcC,CAAe,EAAIJ,WAAS,EAAK,EAChD,CAACK,EAAcC,EAAe,EAAIN,WAAS,EAAE,EAC7C,CAACO,GAAoBC,CAAqB,EAAIR,WAAS,EAAK,EAC5D,CAAC4D,EAAcC,CAAe,EAAI7D,EAAAA,SAAc,MAAS,EAEzDS,EAAkBC,SAAO,IAAI,EAC7BoD,EAAWlD,GAAM,OAA6B,IAAI,EAGlD,EAAGmD,CAAW,EAAI/D,WAAkB,EAAK,EAEzCgE,EAAkBtD,EAAA,OACtB,IAAIuD,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EAGHtD,EAAA,oBAAoBpB,GAAK,KAAO,CAC9B,SAAAqB,CACA,EAAA,EAUFC,EAAAA,UAAU,IAAM,CAEdjB,EAAYkB,IAAa,CACvB,GAAGA,EACH,MAAO,CAAE,GAAGtB,EAAK,KAAM,CACvB,EAAA,CAAA,EAID,CAACA,CAAI,CAAC,EAETqB,EAAAA,UAAU,IAAM,OACVP,GAAA,MAAAA,EAAiB,SAAWR,IAAiB,MAE/CiB,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,eAC1BhB,GAAgB,EAAE,EACpB,EACC,CAACD,EAAcE,CAAY,CAAC,EAE/Ba,EAAAA,UAAU,IAAM,CACVX,GACFG,EAAsB,EAAI,CAC5B,EACC,CAACH,CAAY,CAAC,EAQX,MAAAgE,EAAY,MAAO/C,GAAsC,iBAC7DvB,EAAYkB,IAAa,CACvB,GAAGA,EACH,IAAK,CACH,GAAGA,EAAQ,IACX,cAAe,GACf,KAAKK,GAAA,YAAAA,EAAS,MAAO,EACvB,CACA,EAAA,EACE,GAAA,CACI,MAAAgD,EAAUC,EAAqBjD,CAAO,EACtCkD,EAAM,MAAMC,GAAW,OAAOH,CAAO,EAG3CvE,EAAYkB,KAAa,CACvB,GAAGA,GACH,IAAK,CACH,GAAGA,GAAQ,IACX,cAAe,GACf,IAAK,EACP,CACA,EAAA,EAEI,MAAAyD,IAAaxD,EAAA4C,GAAA,YAAAA,EAAU,UAAV,YAAA5C,EAAmB,oBAOhCyD,GAA8C,CAClD,GAPmBD,IAAA,YAAAA,GAAY,KAAME,IAAWA,GAAO,OAAQtD,GAAA,YAAAA,EAAS,MAQxE,kBAAmBuD,GAAaC,EAAAN,GAAA,YAAAA,EAAK,OAAL,YAAAM,EAAW,0BAA0B,EACrE,YAAaD,GAAaE,EAAAP,GAAA,YAAAA,EAAK,OAAL,YAAAO,EAAW,oBAAoB,EACzD,UAAWF,GAAaG,EAAAR,GAAA,YAAAA,EAAK,OAAL,YAAAQ,EAAW,kBAAkB,EACrD,OAAQH,GAAaI,EAAAT,GAAA,YAAAA,EAAK,OAAL,YAAAS,EAAW,eAAe,CAAA,GAExCC,EAAApB,EAAA,UAAA,MAAAoB,EAAS,iBAAiBP,UAC5BQ,GACP,QAAQ,IAAIA,CAAG,EACfpF,EAAYkB,IAAa,CACvB,GAAGA,EACH,IAAK,CACH,GAAGA,EAAQ,IACX,cAAe,GACf,IAAK,EACP,CACA,EAAA,EACcX,GAAA8E,EAA6BD,CAAG,CAAC,CACnD,CAAA,EAgBIE,GAA4B,CAACC,EAAQhE,IAAsC,OAC3E,IAAAiE,EAAuC,CAAE,GAAGjE,GACnCiE,EAAA,CACX,GAAGA,EACH,UAAW,CACT,GAAGA,EAAW,UACd,cAAeD,EAAE,OAAO,MACxB,IAAK,EACP,CAAA,GAQOpE,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,iBAAiBqE,EAAU,EAGzCC,EAA2B,CAACF,EAAQhE,IAAsC,OAC1E,IAAAiE,EAAuC,CAAE,GAAGjE,GACnCiE,EAAA,CACX,GAAGA,EACH,UAAW,CACT,GAAGA,EAAW,UACd,IAAKD,EAAE,OAAO,KAChB,CAAA,GAQOpE,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,iBAAiBqE,EAAU,EAGzCE,EAA2B,CAACH,EAAQhE,IAAsC,aACxE,MAAAoE,GAAsBxE,EAAAqC,EAAgB,qCAAhB,YAAArC,EAAoD,KAC7E0D,IAAWA,GAAA,YAAAA,EAAQ,OAAQU,EAAE,OAAO,OAGnC,IAAAC,EAAuC,CAAE,GAAGjE,GACnCiE,EAAA,CACX,GAAGA,EACH,aAAc,CACZ,GAAGA,EAAW,aACd,IAAKD,EAAE,OAAO,KAChB,EACA,OAAMP,GAAAD,EAAAY,GAAA,YAAAA,EAAqB,UAArB,YAAAZ,EAA+B,KAA/B,YAAAC,EAAmC,UAAW,GACpD,kBAAmB,GACnB,OAAQ,GACR,UAAW,GACX,YAAa,EAAA,EAGfV,EAAUkB,CAAU,GAEXP,EAAAlB,EAAA,UAAA,MAAAkB,EAAS,iBAAiBO,EAAU,EAGzCI,GAAyB,CAC7BL,EACAM,IAKG,OACH,IAAIL,EAAuC,CAAE,GAAGK,EAAQ,OAAQ,EAC5DA,EAAQ,UACGL,EAAA,CACX,GAAGA,EACH,CAAC,GAAGK,EAAQ,OAAO,EAAGf,EAAaS,EAAE,OAAO,KAAK,CAAA,GAG/CM,GAAA,YAAAA,EAAS,SAAU,6BACrBC,EAAS,IAAMxB,EAAUkB,CAAU,EAAG,IAAI,GAG/BA,EAAA,CACX,GAAGA,EACH,CAAC,GAAGK,EAAQ,OAAO,EAAGN,EAAE,OAAO,KAAA,GAG1BpE,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,iBAAiBqE,EAAU,EAGzCO,GAAuC,CAACR,EAAQhE,IAAsC,aACtF,IAAAiE,EAAuC,CAAE,GAAGjE,GAE5C,GAAAgE,EAAE,OAAO,QAAU,GACRC,EAAA,CACX,GAAGA,EACH,mBAAoBD,EAAE,OAAO,MAC7B,kBAAmB,GACnB,OAAQ,GACR,UAAW,GACX,YAAa,GACb,KAAM,EAAA,MAEH,CACC,MAAAI,GAAsBxE,EAAAqC,EAAgB,qCAAhB,YAAArC,EAAoD,KAC7E0D,GAAA,QAAW,OAAAA,GAAA,YAAAA,EAAQ,SAAQ1D,GAAAI,GAAA,YAAAA,EAAS,eAAT,YAAAJ,GAAuB,OAExCqE,EAAA,CACX,GAAGA,EACH,mBAAoBD,EAAE,OAAO,MAC7B,OAAMP,GAAAD,EAAAY,GAAA,YAAAA,EAAqB,UAArB,YAAAZ,EAA+B,KAA/B,YAAAC,EAAmC,UAAW,EAAA,EAEtDV,EAAUkB,CAAU,GAEbP,EAAAlB,EAAA,UAAA,MAAAkB,EAAS,iBAAiBO,EAAU,EASzCQ,EAAYT,GAAW,UAC3BR,EAAAd,GAAA,YAAAA,EAAiB,UAAjB,MAAAc,EAA0B,gBAAe5D,EAAAoE,GAAA,YAAAA,EAAG,SAAH,YAAApE,EAAW,KAAI,EAGpD8E,GAAe,IAAM,SACzB,IAAIC,EAAU,GAEd,OADUA,IAAA/E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,aAAc,GAC9C+E,IAGUlC,EAACK,GAAS,CAACA,CAAI,GAC3BU,EAAAd,GAAA,YAAAA,EAAiB,UAAjB,MAAAc,EAA0B,eACdf,EAACK,GAAS,CAACA,CAAI,EACpB,GACT,EASI8B,GAAS,SAAY,SACrB,GAAA,CAACF,KACH,OAEF,MAAM1B,EAAU6B,IACZ,GAAA,CACI,MAAA1B,GAAW,oBAAoBH,CAAO,EAC5CpE,GAAgBkG,GAA8B,KAAK,EACnDhG,EAAgB,CAACD,CAAY,EAC7BuD,GAAYC,EAAU,IAAI,EACLH,GAAA,MAAAA,KACrBtC,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,YAClB4D,EAAAhB,EAAS,UAAT,MAAAgB,EAAkB,eACXuB,GACS/F,GAAA8E,EAA6BiB,CAAK,CAAC,CACrD,CAAA,EAGIC,GAAS,IAAM5C,GAAYC,EAAU,IAAI,EAEzC4C,GAAW,IAAM,SACrB7C,GAAYC,EAAU,IAAI,EACX6C,KACftF,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,YAClB4D,EAAAhB,EAAS,UAAT,MAAAgB,EAAkB,SACGtB,GAAA,MAAAA,GAAA,EAGjBiD,GAAgB,IAAM,QAC1BvF,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,OAAO,CAAE,GAAGmC,EAAqB,EAAA,EAG/CqD,EAAepF,GAAsC,QAChDJ,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,UAAUI,GACZ0C,EAAA,QAAU,IAAIC,GAAqB,CACjD,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EAQGrD,EAAW,IAAM,QACrBG,EAAA4C,GAAA,YAAAA,EAAU,UAAV,MAAA5C,EAAmB,QAAO,EAItB2E,EAAW,CAACc,EAAWC,IAAe,CAE1C,aAAahD,CAAY,EACTC,EAAA,WAAW8C,EAAMC,CAAK,CAAC,CAAA,EAGnCJ,EAAiB,IAAM,OACXxC,EAAA,QAAU,IAAIC,GAAqB,CACjD,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,GACDlD,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,MAAA9C,EAA0B,cAAa,EAGnCqD,EAAwBjD,GAAsC,OAU3D,MATW,CAChB,QAAS1B,GAAA,YAAAA,EAAQ,QACjB,SAAUA,GAAA,YAAAA,EAAQ,SAClB,cAAcsB,EAAAI,GAAA,YAAAA,EAAS,YAAT,YAAAJ,EAAoB,IAClC,cAAe2F,GAAUvF,GAAA,YAAAA,EAAS,IAAI,EACtC,IAAK3B,GAAA,YAAAA,EAAM,IACX,OAAQA,GAAA,YAAAA,EAAM,OACd,gCAAiCkH,GAAUvF,GAAA,YAAAA,EAAS,yBAAyB,CAAA,CAExE,EAGH6E,EAAgB,IAAM,WAC1B,QAAQ,IAAI,iBAAiB,EAC7B,IAAIW,IAAU5F,EAAA4C,EAAS,UAAT,YAAA5C,EAAkB,oBAAqB,CAAA,EACjD6F,IAAcjC,EAAAhB,EAAS,UAAT,YAAAgB,EAAkB,sBAAuB,CAAA,EACvDkC,IAAcjC,EAAAjB,EAAS,UAAT,YAAAiB,EAAkB,sBAAuB,CAAA,EAC3D+B,EAAUA,EAAQ,IAAKxF,GAAiB2F,GAA+B3F,CAAO,CAAC,EAE/EyF,EAAcA,EAAY,IAAKzF,GAAiB2F,GAA+B3F,CAAO,CAAC,EACvF0F,EAAcA,EAAY,IAAK1F,GAAiB2F,GAA+B3F,CAAO,CAAC,EAEvF,MAAM4F,EAAgB,CAAC,GAAGJ,EAAS,GAAGC,EAAa,GAAGC,CAAW,EAC1D,MAAA,CACL,KAAM,CACJ,IAAKpH,GAAA,YAAAA,EAAQ,OACf,EACA,MAAO,CACL,IAAKA,GAAA,YAAAA,EAAQ,QACf,EACA,cAAAsH,CAAA,CACF,EAGIC,EAAqBC,GAA0C,OAC3D,MAAA1C,GAAaxD,EAAA4C,EAAS,UAAT,YAAA5C,EAAkB,oBACrC,IAAImG,EAAc,EACN3C,GAAA,MAAAA,EAAA,QAASE,GAAqC,CACzCyC,GAAAR,GAAUjC,GAAA,YAAAA,EAASwC,EAAM,CAAA,GAG1CrH,EAAYkB,IAAa,CACvB,GAAGA,EACH,MAAO,CACL,GAAGA,EAAQ,MACX,CAACmG,CAAK,EAAGC,CACX,CACA,EAAA,CAAA,EAQAC,GAAuBhG,GAAsC,aAE/D,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,gCACZ,KAAM,gBAAgBjG,GAAA,YAAAA,EAAS,MAC/B,OAAOJ,EAAAI,GAAA,YAAAA,EAAS,YAAT,YAAAJ,EAAoB,cAC3B,QAASsG,EAAiB,QAC1B,SAAS1C,EAAA2C,KAAA,YAAA3C,EAA4B,OAClCF,GAAWA,EAAO,OAAS8C,GAAmB,WAEjD,YAAY,OACZ,YAAY,OACZ,SAAWpC,GAAWD,GAA0BC,EAAGhE,CAAO,EAC1D,OAAQyE,EAER,YAAYf,EAAAhB,GAAA,YAAAA,EAAiB,UAAjB,YAAAgB,EAA0B,QACpC,gBAAgB1D,GAAA,YAAAA,EAAS,OACzByD,EAAAzD,EAAQ,YAAR,YAAAyD,EAAmB,cACnB,YACF,CAEJ,CAAA,CAAA,CAAA,EAIE4C,GAAsBrG,GAAsC,wBAE9D,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,+BACZ,KAAM,eAAejG,GAAA,YAAAA,EAAS,MAC9B,OAAOJ,EAAAI,GAAA,YAAAA,EAAS,YAAT,YAAAJ,EAAoB,IAC3B,QAASsG,EAAiB,QAC1B,UACE1C,EAAAxD,GAAA,YAAAA,EAAS,YAAT,YAAAwD,EAAoB,iBAAkB4C,GAAmB,SACrD3C,EAAAxB,EAAgB,eAAhB,YAAAwB,EAA8B,OAC3B6C,IAAWA,GAAA,YAAAA,EAAQ,iBAAkBF,GAAmB,WAE3D1C,EAAA1D,GAAA,YAAAA,EAAS,YAAT,YAAA0D,EAAoB,iBAAkB0C,GAAmB,cACzDzC,EAAA1B,EAAgB,eAAhB,YAAA0B,EAA8B,OAC3B2C,IAAWA,GAAA,YAAAA,EAAQ,iBAAkBF,GAAmB,gBAE3DxC,EAAA5D,GAAA,YAAAA,EAAS,YAAT,YAAA4D,EAAoB,iBAAkBwC,GAAmB,WACzDG,EAAAtE,EAAgB,eAAhB,YAAAsE,EAA8B,OAC3BD,IAAWA,GAAA,YAAAA,EAAQ,iBAAkBF,GAAmB,WAE3D,CAAC,EAEP,YAAY,WACZ,YAAY,MACZ,SAAWpC,GAAME,EAAyBF,EAAGhE,CAAO,EACpD,OAAQyE,EAER,YAAY+B,GAAA9D,GAAA,YAAAA,EAAiB,UAAjB,YAAA8D,GAA0B,QACpC,eAAexG,GAAA,YAAAA,EAAS,OACxByG,EAAAzG,EAAQ,YAAR,YAAAyG,EAAmB,IACnB,YACF,CAEJ,CAAA,CAAA,CAAA,EAIEC,EAAsB1G,GAAsC,eAE9D,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,aACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,+BACZ,UAAU,wBACV,KAAM,eAAejG,GAAA,YAAAA,EAAS,MAC9B,OAAOJ,EAAAI,GAAA,YAAAA,EAAS,eAAT,YAAAJ,EAAuB,IAC9B,QAASsG,EAAiB,QAC1B,QAASjE,EAAgB,mCACzB,YAAY,wBACZ,YAAY,MACZ,SAAW+B,GAAMG,EAAyBH,EAAGhE,CAAO,EACpD,OAAQyE,EAER,YAAYhB,EAAAf,GAAA,YAAAA,EAAiB,UAAjB,YAAAe,EAA0B,QACpC,eAAezD,GAAA,YAAAA,EAAS,OACxBwD,EAAAxD,EAAQ,eAAR,YAAAwD,EAAsB,IACtB,aAEF,WAAUE,EAAAlF,GAAA,YAAAA,EAAS,MAAT,YAAAkF,EAAc,kBAAiBC,EAAAnF,GAAA,YAAAA,EAAS,MAAT,YAAAmF,EAAc,QAAQ3D,GAAA,YAAAA,EAAS,IAAA,CAE5E,CAAA,CAAA,CAAA,EAIE2G,GAAmC3G,GAAsC,WAE3E,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,4BAA4B5G,GAAA,YAAAA,EAAS,MAC3C,QAASkG,EAAiB,UAC1B,SAAWlC,GACTK,GAAuBL,EAAG,CACxB,QAAAhE,EACA,MAAO,4BACP,SAAU,EAAA,CACX,EAEH,UAAU,aACV,OAAQyE,EACR,MAAOlB,EAAavD,GAAA,YAAAA,EAAS,yBAAyB,EACtD,YAAYJ,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,4BAA4BI,GAAA,YAAAA,EAAS,MACrC6G,GAAuBC,GAAU9G,GAAA,YAAAA,EAAS,yBAAyB,CAAC,EACpE,gDAEF,UAAS,GACT,WAAUwD,EAAAhF,GAAA,YAAAA,EAAS,MAAT,YAAAgF,EAAc,kBAAiBC,EAAAjF,GAAA,YAAAA,EAAS,MAAT,YAAAiF,EAAc,QAAQzD,GAAA,YAAAA,EAAS,IAAA,CAE5E,CAAA,CAAA,CAAA,EAIE+G,GAAkC/G,GAAsC,WAE1E,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,+BACZ,KAAM,qBAAqBjG,GAAA,YAAAA,EAAS,MACpC,MAAOA,GAAA,YAAAA,EAAS,mBAChB,QAASkG,EAAiB,QAC1B,QAASc,GACT,YAAY,OACZ,YAAY,OACZ,SAAWhD,GAAMQ,GAAqCR,EAAGhE,CAAO,EAChE,OAAQyE,EAER,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,qBAAqBI,GAAA,YAAAA,EAAS,MAC9BA,EAAQ,mBACR,aAEF,WAAUwD,EAAAhF,GAAA,YAAAA,EAAS,MAAT,YAAAgF,EAAc,kBAAiBC,EAAAjF,GAAA,YAAAA,EAAS,MAAT,YAAAiF,EAAc,QAAQzD,GAAA,YAAAA,EAAS,IAAA,CAE5E,CAAA,CAAA,CAAA,EAIEiH,GAA2BjH,GAE7BK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,oBAAoB5G,GAAA,YAAAA,EAAS,MACnC,QAASkG,EAAiB,UAC1B,MAAO3C,EAAavD,GAAA,YAAAA,EAAS,iBAAiB,EAC9C,UAAU,cACV,SAAQ,GACR,UAAS,EAAA,CAEb,CAAA,CAAA,EAIEkH,GAAclH,GAEhBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,OAAO5G,GAAA,YAAAA,EAAS,MACtB,QAASkG,EAAiB,UAC1B,MAAOlG,GAAA,YAAAA,EAAS,KAChB,SAAQ,GACR,UAAU,cACV,UAAS,EAAA,CAGb,CAAA,CAAA,EAIEmH,GAAgBnH,GAElBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,SAAS5G,GAAA,YAAAA,EAAS,MACxB,QAASkG,EAAiB,UAC1B,SAAWlC,GAAMK,GAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,SAAU,SAAU,GAAM,EACvF,MAAOuD,EAAavD,GAAA,YAAAA,EAAS,MAAM,EACnC,UAAU,aACV,SAAQ,GACR,UAAS,EAAA,CAEb,CAAA,CAAA,EAIEoH,GAAmBpH,GAErBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,SAAS5G,GAAA,YAAAA,EAAS,MACxB,QAASkG,EAAiB,UAC1B,MAAO3C,EAAavD,GAAA,YAAAA,EAAS,SAAS,EACtC,UAAU,aACV,SAAQ,GACR,UAAS,EAAA,CAEb,CAAA,CAAA,EAIEqH,EAAqBrH,GAEvBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,cAAc5G,GAAA,YAAAA,EAAS,MAC7B,QAASkG,EAAiB,UAC1B,SAAWlC,GACTK,GAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,cAAe,SAAU,GAAM,EAE7E,MAAOuD,EAAavD,GAAA,YAAAA,EAAS,WAAW,EACxC,UAAU,aACV,SAAQ,GACR,UAAS,EAAA,CAEb,CAAA,CAAA,EAIEsH,EAAiBtH,GAEnBK,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAACkH,GAAA,CACC,WAAYC,GAAa,OACzB,QAAS,IAAMpC,EAAYpF,CAAO,EAClC,SAAUmC,KAAaE,EAAU,KACjC,eAAgB,CACd,SAAU,OACV,UAAW,2DACX,UAAW,QACX,UAAW,KACb,CAAA,CAEJ,CAAA,CAAA,EAIEoF,EAAc,IAEhBpH,EAAA,IAACa,GAAA,CACC,UAAU,uCACV,MAAO,+CAAA,CAAA,EAKPwG,EAAyC,IAAM,SACnD,MAAMC,EAAQpE,GAAa3D,EAAApB,GAAA,YAAAA,EAAS,QAAT,YAAAoB,EAAgB,yBAAyB,EAElE,OAAAS,EAAA,IAACa,GAAA,CACC,UAAU,kDACV,QAAOsC,EAAAhF,GAAA,YAAAA,EAAS,QAAT,YAAAgF,EAAgB,2BAA4B,EAAI,IAAImE,IAAU,EAAA,CAAA,CACvE,EAIEC,EAAiC,IAAM,SAC3C,MAAMD,EAAQpE,GAAa3D,EAAApB,GAAA,YAAAA,EAAS,QAAT,YAAAoB,EAAgB,iBAAiB,EAE1D,OAAAS,EAAA,IAACa,GAAA,CACC,UAAU,kDACV,QAAOsC,EAAAhF,GAAA,YAAAA,EAAS,QAAT,YAAAgF,EAAgB,mBAAoB,EAAI,IAAImE,IAAU,EAAA,CAAA,CAC/D,EAQJ,OAEI3G,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAZ,EAAA,IAACwH,GAAA,CACC,MAAM,0BACN,SAAA1F,GAEA,OAAAyC,GACA,SAAAK,GACA,OAAAD,GAEA,SAAA3E,EAAAA,IAACyH,IAAS,SAAU,CAAE,KAAM3F,KAAaE,EAAU,IACjD,EAAA,SAAAhC,EAAA,IAAC,OAAI,UAAU,0BACb,eAAC,MAAI,CAAA,UAAU,aACZ,SAAO,OAAA8B,IAAa,SAEjBnB,EAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAAZ,EAAAA,IAAC,OAAI,UAAU,wBACb,SAACA,MAAA,MAAA,CAAI,UAAU,oBACb,SAAAA,EAAA,IAACoB,GAAA,CACC,WAAYC,GAAY,cACxB,YAAa,gBACb,QAASyD,EAAA,GAEb,CACF,CAAA,EAEAnE,EAAA,KAAC+G,GAAA,CACC,IAAKvF,EACL,UAAU,MACV,0BAA2BW,GAAW,iBACtC,OAAQ,aAAa7E,GAAA,YAAAA,EAAQ,mCAAmCA,GAAA,YAAAA,EAAQ,WACxE,KAAM,SACN,UAAU,oBACX,iBAAkB,IAAI,CACrBuH,EAAkB,2BAA2B,EAC7CA,EAAkB,mBAAmB,CACtC,EAEC,SAAA,CAAAxF,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,yBAAyB,EACxC,UAAU,+DACV,KAAMyE,GACN,OAAQyB,CAAA,CACV,EACApH,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,wBAAwB,EACvC,UAAU,+DACV,KAAM8E,EAAA,CACR,EACAhG,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,wBAAwB,EACvC,UAAU,4DACV,KAAMmF,CAAA,CACR,EACArG,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,qCAAqC,EACpD,UAAU,+DACV,KAAMoF,GACN,OAAQe,EACR,gBAAgB,aAAA,CAClB,EACArH,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,8BAA8B,EAC7C,UAAU,+DACV,KAAMwF,EAAA,CACR,EACA1G,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,6BAA6B,EAC5C,UAAU,+DACV,KAAM0F,GACN,OAAQW,EACR,gBAAgB,aAAA,CAClB,EACAvH,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,6BAA6B,EAC5C,UAAU,+DACV,KAAM2F,EAAA,CACR,EACA7G,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kBAAkB,EACjC,UAAU,+DACV,KAAM4F,EAAA,CACR,EACA9G,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,qBAAqB,EACpC,UAAU,+DACV,KAAM6F,EAAA,CACR,EACA/G,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,uBAAuB,EACtC,UAAU,+DACV,KAAM8F,CAAA,CACR,EACAhH,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,4CAA4C,EAC3D,UAAU,uDACV,MAAO,CAAE,SAAU,OAAQ,MAAO,MAAO,EACzC,KAAM+F,CAAA,CACR,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACE,KACN,CAAA,CACF,CACF,CAAA,CAAA,CACF,EAEAjH,EAAA,IAACsB,GAAA,CACC,SAAU,eACV,IAAKxC,EACL,UAAWR,EACX,QAASiD,GAAiB,OAAA,CAC5B,EAEAvB,EAAA,IAACwB,GAAA,CACC,OAAQ,IAAM,CACZ3C,EAAsB,EAAK,EAC3BF,GAAgB,EAAE,CACpB,EACA,QAASC,GACT,aAAAF,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CAAC,ECh0BYiJ,GAA2D,CACtE,WAAY,GACZ,gBAAiB,EACnB,EAEaC,GAA8D,CACzE,MAAO,CACL,0BAA2B,CAC7B,CACF,EACMlG,GAAmD,CACvD,gBAAiB,GACjB,gBAAiB,GACjB,SAAU,GACV,0BAA2B,GAC3B,SAAU,GACV,aAAc,CACZ,IAAK,GACL,QAAS,CACP,IAAK,EACP,EACA,YAAa,GACb,iBAAkB,CAAC,CACrB,CACF,EAEMmG,GAAqChK,EAAA,WAAW,CAACC,EAAOC,KAAQ,CACpE,KAAM,CAAE,gBAAA6D,EAAiB,UAAAkG,EAAW,KAAA9J,EAAM,mBAAA6D,GAAuB/D,EAO3DG,EAAkDC,KAElD,CAACC,EAASC,EAAU,EAAIC,WAAS,CAAE,GAAGuJ,GAAgC,EACtE,CAAC9F,GAAUC,CAAW,EAAI1D,EAAAA,SAAS2D,EAAU,IAAI,EACjD,CAAC1D,GAAcC,CAAe,EAAIF,WAAS,EAAE,EAC7C,CAACG,EAAcC,CAAe,EAAIJ,WAAS,EAAK,EAChD,CAACK,GAAcC,EAAe,EAAIN,WAAS,EAAE,EAC7C,CAACO,EAAoBC,CAAqB,EAAIR,WAAS,EAAK,EAC5D,CAAC0J,EAA4BC,CAA6B,EAAI3J,WAAqB,CACvF,GAAG4J,EAAA,CACJ,EACK,CAACC,EAAkBC,CAAmB,EAAI9J,WAAkB,EAAK,EAEjES,EAAkBC,SAAO,IAAI,EAC7BoD,EAAWlD,GAAM,OAA6B,IAAI,EAElD,EAAGmD,EAAW,EAAI/D,WAAkB,EAAK,EAEzCgE,EAAkBtD,EAAA,OACtB,IAAIuD,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,GAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EAEG2F,EAAgBrJ,SAAY,IAAI,EAChCsJ,GAAyBtJ,SAAY,IAAI,EAE/CI,EAAA,oBAAoBpB,GAAK,KAAO,CAC9B,QAASqB,EACT,EAAA,EAGF,MAAMkJ,GAAyB,CAC7B,CACE,MAAO,CAAC,CACV,CAAA,EAkBFjJ,EAAAA,UAAU,IAAM,CACN,QAAA,IAAI,OAAQrB,CAAI,CAAA,EACvB,CAACA,CAAI,CAAC,EAETqB,EAAAA,UAAU,IAAM,OACVP,GAAA,MAAAA,EAAiB,SAAWR,KAAiB,MAE/CiB,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,eAC1BhB,EAAgB,EAAE,EACpB,EACC,CAACD,GAAcE,CAAY,CAAC,EAE/Ba,EAAAA,UAAU,IAAM,CACVX,IACFG,EAAsB,EAAI,CAC5B,EACC,CAACH,EAAY,CAAC,EAaX,MAAA6J,EAAe,CACnB5E,EACAM,IAKG,OACH,QAAQ,IAAI,eAAe,EAC3B,IAAIL,EAA0C,CAAE,GAAGK,EAAQ,OAAQ,EAE/DA,EAAQ,SAEGL,EAAA,CACX,GAAGA,EACH,CAACK,EAAQ,KAAK,EAAGf,EAAaS,EAAE,OAAO,KAAK,CAAA,EAIjCC,EAAA,CACX,GAAGA,EACH,CAAC,GAAGK,EAAQ,OAAO,EAAGN,EAAE,OAAO,KAAA,GAI1BpE,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,iBAAiBqE,EAAU,EASzCQ,GAAYT,GAAW,UAC3BR,EAAAd,GAAA,YAAAA,EAAiB,UAAjB,MAAAc,EAA0B,gBAAe5D,EAAAoE,GAAA,YAAAA,EAAG,SAAH,YAAApE,EAAW,KAAI,EAGpD8E,GAAe,IAAM,SACzB,IAAIC,EAAU,GAEd,OADUA,IAAA/E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,aAAc,GAC9C+E,IAGUlC,GAACK,GAAS,CAACA,CAAI,GAC3BU,EAAAd,GAAA,YAAAA,EAAiB,UAAjB,MAAAc,EAA0B,eACdf,GAACK,GAAS,CAACA,CAAI,EACpB,GACT,EASIqC,GAAgB,IAAM,QAC1BvF,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,OAAO,CAAE,GAAGmC,EAAqB,EAAA,EAG/C6C,GAAS,SAAY,SAGrB,GAFJ,QAAQ,IAAI,MAAM,EAEd,CAACF,KACH,OAEF,MAAM1B,EAAU6B,IAEZ,GAAA,CACI,MAAA1B,GAAW,uBAAuBH,CAAO,EAC/CpE,EAAgBkG,GAA8B,KAAK,EACnDhG,EAAgB,CAACD,CAAY,EAC7BuD,EAAYC,EAAU,IAAI,EACLH,GAAA,MAAAA,KACrBtC,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,YAClB4D,EAAAhB,EAAS,UAAT,MAAAgB,EAAkB,eAEXuB,GACS/F,GAAA8E,EAA6BiB,CAAK,CAAC,CACrD,CAAA,EAGIC,GAAS,IAAM5C,EAAYC,EAAU,IAAI,EAEzC4C,EAAW,IAAM,SACrB7C,EAAYC,EAAU,IAAI,EACX6C,MACftF,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,YAClB4D,EAAAhB,EAAS,UAAT,MAAAgB,EAAkB,QAAO,EAOrB4B,EAAepF,GAAyC,QACnDJ,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,UAAUI,GAEZ0C,EAAA,QAAU,IAAIC,GAAqB,CACjD,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,GAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EAGG+F,EAAmB,MAAO7E,EAAQhE,IAAyC,OACzE,MAAA8I,EAAO9E,EAAE,MAAM,CAAC,EAEhB+E,EAAY,IAAI,KAAK,EAAE,QAAQ,EAC/BC,EAAe,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,EACxDC,GAAgBrJ,EAAAkJ,GAAA,YAAAA,EAAM,OAAN,YAAAlJ,EAAY,MAAM,KACxC,IAAIsJ,EAA2B,GAC3B,IAAAD,GAAA,YAAAA,EAAe,QAAS,EAAG,CAC7B,QAASE,EAAI,EAAGA,EAAIF,EAAc,OAAS,GACrCE,IAAMF,EAAc,OAAS,EADWE,IAI5CD,GAA4BD,EAAcE,CAAC,EAEvC,MAAAC,EAAa,GAAGF,KAA4BH,KAAaC,KAC7DC,EAAcA,EAAc,OAAS,CAAC,IAGpC,GAAA,CACF,MAAM/F,EAAM,MAAMmG,GAAkB,SAASP,EAAMM,CAAU,EACrCE,EAAApG,EAAI,KAAMlD,CAAO,QAElC+E,GACP,QAAQ,IAAIA,CAAK,EACD/F,GAAA8E,EAA6BiB,CAAK,CAAC,CACrD,EACF,EAGIwE,EAAa,CAACvF,EAAQhE,IAAyC,oDACnE,IAAIwJ,EAAiC,CACnC,IAAK,GACL,cAAe,GACf,KAAM,GACN,SAAU,GACV,SAAU,GACV,SAAU,GACV,SAAU,GACV,KAAM,GACN,YAAa,GACb,IAAK,EAAA,EAGHxJ,GAAA,MAAAA,EAAS,eACUwJ,EAAA,CACnB,MAAK5J,EAAAI,GAAA,YAAAA,EAAS,eAAT,YAAAJ,EAAuB,MAAO,GACnC,cAAe,GACf,OAAM8D,GAAAD,GAAAD,EAAAxD,GAAA,YAAAA,EAAS,eAAT,YAAAwD,EAAuB,QAAvB,YAAAC,EAA8B,OAA9B,YAAAC,EAAoC,gBAAiB,IAC3D,WAAU6C,GAAA3C,GAAAD,EAAA3D,GAAA,YAAAA,EAAS,eAAT,YAAA2D,EAAuB,mBAAvB,YAAAC,EAA0C,KAA1C,YAAA2C,EAA8C,WAAY,IACpE,WAAUkD,IAAAjD,GAAAC,EAAAzG,GAAA,YAAAA,EAAS,eAAT,YAAAyG,EAAuB,mBAAvB,YAAAD,EAA0C,KAA1C,YAAAiD,GAA8C,WAAY,IACpE,SAAU,GACV,WAAUC,EAAA1J,GAAA,YAAAA,EAAS,eAAT,YAAA0J,EAAuB,cAAe,IAChD,OAAMC,IAAAC,GAAA5J,GAAA,YAAAA,EAAS,eAAT,YAAA4J,GAAuB,UAAvB,YAAAD,GAAgC,OAAQ,IAC9C,cAAaE,IAAAC,IAAAC,GAAA/J,GAAA,YAAAA,EAAS,eAAT,YAAA+J,GAAuB,mBAAvB,YAAAD,GAA0C,KAA1C,YAAAD,GAA8C,cAAe,IAC1E,MAAKG,IAAAC,IAAAC,GAAAlK,GAAA,YAAAA,EAAS,eAAT,YAAAkK,GAAuB,mBAAvB,YAAAD,GAA0C,KAA1C,YAAAD,GAA8C,MAAO,EAAA,GAI9D3B,EAA8BmB,CAAkB,EAChDhB,EAAoB,EAAI,CAAA,EASpB2B,EAAsBrE,GAA6C,OACjE,MAAA1C,GAAaxD,EAAA4C,EAAS,UAAT,YAAA5C,EAAkB,oBACrC,IAAImG,EAAc,EACN3C,GAAA,MAAAA,EAAA,QAASE,GAAwC,CAC5CyC,GAAAR,GAAUjC,GAAA,YAAAA,EAASwC,EAAM,CAAA,GAG1CrH,GAAYkB,IAAa,CACvB,GAAGA,EACH,MAAO,CACL,GAAGA,EAAQ,MACX,CAACmG,CAAK,EAAGC,CACX,CACA,EAAA,CAAA,EAGEuD,EAA0B,CAACc,EAAiBpK,IAAyC,aACzF,MAAMqK,EAA8C,CAClD,GAAGrK,EACH,aAAc,CACZ,GAAGA,EAAQ,aACX,QAAS,CACP,GAAGA,EAAQ,aAAa,QACxB,KAAK3B,GAAA,YAAAA,EAAM,aAAc,EAC3B,EACA,YAAaiM,GAAkB,qCAC/B,iBAAkB,CAChB,CACE,KAAK7G,GAAAD,GAAA5D,EAAAI,GAAA,YAAAA,EAAS,eAAT,YAAAJ,EAAuB,mBAAvB,YAAA4D,EAA0C,KAA1C,YAAAC,EAA8C,IACnD,SAASpF,GAAA,YAAAA,EAAM,kBAAmB,GAClC,SAAU+L,GAAA,YAAAA,EAAY,SACtB,SAAUA,GAAA,YAAAA,EAAY,YACtB,SAAUA,GAAA,YAAAA,EAAY,SACtB,IAAKA,GAAA,YAAAA,EAAY,GACnB,CACF,CACF,CAAA,GAEO1G,EAAAlB,EAAA,UAAA,MAAAkB,EAAS,iBAAiB2G,EAAc,EAG7CxF,EAAgB,IAAM,eAC1B,QAAQ,IAAI,iBAAiB,EAC7B,IAAI0F,EAAY,CAAA,EACZ/E,IAAU5F,EAAA4C,EAAS,UAAT,YAAA5C,EAAkB,oBAAqB,CAAA,EACjD6F,IAAcjC,EAAAhB,EAAS,UAAT,YAAAgB,EAAkB,sBAAuB,CAAA,EACvDkC,IAAcjC,EAAAjB,EAAS,UAAT,YAAAiB,EAAkB,sBAAuB,CAAA,EACjD+B,EAAAA,EAAQ,IAAKxF,IAAkB,CACvC,GAAGA,EACH,0BAA2BuF,GAAUvF,GAAA,YAAAA,EAAS,yBAAyB,CACvE,EAAA,EACF0F,EAAcA,EAAY,IAAK1F,GAAiBwK,GAAoCxK,CAAO,CAAC,EAE5FyF,EAAcA,EAAY,IAAKzF,GAAiBwK,GAAoCxK,CAAO,CAAC,EAK5F,IAAIyK,EAAkB,CAAC,GAAGjF,EAAS,GAAGC,EAAa,GAAGC,CAAW,EAG7D,GAAA+E,EAAgB,SAAW,EAAG,CAChC,IAAIC,IAAUhH,EAAAlB,EAAS,UAAT,YAAAkB,EAAkB,sBAAuB,CAAA,EACvDgH,EAAUA,EAAQ,IAAK1K,GAAiBwK,GAAoCxK,CAAO,CAAC,EAClEyK,EAAA,CAAC,GAAGC,CAAO,EAGnB,OAAAH,EAAA,CACV,KAAM,CACJ,IAAKjM,GAAA,YAAAA,EAAQ,OACf,EACA,MAAO,CACL,IAAKA,GAAA,YAAAA,EAAQ,QACf,EACA,sBAAsBqF,EAAAnF,GAAA,YAAAA,EAAS,QAAT,YAAAmF,EAAgB,0BACtC,gBAAA8G,CAAA,EAEKF,CAAA,EAGHrF,GAAiB,IAAM,OACXxC,EAAA,QAAU,IAAIC,GAAqB,CACjD,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,GAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,GACDlD,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,MAAA9C,EAA0B,cAAa,EAGnCH,GAAW,IAAM,QACrBG,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,QAAO,EAGrB+K,EAAoB,CAAC3G,EAAQhE,IAAiB,OAElD,MAAM4K,EAAkC,CAAA,EAEfA,EAAA,KAEvB,CACE,MAAO,SAEP,UAAW,iFACX,QAAS,IAAM,CACbxF,EAAYpF,CAAO,CACrB,CACF,CAAA,EAII,MAAA6K,EAAc,CAAC,GAAGD,CAAwB,EAEhDjC,GAAgB,CAAC,EAAE,MAAQ,CAAC,GAAGkC,CAAI,GACpBjL,EAAA6I,GAAA,YAAAA,EAAA,UAAA,MAAA7I,EAAS,KAAKoE,EAAC,EAS1B8G,GAAyB9K,GAAyC,SAEpE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,kCACZ,KAAM,kBAAkBjG,GAAA,YAAAA,EAAS,MACjC,MAAOA,GAAA,YAAAA,EAAS,gBAChB,QAASkG,EAAiB,QAC1B,SAAStG,EAAAuG,KAAA,YAAAvG,EAA4B,OAClC0D,GAAWA,EAAO,OAAS8C,GAAmB,WAEjD,YAAY,OACZ,YAAY,OACZ,SAAWpC,GAAM4E,EAAa5E,EAAG,CAAE,QAAAhE,EAAS,MAAO,kBAAmB,EACtE,OAAQyE,GAER,YAAYjB,EAAAd,GAAA,YAAAA,EAAiB,UAAjB,YAAAc,EAA0B,QACpC,kBAAkBxD,GAAA,YAAAA,EAAS,MAC3BA,EAAQ,gBACR,YACF,CAEJ,CAAA,CAAA,CAAA,EAIE+K,GAAyB/K,GAE3BK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,kCACZ,KAAM,kBAAkBjG,GAAA,YAAAA,EAAS,MACjC,MAAOA,GAAA,YAAAA,EAAS,gBAChB,QAASkG,EAAiB,QAC1B,QAASjE,EAAgB,gBACzB,YAAY,OACZ,YAAY,OACZ,SAAW+B,GAAM4E,EAAa5E,EAAG,CAAE,QAAAhE,EAAS,MAAO,kBAAmB,CAAA,CAS1E,CAAA,CAAA,EAIEgL,GAAgBhL,GAElBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,yBACZ,KAAM,WAAWjG,GAAA,YAAAA,EAAS,MAC1B,MAAOA,GAAA,YAAAA,EAAS,SAChB,QAASkG,EAAiB,QAC1B,QAASjE,EAAgB,OACzB,YAAY,OACZ,YAAY,OACZ,SAAW+B,GAAM4E,EAAa5E,EAAG,CAAE,QAAAhE,EAAS,MAAO,WAAY,CAAA,CASnE,CAAA,CAAA,EAIEiL,GAAuBjL,GAAyC,OAElE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,4BAA4B5G,GAAA,YAAAA,EAAS,MAC3C,UAAU,aACV,UAAS,GACT,QAASkG,EAAiB,UAC1B,MAAO3C,EAAavD,GAAA,YAAAA,EAAS,yBAAyB,EACtD,OAAQyE,GACR,SAAWT,GACT4E,EAAa5E,EAAG,CACd,QAAAhE,EACA,MAAO,4BACP,SAAU,EAAA,CACX,EAEH,YAAYJ,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,4BAA4BI,GAAA,YAAAA,EAAS,MACrC6G,GAAuBC,GAAU9G,GAAA,YAAAA,EAAS,yBAAyB,CAAC,EACpE,qCACF,CAEJ,CAAA,CAAA,CAAA,EAIEkL,GAAoBlL,GAAyC,aAG/D,OAAAgB,EAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAX,MAAC,MAAI,CAAA,UAAW,wBAAwBL,GAAA,YAAAA,EAAS,MAC/C,SAAAK,EAAA,IAAC8K,GAAA,CACC,SAAWnH,GAAW6E,EAAiB7E,EAAGhE,CAAO,EAEjD,QAASoL,GAAS,SAClB,eAAgB,aAChB,UAAWpL,GAAA,YAAAA,EAAS,IACpB,SAAUmC,KAAaE,EAAU,IAAA,CAAA,EAErC,EACAhC,EAAAA,IAAC,MAAI,CAAA,UAAU,SACb,SAAAA,EAAA,IAACgL,GAAA,CACC,YAAY3H,EAAAhB,GAAA,YAAAA,EAAiB,UAAjB,YAAAgB,EAA0B,QACpC,OAAO1D,GAAA,YAAAA,EAAS,OAChByD,GAAAD,GAAA5D,EAAAI,EAAQ,eAAR,YAAAJ,EAAsB,mBAAtB,YAAA4D,EAAyC,KAAzC,YAAAC,EAA6C,SAC7C,YACF,CAAA,EAIJ,CACF,CAAA,CAAA,CAAA,EAIE6D,GAAiBtH,GAAiB,iBAEpC,OAAAgB,EAAA,KAAC,MAAI,CAAA,UAAU,wCACZ,SAAA,EAAAyC,GAAAD,GAAA5D,EAAAI,GAAA,YAAAA,EAAS,eAAT,YAAAJ,EAAuB,mBAAvB,YAAA4D,EAA0C,KAA1C,MAAAC,EAA8C,UAC5C8D,GAAW,CAAA,WAAYC,GAAa,KAAM,QAAUxD,GAAWuF,EAAWvF,EAAGhE,CAAO,CAAG,CAAA,EACtF,KACJK,EAAAA,IAAC,MAAI,CAAA,WAAWuD,GAAAD,GAAAD,EAAA1D,GAAA,YAAAA,EAAS,eAAT,YAAA0D,EAAuB,mBAAvB,YAAAC,EAA0C,KAA1C,MAAAC,EAA8C,IAAM,OAAS,OAC3E,SAAAvD,EAAA,IAACoB,GAAA,CACC,WAAYC,GAAY,KACxB,QAAUsC,GAAW2G,EAAkB3G,EAAGhE,CAAO,CAAA,CAAA,EAErD,CACF,CAAA,CAAA,CAAA,EAIEyH,EAAc,IAEhBpH,EAAA,IAACa,GAAA,CACC,UAAU,yCACV,MAAO,+CAAA,CAAA,EAKPoK,EAA2B,IAAM,SACrC,MAAM3D,EAAQ1H,IAAgBL,EAAApB,GAAA,YAAAA,EAAS,QAAT,YAAAoB,EAAgB,yBAAyB,EAErE,OAAAS,EAAA,IAACa,GAAA,CACC,UAAU,kDACV,QAAOsC,EAAAhF,GAAA,YAAAA,EAAS,QAAT,YAAAgF,EAAgB,2BAA4B,EAAI,IAAImE,IAAU,EAAA,CAAA,CACvE,EAUJ,OACGtH,EAAA,IAAAkL,GAAA,CAAQ,MAAM,6BACb,SACEvK,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAZ,EAAA,IAACwH,GAAA,CACC,MAAM,2BAGN,UAAU,GACV,SAAA1F,GACA,OAAAyC,GACA,SAAAK,EACA,OAAAD,GAEC,SAAAmD,QACEqD,GAAe,CAAA,OAAO,YAAY,MAAM,OAAO,aAAa,MAAM,UAAU,OAAO,EAEpFxK,EAAAA,KAAC8G,IAAS,SAAU,CAAE,KAAM3F,KAAaE,EAAU,MACjD,SAAA,CAAAhC,EAAAA,IAAC,OAAI,UAAU,iCACb,SAACA,MAAA,MAAA,CAAI,UAAU,qBACb,SAAAA,EAAA,IAACoB,GAAA,CACC,WAAYC,GAAY,cACxB,YAAa,2BACb,QAASyD,EAAA,GAGb,CACF,CAAA,EACC9E,EAAA,IAAA,MAAA,CACE,SAAQ/B,GAAA,MAAAA,EAAA,UAAWA,GAAA,MAAAA,EAAQ,UAC1B0C,EAAA,KAAC+G,GAAA,CACC,IAAKvF,EACL,UAAU,MACV,0BAA2BW,GAAW,oBACtC,OAAQ,WAAW7E,GAAA,YAAAA,EAAQ,oBACzBA,GAAA,YAAAA,EAAQ,qBACG,KACb,KAAM,SACN,UAAW,GACX,iBAAkB,IAAM,CACtB,QAAQ,IAAI,SAAS,EACrB6L,EAAmB,2BAA2B,CAChD,EACA,UAAU,oBAGV,SAAA,CAAA9J,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,2BAA2B,EAC1C,UAAU,sDACV,KAAMuJ,GACN,OAAQrD,CAAA,CACV,EAEApH,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,2BAA2B,EAC1C,UAAU,6CACV,KAAMwJ,EAAA,CACR,EACA1K,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kBAAkB,EACjC,UAAU,6CACV,KAAMyJ,EAAA,CACR,EAEA3K,EAAA,IAACiB,EAAA,CACC,OAAQ,IACLjB,EAAAA,IAAA,MAAA,CAAI,IAAKqI,GACR,SAACrI,EAAA,IAAAa,GAAA,CAAK,UAAU,GAAG,MAAO,yBAA2B,CAAA,EACvD,EAEF,UAAU,8CACV,MAAO,CAAE,SAAU,QAAS,MAAO,OAAQ,EAC3C,KAAM+J,GACN,OAAQK,EACR,gBAAgB,aAAA,CAClB,EAEAjL,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,sBAAsB,EACrC,UAAU,oFAEV,KAAM2J,EAAA,CACR,EACA7K,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,4CAA4C,EAC3D,UAAU,uDACV,MAAO,CAAE,SAAU,OAAQ,MAAO,MAAO,EACzC,KAAM+F,EAAA,CACR,CAAA,CAAA,GAEA,IACN,CAAA,CAAA,EACF,CAAA,CAEJ,EACAjH,EAAA,IAACsB,GAAA,CACC,SAAU,eACV,IAAKxC,EACL,UAAWR,GACX,QAASiD,GAAiB,OAAA,CAC5B,EACAvB,EAAA,IAACoL,GAAA,CACC,QAASlD,EACT,mBAAoB,IAAMC,EAAqB1F,GAAS,CAACA,CAAI,EAC7D,KAAM,CAAC,EACP,eAAgBsF,CAAA,CAClB,EACA/H,EAAA,IAACqL,GAAA,CACC,IAAKjD,EACL,MAAOE,GACP,QAAQ,YACR,gBAAgB,kBAChB,UAAU,4FAAA,CACZ,EAEAtI,EAAA,IAACwB,GAAA,CACC,OAAQ,IAAM,CACZ3C,EAAsB,EAAK,EAC3BF,GAAgB,EAAE,CACpB,EACA,QAASC,EACT,aAAAF,EAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAC,EC7tBY4M,GAAsE,CACjF,QAAS,EACX,EAmCMC,GAA0C1N,EAAA,WAAW,CAACC,EAAOC,KAAQ,CACzE,KAAM,CAAE,KAAAC,EAAM,gBAAA4D,EAAiB,mBAAAC,CAAA,EAAuB/D,EAChDG,EAAkDC,KAMlD,CAACC,EAASC,CAAU,EAAIC,WAA2C,CACvE,GAAGiN,EAAA,CACJ,EACK,CAACxJ,GAAUC,EAAW,EAAI1D,EAAAA,SAAS2D,EAAU,IAAI,EACjD,CAAC1D,EAAcC,EAAe,EAAIF,WAAS,EAAE,EAC7C,CAACG,EAAcC,CAAe,EAAIJ,WAAS,EAAK,EAChD,CAACK,EAAcC,EAAe,EAAIN,WAAS,EAAE,EAC7C,CAACO,GAAoBC,CAAqB,EAAIR,WAAS,EAAK,EAE5DS,EAAkBC,SAAO,IAAI,EAC7BoD,EAAWlD,GAAM,OAA6B,IAAI,EAGlD,EAAGmD,CAAW,EAAI/D,WAAkB,EAAK,EAEzCgE,EAAkBtD,EAAA,OACtB,IAAIuD,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EAWHpD,EAAAA,UAAU,IAAM,CACVrB,GAAA,MAAAA,EAAM,SACRI,EAAYkB,IAAa,CACvB,GAAGA,EACH,GAAGtB,CACH,EAAA,CAGJ,EACC,CAACA,CAAI,CAAC,EAETqB,EAAAA,UAAU,IAAM,OACVP,GAAA,MAAAA,EAAiB,SAAWR,IAAiB,MAE/CiB,EAAAT,GAAA,YAAAA,EAAiB,UAAjB,MAAAS,EAA0B,eAC1BhB,GAAgB,EAAE,EACpB,EACC,CAACD,EAAcE,CAAY,CAAC,EAE/Ba,EAAAA,UAAU,IAAM,CACVX,GACFG,EAAsB,EAAI,CAC5B,EACC,CAACH,CAAY,CAAC,EAqBX,MAAAsF,EAAyB,CAC7B,EACAC,IAKG,OACH,IAAIL,EAA+C,CAAE,GAAGK,EAAQ,OAAQ,EACpEA,EAAQ,SAEGL,EAAA,CACX,GAAGA,EACH,CAAC,GAAGK,EAAQ,OAAO,EAAGf,EAAa,EAAE,OAAO,KAAK,CAAA,EAItCU,EAAA,CACX,GAAGA,EACH,CAAC,GAAGK,EAAQ,OAAO,EAAG,EAAE,OAAO,KAAA,GAG1B1E,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,iBAAiBqE,EAAU,EASzCQ,EAAY,GAAW,UAC3BjB,EAAAd,GAAA,YAAAA,EAAiB,UAAjB,MAAAc,EAA0B,gBAAe5D,EAAA,iBAAG,SAAH,YAAAA,EAAW,KAAI,EAGpD8E,EAAe,IAAM,SACzB,IAAIC,EAAU,GAEd,OADUA,IAAA/E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,aAAc,GAC9C+E,IAGUlC,EAACK,GAAS,CAACA,CAAI,GAC3BU,EAAAd,GAAA,YAAAA,EAAiB,UAAjB,MAAAc,EAA0B,eACdf,EAACK,GAAS,CAACA,CAAI,EACpB,GACT,EASI8B,GAAS,SAAY,SACrB,GAAA,CAACF,IACH,OAEF,MAAM1B,EAAU6B,IACZ,GAAA,CACI,MAAA1B,GAAW,uBAAuBH,CAAO,EAC/CpE,GAAgBkG,GAA8B,KAAK,EACnDhG,EAAgB,CAACD,CAAY,EAC7BuD,GAAYC,EAAU,IAAI,GAC1BzC,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,YAClB4D,EAAAhB,EAAS,UAAT,MAAAgB,EAAkB,SACGtB,GAAA,MAAAA,UACd6C,GACS/F,GAAA8E,EAA6BiB,CAAK,CAAC,CACrD,CAAA,EAGIC,EAAS,IAAM5C,GAAYC,EAAU,IAAI,EAEzC4C,EAAW,IAAM,SACrB7C,GAAYC,EAAU,IAAI,EACX6C,MACftF,EAAA4C,EAAS,UAAT,MAAA5C,EAAkB,YAClB4D,EAAAhB,EAAS,UAAT,MAAAgB,EAAkB,QAAO,EASrB4B,GAAepF,GAA8C,QACxDJ,EAAA4C,EAAA,UAAA,MAAA5C,EAAS,UAAUI,GACbkF,IAAA,EAQXA,GAAiB,IAAM,OACXxC,EAAA,QAAU,IAAIC,GAAqB,CACjD,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMJ,EAAaK,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,GACDlD,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,MAAA9C,EAA0B,cAAa,EAGnCiF,EAAgB,IAAM,WAC1B,QAAQ,IAAI,iBAAiB,EAC7B,IAAIW,IAAU5F,EAAA4C,EAAS,UAAT,YAAA5C,EAAkB,oBAAqB,CAAA,EACjD6F,IAAcjC,EAAAhB,EAAS,UAAT,YAAAgB,EAAkB,sBAAuB,CAAA,EACvDkC,IAAcjC,EAAAjB,EAAS,UAAT,YAAAiB,EAAkB,sBAAuB,CAAA,EACjD,OAAA+B,EAAAA,EAAQ,IAAKxF,IAAkB,CACvC,GAAGA,EACH,KAAM,CACJ,IAAK1B,GAAA,YAAAA,EAAQ,OACf,EAIA,GAAGuN,GAAkC7L,CAAO,CAC5C,EAAA,EACYyF,EAAAA,EAAY,IAAKzF,IAAkB,CAC/C,KAAM,CACJ,IAAK1B,GAAA,YAAAA,EAAQ,OACf,EAIA,GAAGuN,GAAkC7L,EAAS,CAAE,OAAQ,GAAM,CAC9D,EAAA,EACY0F,EAAAA,EAAY,IAAK1F,IAAkB,CAC/C,KAAM,CACJ,IAAK1B,GAAA,YAAAA,EAAQ,OACf,EAIA,GAAGuN,GAAkC7L,CAAO,CAC5C,EAAA,EAEiB,CAAC,GAAGwF,EAAS,GAAGC,EAAa,GAAGC,CAAW,CACvD,EAQHM,GAAuBhG,GAA8C,SAEvE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,gCACZ,KAAM,gBAAgBjG,GAAA,YAAAA,EAAS,MAC/B,OAAOwD,GAAA5D,EAAAI,GAAA,YAAAA,EAAS,QAAT,YAAAJ,EAAgB,YAAhB,YAAA4D,EAA2B,cAClC,QAAS0C,EAAiB,QAC1B,QAASC,GACT,YAAY,OACZ,YAAY,OACZ,SAAQ,EAAA,CAEZ,CAAA,CAAA,CAAA,EAIEE,GAAsBrG,GAA8C,OAEtE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,eAAe5G,GAAA,YAAAA,EAAS,MAC9B,UAAU,YACV,QAASkG,EAAiB,UAC1B,MAAO,KAAGtG,EAAAI,GAAA,YAAAA,EAAS,YAAT,YAAAJ,EAAoB,WAAY,KAC1C,SAAQ,GACR,UAAS,EAAA,CAGb,CAAA,CAAA,CAAA,EAIEkM,GAAgB9L,GAA8C,eAEhE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,gCACZ,KAAM,SAASjG,GAAA,YAAAA,EAAS,MACxB,OAAOwD,GAAA5D,EAAAI,GAAA,YAAAA,EAAS,OAAT,YAAAJ,EAAe,OAAf,YAAA4D,EAAqB,KAC5B,QAAS0C,EAAiB,QAC1B,SAASzC,EAAAzD,GAAA,YAAAA,EAAS,OAAT,MAAAyD,EAAe,KAAO,CAAC,IAAGE,GAAAD,EAAA1D,GAAA,YAAAA,EAAS,OAAT,YAAA0D,EAAe,OAAf,YAAAC,EAAqB,MAAM,EAAI,CAAC,EACnE,SAAQ,EAAA,CAEZ,CAAA,CAAA,CAAA,EAIEoI,GAAiB/L,GAEnBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,gCACZ,KAAM,UAAUjG,GAAA,YAAAA,EAAS,MACzB,MAAOA,GAAA,YAAAA,EAAS,UAChB,QAASkG,EAAiB,QAC1B,QAAS8F,GACT,YAAY,OACZ,YAAY,QACZ,SAAQ,EAAA,CAEZ,CAAA,CAAA,EAIEC,GAAyBjM,GAA8C,OAEzE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,YACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,kBAAkB5G,GAAA,YAAAA,EAAS,MACjC,UAAU,WACV,QAASkG,EAAiB,UAC1B,QAAOtG,EAAAI,GAAA,YAAAA,EAAS,OAAT,YAAAJ,EAAe,OAAQ,GAC9B,SAAQ,GACR,UAAS,EAAA,CAGb,CAAA,CAAA,CAAA,EAIEsM,EAAwBlM,GAE1BK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,iBAAiB5G,GAAA,YAAAA,EAAS,MAChC,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAO3C,GAAavD,GAAA,YAAAA,EAAS,mBAAoB,EAAE,EACnD,SAAQ,GACR,UAAS,EAAA,CAEb,CAAA,CAAA,EAIEmM,EAA2BnM,GAE7BK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,oBAAoB5G,GAAA,YAAAA,EAAS,MACnC,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAO3C,GAAavD,GAAA,YAAAA,EAAS,oBAAqB,EAAE,EACpD,SAAQ,GACR,UAAS,EAAA,CAGb,CAAA,CAAA,EAIEoM,EAAsBpM,GAExBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,eAAe5G,GAAA,YAAAA,EAAS,MAC9B,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAOlG,GAAA,YAAAA,EAAS,aAChB,SAAQ,GACR,UAAS,EAAA,CAGb,CAAA,CAAA,EAIEqM,EAAarM,GAEfK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,MAAM5G,GAAA,YAAAA,EAAS,MACrB,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAO3C,GAAavD,GAAA,YAAAA,EAAS,YAAa,EAAE,EAC5C,SAAQ,GACR,UAAS,EAAA,CAGb,CAAA,CAAA,EAIEsM,EAAsBtM,GAExBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,cAAc5G,GAAA,YAAAA,EAAS,MAC7B,YAAY,+BACZ,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAO3C,GAAavD,GAAA,YAAAA,EAAS,eAAgB,EAAE,EAC/C,SAAQ,GACR,UAAS,EAAA,CAGb,CAAA,CAAA,EAIEuM,EAAuBvM,GAEzBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,gBAAgB5G,GAAA,YAAAA,EAAS,MAC/B,QAASkG,EAAiB,UAC1B,UAAU,aACV,OAAOlG,GAAA,YAAAA,EAAS,kBAAmB,GACnC,UAAS,GACT,SAAQ,EAAA,CAGZ,CAAA,CAAA,EAIEwM,EAAqBxM,GAEvBK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,cAAc5G,GAAA,YAAAA,EAAS,MAC7B,QAASkG,EAAiB,UAC1B,UAAU,aACV,OAAOlG,GAAA,YAAAA,EAAS,cAAe,GAC/B,UAAS,GACT,SAAQ,EAAA,CAGZ,CAAA,CAAA,EAIEyM,GAAazM,GAEfK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,MAAM5G,GAAA,YAAAA,EAAS,MACrB,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAOlG,GAAA,YAAAA,EAAS,IAChB,UAAS,GACT,SAAQ,EAAA,CAGZ,CAAA,CAAA,EAIE0M,GAAiB1M,GAA8C,OAEjE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,UAAU5G,GAAA,YAAAA,EAAS,MACzB,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAO3C,GAAavD,GAAA,YAAAA,EAAS,UAAW,EAAE,EAC1C,SAAWgE,GAAMK,EAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,UAAW,SAAU,GAAM,EACxF,OAAQyE,EACR,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,UAAUI,GAAA,YAAAA,EAAS,MACnBuF,GAAUvF,EAAQ,OAAO,EACzBA,GAAA,MAAAA,EAAS,SAAW,qCAAqC,YAE3D,UAAS,EAAA,CAGb,CAAA,CAAA,CAAA,EAIE2M,EAAmB3M,GAA8C,OAEnE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,4BACZ,KAAM,YAAYjG,GAAA,YAAAA,EAAS,MAC3B,MAAOA,GAAA,YAAAA,EAAS,UAChB,QAASkG,EAAiB,QAC1B,QAAS0G,GACT,YAAY,QACZ,YAAY,QACZ,SAAW5I,GAAMK,EAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,YAAa,EAC1E,OAAQyE,EAER,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,YAAYI,GAAA,YAAAA,EAAS,MACrBA,EAAQ,UACRA,GAAA,MAAAA,EAAS,SAAU,YAAY,WACjC,CAGJ,CAAA,CAAA,CAAA,EAIE6M,GAAqB7M,GAA8C,OAErE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,aAAa5G,GAAA,YAAAA,EAAS,MAC5B,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAOlG,GAAA,YAAAA,EAAS,WAChB,SAAWgE,GAAMK,EAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,aAAc,EAC3E,OAAQyE,EACR,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,aAAaI,GAAA,YAAAA,EAAS,MACtBuF,GAAUvF,EAAQ,UAAU,EAC5BA,GAAA,MAAAA,EAAS,SAAU,qCAAqC,YAE1D,UAAS,EAAA,CAGb,CAAA,CAAA,CAAA,EAIE8M,GAA0B9M,GAA8C,OAE1E,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,kBAAkB5G,GAAA,YAAAA,EAAS,MACjC,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAOlG,GAAA,YAAAA,EAAS,gBAChB,SAAWgE,GAAMK,EAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,kBAAmB,EAChF,OAAQyE,EAER,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,kBAAkBI,GAAA,YAAAA,EAAS,MAC3BA,EAAQ,gBACRA,GAAA,MAAAA,EAAS,SAAS,YAAY,YAEhC,UAAS,EAAA,CAGb,CAAA,CAAA,CAAA,EAIE+M,GAAuB/M,GAA8C,OAEvE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,gBAAgB5G,GAAA,YAAAA,EAAS,MAC/B,QAASkG,EAAiB,UAC1B,UAAU,aACV,MAAO3C,GAAavD,GAAA,YAAAA,EAAS,gBAAiB,EAAE,EAChD,SAAWgE,GACTK,EAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,gBAAiB,SAAU,GAAM,EAE/E,OAAQyE,EACR,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,gBAAgBI,GAAA,YAAAA,EAAS,MACzBuF,GAAUvF,EAAQ,aAAa,EAC/BA,GAAA,MAAAA,EAAS,SAAS,qCAAqC,YAEzD,UAAS,EAAA,CAEb,CAAA,CAAA,CAAA,EAIEgN,GAA+BhN,GAA8C,OAE/E,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAACuG,EAAA,CACC,KAAM,UAAU5G,GAAA,YAAAA,EAAS,MACzB,QAASkG,EAAiB,UAC1B,MAAOlG,GAAA,YAAAA,EAAS,QAChB,SAAWgE,GAAMK,EAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,UAAW,EACxE,OAAQyE,EAER,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,UAAUI,GAAA,YAAAA,EAAS,MACnBA,EAAQ,QACRA,GAAA,MAAAA,EAAS,SAAU,YAAY,YAEjC,UAAS,EAAA,CAGb,CAAA,CAAA,CAAA,EAIEiN,GAAyBjN,GAA8C,OAEzE,OAAAK,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4F,GAAA,CACC,UAAS,GACT,YAAY,kCACZ,KAAM,oBAAoBjG,GAAA,YAAAA,EAAS,MACnC,MAAOA,GAAA,YAAAA,EAAS,kBAChB,QAASkG,EAAiB,QAC1B,QAAS0G,GACT,YAAY,QACZ,YAAY,QACZ,SAAW5I,GAAMK,EAAuBL,EAAG,CAAE,QAAAhE,EAAS,MAAO,oBAAqB,EAClF,OAAQyE,EAER,YAAY7E,EAAA8C,GAAA,YAAAA,EAAiB,UAAjB,YAAA9C,EAA0B,QACpC,oBAAoBI,GAAA,YAAAA,EAAS,MAC7BA,EAAQ,kBACRA,GAAA,MAAAA,EAAS,SAAU,YAAY,WACjC,CAGJ,CAAA,CAAA,CAAA,EAIEsH,GAAiBtH,GAEnBK,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAACkH,GAAA,CACC,WAAYC,GAAa,OACzB,QAAS,IAAMpC,GAAYpF,CAAO,EAClC,SAAUmC,KAAaE,EAAU,KACjC,eAAgB,CACd,SAAU,OACV,UAAW,2DACX,UAAW,QACX,UAAW,KACb,CAAA,CAEJ,CAAA,CAAA,EASJ,OAEIrB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAZ,EAAA,IAACwH,GAAA,CACC,MAAM,6BACN,SAAA1F,GAEA,OAAAyC,GACA,SAAAK,EACA,OAAAD,EAEA,SAAA3E,EAAAA,IAACyH,IAAS,SAAU,CAAE,KAAM3F,KAAaE,EAAU,IACjD,EAAA,SAAAhC,EAAA,IAAC,OAAI,UAAU,4BACb,eAAC,MAAI,CAAA,UAAU,aACZ,SAAO,OAAA8B,IAAa,SAYjB9B,EAAAA,IAAAY,EAAAA,SAAA,CAAA,SAAAD,EAAA,KAAC+G,GAAA,CACC,IAAKvF,EACL,UAAU,MACV,0BAA2BW,GAAW,yBACtC,OAAQ,aAAa7E,GAAA,YAAAA,EAAQ,2BAC7B,KAAM,SAEN,UAAU,oBAEV,SAAA,CAAA+B,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,2BAA2B,EAC1C,UAAU,sDACV,KAAMyE,EAAA,CAER,EACA3F,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,wBAAwB,EACvC,UAAU,qEACV,KAAM8E,EAAA,CACR,EACAhG,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kCAAkC,EACjD,UAAU,6CACV,KAAMuK,EAAA,CACR,EACAzL,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kCAAkC,EACjD,UAAU,6CACV,KAAMwK,EAAA,CACR,EACA1L,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,6BAA6B,EAC5C,UAAU,2DACV,KAAM0K,EAAA,CACR,EACA5L,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,0BAA0B,EACzC,UAAU,+DACV,KAAM2K,CAAA,CACR,EAEA7L,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,6BAA6B,EAC5C,UAAU,+DACV,KAAM4K,CAAA,CACR,EAEA9L,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,wBAAwB,EACvC,UAAU,+DACV,KAAM6K,CAAA,CACR,EAEA/L,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kBAAkB,EACjC,UAAU,+DACV,KAAM8K,CAAA,CACR,EAEAhM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,wBAAwB,EACvC,UAAU,+DACV,KAAM+K,CAAA,CACR,EACAjM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,yBAAyB,EACxC,UAAU,+DACV,KAAMgL,CAAA,CACR,EACAlM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,uBAAuB,EACtC,UAAU,+DACV,KAAMiL,CAAA,CACR,EACAnM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kBAAkB,EACjC,UAAU,+DACV,KAAMkL,EAAA,CACR,EACApM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,mBAAmB,EAClC,UAAU,+DACV,KAAMmL,EAAA,CACR,EACArM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,0BAA0B,EACzC,UAAU,sDACV,KAAMoL,CAAA,CACR,EACAtM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,wBAAwB,EACvC,UAAU,6CACV,KAAMsL,EAAA,CACR,EACAxM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,6BAA6B,EAC5C,UAAU,6CACV,KAAMuL,EAAA,CACR,EACAzM,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,4BAA4B,EAC3C,UAAU,+DACV,KAAMwL,EAAA,CACR,EACA1M,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kCAAkC,EACjD,UAAU,6CACV,KAAMyL,EAAA,CACR,EACA3M,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,iCAAiC,EAChD,UAAU,6CACV,KAAM0L,EAAA,CACR,EACA5M,EAAA,IAACiB,EAAA,CACC,OAAQC,EAAK,EAAE,kBAAkB,EACjC,UAAU,yFAEV,KAAM+F,GACN,YAAY,QACZ,OAAM,EAAA,CACR,CAAA,CAAA,CAEJ,CAAA,CAAA,EACE,KACN,CAAA,CACF,CACF,CAAA,CAAA,CACF,EAEAjH,EAAA,IAACsB,GAAA,CACC,SAAU,eACV,IAAKxC,EACL,UAAWR,EACX,QAASiD,GAAiB,OAAA,CAC5B,EAEAvB,EAAA,IAACwB,GAAA,CACC,OAAQ,IAAM,CACZ3C,EAAsB,EAAK,EAC3BF,GAAgB,EAAE,CACpB,EACA,QAASC,GACT,aAAAF,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,CAAC,EChyBKmO,GAA0B,CAC9B,gBAAiB,CACf,gBAAiB,CAAC,EAClB,gBAAiB,CAAC,EAClB,OAAQ,CAAC,EACT,WAAY,CAAC,EACb,oBAAqB,CAAC,EACtB,mCAAoC,CAAC,CACvC,EACA,iBAAkB,CAAE,GAAGlF,EAA+B,EACtD,cAAe,CAAE,GAAGmF,EAA4B,EAChD,iBAAkB,CAAE,GAAGC,EAA+B,EACtD,QAAS,CAAE,GAAGpP,EAAsB,EACpC,SAAU,CAAE,GAAGqP,EAAuB,EACtC,qBAAsB,CAAE,GAAGC,EAAkC,EAC7D,kBAAmB,CAAE,GAAGC,EAAgC,EACxD,cAAe,CAAE,GAAGzL,EAA4B,EAChD,QAAS,CAAE,GAAG0L,EAAsB,EACpC,sBAAuB,CAAE,GAAG7B,EAAkC,EAC9D,wBAAyB,CAAE,GAAG8B,EAAsC,EACpE,UAAW,CACT,iBAAkB,GAClB,kBAAmB,GACnB,iBAAkB,GAClB,cAAe,GACf,QAAS,GACT,wBAAyB,EAC3B,CACF,EAEMC,GAAkB,IAAM,WAM5B,MAAMpP,EAAkDC,KAElD,CAACU,GAAoBC,CAAqB,EAAIR,WAAS,EAAK,EAC5D,CAACK,EAAcC,CAAe,EAAIN,WAAc,EAAE,EAClD,CAACF,EAASC,CAAU,EAAIC,WAAmB,CAAE,GAAGwO,GAAe,EAC/D,CAACvO,EAAcC,EAAe,EAAIF,WAAS,EAAE,EAC7C,CAACiP,GAAqBC,CAAsB,EAAIlP,EAAAA,SAASkD,GAAiB,OAAO,EAC/ClD,EAAAA,SAAS,EAAK,EAGhD,MAAAS,GAAkBC,SAAO,IAAI,EAC7ByO,EAAazO,SAAuB,IAAI,EACxC0O,EAAmB1O,SAA6B,IAAI,EACpD2O,EAAmB3O,SAA6B,IAAI,EAElCV,EAAAA,SAAkB,EAAK,EAa/CgB,EAAAA,UAAU,IAAM,CACVpB,EAAO,WAAYA,GAAA,MAAAA,EAAQ,UACxB0P,MAEN,CAAC1P,EAAO,QAASA,EAAO,QAAQ,CAAC,EAEpCoB,EAAAA,UAAU,IAAM,CACVX,GACFG,EAAsB,EAAI,CAC5B,EACC,CAACH,CAAY,CAAC,EAQjB,MAAMiP,GAAO,IAAM,CACUC,KAC3BC,EAAgB,GAAO,CACrB,iCAAkCC,EAClC,4BAA6BC,GAC7B,4BAA6BC,CAAA,CAC9B,EAC6CC,IAEpBC,IACHC,IACGC,IACAC,IACPC,GAAA,EAOfV,GAA6B,SAAY,eAGzC,GAAA,CACI,MAAAW,EAAgB,MAAMC,GAAwB,oBAClD,EACA,GACAvE,GAAkB,oCAAA,EAEdwE,GAAqBpL,GAAAD,GAAAD,GAAA5D,EAAAgP,GAAA,YAAAA,EAAe,OAAf,YAAAhP,EAAqB,UAArB,YAAA4D,EAA+B,KAA/B,YAAAC,EAAmC,eAAnC,YAAAC,EAAiD,IACtEqL,GAAiB,MAAMC,GAAgB,YAAYF,CAAU,EAC/D,IAAAG,GACA,GAAAF,GAAe,KAAK,kBACX,UAAAG,KAAWH,GAAe,KAAK,iBACxC,GAAIG,GAAA,MAAAA,EAAS,SAAU,CACrBD,IAAkBtL,EAAAuL,GAAA,YAAAA,EAAS,UAAT,YAAAvL,EAAkB,KACpC,OAINlF,EAAYqB,IAAiB,CAC3B,GAAGA,EACH,iBAAkB,CAChB,GAAGA,EAAY,iBACf,WAAYgP,GAAc,GAC1B,gBAAiBG,IAAmB,EACtC,EACA,UAAW,CACT,GAAGnP,EAAY,UACf,iBAAkB,EACpB,CACA,EAAA,QACKkE,GACShF,EAAA8E,EAA6BE,CAAC,CAAC,EAC/CvF,EAAYqB,IAAiB,CAC3B,GAAGA,EACH,UAAW,CACT,GAAGA,EAAY,UACf,iBAAkB,EACpB,CACA,EAAA,CACJ,CAAA,EAGIoO,EAAkB,MACtBiB,EACA7K,IAMG,WACE6K,GACH1Q,EAAYqB,IAAiB,CAC3B,GAAGA,EACH,UAAW,CACT,GAAGA,EAAY,UACf,wBAAyB,GACzB,QAAS,GACT,cAAe,GACf,iBAAkB,GAClB,kBAAmB,EACrB,CACA,EAAA,EAEA,GAAA,CACF,MAAMoD,EAAM,MAAMC,GAAW,oBAAmB7E,GAAA,YAAAA,EAAQ,WAAY,EAAE,EACtEG,EAAYqB,IAAiB,CAC3B,GAAGA,EACH,wBAAyB,CACvB,GAAGA,EAAY,wBACf,GAAGsP,GAAoClM,GAAA,YAAAA,EAAK,IAAI,CAClD,EACA,QAAS,CACP,GAAGpD,EAAY,QACf,GAAGuP,GAAoBnM,GAAA,YAAAA,EAAK,IAAI,CAClC,EACA,cAAe,CACb,GAAGpD,EAAY,cACf,GAAGwP,GAA0BpM,GAAA,YAAAA,EAAK,IAAI,CACxC,EACA,iBAAkB,CAChB,GAAGpD,EAAY,iBACf,GAAGyP,GAA6BrM,GAAA,YAAAA,EAAK,IAAI,CAC3C,EACA,cAAe,CACb,GAAGpD,EAAY,cACf,GAAG0P,GAA0BtM,GAAA,YAAAA,EAAK,IAAI,CACxC,EACA,GAAIoB,GAAA,MAAAA,EAAS,8BACT,CACE,kBAAmB,CACjB,GAAGxE,EAAY,kBACf,GAAG2P,GAA+BvM,GAAA,YAAAA,EAAK,IAAI,CAC7C,CAAA,EAEF,CAAC,EACL,UAAW,CACT,GAAGpD,EAAY,UACf,wBAAyB,GACzB,QAAS,GACT,cAAe,GACf,iBAAkB,EACpB,CACA,EAAA,EACGwE,GAAA,MAAAA,EAAS,gCACH1E,EAAA0E,GAAA,YAAAA,EAAA,mCAAA,MAAA1E,EAAA,KAAA0E,EAAmCpB,GAAA,YAAAA,EAAK,OAE1CM,EAAAc,GAAA,YAAAA,EAAA,8BAAA,MAAAd,EAAA,KAAAc,EAA8BpB,GAAA,YAAAA,EAAK,OACnCO,EAAAa,GAAA,YAAAA,EAAA,8BAAA,MAAAb,EAAA,KAAAa,EAA8BpB,GAAA,YAAAA,EAAK,YAErCc,GAEShF,EAAA8E,EAA6BE,CAAC,CAAC,EAC/CvF,EAAYqB,IAAiB,CAC3B,GAAGA,EACH,UAAW,CACT,GAAGA,EAAY,UACf,wBAAyB,GACzB,cAAe,GACf,iBAAkB,EACpB,CACA,EAAA,CACJ,CAAA,EAGIqO,EAA8B,MAAOuB,GAAmB,CACxD,GAAA,CACI,MAAAxM,EAAM,MAAMC,GAAW,kBAAiB7E,GAAA,YAAAA,EAAQ,UAAW,IAAIA,GAAA,YAAAA,EAAQ,WAAY,EAAE,EAC3FG,EAAYqB,IAAiB,CAC3B,GAAGA,EAEH,kBAAmB,CACjB,GAAGA,EAAY,kBACf,GAAG6P,GAA0BD,EAAWxM,GAAA,YAAAA,EAAK,IAAI,CACnD,EACA,UAAW,CACT,GAAGpD,EAAY,UACf,kBAAmB,EACrB,CACA,EAAA,QAEKkE,GAEShF,EAAA8E,EAA6BE,CAAC,CAAC,EAC/CvF,EAAYqB,IAAiB,CAC3B,GAAGA,EACH,UAAW,CACT,GAAGA,EAAY,UACf,kBAAmB,EACrB,CACA,EAAA,CACJ,CAAA,EAGIwO,EAAgD,SAAY,CAC5D,GAAA,CACF,MAAMpL,EAAM,MAAMC,GAAW,8BAA8B,YAAY7E,GAAA,YAAAA,EAAQ,SAAS,EAClEsR,EAAA,sBAAuB1M,GAAA,YAAAA,EAAK,IAAI,QAC/CW,GACP,QAAQ,IAAIA,CAAG,EACC7E,EAAA8E,EAA6BD,CAAG,CAAC,CACnD,CAAA,EAcI0K,EAA4B,IAAM,CACtCsB,GAAwB,OAAO,EAAG,GAAI,wCAAwC,EAC3E,KAAM3M,GAAQ,OACT4M,GAAuB5M,CAAG,GACN0M,EAAA,mBAAmBhQ,EAAAsD,GAAA,YAAAA,EAAK,OAAL,YAAAtD,EAAW,OAAO,CAC7D,CACD,EACA,MAAOiE,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACC7E,EAAA8E,EAA6BD,CAAG,CAAC,CAAA,CAClD,CAAA,EAGC6K,EAA4B,IAAM,CACtCmB,GAAwB,OAAO,EAAG,GAAI,yCAAyC,EAC5E,KAAM3M,GAAQ,OACT4M,GAAuB5M,CAAG,GACN0M,EAAA,mBAAmBhQ,EAAAsD,GAAA,YAAAA,EAAK,OAAL,YAAAtD,EAAW,OAAO,CAC7D,CACD,EACA,MAAOiE,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACC7E,EAAA8E,EAA6BD,CAAG,CAAC,CAAA,CAClD,CAAA,EAGC4K,EAA4B,IAAM,CACtCoB,GAAwB,OAAO,EAAG,GAAI,wCAAwC,EAC3E,KAAM3M,GAAQ,OACT4M,GAAuB5M,CAAG,GACN0M,EAAA,UAAUhQ,EAAAsD,GAAA,YAAAA,EAAK,OAAL,YAAAtD,EAAW,OAAO,CACpD,CACD,EACA,MAAOiE,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACC7E,EAAA8E,EAA6BD,CAAG,CAAC,CAAA,CAClD,CAAA,EAGC8K,EAAqB,IAAM,CAC/BkB,GAAwB,OAAO,EAAG,GAAI,iCAAiC,EACpE,KAAM3M,GAAQ,OACT4M,GAAuB5M,CAAG,GACN0M,EAAA,QAAQhQ,EAAAsD,GAAA,YAAAA,EAAK,OAAL,YAAAtD,EAAW,OAAO,CAClD,CACD,EACA,MAAOiE,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACC7E,EAAA8E,EAA6BD,CAAG,CAAC,CAAA,CAClD,CAAA,EAGC2K,EAAyB,SAAY,OACrC,GAAA,CACI,MAAAtL,EAAM,MAAM6M,GAAa,mBAC7B,EACA,GACA,sBAAsB3J,GAAmB,WAAWA,GAAmB,gBAAgBA,GAAmB,uBAAuB9H,GAAA,YAAAA,EAAQ,SAAA,EAErHsR,EAAA,gBAAgBhQ,EAAAsD,GAAA,YAAAA,EAAK,OAAL,YAAAtD,EAAW,OAAO,QACjDiE,GACP,QAAQ,IAAIA,CAAG,EACC7E,EAAA8E,EAA6BD,CAAG,CAAC,CACnD,CAAA,EAGIuK,GAAyC,MAAOsB,GAAmB,aACnE,GAAA,CACI,MAAAxM,EAAM,MAAMC,GAAW,8BAC3B,aAAYK,GAAA5D,EAAA8P,GAAA,YAAAA,EAAW,sBAAX,YAAA9P,EAAgC,OAAhC,YAAA4D,EAAsC,uBAAsBE,GAAAD,EAAAiM,GAAA,YAAAA,EAAW,sBAAX,YAAAjM,EAAgC,cAAhC,YAAAC,EAA6C,eAAepF,GAAA,YAAAA,EAAQ,SAAA,EAExHsR,EAAA,qCAAsC1M,GAAA,YAAAA,EAAK,IAAI,QAC9DW,GACP,QAAQ,IAAIA,CAAG,EACC7E,EAAA8E,EAA6BD,CAAG,CAAC,CACnD,CAAA,EAGIwK,EAAkB,MAAOqB,GAAmB,iBAC5C,GAAA,CACI,MAAAxM,GAAM,MAAMC,GAAW,gBAC3B,YAAWK,GAAA5D,EAAA8P,GAAA,YAAAA,EAAW,sBAAX,YAAA9P,EAAgC,OAAhC,YAAA4D,EAAsC,uBAAsBE,GAAAD,EAAAiM,GAAA,YAAAA,EAAW,sBAAX,YAAAjM,EAAgC,cAAhC,YAAAC,EAA6C,mBAAkBE,GAAAD,EAAA+L,GAAA,YAAAA,EAAW,sBAAX,YAAA/L,EAAgC,UAAhC,YAAAC,EAAyC,KAAA,EAE3JgM,EAAA,eAAgB1M,IAAA,YAAAA,GAAK,IAAI,QACxCW,IACP,QAAQ,IAAIA,EAAG,EACC7E,EAAA8E,EAA6BD,EAAG,CAAC,CACnD,CAAA,EA0BI+L,EAAwB,CAACI,EAAwC1L,IAAmB,CACxF7F,EAAYwR,IAAoB,CAC9B,GAAGA,EACH,gBAAiB,CACf,GAAGA,GAAA,YAAAA,EAAW,gBACd,CAACD,CAAG,EAAG1L,GAAW,CAAC,CACrB,CACA,EAAA,CAAA,EAGE4L,GAAqC,IAAM,WACxC,MAAA,CACL,iBAAiBtQ,EAAApB,GAAA,YAAAA,EAAS,kBAAT,YAAAoB,EAA0B,gBAC3C,iBAAiB4D,EAAAhF,GAAA,YAAAA,EAAS,kBAAT,YAAAgF,EAA0B,gBAC3C,QAAQC,EAAAjF,GAAA,YAAAA,EAAS,kBAAT,YAAAiF,EAA0B,MAAA,CACpC,EAGI0M,GAAkC,IAAM,OACrC,MAAA,CACL,qBAAqBvQ,EAAApB,GAAA,YAAAA,EAAS,kBAAT,YAAAoB,EAA0B,mBAAA,CAEjD,EAGIwQ,EAAqC,IAAM,WACxC,MAAA,CACL,cAAcxQ,EAAApB,GAAA,YAAAA,EAAS,kBAAT,YAAAoB,EAA0B,aACxC,iBAAiB4D,EAAAhF,GAAA,YAAAA,EAAS,kBAAT,YAAAgF,EAA0B,gBAC3C,cAAcC,EAAAjF,GAAA,YAAAA,EAAS,kBAAT,YAAAiF,EAA0B,YAAA,CAC1C,EAGI4M,GAA6B,IAAM,OAChC,MAAA,CACL,MAAMzQ,EAAApB,GAAA,YAAAA,EAAS,kBAAT,YAAAoB,EAA0B,IAAA,CAClC,EAGI0Q,GAAkC,IAAM,SACrC,MAAA,CACL,cAAc1Q,EAAApB,GAAA,YAAAA,EAAS,kBAAT,YAAAoB,EAA0B,aACxC,oCACE4D,EAAAhF,GAAA,YAAAA,EAAS,kBAAT,YAAAgF,EAA0B,kCAAA,CAC9B,EAGI+M,GAA0C,KACvC,CACL,gBAAiB/R,GAAA,YAAAA,EAAS,gBAAgB,gBAC1C,aAAcA,GAAA,YAAAA,EAAS,gBAAgB,aACvC,aAAcA,GAAA,YAAAA,EAAS,gBAAgB,aACvC,cAAeA,GAAA,YAAAA,EAAS,gBAAgB,cACxC,aAAcA,GAAA,YAAAA,EAAS,gBAAgB,YAAA,GAgBzC,OAAAwC,EAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAX,EAAA,IAAC6H,GAAA,CACC,gBAAiBgI,GAAmC,EACpD,UAAW1R,GAAA,YAAAA,EAAS,UAAU,iBAC9B,KAAMA,GAAA,YAAAA,EAAS,iBACf,mBAAoB,IAAM,CACxB0P,EAAgB,EAAI,CACtB,CAAA,CACF,EAEC7N,MAAAkL,GAAA,CAAQ,MAAM,wBACb,SACEvK,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAZ,EAAA,IAACmQ,GAAA,CACC,IAAK1C,EACL,UAAWtP,GAAA,YAAAA,EAAS,UAAU,cAC9B,gBAAiB2R,GAAgC,EACjD,KAAM3R,GAAA,YAAAA,EAAS,cACf,mBAAqB8F,GAAyD,UAC5E1E,EAAAiO,GAAA,YAAAA,EAAY,UAAZ,MAAAjO,EAAqB,WACjB0E,GAAA,MAAAA,EAAS,gCACXd,EAAAuK,GAAA,YAAAA,EAAkB,UAAlB,MAAAvK,EAA2B,YAE7B0K,EAAgB,GAAM,CACpB,4BAA6BE,GAC7B,4BAA6BC,CAAA,CAC9B,CACH,CAAA,CACF,EAEAhO,EAAA,IAACpC,GAAA,CACC,IAAK4P,EACL,KAAMrP,GAAA,YAAAA,EAAS,OAAA,CAEjB,EACA6B,EAAA,IAACoQ,GAAA,CACC,UAAWjS,GAAA,YAAAA,EAAS,UAAU,iBAC9B,gBAAiB4R,EAAmC,EACpD,KAAM5R,GAAA,YAAAA,EAAS,iBACf,mBAAoB,IAAM,QACxBoB,EAAAkO,GAAA,YAAAA,EAAkB,UAAlB,MAAAlO,EAA2B,kBAC3BsO,EAAgB,EAAI,CACtB,CAAA,CACF,EACA7N,EAAA,IAACqQ,GAAA,CACC,gBAAiBL,GAA2B,CAAA,CAG9C,EACAhQ,EAAA,IAACsQ,GAAA,CACC,KAAMnS,GAAA,YAAAA,EAAS,oBAAA,CAEjB,CAAA,CAAA,CACF,CACF,CAAA,EAEA6B,EAAA,IAACuQ,GAAA,CACC,UAAWpS,GAAA,YAAAA,EAAS,UAAU,kBAC9B,KAAMA,GAAA,YAAAA,EAAS,kBACf,mBAAqBqS,GACnB3C,EAAgB,GAAM,CACpB,iCAAkCC,EAClC,8BAA+B0C,CAAA,CAChC,CAAA,CAEL,EAECxQ,MAAAkL,GAAA,CAAQ,MAAM,4BACb,SACEvK,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAZ,EAAA,IAACuL,GAAA,CACC,KAAMpN,GAAA,YAAAA,EAAS,sBACf,gBAAiB+R,GAAwC,EACzD,mBAAoB,IAAM,QACxB3Q,EAAAmO,GAAA,YAAAA,EAAkB,UAAlB,MAAAnO,EAA2B,WAC3BsO,EAAgB,EAAI,CACtB,CAAA,CACF,EACA7N,EAAA,IAACyQ,GAAA,CACC,WAAWlR,GAAApB,GAAA,YAAAA,EAAS,YAAT,YAAAoB,GAAoB,wBAC/B,KAAMpB,GAAA,YAAAA,EAAS,wBACf,mBAAoB,IAAM,CACxB0P,EAAgB,EAAI,CACtB,CAAA,CACF,CAAA,CAAA,CACF,CACF,CAAA,EAEA7N,EAAAA,IAACkL,GAAQ,CAAA,MAAM,4BACb,SAAAlL,EAAA,IAAC2B,GAAA,CACC,IAAK+L,EACL,gBAAiBuC,GAAgC,EACjD,KAAM9R,GAAA,YAAAA,EAAS,cACf,mBAAoB,IAAM0P,EAAgB,EAAI,CAAA,CAAA,EAElD,EAEA7N,EAAAA,IAACkL,GAAQ,CAAA,MAAM,oBACb,SAAAlL,EAAA,IAAC0Q,GAAA,CACC,WAAWvN,GAAAhF,GAAA,YAAAA,EAAS,YAAT,YAAAgF,GAAoB,QAE/B,KAAMhF,GAAA,YAAAA,EAAS,OAAA,CAAA,EAGnB,EAEA6B,EAAA,IAACwB,GAAA,CACC,OAAQ,IAAM,CACZ3C,EAAsB,EAAK,EAC3BF,EAAgB,EAAE,CACpB,EACA,QAASC,GACT,aAAAF,CAAA,CACF,EACAsB,EAAA,IAACsB,GAAA,CACC,SAAU,eACV,IAAKxC,GACL,UAAWR,EACX,QAASgP,EAAA,CACX,CACF,CAAA,CAAA,CAEJ"}