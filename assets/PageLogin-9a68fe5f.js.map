{"version":3,"file":"PageLogin-9a68fe5f.js","sources":["../../src/components/LoginInputBox/LoginInputBox.tsx","../../src/views/auth/PageLogin/PageLogin.tsx"],"sourcesContent":["import { INPUT_BOX_STYLES } from \"assets/base-theme\";\nimport InputError from \"components/InputError/InputError\";\nimport Label from \"components/Label/Label\";\nimport BaseInput, { IBaseInputProps } from \"components/base/BaseInput\";\nimport { IInputCommonStyleProps } from \"components/interface/Input\";\nimport { InputText } from \"primereact/inputtext\";\nimport React, { memo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { generateClasses } from \"utils/Util\";\n\ninterface IInputBoxProps extends IBaseInputProps, IInputCommonStyleProps {}\n\nconst LoginInputBox: React.FC<IInputBoxProps> = (props: IInputBoxProps) => {\n  const {\n    variant,\n    styleObj,\n    args,\n    hideLabel,\n    hideErrorRow,\n    labelClassNames,\n    labelStyleObj,\n    validation,\n    errorClassNames,\n    ...PrimeReactProps\n  } = props;\n\n  const { placeholder, label } = PrimeReactProps;\n  const getClassNames = () => {\n    const styleObject = {\n      ...INPUT_BOX_STYLES,\n      overrideStyle: styleObj,\n      overrideClasses: props.className,\n      isDisabled: props.disabled,\n      isInvalid: !!props.validation,\n      removeStyleProperty: [],\n      removeClasses: [],\n    };\n\n    return generateClasses(styleObject, variant);\n  };\n\n  const { t } = useTranslation();\n\n  let placeholderLabel: string;\n\n  if (placeholder !== undefined) {\n    placeholderLabel = t(placeholder, args);\n  } else {\n    // Handle the case when the label is undefined\n    placeholderLabel = \"\"; // Or provide a default value or appropriate handling\n  }\n\n  return (\n    <div className=\"group grid w-full\">\n      {!hideLabel && (\n        <Label\n          label={label}\n          labelClassNames={labelClassNames}\n          labelStyleObj={labelStyleObj}\n          isInvalid={validation}\n        />\n      )}\n      <InputText\n        {...PrimeReactProps}\n        placeholder={placeholderLabel}\n        className={`${getClassNames()} ${\n          PrimeReactProps.disabled\n            ? \"!bg-secondary-disabledBGColor !border-primary-gray-300 placeholder-secondary-gray-500 \"\n            : \" \"\n        } `}\n      />\n      {!hideErrorRow && (\n        <InputError\n          validation={validation}\n          hideErrorRow={hideErrorRow}\n          errorClassNames={errorClassNames}\n        />\n      )}\n    </div>\n  );\n};\n\n// redux wiring\n\n// exports\nexport default memo(LoginInputBox);\n","/**\n * Author : Kaviraj RM\n * Created on : 23 June, 2023\n **/\n\n/*\n    --------------------------------------------------------------------------------------------------------------------\n    Imports:\n    --------------------------------------------------------------------------------------------------------------------\n  */\nimport { saveUserProfile } from \"actions/UserProfileAction\";\nimport googleIcon from \"assets/img/buttonIcons/Google.svg\";\nimport sahayyaIllustration from \"assets/img/common/Sahayya_Illustration.svg\";\nimport sahayyaLogo from \"assets/img/common/Sahayya_Logo.svg\";\nimport InputError from \"components/InputError/InputError\";\nimport InputPassword from \"components/InputPassword\";\nimport LinkButton from \"components/LinkButton\";\nimport LoginInputBox from \"components/LoginInputBox/LoginInputBox\";\nimport SimpleButton from \"components/SimpleButton\";\nimport Text from \"components/Text/Text\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { linkPagePasswordReset, linkPageSetup, linkStaticMasterTypes } from \"routes\";\nimport AuthService from \"services/AuthService\";\nimport UserService from \"services/masterdata/User/UserService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getEnvVariableValue,\n  getLocalStorage,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  parseStandardAPIErrorMessageForRemovingCode,\n  setLocalStorage,\n} from \"utils/CommonUtil\";\nimport { BUTTON_STYLE_TYPE, LOCAL_STORAGE, SAHAYYA_USER_TYPE } from \"utils/Constant\";\nimport { LINK_PARTNER_TASK_LIST } from \"../../../transactionRoutes\";\nimport { version } from \"../../../../package.json\";\n// -------------------------------------------------- IProps ----------------------------------------------------- //\n\nfunction PageLogin(props: RouteProps) {\n  /*\n\n    ----------------------------------------------------------------------------------------------------------------------\n    States\n    ----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const [error, setError] = useState<any>([]);\n\n  const [pageObj, setPageObj] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (getLocalStorage(LOCAL_STORAGE.USER_INFO)) {\n      props.navigateNoAuth(linkPageSetup);\n    }\n  }, []);\n\n  /*\n    ----------------------------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    ----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  // const validate = (e: any) => {\n  //   simpleValidator?.current?.showMessageFor(e?.target?.name);\n  // };\n\n  const validateForm = async () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Submit / Save Data Functions:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const onLogin = async (e: any) => {\n    let isValid: any = false;\n    isValid = validateForm();\n    if (!isValid) {\n      return;\n    }\n\n    if (simpleValidator?.current?.allValid()) {\n      const payload = {\n        username: pageObj.email,\n        password: pageObj.password,\n      };\n\n      return AuthService.login(payload)\n        .then((res) => {\n          if (res?.status === 201) {\n            setLocalStorage(LOCAL_STORAGE.USER_INFO, JSON.stringify(res?.data));\n            return UserService.getUserDetail().then((res) => {\n              if (res?.status === 200) {\n                console.log(res);\n                dispatch(saveUserProfile(res.data));\n                if (res.data.sahayyaUserType === SAHAYYA_USER_TYPE.PARTNER_USER) {\n                  props.navigate(LINK_PARTNER_TASK_LIST);\n                } else {\n                  props.navigateNoAuth(linkPageSetup);\n                }\n              } else {\n                setError(parseStandardAPIErrorMessage(res));\n              }\n            });\n          }\n        })\n        .catch((err) => {\n          setError(parseStandardAPIErrorMessageForRemovingCode(err));\n        });\n    } else {\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n    }\n  };\n\n  const onGoogleLogin = (e: any) => {\n    // AuthService.redirectToSSO();\n    window.location.href = `${getEnvVariableValue(\"VITE_BASE_API_URL\")}/auth/pub/google/login`;\n  };\n\n  const { email, password } = pageObj;\n\n  console.log(version);\n\n  return (\n    <div className=\"relative flex justify-center h-screen\">\n      <div className=\"absolute left-6 top-6\">\n        <img src={sahayyaLogo} alt=\"Sahayya Logo\" />\n      </div>\n      <div className=\"w-102 z-10 px-9 pt-9 pb-14 mt-21.5 mb-21 bg-white\">\n        <div className=\"flex justify-center\">\n          <Text\n            label=\"label.auth.login\"\n            className=\"px-2 font-bold text-primary-primaryTextColor text-h1 font-Roboto\"\n          />\n        </div>\n        <div className=\"flex justify-center my-6 text-center\">\n          <Text\n            label=\"label.auth.login.googleLogin\"\n            className=\"text-xs text-primary-primaryTextColor font-Roboto\"\n          />\n        </div>\n        <div className=\"w-full \">\n          <SimpleButton\n            label=\"component.button.googleLogin\"\n            variant={BUTTON_STYLE_TYPE.PRIMARY}\n            buttonIcon={googleIcon}\n            className=\"!bg-primary-googleButtonColor !border-none\"\n            buttonIconClassName=\"max-w-fit h-3.5 w-3.5 \"\n            onClick={onGoogleLogin}\n            isIgnoreAccessLevel\n          />\n        </div>\n        <div className=\"flex mt-8\">\n          <div className=\"flex items-center justify-center\">\n            <hr className=\"w-35\" />\n          </div>\n          <Text label=\"label.auth.login.OR\" className=\"mx-4 text-xs\" />\n          <div className=\"flex items-center justify-center \">\n            <hr className=\"w-35\" />\n          </div>\n        </div>\n        <div className=\"flex justify-center my-6 text-center\">\n          <Text\n            label=\"label.auth.login.partnerLogin\"\n            className=\"text-xs text-primary-primaryTextColor font-Roboto\"\n          />\n        </div>\n        <div>\n          <LoginInputBox\n            label=\"label.auth.login.emailID\"\n            name=\"email\"\n            value={email}\n            onChange={handleInputChange}\n            placeholder={\"placeholder.auth.login.emailID\"}\n            onBlur={() => simpleValidator.current.showMessageFor(\"email\")}\n            validation={simpleValidator?.current?.message(\"email\", email, \"mandatory|email\")}\n          />\n        </div>\n\n        <div className=\"mt-4 mb-1.5\">\n          <InputPassword\n            label=\"label.auth.login.password\"\n            placeholder={\"placeholder.auth.login.password\"}\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            onChange={handleInputChange}\n            toggleMask\n            onBlur={() => simpleValidator.current.showMessageFor(\"password\")}\n            validation={simpleValidator?.current?.message(\"password\", password, \"mandatory\")}\n          />\n        </div>\n        <div className=\"flex justify-end\">\n          <LinkButton\n            label=\"link.auth.login.password\"\n            path={email ? `${linkPagePasswordReset}?email=${email}` : linkPagePasswordReset}\n          />\n        </div>\n        <div className=\"w-full mt-4 \">\n          <SimpleButton\n            label=\"component.button.logIn\"\n            variant={BUTTON_STYLE_TYPE.PRIMARY}\n            onClickWithLoader={onLogin}\n            isIgnoreAccessLevel\n          />\n          {error.map((val: any, idx: any) => (\n            <div key={idx} className=\"flex items-center justify-center\">\n              <InputError errorMessage={val} key={idx} errorClassNames=\"!item-center\" />\n            </div>\n          ))}\n        </div>\n      </div>\n      <span className=\"absolute right-0 font-bold bottom-10\">\n        V<sub>{version}</sub>\n      </span>\n      <div className=\"absolute -bottom-6 \">\n        <img src={sahayyaIllustration} alt=\"search-icon\" className=\"w-full max-w-fit h-61\" />\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(PageLogin);\n"],"names":["LoginInputBox","props","variant","styleObj","args","hideLabel","hideErrorRow","labelClassNames","labelStyleObj","validation","errorClassNames","PrimeReactProps","placeholder","label","getClassNames","styleObject","INPUT_BOX_STYLES","generateClasses","t","useTranslation","placeholderLabel","jsxs","jsx","Label","InputText","InputError","memo","PageLogin","error","setError","useState","pageObj","setPageObj","forceUpdate","simpleValidator","useRef","SimpleReactValidator","getStandardValidator","messageReplace","prev","dispatch","useDispatch","useEffect","getLocalStorage","LOCAL_STORAGE","linkPageSetup","handleInputChange","event","name","value","prevPageObj","validateForm","isValid","_a","_b","onLogin","e","payload","AuthService","res","setLocalStorage","UserService","saveUserProfile","SAHAYYA_USER_TYPE","LINK_PARTNER_TASK_LIST","parseStandardAPIErrorMessage","err","parseStandardAPIErrorMessageForRemovingCode","onGoogleLogin","getEnvVariableValue","email","password","version","sahayyaLogo","Text","SimpleButton","BUTTON_STYLE_TYPE","googleIcon","InputPassword","LinkButton","linkPagePasswordReset","val","idx","sahayyaIllustration","PageLogin$1","withRouter"],"mappings":"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"}