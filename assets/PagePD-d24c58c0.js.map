{"version":3,"file":"PagePD-d24c58c0.js","sources":["../../src/services/BusinessService.ts","../../src/views/transaction/PageDDE/PD/Helper.ts","../../src/views/transaction/PageDDE/PD/section/ReferenceDetails/ReferenceDetails.tsx","../../src/views/transaction/PageDDE/PD/section/EmploymentDetails/EmploymentDetails.tsx","../../src/views/transaction/PageDDE/PD/section/FamilyDetails/FamilyDetails.tsx","../../src/views/transaction/PageDDE/PD/section/InitiationInfo/InitiationInfo.tsx","../../src/views/transaction/PageDDE/PD/section/InvestmentDetails/InvestmentDetails.tsx","../../src/views/transaction/PageDDE/PD/section/OtherIncome/OtherIncome.tsx","../../src/views/transaction/PageDDE/PD/section/PDDetails/PDDetails.tsx","../../src/views/transaction/PageDDE/PD/section/PersonalDiscussionRecording/PersonalDiscussionRecording.tsx","../../src/views/transaction/PageDDE/PD/section/RepaymentHistory/RepaymentHistory.tsx","../../src/views/transaction/PageDDE/PD/PagePD/PagePD.tsx"],"sourcesContent":["import BaseApiService from \"services/BaseApiService\";\n\nconst DEFAULT_PATH = \"/custom/api\";\n\nconst DEFAULT_CORE_BUSINESS_PATH = DEFAULT_PATH + \"/core/business/category\";\n\nclass BusinessService extends BaseApiService {\n  getCoreBusinessCategory = (start = 0, limit = 10, search = \"\") => {\n    const url = DEFAULT_CORE_BUSINESS_PATH + `/search?start=${start}&limit=${limit}&sort={\"name\":\"ASC\"}&${search}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n}\n\nexport default new BusinessService();\n","import {\n  IDocumentInfo,\n  ISavedDocumentSections,\n  IUploadedDocumentSection,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport { LOAN_SECTION_KEY_TYPES } from \"components/OtherDocuments/OtherDocuments\";\nimport { numberFormatter } from \"locale\";\nimport { currencyFormatToNumber } from \"utils/CommonUtil\";\nimport { DOCUMENT_CATEGORY, EMPLOYMENT_TYPE, YES_NO } from \"utils/Constant\";\nimport {\n  initialSavedDocumentStructure,\n  prepareAttributes,\n  structLoanDocumentsFromAPIResponse,\n} from \"../Login/Helper\";\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - Initiation Info\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateInitiationInfoObj = (data: any) => {\n  return {\n    dateOfInitiation: data?.stage?.createdAtSystemDate,\n    stage: data?.stage?.stageName,\n    pdType: data?.stage?.smStageType,\n    assignTo: { name: data?.stage?.assignee?.name },\n    CCEmails: data?.ccEmail ? JSON.parse(data?.ccEmail ?? []) : [],\n    description: data?.stage?.remarks,\n    applicant: data?.stage?.applicant,\n    stageDocuments: data?.stage?.stageDocuments ?? [],\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - Personnel Discussion\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updatePDDetailsObj = (data: any) => {\n  if (data && data?.stage) {\n    const { pd } = data.stage;\n\n    return {\n      uid: pd?.uid,\n      applicantType: pd?.applicant?.applicantType,\n      dateOfInitiation: data?.stage?.createdAtSystemDate,\n      customerName: [pd?.applicant?.firstName, pd?.applicant?.middleName, pd?.applicant?.lastName]\n        .filter(Boolean)\n        .join(\" \"),\n      placeOfVisit: pd?.smPlaceOfVisit,\n      dateOfPD: pd?.dateOfPd,\n      ITRAvailability:\n        pd?.isItrAvailable === true ? YES_NO.YES : pd?.isItrAvailable === false ? YES_NO.NO : \"\",\n      // address\n      placeOfVisitUid: pd?.placeOfVisitAddress?.uid,\n      address: pd?.placeOfVisitAddress?.address,\n      pincode: {\n        pinCode: pd?.placeOfVisitAddress?.pincode?.pinCode,\n        uid: pd?.placeOfVisitAddress?.pincode?.uid,\n      },\n      city: { name: pd?.placeOfVisitAddress?.city?.name, uid: pd?.placeOfVisitAddress?.city?.uid },\n      state: pd?.placeOfVisitAddress?.city?.state?.name,\n      latitude: pd?.placeOfVisitAddress?.latitude\n        ? `${parseFloat(pd?.placeOfVisitAddress?.latitude).toFixed(4)}`\n        : \"\",\n      longitude: pd?.placeOfVisitAddress?.longitude\n        ? `${parseFloat(pd?.placeOfVisitAddress?.longitude).toFixed(4)}`\n        : \"\",\n    };\n  }\n\n  return {};\n};\n\nexport const enrichPDObj = (data: any) => {\n  return {\n    uid: data?.uid,\n    smPlaceOfVisit: data?.placeOfVisit,\n    dateOfPd: data?.dateOfPD,\n    isItrAvailable: data?.ITRAvailability === YES_NO.YES ? true : false,\n    // address\n    placeOfVisitAddress: {\n      uid: data?.placeOfVisitUid,\n      address: data?.address,\n      pincode: {\n        uid: data?.pincode?.uid,\n      },\n      city: {\n        uid: data?.city?.uid,\n      },\n      latitude: Number(data?.latitude),\n      longitude: Number(data?.longitude),\n    },\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - Family / Household Details\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateFamilyObj = (data: any) => {\n  if (data && data?.stage) {\n    const { pd } = data.stage;\n\n    return {\n      id: pd?.id,\n      uid: pd?.uid,\n      isActive: pd?.isActive,\n      familyType: pd?.smFamilyType ?? \"\",\n      noOfHouseholdMembers: pd?.noOfHouseholdMembers ?? \"\",\n      noOfDependantsMembers: pd?.noOfDependentMembers ?? \"\",\n      ownershipOfResidence: pd?.smOwnershipOfCurrentResidence ?? \"\",\n      areaOfResidence: pd?.areaOfCurrentResidence ?? \"\",\n      yearsInCurrentCity: pd?.noYearsInCurrentCity ?? \"\",\n      detailsOnNeighbour: pd?.neighbourhoodDescription ?? \"\",\n      storyboard: pd?.storyboard ?? \"\",\n    };\n  }\n  return {};\n};\n\nexport const enrichFamilyDetails = (data: any) => {\n  return {\n    uid: data?.uid,\n    smFamilyType: data?.familyType,\n    noOfHouseholdMembers: Number(data?.noOfHouseholdMembers),\n    noOfDependentMembers: Number(data?.noOfDependantsMembers),\n    smOwnershipOfCurrentResidence: data?.ownershipOfResidence,\n    areaOfCurrentResidence: Number(data?.areaOfResidence),\n    noYearsInCurrentCity: Number(data?.yearsInCurrentCity),\n    neighbourhoodDescription: data?.detailsOnNeighbour,\n    storyboard: data?.storyboard,\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - other Income\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateOtherIncome = (data: any) => {\n  if (data && data?.stage) {\n    const { pd } = data.stage;\n\n    return {\n      uid: pd?.uid,\n      id: pd?.id,\n      isActive: pd?.isActive,\n      totalRentalIncome: numberFormatter(pd?.rentalIncome, \"en-IN\", 0),\n      agriculturalIncome: numberFormatter(pd?.agriculturalIncome, \"en-IN\", 0),\n      FDDividendIncome: numberFormatter(pd?.otherIncome, \"en-IN\", 0),\n    };\n  }\n\n  return {};\n};\n\nexport const enrichOtherIncome = (data: any) => {\n  return {\n    uid: data?.uid,\n    rentalIncome: currencyFormatToNumber(data?.totalRentalIncome),\n    agriculturalIncome: currencyFormatToNumber(data?.agriculturalIncome),\n    otherIncome: currencyFormatToNumber(data?.FDDividendIncome),\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - write up details\n-----------------------------------------------------------------------------------------------------------\n*/\n\n// export const updateWriteUpDetails = (data: any) => {\n//   const { pd } = data?.stage;\n\n//   return {\n//     uid: pd?.uid,\n//     workProfileDescription: \"<string>\",\n//     businessModelDescription: \"<string>\",\n//   };\n// };\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - investment details\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const updateInvestmentDetails = (data: any) => {\n  const { pd } = data?.stage || {};\n\n  return {\n    uid: pd?.uid,\n    id: pd?.id,\n    isActive: pd?.isActive,\n    assets: [],\n    investmentComments: pd?.remarksOnInvestment,\n  };\n};\n\nexport const enrichInvestmentDetails = (data: any) => {\n  return {\n    uid: data?.uid,\n    remarksOnInvestment: data?.investmentComments,\n    financialDetail: data?.assets.map((asset: any) => {\n      return {\n        uid: asset.uid ?? \"\",\n        smAssetType: asset.smAssetType, //code\n        amount: Number(asset.amount), //amount\n        isActive: asset.isActive,\n      };\n    }),\n  };\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - repayment history\n-----------------------------------------------------------------------------------------------------------\n*/\n\n// not needed currently\n// for future use\nexport const updateRepaymentHistory = (data: any) => {\n  return {};\n};\n\nexport const enrichRepaymentHistory = (data: any, loanId: string, stageId: string) => {\n  return data?.repaymentHistory?.map((ele: any) => {\n    console.log(ele, \"ele?.uid\");\n\n    return {\n      uid: ele?.uid, // if available\n      isActive: ele?.isActive,\n      loan: { uid: loanId }, // pass uid\n      stage: { uid: stageId }, // pass uid\n      smCustomerType: ele?.smCustomerType,\n      applicant: { uid: ele?.applicant?.uid }, // pass uid\n      bank: { uid: ele?.bank?.uid }, // pass uid\n      smPurpose: ele?.smPurpose,\n      sanctionedAmount: ele?.sanctionedAmount ? Number(ele?.sanctionedAmount) : null,\n      outstandingAmount: ele?.outstandingAmount ? Number(ele?.outstandingAmount) : null,\n      sanctionedTenor: ele?.sanctionedTenor ? Number(ele?.sanctionedTenor) : null,\n      balanceTenor: ele?.balanceTenor ? Number(ele?.balanceTenor) : null,\n      emiAmount: ele?.emiAmount ? Number(ele?.emiAmount) : null,\n      pastDefaults: ele?.pastDefaults,\n      noOfBounces: ele?.noOfBounces ? Number(ele?.noOfBounces) : null,\n      roi: ele?.roi ? Number(ele?.roi) : null,\n    };\n  });\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nPD - employment /reference details  ( for employment type = salaried , self employment )\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const enrichLoanDocuments = (data: any) => {\n  const enrichedLoanDocumentArr: any[] = data?.loanDocumentsProof\n    ?.map((loanDoc: any, index: number) => {\n      if (loanDoc?.documentUid) {\n        const documentSection = {\n          uid: loanDoc?.uid,\n          docType: {\n            code: loanDoc?.documentCode,\n            uid: loanDoc?.documentUid,\n          },\n          docNo: loanDoc?.[`${loanDoc?.primaryKeyAttributeName}`] ?? null,\n          dob: loanDoc?.dob ? loanDoc?.dob : null,\n          loanSectionKey: \"\",\n          docCategory: loanDoc?.documentCategory,\n          attributes: prepareAttributes(loanDoc),\n          documentSections: prepareDocSections(loanDoc?.documentSectionUrls),\n          isActive: loanDoc?.isActive,\n        };\n        return documentSection;\n      }\n    })\n    .filter(Boolean);\n  return enrichedLoanDocumentArr;\n};\n\nexport const updateEmploymentDetails = (data: any) => {\n  const updatedEmploymentDetails: { [key: string]: any } = {\n    uid: data?.uid,\n    isActive: data?.isActive,\n    employmentType: data?.smEmploymentNature,\n    industry: data?.industry?.uid,\n    businessCategory: data?.coreBusinessCategory?.uid,\n    designation: data?.designation,\n    orgName: data?.orgName,\n    tenantType: data?.smTenantType,\n    tenantName: data?.tenantName,\n    tenantMobileNo: data?.tenantMobileNo,\n    dateOfJoining: new Date(data?.incorporationDate), //date time\n    yearsInCurrentEmp: `${data?.smIncorporationYear}`,\n    totalExpInYear: data?.expInYear,\n    monthlyGrossSalary: numberFormatter(data?.grossIncomeMonth, \"en-IN\", 0),\n    monthlyNetSalary: numberFormatter(data?.netIncomeMonth, \"en-IN\", 0),\n    businessManagedBy: data?.smBusinessManagedBy,\n    businessSeasonality: data?.smBusinessSeasonality,\n    noOfEmp: data?.smNoOfEmployee,\n    businessType: data?.smBusinessType,\n    businessConstitution: data?.smBusinessConstitution,\n    businessOwnerShip: data?.smOwnershipOfBusinessPremises,\n    propertyOwnedBy: data?.smOwnershipOfRentalPremises,\n    monthlyDeductions: numberFormatter(data?.monthlyDeductions, \"en-IN\", 0),\n    annualBonus: numberFormatter(data?.annualBonus, \"en-IN\", 0),\n    performanceIncentive: numberFormatter(data?.performanceIncentive, \"en-IN\", 0),\n    businessInCurrentLoc: `${data?.businessInCurrentLocationYears}`,\n    resiCumOffice: data?.isPremisesResidentialOffice ? YES_NO.YES : YES_NO.NO, // boolean\n    sizeOfBusinessPremises: `${data?.sizeOfPremises}`,\n    businessLocation: data?.smPremisesLocation,\n    structureType: data?.smPremisesStructureType,\n    noOfEmpAtVisit: data?.noOfEmployeesSeenDuringVisit,\n    stockSeenAtVisit: data?.businessStockSeenDuringVisit,\n    approachRoad: data?.businessApproachRoad,\n    assetsInPremises: data?.businessAssetsSeenDuringVisit,\n    noOfOperationalDays: `${data?.noOfDaysOperationalMonthly}`,\n    firstGenerationBusiness: data?.isFirstGenerationBusiness ? YES_NO.YES : YES_NO.NO,\n    salaryPaidToEmp: numberFormatter(data?.businessAnnualSalaryToEmployees, \"en-IN\", 0),\n    creditorCycle: data?.businessCreditCycle,\n    serviceOffered: data?.businessProductService,\n    rawMaterials: data?.businessRawMaterial,\n    avgDailySales: numberFormatter(data?.businessAvgDailySale, \"en-IN\", 0),\n    lastSixMonthAvgMonthlySales: numberFormatter(data?.businessAvgMonthlySale, \"en-IN\", 0),\n    lastSixMonthHighestMonthlySales: numberFormatter(data?.businessHighestMonthlySale, \"en-IN\", 0),\n    lastSixMonthLowestMonthlySales: numberFormatter(data?.businessLowestMonthlySale, \"en-IN\", 0),\n    lastSixMonthAvgMonthlyPurchase: numberFormatter(data?.businessAvgMonthlyPurchase, \"en-IN\", 0),\n    avgExpense: numberFormatter(data?.businessAvgMonthlyExpense, \"en-IN\", 0),\n    estimateGrossMargin: `${data?.businessEstGrossMargin}`,\n    netMargin: `${data?.businessEstNetMargin}`,\n    commentOnBusiness: data?.businessInteriorExteriorRemarks,\n    rentAmount: numberFormatter(data?.rentalAmountAsPerAgreement, \"en-IN\", 0),\n    rentPaidSinceMonths: `${data?.rentPaidSinceMonths}`,\n    rentAgreement: data?.isRentalAgreementAvailable ? YES_NO.YES : YES_NO.NO,\n    rentalAgreementDate: data?.rentalAgreementDate ? new Date(data?.rentalAgreementDate) : \"\", //  date time\n    rentalStartDate: data?.rentalStartDate ? new Date(data?.rentalStartDate) : \"\", // date time\n    rentMode: data?.smRentPaymentMode,\n    rentReceiptBank: data?.rentReceiptBank?.uid\n      ? { name: data?.rentReceiptBank?.name, uid: data?.rentReceiptBank?.uid }\n      : null,\n    rentBankAccount: data?.rentBankAccount,\n    lastOneMonthAmountCollected: numberFormatter(data?.rentCollectedLastMonth1, \"en-IN\", 0),\n    secondLastMonthAmountCollected: numberFormatter(data?.rentCollectedLastMonth2, \"en-IN\", 0),\n    thirdLastMonthAmountCollected: numberFormatter(data?.rentCollectedLastMonth3, \"en-IN\", 0),\n    tenureRentInMonths: data?.rentalTenure,\n    escalation: `${data?.rentalEscaltionPct}`,\n    remark: data?.remarks,\n\n    //\n\n    loanDocuments: structLoanDocumentsFromAPIResponse(data?.loanDocuments) ?? {\n      ...initialSavedDocumentStructure,\n    },\n\n    //\n    address: data?.premisesAddress\n      ? {\n          uid: data?.premisesAddress?.uid,\n\n          address: data?.premisesAddress?.address,\n          pincode: {\n            pinCode: data?.premisesAddress?.pincode?.pinCode,\n            uid: data?.premisesAddress?.pincode?.uid,\n          },\n          city: {\n            name: data?.premisesAddress?.city?.name,\n            uid: data?.premisesAddress?.city?.uid,\n          },\n          state: \"\",\n          latitude: Number(data?.premisesAddress?.latitude),\n          longitude: Number(data?.premisesAddress?.longitude),\n        }\n      : null,\n\n    // reference\n    referenceData: data?.employmentReference?.map((reference: any, index: number) => {\n      return {\n        uid: reference?.uid,\n        isActive: reference?.isActive,\n        referenceName: reference?.referenceName,\n        knownInYears: `${reference?.knowForHowManyYear}`,\n        relationshipNature: reference?.smNatureOfRelationship,\n        mobileNo: reference?.mobileNo,\n        country_code: \"+91\",\n        address: {\n          uid: reference?.address?.uid,\n          address: reference?.address?.address,\n          pincode: {\n            pinCode: reference?.address?.pincode?.pinCode,\n            uid: reference?.address?.pincode?.uid,\n          },\n          city: { name: reference?.address?.city?.name, uid: reference?.address?.city?.uid },\n          state: \"\",\n          // latitude: reference?.address?.latitude\n          //   ? `${parseFloat(reference?.address?.latitude).toFixed(4)}`\n          //   : \"\",\n          // longitude: reference?.address?.longitude\n          //   ? `${parseFloat(reference?.address?.longitude).toFixed(4)}`\n          //   : \"\",\n        },\n      };\n    }),\n  };\n\n  if (data?.smEmploymentNature === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED) {\n    updatedEmploymentDetails.establishmentName = data?.orgName;\n    updatedEmploymentDetails.yearsInCurrentBusiness = data?.smIncorporationYear;\n    updatedEmploymentDetails.totalWorkExp = `${data?.expInYear}`;\n  }\n\n  if (data?.smEmploymentNature === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME) {\n    updatedEmploymentDetails.areaOfProperty = data?.sizeOfPremises;\n  }\n\n  return updatedEmploymentDetails;\n};\n\nexport const enrichEmploymentDetails = (\n  data: any,\n  loanId: string,\n  pageId: string,\n  stageId: string,\n  type: string\n) => {\n  const preparedPayload: { [key: string]: any } = {\n    uid: data?.uid,\n    isActive: data?.isActive,\n    loan: { uid: loanId },\n    stage: { uid: stageId },\n    applicant: { uid: pageId },\n    smEmploymentNature: data?.employmentType,\n    industry: { uid: data?.industry },\n    coreBusinessCategory: { uid: data?.businessCategory },\n    designation: data?.designation,\n    orgName: data?.orgName,\n    smTenantType: data?.tenantType,\n    tenantName: data?.tenantName,\n    tenantMobileNo: data?.tenantMobileNo,\n    incorporationDate: data?.dateOfJoining ? data?.dateOfJoining : null, //date time\n    smIncorporationYear: `${data?.yearsInCurrentEmp}`,\n    expInYear: data?.totalExpInYear ? Number(data?.totalExpInYear) : null,\n    grossIncomeMonth: currencyFormatToNumber(data?.monthlyGrossSalary),\n    netIncomeMonth: currencyFormatToNumber(data?.monthlyNetSalary),\n    smBusinessManagedBy: data?.businessManagedBy,\n    smBusinessSeasonality: data?.businessSeasonality,\n    smNoOfEmployee: data?.noOfEmp,\n    smBusinessType: data?.businessType,\n    smBusinessConstitution: data?.businessConstitution,\n    smOwnershipOfBusinessPremises: data?.businessOwnerShip,\n    smOwnershipOfRentalPremises: data?.propertyOwnedBy,\n    monthlyDeductions: currencyFormatToNumber(data?.monthlyDeductions),\n    annualBonus: currencyFormatToNumber(data?.annualBonus),\n    performanceIncentive: currencyFormatToNumber(data?.performanceIncentive),\n    businessInCurrentLocationYears: data?.businessInCurrentLoc\n      ? Number(data?.businessInCurrentLoc)\n      : null,\n    isPremisesResidentialOffice: data?.resiCumOffice === YES_NO.YES, // boolean\n    sizeOfPremises: data?.sizeOfBusinessPremises ? Number(data?.sizeOfBusinessPremises) : null,\n    smPremisesLocation: data?.businessLocation,\n    smPremisesStructureType: data?.structureType,\n    noOfEmployeesSeenDuringVisit: data?.noOfEmpAtVisit,\n    businessStockSeenDuringVisit: data?.stockSeenAtVisit,\n    businessApproachRoad: data?.approachRoad,\n    businessAssetsSeenDuringVisit: data?.assetsInPremises,\n    noOfDaysOperationalMonthly: data?.noOfOperationalDays\n      ? Number(data?.noOfOperationalDays)\n      : null,\n    isFirstGenerationBusiness: data?.firstGenerationBusiness === YES_NO.YES,\n    businessAnnualSalaryToEmployees: currencyFormatToNumber(data?.salaryPaidToEmp),\n    businessCreditCycle: data?.creditorCycle,\n    businessProductService: data?.serviceOffered,\n    businessRawMaterial: data?.rawMaterials,\n    businessAvgDailySale: currencyFormatToNumber(data?.avgDailySales),\n    businessAvgMonthlySale: currencyFormatToNumber(data?.lastSixMonthAvgMonthlySales),\n    businessHighestMonthlySale: currencyFormatToNumber(data?.lastSixMonthHighestMonthlySales),\n    businessLowestMonthlySale: currencyFormatToNumber(data?.lastSixMonthLowestMonthlySales),\n    businessAvgMonthlyPurchase: currencyFormatToNumber(data?.lastSixMonthAvgMonthlyPurchase),\n    businessAvgMonthlyExpense: currencyFormatToNumber(data?.avgExpense),\n    businessEstGrossMargin: data?.estimateGrossMargin ? Number(data?.estimateGrossMargin) : null,\n    businessEstNetMargin: data?.netMargin ? Number(data?.netMargin) : null,\n    businessInteriorExteriorRemarks: data?.commentOnBusiness,\n    rentalAmountAsPerAgreement: currencyFormatToNumber(data?.rentAmount),\n    rentPaidSinceMonths: data?.rentPaidSinceMonths ? Number(data?.rentPaidSinceMonths) : null,\n    isRentalAgreementAvailable: data?.rentAgreement === YES_NO.YES,\n    rentalAgreementDate: data?.rentalAgreementDate ? data?.rentalAgreementDate : null, //  date time\n    rentalStartDate: data?.rentalStartDate ? data?.rentalStartDate : null, // date time\n    smRentPaymentMode: data?.rentMode,\n    rentReceiptBank: data?.rentReceiptBank?.uid ? { uid: data?.rentReceiptBank?.uid } : null,\n    rentBankAccount: data?.rentBankAccount,\n    rentCollectedLastMonth1: currencyFormatToNumber(data?.lastOneMonthAmountCollected),\n    rentCollectedLastMonth2: currencyFormatToNumber(data?.secondLastMonthAmountCollected),\n    rentCollectedLastMonth3: currencyFormatToNumber(data?.secondLastMonthAmountCollected),\n    rentalTenure: data?.tenureRentInMonths,\n    rentalEscaltionPct: data?.escalation ? Number(data?.escalation) : null,\n    remarks: data?.remark,\n    premisesAddress: null,\n\n    // loan documents\n    loanDocuments: enrichLoanDocuments(data),\n\n    // reference\n    employmentReference: data?.referenceData?.map((reference: any, index: number) => {\n      return {\n        uid: reference?.uid,\n        loan: { uid: loanId },\n        stage: { uid: stageId },\n        referenceName: reference?.referenceName,\n        knowForHowManyYear: reference?.knownInYears ? Number(reference?.knownInYears) : null,\n        smNatureOfRelationship: reference?.relationshipNature,\n        mobileNo: reference?.mobileNo,\n        country_code: \"+91\",\n        address: {\n          uid: reference?.address?.uid,\n          address: reference?.address?.address,\n          pincode: { uid: reference?.address?.pincode?.uid },\n          city: { uid: reference?.address?.city?.uid },\n          // latitude: reference?.address?.latitude ? Number(reference?.address?.latitude) : null,\n          // longitude: reference?.address?.longitude ? Number(reference?.address?.longitude) : null,\n        },\n        isActive: reference?.isActive,\n      };\n    }),\n  };\n\n  if (type === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED) {\n    preparedPayload.orgName = data?.establishmentName;\n    preparedPayload.smIncorporationYear = data?.yearsInCurrentBusiness;\n    preparedPayload.expInYear = data?.totalWorkExp ? Number(data?.totalWorkExp) : null;\n  }\n\n  if (type === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME) {\n    preparedPayload.sizeOfPremises = data?.areaOfProperty ? Number(data?.areaOfProperty) : null;\n    // address\n    preparedPayload.premisesAddress = {\n      uid: data?.address?.uid,\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: pageId,\n      },\n      address: data?.address?.address,\n      pincode: {\n        uid: data?.address?.pincode?.uid,\n      },\n      city: {\n        uid: data?.address?.city?.uid,\n      },\n      latitude: Number(data?.address?.latitude),\n      longitude: Number(data?.address?.longitude),\n    };\n  }\n  return preparedPayload;\n};\n\nexport const updateReferenceDetailsObj = (data: any) => {\n  return {\n    uid: data?.uid,\n    isActive: data?.isActive,\n    referenceName: data?.referenceName,\n    knownInYears: `${data?.knowForHowManyYear}`,\n    relationshipNature: data?.smNatureOfRelationship,\n    mobileNo: data?.mobileNo,\n    country_code: \"+91\",\n    address: {\n      uid: data?.address?.uid,\n      address: data?.address?.address,\n      pincode: {\n        pinCode: data?.address?.pincode?.pinCode,\n        uid: data?.address?.pincode?.uid,\n      },\n      city: { name: data?.address?.city?.name, uid: data?.address?.city?.uid },\n      state: \"\",\n      latitude: data?.address?.latitude ? `${parseFloat(data?.address?.latitude).toFixed(4)}` : \"\",\n      longitude: data?.address?.longitude\n        ? `${parseFloat(data?.address?.longitude).toFixed(4)}`\n        : \"\",\n    },\n  };\n};\n\nexport const enrichReferenceDetailsObj = (data: any, loanId: string, stageId: string) => {\n  return {\n    uid: data?.uid,\n    isActive: data?.isActive,\n    loan: { uid: loanId },\n    stage: { uid: stageId },\n    referenceName: data?.referenceName,\n    knowForHowManyYear: data?.knownInYears ? Number(data?.knownInYears) : null,\n    smNatureOfRelationship: data?.relationshipNature,\n    mobileNo: data?.mobileNo,\n    country_code: \"+91\",\n    address: {\n      uid: data?.address?.uid,\n      address: data?.address?.address,\n      pincode: { uid: data?.address?.pincode?.uid },\n      city: { uid: data?.address?.city?.uid },\n      latitude: data?.address?.latitude ? Number(data?.address?.latitude) : null,\n      longitude: data?.address?.longitude ? Number(data?.address?.longitude) : null,\n    },\n  };\n};\n\nconst prepareDocSections = (documentSections: IUploadedDocumentSection[]) => {\n  const sections = documentSections.map((docSection: any) => ({\n    uid: docSection.uid ? docSection.uid : null,\n    section: docSection.code,\n    fileName: docSection.fileName,\n    fileType: docSection.contentType,\n    thumbUrl: docSection.thumbUrl,\n    url: docSection.url,\n    meta: docSection?.meta ? JSON.stringify(docSection?.meta) : \"\",\n    isActive: docSection.isActive,\n  }));\n\n  return sections;\n};\n\nexport const enrichPersonalDiscussionRecordings = (\n  documents: IDocumentInfo[],\n  payloadInfo: {\n    loanUid: string;\n    applicantUid: string;\n    stageUid: string;\n  }\n) => {\n  const payload = documents.map((document) => {\n    return {\n      uid: document.uid ?? null,\n      docType: {\n        uid: document.documentUid,\n      },\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      applicant: {\n        uid: payloadInfo.applicantUid, // uid of the applicant selected on stage initiation\n      },\n      stage: {\n        uid: payloadInfo.stageUid ?? \"\",\n      },\n      loanSectionKey: LOAN_SECTION_KEY_TYPES.applicants,\n      docCategory: DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_OTHER_DOCUMENTS,\n      documentSections: prepareDocSections(document.documentSectionUrls),\n      isActive: document.isActive,\n    };\n  });\n\n  //send only those document info which have document section URLs\n  const filteredPayloadBySectionUrl = payload.filter((document) => {\n    let validForUpload = false;\n    for (let idx = 0; idx < document.documentSections.length; idx++) {\n      if (document.documentSections[idx].url) validForUpload = true;\n    }\n    return validForUpload;\n  });\n\n  return filteredPayloadBySectionUrl;\n};\n\nexport const prepareDocumentSectionStructureForPDRecordings = (sections: any) => {\n  const preparedStructure: ISavedDocumentSections[] = sections.map((docSection: any) => ({\n    uid: docSection.uid,\n    fileName: docSection.fileName,\n    fileType: docSection.fileType,\n    section: docSection.section,\n    sectionName: docSection.sectionName,\n    thumbUrl: docSection.thumbUrl,\n    url: docSection.url,\n    isActive: docSection.isActive,\n  }));\n\n  return preparedStructure.length\n    ? preparedStructure\n    : [\n        {\n          uid: \"\",\n          fileName: \"\",\n          fileType: \"\",\n          section: \"\",\n          sectionName: \"\",\n          thumbUrl: \"\",\n          url: \"\",\n          isActive: false,\n        },\n      ];\n};\n\nexport const structSavedDocStrucutureForPersonalDiscussionRecordings = (document: any) => {\n  return {\n    uid: document.uid,\n    attributes: {},\n    dob: \"\",\n    docCategory: document.docCategory,\n    docFor: document.docFor,\n    docNo: \"\",\n    docType: { ...document.docType },\n    documentSections: prepareDocumentSectionStructureForPDRecordings(document.documentSections),\n    loanSectionKey: document.loanSectionKey,\n    isActive: document.isActive,\n  };\n};\n","import React, {\n  forwardRef,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n} from \"react\";\n\n// --------- ---------- //\nimport Address from \"components/Address\";\nimport InputBox from \"components/InputBox\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport InputAddon from \"components/InputAddon/InputAddon\";\nimport Text from \"components/Text/Text\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { INPUT_STYLE_TYPE, PAGE_MODE, VARIANTS } from \"utils/Constant\";\nimport SaveComponent from \"components/Save/SaveComponent\";\n\nexport interface IReferenceDetailsRef {\n  props: IProps;\n  save: () => IReferenceData | undefined;\n  remove: () => any;\n  onCancel: () => any;\n  resetValidator: () => any;\n}\n\nexport interface IReferenceData {\n  uid?: string;\n  key?: string;\n  isActive?: boolean;\n  referenceName?: string;\n  knownInYears?: string;\n  mobileNo?: string;\n  relationshipNature?: string;\n  address?: { uid?: string; address?: string; pincode?: any; city?: any; state?: string };\n}\n\ninterface IProps {\n  data?: IReferenceData;\n  title?: string;\n  titleArgs?: any;\n  isSectionSaveWrapped?: boolean;\n  cardNumber?: number;\n  renderHeaderContent?: () => any;\n  headerContainerClassName?: string;\n  className?: string;\n  isLoading?: boolean;\n  pageMode?: string;\n  dropdownOption?: any;\n  //\n  onRemoveReferenceDetails?: () => any;\n  onSaveReferenceDetails?: () => any;\n  onCancelReferenceDetails?: () => any;\n}\n\nexport const initialReferenceData = {\n  uid: \"\",\n  key: Math.random().toString(36).substring(2),\n  isActive: true,\n  referenceName: \"\",\n  knownInYears: \"\",\n  mobileNo: \"\",\n  relationshipNature: \"\",\n  address: {\n    uid: \"\",\n    address: \"\",\n    pincode: { name: \"\", uid: \"\" },\n    city: { name: \"\", uid: \"\" },\n    state: \"\",\n  },\n};\n\nconst ReferenceDetails = forwardRef<IReferenceDetailsRef, IProps>((props, ref) => {\n  const {\n    data = initialReferenceData,\n    pageMode = PAGE_MODE.EDIT,\n    isLoading,\n    className,\n    title,\n    titleArgs,\n    dropdownOption,\n    renderHeaderContent,\n    headerContainerClassName,\n    //\n    isSectionSaveWrapped,\n    cardNumber,\n    onRemoveReferenceDetails,\n    onSaveReferenceDetails,\n    onCancelReferenceDetails,\n  } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IReferenceData>(data);\n  const [sectionMode, setSectionMode] = useState<string>(PAGE_MODE.VIEW);\n\n  // error handling states\n\n  // --------------------- ref ---------------------------- //\n\n  const addressRef = useRef<any>(null);\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  const menuModel = [\n    {\n      className: \"\",\n      label: \"Remove\",\n      command: () => {\n        onRemoveReferenceDetails?.();\n      },\n      disabled: cardNumber === 0,\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    props: props,\n    save: onSave,\n    remove: onRemove,\n    onCancel: onCancel,\n    resetValidator: resetValidator,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onEdit = () => {\n    setSectionMode(PAGE_MODE.EDIT);\n  };\n\n  const onCancel = () => {\n    setSectionMode(PAGE_MODE.VIEW);\n    resetValidator();\n\n    if (isSectionSaveWrapped) {\n      onCancelReferenceDetails?.();\n    }\n  };\n\n  const onRemove = () => {\n    setPageObj((prevState: IReferenceData) => {\n      return {\n        ...prevState,\n        isActive: false,\n      };\n    });\n\n    return { ...pageObj, isActive: false };\n  };\n\n  const onSave = () => {\n    const addressData = addressRef?.current?.save();\n    if (!validateForm() || !addressData) {\n      return;\n    }\n\n    return { ...pageObj, address: { ...addressData, uid: pageObj?.address?.uid } };\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n\n    addressRef?.current?.resetValidator();\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state } = pageObj?.address ?? {};\n    return {\n      address,\n      pincode,\n      city,\n      state,\n    };\n  }, [pageObj?.address]);\n\n  const renderAddress = () => {\n    return (\n      <div className=\"flex flex-col space-y-4 w-full\">\n        <Address\n          pageMode={isSectionSaveWrapped ? sectionMode : pageMode}\n          ref={addressRef}\n          data={addressData}\n          variant={VARIANTS.QUATERNARY}\n        ></Address>\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    const { referenceName, knownInYears, mobileNo, relationshipNature } = pageObj;\n\n    return (\n      <React.Fragment>\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5 w-full\">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.reference.details.name\"}\n              name=\"referenceName\"\n              className=\"\"\n              value={referenceName}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `referenceName`,\n                referenceName,\n                \"mandatory|checkString|max:30\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.reference.details.known.how.many.years\"}\n              name=\"knownInYears\"\n              className=\"text-right\"\n              value={knownInYears}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `knownInYears`,\n                knownInYears,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputAddon\n              label={\"label.reference.details.mobile.number\"}\n              name=\"mobileNo\"\n              value={mobileNo}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                \"mobileNo\",\n                mobileNo,\n                \"mandatory|onlyInteger|checkNumber|phoneNumber\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.reference.details.nature.of.relationship\"}\n              name=\"relationshipNature\"\n              value={relationshipNature}\n              onChange={handleChange}\n              options={dropdownOption?.NATURE_OF_RELATIONSHIP}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n            />\n          </div>\n        </div>\n        {renderAddress()}\n      </React.Fragment>\n    );\n  };\n\n  const renderMain = () => {\n    return (\n      <React.Fragment>\n        <div\n          className={` flex items-center justify-between w-full  ${headerContainerClassName ?? \"\"}`}\n        >\n          {renderHeaderContent ? (\n            renderHeaderContent?.()\n          ) : (\n            <Text\n              label={title}\n              args={titleArgs}\n              className=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n            />\n          )}\n        </div>\n\n        <AclGuard\n          override={{\n            read: isSectionSaveWrapped\n              ? sectionMode === PAGE_MODE.VIEW\n              : pageMode === PAGE_MODE.VIEW,\n          }}\n        >\n          {renderContent()}\n        </AclGuard>\n      </React.Fragment>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className={`w-full h-full flex flex-col justify-start items-start ${className ?? \"\"}`}>\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : isSectionSaveWrapped ? (\n        <SaveComponent\n          title={\"title.reference.details\"}\n          titleArgs={{ count: cardNumber }}\n          pageMode={sectionMode}\n          onCancel={onCancel}\n          onEdit={onEdit}\n          onSave={onSaveReferenceDetails}\n          kebabModel={menuModel}\n          className=\"w-full\"\n        >\n          {renderMain()}\n        </SaveComponent>\n      ) : (\n        renderMain()\n      )}\n    </div>\n  );\n});\n\nReferenceDetails.defaultProps = {\n  data: {},\n};\n\nexport default ReferenceDetails;\n","import React, {\n  Fragment,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport Address from \"components/Address\";\nimport AutoComplete from \"components/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport DocumentUploader, {\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  initialDocInfo,\n} from \"components/DocumentUploader\";\nimport InputAddon from \"components/InputAddon\";\nimport InputBox from \"components/InputBox\";\nimport InputError from \"components/InputError\";\nimport InputTextArea from \"components/InputTextArea\";\nimport MenuBox from \"components/MenuBox\";\nimport RadioButton from \"components/RadioButton\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport { ToastPositionType } from \"primereact/toast\";\n\n// --------- ---------- //\nimport ReferenceDetails, {\n  IReferenceData,\n  IReferenceDetailsRef,\n  initialReferenceData,\n} from \"../ReferenceDetails\";\n\n// --------- ---------- //\nimport { numberFormatter } from \"locale\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\n// --------- ---------- //\nimport BusinessService from \"services/BusinessService\";\nimport BankAccountDetailsService from \"services/transaction/DDE/BankAccountDetailsService\";\n\n// --------- ---------- //\nimport {\n  calculateDateDifference,\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\n\nimport { initialLoanDocsInfo } from \"views/transaction/PageDDE/Login/Helper\";\n\n// --------- ---------- //\n\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\nimport {\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  EMPLOYMENT_TYPE,\n  INDUSTRY_TYPE,\n  INPUT_STYLE_TYPE,\n  OCCUPATION_TYPE,\n  PAGE_MODE,\n  RENT_MODE,\n  SECTION_NAME,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  VARIANTS,\n  YES_NO,\n  YES_NO_OPTIONS,\n} from \"utils/Constant\";\n\nexport interface IEmploymentData {\n  uid?: string;\n  key?: string;\n  isActive?: boolean;\n  employmentType?: string;\n  industry?: string;\n  businessCategory?: string;\n  businessType?: string;\n  orgName?: string;\n  totalExpInYear?: string;\n  dateOfJoining?: any;\n  yearsInCurrentEmp?: string;\n  noOfEmp?: string;\n  businessConstitution?: string;\n  designation?: string;\n  monthlyGrossSalary?: string;\n  monthlyDeductions?: string;\n  monthlyNetSalary?: string;\n  annualBonus?: string;\n  performanceIncentive?: string;\n  establishmentName?: string;\n  businessOwnerShip?: string;\n  yearsInCurrentBusiness?: string;\n  totalWorkExp?: string;\n  businessInCurrentLoc?: string;\n  businessManagedBy?: string;\n  resiCumOffice?: string;\n  sizeOfBusinessPremises?: string;\n  businessLocation?: string;\n  structureType?: string;\n  noOfEmpAtVisit?: string;\n  noOfOperationalDays?: string;\n  businessSeasonality?: string;\n  salaryPaidToEmp?: string;\n  creditorCycle?: string;\n  serviceOffered?: string;\n  rawMaterials?: string;\n  avgDailySales?: string;\n  lastSixMonthAvgMonthlySales?: string;\n  lastSixMonthHighestMonthlySales?: string;\n  lastSixMonthLowestMonthlySales?: string;\n  lastSixMonthAvgMonthlyPurchase?: string;\n  avgExpense?: string;\n  estimateGrossMargin?: string;\n  netMargin?: string;\n  stockSeenAtVisit?: string;\n  approachRoad?: string;\n  assetsInPremises?: string;\n  commentOnBusiness?: string;\n  tenantName?: string;\n  tenantMobileNo?: string;\n  propertyOwnedBy?: string;\n  tenantType?: string;\n  areaOfProperty?: string;\n  rentAmount?: string;\n  rentPaidSinceMonths?: string;\n  rentAgreement?: string;\n  rentalAgreementDate?: string;\n  rentalStartDate?: string;\n  rentMode?: string;\n  rentReceiptBank?: { name: string; uid: string };\n  rentBankAccount?: string;\n  lastOneMonthAmountCollected?: string;\n  secondLastMonthAmountCollected?: string;\n  thirdLastMonthAmountCollected?: string;\n  tenureRentInMonths?: string;\n  escalation?: string;\n  remark?: string;\n  firstGenerationBusiness?: string;\n\n  //address\n  address?: {\n    uid?: string;\n    address?: string;\n    pincode?: any;\n    city?: any;\n    state?: string;\n    latitude?: string;\n    longitude?: string;\n  };\n\n  //reference\n  referenceData?: any;\n  loanDocuments?: any;\n}\n\nexport interface IDeleteExistingDocsInApi {\n  deletedReferences: IReferenceData[];\n  deletedDocsAndRecordings: IDocumentInfo[];\n}\n\nexport interface IEmploymentDetailsRef {\n  props: IProps;\n  save: () => IEmploymentData | undefined;\n  remove: () => IEmploymentData | undefined;\n  onCancel: () => any;\n  resetValidator: () => any;\n  getSelectedEmploymentType: () => any;\n  onSuccess: () => void;\n}\n\ninterface IProps {\n  data?: IEmploymentData;\n  className?: string;\n  isLoading?: boolean;\n  children?: JSX.Element;\n  documentCategory?: {\n    salaryDocumentCategory?: string;\n    businessDocumentCategory?: string;\n    recordingDocumentCategory?: string;\n  };\n  cardNumber?: number;\n  dropdownOption?: any;\n  onSaveEmploymentDetails?: () => any;\n  onRemoveEmploymentDetails?: () => any;\n  onCancelEmploymentDetails?: () => any;\n}\n\nconst dynamicEmploymentSectionData = {\n  //\n  industry: \"\",\n  businessCategory: \"\",\n  businessType: \"\",\n\n  // salaried\n  orgName: \"\",\n  totalExpInYear: \"\",\n  dateOfJoining: \"\",\n  yearsInCurrentEmp: \"\",\n  noOfEmp: \"\",\n  businessConstitution: \"\",\n  designation: \"\",\n  monthlyGrossSalary: \"\",\n  monthlyDeductions: \"\",\n  monthlyNetSalary: \"\",\n  annualBonus: \"\",\n  performanceIncentive: \"\",\n\n  // self employed\n  establishmentName: \"\", // not added\n  businessOwnerShip: \"\",\n  yearsInCurrentBusiness: \"\", // not added\n  totalWorkExp: \"\", // not added\n  businessInCurrentLoc: \"\",\n  businessManagedBy: \"\",\n  resiCumOffice: \"\",\n  sizeOfBusinessPremises: \"\",\n  businessLocation: \"\",\n  structureType: \"\",\n  noOfEmpAtVisit: \"\",\n  noOfOperationalDays: \"\",\n  businessSeasonality: \"\",\n  salaryPaidToEmp: \"\",\n  creditorCycle: \"\",\n  serviceOffered: \"\",\n  rawMaterials: \"\",\n  avgDailySales: \"\",\n  lastSixMonthAvgMonthlySales: \"\",\n  lastSixMonthHighestMonthlySales: \"\",\n  lastSixMonthLowestMonthlySales: \"\",\n  lastSixMonthAvgMonthlyPurchase: \"\",\n  avgExpense: \"\",\n  estimateGrossMargin: \"\",\n  netMargin: \"\",\n  stockSeenAtVisit: \"\",\n  approachRoad: \"\",\n  assetsInPremises: \"\",\n  commentOnBusiness: \"\",\n  firstGenerationBusiness: \"\",\n\n  //self employed rental\n  tenantName: \"\",\n  tenantMobileNo: \"\",\n  propertyOwnedBy: \"\", // not added\n  tenantType: \"\",\n  areaOfProperty: \"\", // not added\n  rentAmount: \"\",\n  rentPaidSinceMonths: \"\",\n  rentAgreement: \"\",\n  rentalAgreementDate: \"\",\n  rentalStartDate: \"\",\n  rentMode: \"\",\n  rentReceiptBank: { name: \"\", uid: \"\" },\n  rentBankAccount: \"\",\n  lastOneMonthAmountCollected: \"\",\n  secondLastMonthAmountCollected: \"\",\n  thirdLastMonthAmountCollected: \"\",\n  tenureRentInMonths: \"\",\n  escalation: \"\",\n  remark: \"\",\n\n  // address\n  address: {\n    uid: \"\",\n    address: \"\",\n    pincode: { name: \"\", uid: \"\" },\n    city: { name: \"\", uid: \"\" },\n    state: \"\",\n    latitude: \"\",\n    longitude: \"\",\n  },\n\n  //\n  referenceData: [],\n  loanDocuments: [{ ...initialLoanDocsInfo }],\n};\n\nexport const initialEmploymentData = {\n  uid: \"\",\n  key: Math.random().toString(36).substring(2),\n  isActive: true,\n  employmentType: \"\",\n  ...dynamicEmploymentSectionData,\n};\n\nconst initialDocsAndRecordingData = {\n  ...initialDocInfo,\n  key: Math.random().toString().substring(2),\n};\n\nconst initialDeletedExistingDocsInApi: IDeleteExistingDocsInApi = {\n  deletedReferences: [],\n  deletedDocsAndRecordings: [],\n};\n\nconst EmploymentDetails = forwardRef<IEmploymentDetailsRef, IProps>((props, ref) => {\n  const {\n    data = initialEmploymentData,\n    isLoading,\n    className,\n    children,\n    cardNumber,\n    dropdownOption,\n    documentCategory = {\n      salaryDocumentCategory: DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_SALARIED_SALARY_PROOF,\n      businessDocumentCategory: DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BUSINESS_PROOF_PD,\n      recordingDocumentCategory: DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_EMPLOYMENT_RETAILS_RECORDING,\n    },\n    onSaveEmploymentDetails,\n    onRemoveEmploymentDetails,\n    onCancelEmploymentDetails,\n  } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IEmploymentData>(data);\n  const [pageMode, setPageMode] = useState<string>(PAGE_MODE.VIEW);\n  const [preventStateUpdateDependentOnEmpType, setPreventStateUpdateDependentOnEmpType] =\n    useState<boolean>(true);\n  const [renderConfig, setRenderConfig] = useState<any>({\n    disableFieldDependentOnRentMode: true,\n  });\n\n  const [referenceArray, setReferenceArray] = useState<IReferenceData[]>([\n    { ...initialReferenceData },\n  ]);\n  const [recordingDocsArray, setRecordingDocsArray] = useState<IDocumentInfo[]>([\n    { ...initialDocsAndRecordingData },\n  ]);\n  const [salaryDocsList, setSalaryDocsList] = useState<any>([]);\n  const [businessDocsList, setBusinessDocsList] = useState<any>([]);\n\n  const [isSuggestionLoading, setIsSuggestionLoading] = useState(false);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<\n    {\n      name: string | undefined;\n      code: string | undefined;\n    }[]\n  >([]);\n\n  //below state is to store the deleted list of references and documents & recordings which are saved in BackEnd\n  const [deletedListOfExistingDocsInApi, setDeletedListOfExistingDocsInApi] =\n    useState<IDeleteExistingDocsInApi>(initialDeletedExistingDocsInApi);\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // --------------------- ref ---------------------------- //\n\n  const addressRef = useRef<any>(null);\n  const referenceDetailsRef = useRef<IReferenceDetailsRef[]>([]);\n  const salaryProofDocumentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n  const businessProofDocumentUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n  const recordingDocsUploaderRef = useRef<IDocumentUploaderRef[]>([]);\n  const innerCardMenuRef = useRef<any>(null);\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  const menuModel = [\n    {\n      className: \"\",\n      label: \"Remove\",\n      command: () => {\n        onRemoveEmploymentDetails?.();\n      },\n      disabled: cardNumber === 0,\n    },\n  ];\n\n  const innerCardMenuModel: any[] = [\n    {\n      items: [],\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    updateStateDependentOnDataChange();\n  }, [data]);\n\n  useEffect(() => {\n    resetValidator();\n    if (pageObj?.employmentType && !preventStateUpdateDependentOnEmpType) {\n      updateStateDependentOnEmploymentType();\n    }\n  }, [pageObj?.employmentType]);\n\n  useEffect(() => {\n    resetValidator();\n    updateStateDependentOnRentAgreement();\n  }, [pageObj?.rentAgreement]);\n\n  useEffect(() => {\n    if (pageObj?.rentMode) {\n      resetValidator();\n      updateStateDependentOnRentMode();\n    }\n  }, [pageObj?.rentMode]);\n\n  useEffect(() => {\n    if (pageObj?.dateOfJoining) {\n      const yearInCurrentEmp = calculateDateDifference(new Date(), pageObj?.dateOfJoining)?.years;\n      setPageObj((prevState: IEmploymentData) => {\n        return { ...prevState, yearsInCurrentEmp: `${yearInCurrentEmp}` };\n      });\n    }\n  }, [pageObj?.dateOfJoining]);\n\n  useEffect(() => {\n    if (pageObj?.monthlyGrossSalary || pageObj?.monthlyDeductions) {\n      const { monthlyGrossSalary, monthlyDeductions } = pageObj;\n\n      setPageObj((prevState: any) => {\n        return {\n          ...prevState,\n          monthlyNetSalary: numberFormatter(\n            currencyFormatToNumber(monthlyGrossSalary ?? \"\") -\n              currencyFormatToNumber(monthlyDeductions ?? \"\"),\n            \"en-IN\",\n            0\n          ),\n        };\n      });\n    }\n  }, [pageObj?.monthlyGrossSalary, pageObj?.monthlyDeductions]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    props: props,\n    save: onSave,\n    remove: onRemove,\n    onCancel: onCancel,\n    getSelectedEmploymentType: getSelectedEmploymentType,\n    resetValidator: resetValidator,\n    onSuccess: onSuccess,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getCoreBusinessCategoryByIndustry = async () => {\n    return await BusinessService.getCoreBusinessCategory(\n      0,\n      1000,\n      `industryType.code=${INDUSTRY_TYPE.RENTAL_INCOME_PROPERTY_LEASING}`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n        return res?.data?.results[0];\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const validateReference = () => {\n    let allReferencesValid = true;\n\n    if (referenceDetailsRef?.current) {\n      allReferencesValid = getAllReferenceData()?.every((data: any) => {\n        return data !== undefined && Object.keys(data).length > 0;\n      });\n    } else {\n      allReferencesValid = false;\n    }\n    return allReferencesValid;\n  };\n\n  const validateRecordingDocs = () => {\n    let allRecordingDocsValid = true;\n    if (recordingDocsUploaderRef?.current) {\n      allRecordingDocsValid = getAllRecordingDocsUploaderData()?.every((data: any) => {\n        return data !== undefined && Object.keys(data).length > 0;\n      });\n    } else {\n      allRecordingDocsValid = false;\n    }\n\n    return allRecordingDocsValid;\n  };\n\n  const resetAllDocUploaders = () => {\n    salaryProofDocumentUploaderRef?.current?.resetDocUpload();\n    businessProofDocumentUploaderRef?.current?.resetDocUpload();\n    for (let idx = 0; idx < recordingDocsArray.length; idx++) {\n      if (recordingDocsUploaderRef?.current?.[idx]) {\n        recordingDocsUploaderRef?.current?.[idx]?.resetDocUpload();\n      }\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // disable state update dependent on empType  preventing state\n    if (e.target.name === \"employmentType\") {\n      setPreventStateUpdateDependentOnEmpType(false);\n    }\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const handleAmountInputChange = (e: any) => {\n    const unformattedValue: number = currencyFormatToNumber(e.target.value);\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: numberFormatter(unformattedValue, \"en-IN\", 0),\n      };\n    });\n  };\n\n  const handleFirstGenerationBusiness = (e: any, type: string) => {\n    setPageObj((prevState: IEmploymentData) => {\n      return { ...prevState, firstGenerationBusiness: type };\n    });\n  };\n\n  const handleAutoCompleteChange = (e: any) => {\n    const { name, value } = e.target;\n    if (typeof value === \"object\") {\n      setPageObj((prevPageObj: any) => ({\n        ...prevPageObj,\n        [name]: { name: value?.name, uid: value?.uid },\n      }));\n    } else {\n      setPageObj((prevPageObj) => ({\n        ...prevPageObj,\n        [name]: { name: value },\n      }));\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCancel = () => {\n    setPageMode(PAGE_MODE.VIEW);\n    resetValidator();\n    resetReferenceValidator();\n    resetAddressValidator();\n\n    onCancelEmploymentDetails?.();\n  };\n\n  const onRemove = () => {\n    const allData: any = getAllData();\n    return { ...allData, isActive: false };\n  };\n\n  const onEdit = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  const onSaveSelfEmployedRentalIncome = () => {\n    const addressData: any = addressRef?.current?.save();\n    // const uploadedDocsInfo = businessProofDocumentUploaderRef?.current?.getUploadedData();\n    // const recordingDocsValidation = validateRecordingDocs();\n\n    if (!validateForm() || !addressData) {\n      return;\n    }\n\n    return getAllData();\n  };\n\n  const onSaveSalariedOrSelfEmployed = () => {\n    const uploadedDocsInfo =\n      pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SALARIED\n        ? salaryProofDocumentUploaderRef?.current?.getUploadedData()\n        : businessProofDocumentUploaderRef?.current?.getUploadedData();\n\n    const referenceValidation = validateReference();\n    const recordingDocsValidation = validateRecordingDocs();\n\n    if (\n      !validateForm() ||\n      !referenceValidation ||\n      !uploadedDocsInfo ||\n      (pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SALARIED &&\n        !recordingDocsValidation)\n    ) {\n      return;\n    }\n\n    return getAllData();\n  };\n\n  const onSave = () => {\n    if (pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME) {\n      return onSaveSelfEmployedRentalIncome();\n    } else {\n      return onSaveSalariedOrSelfEmployed();\n    }\n  };\n\n  const onAddMoreReferenceDetails = () => {\n    const newReferenceListItem = {\n      ...initialReferenceData,\n      key: Math.random().toString(36).substring(2),\n    };\n    setReferenceArray((prevState: any) => [...prevState, newReferenceListItem]);\n  };\n\n  const onAddMoreDocuments = () => {\n    const newRecordingDocListItem = {\n      ...initialDocInfo,\n      key: Math.random().toString(36).substring(2),\n    };\n    setRecordingDocsArray((prevState: any) => [...prevState, newRecordingDocListItem]);\n  };\n\n  const onRemoveReferenceDetail = (index: number) => {\n    const deletedReference = referenceDetailsRef?.current?.[index]?.remove();\n    setDeletedListOfExistingDocsInApi((prev) => {\n      return {\n        ...prev,\n        deletedReferences: [...prev.deletedReferences, deletedReference],\n      };\n    });\n    const newReferenceArr = referenceArray.filter((_, idx: number) => idx !== index);\n    setReferenceArray((prevState: any) => [...newReferenceArr]);\n  };\n\n  const onRemoveRecordingDocs = (index: number) => {\n    const deletedDocOrRecording = recordingDocsUploaderRef?.current?.[index]?.getUploadedData();\n\n    if (deletedDocOrRecording && deletedDocOrRecording?.uid) {\n      deletedDocOrRecording.isActive = false;\n      setDeletedListOfExistingDocsInApi((prev) => {\n        return {\n          ...prev,\n          deletedDocsAndRecordings: [...prev.deletedDocsAndRecordings, deletedDocOrRecording],\n        };\n      });\n    }\n\n    recordingDocsUploaderRef.current = recordingDocsUploaderRef?.current?.filter(\n      (_, idx: number) => idx !== index\n    );\n    const newRecordingDocsArr = recordingDocsArray.filter((_, idx: number) => idx !== index);\n    setRecordingDocsArray((prevState: any) => [...newRecordingDocsArr]);\n  };\n\n  const onClickMenu = (event: any, index?: number, type?: string) => {\n    // dynamic menu options array\n    const dynamicActionMenuOptions: any[] = [];\n\n    dynamicActionMenuOptions.push(\n      // --------------------Stop Delegation ------------------------  //\n      {\n        label: \"Remove\",\n        //icon: //JSX element,\n        className: \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n        command: () => {\n          // functionality\n          if (type && type === SECTION_NAME.REFERENCE && typeof index === \"number\") {\n            onRemoveReferenceDetail(index);\n          }\n\n          if (type && type === SECTION_NAME.DOCUMENTS && typeof index === \"number\") {\n            onRemoveRecordingDocs(index);\n          }\n        },\n      }\n    );\n\n    // common menu options\n    const menu: any[] = [...dynamicActionMenuOptions];\n\n    innerCardMenuModel[0].items = [...menu];\n    innerCardMenuRef?.current?.show(event);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n  const getRentalIncomeFinalData = () => {\n    const addressData: any = addressRef?.current?.save();\n    const uploadedDocsInfo = businessProofDocumentUploaderRef?.current?.getUploadedData();\n\n    let loanDocumentsProof = [...getAllRecordingDocsUploaderData()];\n    if (uploadedDocsInfo) {\n      loanDocumentsProof = [uploadedDocsInfo, ...loanDocumentsProof];\n    }\n    return {\n      ...pageObj,\n      address: { uid: pageObj?.address?.uid, ...addressData },\n      loanDocumentsProof: loanDocumentsProof,\n    };\n  };\n\n  const getSalariedOrSelfEmployedFinalData = () => {\n    const uploadedDocsInfo =\n      pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SALARIED\n        ? salaryProofDocumentUploaderRef?.current?.getUploadedData()\n        : businessProofDocumentUploaderRef?.current?.getUploadedData();\n    let loanDocumentsProof = [...getAllRecordingDocsUploaderData()];\n    if (uploadedDocsInfo) {\n      loanDocumentsProof = [uploadedDocsInfo, ...loanDocumentsProof];\n    }\n    return {\n      ...pageObj,\n      referenceData: getAllReferenceData(),\n      loanDocumentsProof: loanDocumentsProof,\n    };\n  };\n\n  const getAllData = () => {\n    if (pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME) {\n      return getRentalIncomeFinalData();\n    } else {\n      return getSalariedOrSelfEmployedFinalData();\n    }\n  };\n\n  const getAllReferenceData = () => {\n    const referenceData = referenceDetailsRef?.current\n      ?.filter((_, idx: number) => referenceDetailsRef?.current?.[idx])\n      ?.map((_, index: number) => {\n        return referenceDetailsRef?.current?.[index]?.save() as IReferenceDetailsRef;\n      });\n\n    return [...referenceData, ...deletedListOfExistingDocsInApi.deletedReferences];\n  };\n\n  const getAllRecordingDocsUploaderData = () => {\n    const recordingDocsUploaderData = recordingDocsUploaderRef?.current\n      ?.filter((_, idx: number) => recordingDocsUploaderRef?.current?.[idx])\n      ?.map((_, index: number) => {\n        return recordingDocsUploaderRef?.current?.[index]?.getUploadedData();\n      });\n    if (recordingDocsUploaderData) {\n      return [\n        ...recordingDocsUploaderData,\n        ...deletedListOfExistingDocsInApi.deletedDocsAndRecordings,\n      ];\n    }\n    return [...deletedListOfExistingDocsInApi.deletedDocsAndRecordings];\n  };\n\n  const onSuccess = () => {\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const resetReferenceValidator = () => {\n    referenceDetailsRef.current.forEach((reference: IReferenceDetailsRef, index: number) => {\n      referenceDetailsRef?.current?.[index]?.resetValidator() as IReferenceDetailsRef;\n    });\n  };\n\n  const resetAddressValidator = () => {\n    addressRef?.current?.resetValidator();\n  };\n\n  const getSelectedEmploymentType = () => {\n    return pageObj?.employmentType;\n  };\n\n  const checkBusinessTypeDisabled = () => {\n    if (\n      pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SALARIED ||\n      pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const retrieveBusinessTypeInfo = () => {\n    if (pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SALARIED) {\n      return OCCUPATION_TYPE.OCCUPATION_TYPE_SALARIED;\n    }\n\n    if (pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME) {\n      return OCCUPATION_TYPE.OCCUPATION_TYPE_RENTAL_INCOME;\n    }\n\n    return \"\";\n  };\n\n  const updateStateDependentOnDataChange = () => {\n    setPreventStateUpdateDependentOnEmpType(true);\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n\n      setReferenceArray([...(data.referenceData ?? [{ ...initialReferenceData }])]);\n\n      const savedRecordingDocs: any[] = data?.loanDocuments?.filter(\n        (loanDoc: any, index: number) =>\n          loanDoc?.docCategory === DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_EMPLOYMENT_RETAILS_RECORDING\n      );\n      if (savedRecordingDocs?.length) {\n        setRecordingDocsArray(savedRecordingDocs);\n      }\n\n      const savedSalaryDocsList: any[] = data?.loanDocuments?.filter(\n        (loanDoc: any, index: number) =>\n          loanDoc?.docCategory === DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_SALARIED_SALARY_PROOF\n      );\n      if (savedSalaryDocsList?.length) {\n        setSalaryDocsList(savedSalaryDocsList);\n      }\n\n      const savedBusinessDocsList: any[] = data?.loanDocuments?.filter(\n        (loanDoc: any, index: number) =>\n          loanDoc?.docCategory === DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BUSINESS_PROOF_PD\n      );\n      if (savedBusinessDocsList?.length) {\n        setBusinessDocsList(savedBusinessDocsList);\n      }\n\n      setDeletedListOfExistingDocsInApi(initialDeletedExistingDocsInApi);\n    }\n  };\n\n  const updateStateDependentOnEmploymentType = async () => {\n    resetPageObj();\n    resetAllDocUploaders();\n    setBusinessDocsList([]);\n    setSalaryDocsList([]);\n    setRecordingDocsArray([{ ...initialDocInfo }]);\n    setReferenceArray([{ ...initialReferenceData }]);\n    setDeletedListOfExistingDocsInApi(initialDeletedExistingDocsInApi);\n    setPageObj((prevState: IEmploymentData) => {\n      return {\n        ...prevState,\n        businessType: retrieveBusinessTypeInfo(),\n      };\n    });\n\n    if (pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME) {\n      const coreBusinessData: any = await getCoreBusinessCategoryByIndustry();\n      setPageObj((prevState: IEmploymentData) => {\n        return {\n          ...prevState,\n          industry: coreBusinessData?.industryType?.uid ?? \"\",\n          businessCategory: coreBusinessData?.uid ?? \"\",\n          resiCumOffice: YES_NO.YES,\n        };\n      });\n    }\n  };\n\n  const updateStateDependentOnRentAgreement = () => {\n    setPageObj((prevState: IEmploymentData) => {\n      return {\n        ...prevState,\n        rentalAgreementDate: \"\",\n      };\n    });\n  };\n\n  const updateStateDependentOnRentMode = () => {\n    if (pageObj?.rentMode === RENT_MODE.RENT_MODE_CASH) {\n      setRenderConfig((prevState: any) => {\n        return {\n          ...prevState,\n          disableFieldDependentOnRentMode: true,\n        };\n      });\n\n      setPageObj((prevState: IEmploymentData) => {\n        return {\n          ...prevState,\n          rentReceiptBank: { name: \"\", uid: \"\" },\n          rentBankAccount: \"\",\n          lastOneMonthAmountCollected: \"\",\n          secondLastMonthAmountCollected: \"\",\n          thirdLastMonthAmountCollected: \"\",\n          tenureRentInMonths: \"\",\n        };\n      });\n    } else {\n      setRenderConfig((prevState: any) => {\n        return {\n          ...prevState,\n          disableFieldDependentOnRentMode: false,\n        };\n      });\n    }\n  };\n\n  const searchAutoCompleteBank = async (event: any) => {\n    let suggestionsTemplate = [];\n    setIsSuggestionLoading(true);\n    try {\n      await BankAccountDetailsService.findBankName(\n        0,\n        10,\n        `name:lk=${event.query}&isActive=true`\n      ).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data.results];\n          setIsSuggestionLoading(false);\n        }\n      });\n    } catch (error) {\n      setPosition(\"top-right\");\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: undefined, code: undefined, uid: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const resetPageObj = () => {\n    setPageObj((prevState: IEmploymentData) => {\n      return { ...prevState, ...dynamicEmploymentSectionData };\n    });\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const itemBankTemplate = (item: any) => {\n    if (!item) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item?.name} />\n      </div>\n    );\n  };\n\n  const renderReferenceHeaderContent = (index: number) => {\n    return (\n      <div className={` flex items-center justify-between w-full  `}>\n        <Text\n          label={\"title.reference.details\"}\n          args={{ count: index + 1 }}\n          className=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n\n        <div>\n          <ButtonBox\n            buttonType={BUTTON_TYPE.MENU}\n            onClick={(e: any) => onClickMenu(e, index, SECTION_NAME.REFERENCE)}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderReferenceDetails = () => {\n    return (\n      <React.Fragment>\n        <div className=\"flex flex-col gap-4\">\n          {referenceArray?.map((reference: any, index: number) => (\n            <Fragment key={reference?.uid ?? reference?.key}>\n              {index !== 0 ? <hr /> : null}\n              <ReferenceDetails\n                renderHeaderContent={() => renderReferenceHeaderContent(index)}\n                data={reference}\n                pageMode={pageMode}\n                ref={(refValue) => {\n                  referenceDetailsRef.current[index] = refValue as IReferenceDetailsRef;\n                }}\n                dropdownOption={dropdownOption}\n              />\n            </Fragment>\n          ))}\n        </div>\n\n        <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n          <ButtonBox\n            buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n            customLabel={\"Add Another Reference Detail\"}\n            onClick={onAddMoreReferenceDetails}\n          />\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state, latitude, longitude } = pageObj?.address ?? {};\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      latitude,\n      longitude,\n    };\n  }, [pageObj?.address]);\n\n  const renderAddressSection = () => {\n    // data to pre populate address fields\n    return (\n      <Address\n        pageMode={pageMode}\n        ref={addressRef}\n        data={addressData}\n        variant={VARIANTS.SECONDARY}\n        isLatLong\n      />\n    );\n  };\n\n  const renderBusinessProofUploader = (options: { mandatory: boolean }) => {\n    return (\n      <div className=\"flex flex-col space-y-4\">\n        <TextData\n          label={\n            options?.mandatory\n              ? \"label.document.business.proof\"\n              : \"label.document.business.proofNotMandatory\"\n          }\n          value={\"License is mandatory\"}\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n        <div>\n          <DocumentUploader\n            ref={businessProofDocumentUploaderRef}\n            savedDocument={businessDocsList?.[0] ? businessDocsList?.[0] : {}}\n            mode={pageMode}\n            queryParamForDocList={documentCategory?.businessDocumentCategory ?? \"\"}\n            mandatoryDocUpload={options?.mandatory}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderRecordingsOrDocuments = (options: { mandatory: boolean }) => {\n    return (\n      <div className=\"flex flex-col space-y-4\">\n        <TextData\n          label={\n            options?.mandatory\n              ? \"label.document.recordings.and.documents\"\n              : \"label.document.recordings.and.documentsNotMandatory\"\n          }\n          value={\"Audio minimum 5 mins, video minimum 25 sec, photos minimum 5 are mandatory\"}\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n\n        {recordingDocsArray.map((recordingDoc: any, index: number) => (\n          <Fragment key={recordingDoc?.uid ?? recordingDoc?.key}>\n            {index !== 0 ? <hr /> : null}\n            <div className={` flex items-start justify-between w-full `}>\n              <DocumentUploader\n                ref={(refValue) => {\n                  recordingDocsUploaderRef.current[index] = refValue as IDocumentUploaderRef;\n                }}\n                savedDocument={recordingDoc ?? {}}\n                mode={pageMode}\n                queryParamForDocList={documentCategory?.recordingDocumentCategory ?? \"\"}\n                mandatoryDocUpload={options?.mandatory}\n              />\n\n              <div>\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.MENU}\n                  onClick={(e: any) => onClickMenu(e, index, SECTION_NAME.DOCUMENTS)}\n                />\n              </div>\n            </div>\n          </Fragment>\n        ))}\n\n        <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n          <ButtonBox\n            buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n            customLabel={\"Add Another Document\"}\n            onClick={onAddMoreDocuments}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderSalaryProofUploader = () => {\n    return (\n      <div className=\"flex flex-col space-y-4\">\n        <TextData\n          label={\"label.document.salary.proof\"}\n          value={\"Attach Documents (PDF , JPG or PNG)\"}\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n        <div>\n          <DocumentUploader\n            ref={salaryProofDocumentUploaderRef}\n            savedDocument={salaryDocsList?.[0] ? salaryDocsList?.[0] : {}}\n            mode={pageMode}\n            queryParamForDocList={documentCategory?.salaryDocumentCategory ?? \"\"}\n            mandatoryDocUpload\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderSalariedEmployment = () => {\n    const {\n      orgName,\n      totalExpInYear,\n      dateOfJoining,\n      yearsInCurrentEmp,\n      noOfEmp,\n      businessConstitution,\n      designation,\n      monthlyGrossSalary,\n      monthlyDeductions,\n      monthlyNetSalary,\n      annualBonus,\n      performanceIncentive,\n    } = pageObj;\n\n    return (\n      <div className={`flex flex-col space-y-4 ${className}`}>\n        <TextData\n          label={\"label.employment.details.salaried.employee.details\"}\n          titleClass=\"text-primary-sideBarBgColor text-xs mb-1 font-bold\"\n        />\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5 \">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.name.of.organization\"}\n              placeholder={\"Enter Name of Organization\"}\n              name=\"orgName\"\n              className=\"\"\n              value={orgName}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `orgName`,\n                orgName,\n                \"mandatory|checkString|max:40\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.total.year.of.experience\"}\n              placeholder=\"Enter Total no of years\"\n              name=\"totalExpInYear\"\n              className=\"text-right\"\n              value={totalExpInYear}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `totalExpInYear`,\n                totalExpInYear,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SystemDatePicker\n              label={\"label.employment.details.date.of.joining\"}\n              name=\"dateOfJoining\"\n              onChange={handleChange}\n              value={dateOfJoining ? new Date(dateOfJoining) : null}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `dateOfJoining`,\n                dateOfJoining,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.years.in.current.employment\"}\n              name=\"yearsInCurrentEmp\"\n              className=\"text-right\"\n              value={yearsInCurrentEmp}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `yearsInCurrentEmp`,\n                yearsInCurrentEmp,\n                \"mandatory|checkNumber|max:3,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.number.of.employees\"}\n              name=\"noOfEmp\"\n              value={noOfEmp}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.NO_EMPLOYEE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(`noOfEmp`, noOfEmp, \"mandatory\")}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.constitution.of.business\"}\n              name=\"businessConstitution\"\n              value={businessConstitution}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.BUSINESS_CONSTITUTION_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `businessConstitution`,\n                businessConstitution,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.designation\"}\n              name=\"designation\"\n              className=\"\"\n              value={designation}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `designation`,\n                designation,\n                \"mandatory|checkString|max:20\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.gross.monthly.salary\"}\n              name=\"monthlyGrossSalary\"\n              className=\"text-right\"\n              value={monthlyGrossSalary}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `monthlyGrossSalary`,\n                monthlyGrossSalary,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.monthly.deductions\"}\n              placeholder=\"Enter Monthly Deductions\"\n              name=\"monthlyDeductions\"\n              className=\"text-right\"\n              value={monthlyDeductions}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `monthlyDeductions`,\n                monthlyDeductions,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.monthly.net.salary\"}\n              name=\"monthlyNetSalary\"\n              className=\"text-right\"\n              value={monthlyNetSalary}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `monthlyNetSalary`,\n                monthlyNetSalary,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.annual.bonus\"}\n              name=\"annualBonus\"\n              className=\"text-right\"\n              value={annualBonus}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `annualBonus`,\n                annualBonus,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.performance.linked.incentive\"}\n              name=\"performanceIncentive\"\n              className=\"text-right\"\n              value={performanceIncentive}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `performanceIncentive`,\n                performanceIncentive,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n        </div>\n\n        {renderSalaryProofUploader()}\n\n        {renderRecordingsOrDocuments({ mandatory: true })}\n\n        {renderReferenceDetails()}\n\n        {children}\n      </div>\n    );\n  };\n\n  const renderSelfEmployed = () => {\n    const {\n      establishmentName,\n      businessConstitution,\n      businessOwnerShip,\n      yearsInCurrentBusiness,\n      totalWorkExp,\n      businessInCurrentLoc,\n      businessManagedBy,\n      resiCumOffice,\n      sizeOfBusinessPremises,\n      businessLocation,\n      structureType,\n      noOfEmpAtVisit,\n      noOfEmp,\n      noOfOperationalDays,\n      businessSeasonality,\n      salaryPaidToEmp,\n      creditorCycle,\n      serviceOffered,\n      rawMaterials,\n      avgDailySales,\n      lastSixMonthAvgMonthlySales,\n      lastSixMonthHighestMonthlySales,\n      lastSixMonthLowestMonthlySales,\n      lastSixMonthAvgMonthlyPurchase,\n      avgExpense,\n      estimateGrossMargin,\n      netMargin,\n      stockSeenAtVisit,\n      approachRoad,\n      assetsInPremises,\n      commentOnBusiness,\n      firstGenerationBusiness,\n    } = pageObj;\n\n    return (\n      <div className={`flex flex-col space-y-4 ${className}`}>\n        <TextData\n          label={\"label.employment.details.self.employed.details\"}\n          titleClass=\"text-primary-sideBarBgColor text-xs mb-1 font-bold\"\n        />\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.name.of.establishment\"}\n              placeholder=\"Enter Name of Establishment\"\n              name=\"establishmentName\"\n              className=\"\"\n              value={establishmentName}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `establishmentName`,\n                establishmentName,\n                \"mandatory|max:50\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.constitution.of.business\"}\n              name=\"businessConstitution\"\n              value={businessConstitution}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.BUSINESS_CONSTITUTION_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `businessConstitution`,\n                businessConstitution,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.ownership.of.business.premises\"}\n              name=\"businessOwnerShip\"\n              value={businessOwnerShip}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.OWNERSHIP_OF_BUSINESS_PREMISES_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `businessOwnerShip`,\n                businessOwnerShip,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.years.in.current.business\"}\n              name=\"yearsInCurrentBusiness\"\n              className=\"text-right\"\n              value={yearsInCurrentBusiness}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `yearsInCurrentBusiness`,\n                yearsInCurrentBusiness,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.total.work.experience\"}\n              name=\"totalWorkExp\"\n              className=\"text-right\"\n              value={totalWorkExp}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `totalWorkExp`,\n                totalWorkExp,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.business.in.current.location\"}\n              name=\"businessInCurrentLoc\"\n              className=\"text-right\"\n              value={businessInCurrentLoc}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `businessInCurrentLoc`,\n                businessInCurrentLoc,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.business.managed.by\"}\n              name=\"businessManagedBy\"\n              className=\"\"\n              value={businessManagedBy}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `businessManagedBy`,\n                businessManagedBy,\n                \"mandatory|checkString|max:30\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.resi.cum.office\"}\n              name=\"resiCumOffice\"\n              value={resiCumOffice}\n              onChange={handleChange}\n              onBlur={validate}\n              options={YES_NO_OPTIONS}\n              optionLabel=\"label\"\n              optionValue=\"value\"\n              validation={simpleValidator?.current?.message(\n                `resiCumOffice`,\n                resiCumOffice,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.size.of.business.premises\"}\n              name=\"sizeOfBusinessPremises\"\n              className=\"text-right\"\n              value={sizeOfBusinessPremises}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `sizeOfBusinessPremises`,\n                sizeOfBusinessPremises,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.business.location\"}\n              name=\"businessLocation\"\n              value={businessLocation}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.BUSINESS_LOCATION_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `businessLocation`,\n                businessLocation,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.type.of.structure\"}\n              name=\"structureType\"\n              value={structureType}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.STRUCTURE_TYPE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `structureType`,\n                structureType,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.no.of.employees.seen.at.the.time.of.visit\"}\n              name=\"noOfEmpAtVisit\"\n              className=\"text-right\"\n              value={noOfEmpAtVisit}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `noOfEmpAtVisit`,\n                noOfEmpAtVisit,\n                \"checkNumber|max:80,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.number.of.employees\"}\n              name=\"noOfEmp\"\n              value={noOfEmp}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.NO_EMPLOYEE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(`noOfEmp`, noOfEmp, \"mandatory\")}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.no.of.days.operational\"}\n              name=\"noOfOperationalDays\"\n              className=\"text-right\"\n              value={noOfOperationalDays}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `noOfOperationalDays`,\n                noOfOperationalDays,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.business.seasonality\"}\n              name=\"businessSeasonality\"\n              value={businessSeasonality}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.SEASONALITY_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `businessSeasonality`,\n                businessSeasonality,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1 flex flex-col justify-start items-start space-y-1\">\n            <div className=\"flex items-top\">\n              <Text\n                label={\"label.employment.details.first.generation.business\"}\n                className=\"text-xs\"\n              />\n            </div>\n\n            <div className=\"flex justify-start items-center space-x-8\">\n              <div className=\"flex\">\n                <RadioButton\n                  hideLabel\n                  hideErrorRow\n                  name=\"firstGenerationBusiness\"\n                  className=\"flex items-center\"\n                  onChange={(e) => handleFirstGenerationBusiness(e, \"YES\")}\n                  value={firstGenerationBusiness}\n                  checked={firstGenerationBusiness === YES_NO.YES}\n                  disabled={pageMode === PAGE_MODE.VIEW}\n                />\n                <div className=\"ml-2 flex items-top\">\n                  <Text label={\"label.radioButton.yes\"} className=\"text-xs\" />\n                </div>\n              </div>\n\n              <div className=\"flex\">\n                <RadioButton\n                  hideLabel\n                  hideErrorRow\n                  name=\"firstGenerationBusiness\"\n                  className=\"flex items-center\"\n                  onChange={(e) => handleFirstGenerationBusiness(e, \"NO\")}\n                  value={firstGenerationBusiness}\n                  checked={firstGenerationBusiness === YES_NO.NO}\n                  disabled={pageMode === PAGE_MODE.VIEW}\n                />\n                <div className=\"ml-2 flex items-top\">\n                  <Text label={\"label.radioButton.no\"} className=\"text-xs\" />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"h-4 flex justify-start  items-center\">\n              <InputError\n                validation={simpleValidator?.current?.message(\n                  `firstGenerationBusiness`,\n                  firstGenerationBusiness,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.amount.of.salary.paid.employees\"}\n              name=\"salaryPaidToEmp\"\n              className=\"text-right\"\n              value={salaryPaidToEmp}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `salaryPaidToEmp`,\n                salaryPaidToEmp,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.credit.periods.creditor.cycle\"}\n              name=\"creditorCycle\"\n              className=\"text-right\"\n              value={creditorCycle}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `creditorCycle`,\n                creditorCycle,\n                \"mandatory|max:80\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.product.or.services.offered\"}\n              name=\"serviceOffered\"\n              className=\"\"\n              value={serviceOffered}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `serviceOffered`,\n                serviceOffered,\n                \"mandatory|max:80\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.raw.materials\"}\n              name=\"rawMaterials\"\n              className=\"\"\n              value={rawMaterials}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `rawMaterials`,\n                rawMaterials,\n                \"mandatory|max:80\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.average.daily.sales\"}\n              name=\"avgDailySales\"\n              className=\"text-right\"\n              value={avgDailySales}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `avgDailySales`,\n                avgDailySales,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.average.monthly.sales.last.six.months\"}\n              name=\"lastSixMonthAvgMonthlySales\"\n              className=\"text-right\"\n              value={lastSixMonthAvgMonthlySales}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `lastSixMonthAvgMonthlySales`,\n                lastSixMonthAvgMonthlySales,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.highest.monthly.sales.last.six.months\"}\n              name=\"lastSixMonthHighestMonthlySales\"\n              className=\"text-right\"\n              value={lastSixMonthHighestMonthlySales}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `lastSixMonthHighestMonthlySales`,\n                lastSixMonthHighestMonthlySales,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.lowest.monthly.sales.last.six.months\"}\n              name=\"lastSixMonthLowestMonthlySales\"\n              className=\"text-right\"\n              value={lastSixMonthLowestMonthlySales}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `lastSixMonthLowestMonthlySales`,\n                lastSixMonthLowestMonthlySales,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.avg..monthly.purchase.last.six.months\"}\n              name=\"lastSixMonthAvgMonthlyPurchase\"\n              className=\"text-right\"\n              value={lastSixMonthAvgMonthlyPurchase}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `lastSixMonthAvgMonthlyPurchase`,\n                lastSixMonthAvgMonthlyPurchase,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.average.expense\"}\n              name=\"avgExpense\"\n              className=\"text-right\"\n              value={avgExpense}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `avgExpense`,\n                avgExpense,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.estimate.gross.margin\"}\n              name=\"estimateGrossMargin\"\n              className=\"text-right\"\n              value={estimateGrossMargin}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `estimateGrossMargin`,\n                estimateGrossMargin,\n                \"mandatory|onlyInteger|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.net.margin\"}\n              name=\"netMargin\"\n              className=\"text-right\"\n              value={netMargin}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `netMargin`,\n                netMargin,\n                \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-2\">\n            <InputTextArea\n              name=\"stockSeenAtVisit\"\n              className=\"!h-40\"\n              label={\"label.employment.details.stock.seen.at.time.of.visit\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              onChange={handleChange}\n              value={stockSeenAtVisit}\n              autoResize\n              validation={simpleValidator?.current?.message(\n                `stockSeenAtVisit`,\n                stockSeenAtVisit,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n            />\n          </div>\n\n          <div className=\"col-span-2\">\n            <InputTextArea\n              name=\"approachRoad\"\n              className=\"!h-40\"\n              label={\"label.employment.details.approach.road\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              onChange={handleChange}\n              value={approachRoad}\n              autoResize\n              validation={simpleValidator?.current?.message(\n                `approachRoad`,\n                approachRoad,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n            />\n          </div>\n\n          <div className=\"col-span-2\">\n            <InputTextArea\n              name=\"assetsInPremises\"\n              className=\"!h-40\"\n              label={\"label.employment.details.assets.seen.in.business.premises\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              onChange={handleChange}\n              value={assetsInPremises}\n              autoResize\n              validation={simpleValidator?.current?.message(\n                `assetsInPremises`,\n                assetsInPremises,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n            />\n          </div>\n\n          <div className=\"col-span-2\">\n            <InputTextArea\n              name=\"commentOnBusiness\"\n              className=\"!h-40\"\n              label={\"label.employment.details.comments.interior/exterior.of.business\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              onChange={handleChange}\n              value={commentOnBusiness}\n              autoResize\n              validation={simpleValidator?.current?.message(\n                `commentOnBusiness`,\n                commentOnBusiness,\n                \"mandatory\"\n              )}\n              onBlur={validate}\n            />\n          </div>\n        </div>\n\n        {renderBusinessProofUploader({ mandatory: true })}\n\n        {renderRecordingsOrDocuments({ mandatory: false })}\n\n        {renderReferenceDetails()}\n\n        {children}\n      </div>\n    );\n  };\n\n  const renderSelfEmployedRental = () => {\n    const {\n      tenantName,\n      tenantMobileNo,\n      propertyOwnedBy,\n      structureType,\n      tenantType,\n      areaOfProperty,\n      rentAmount,\n      rentPaidSinceMonths,\n      rentAgreement,\n      rentalAgreementDate,\n      rentalStartDate,\n      rentMode,\n      resiCumOffice,\n      rentReceiptBank,\n      rentBankAccount,\n      lastOneMonthAmountCollected,\n      secondLastMonthAmountCollected,\n      thirdLastMonthAmountCollected,\n      tenureRentInMonths,\n      escalation,\n      remark,\n    } = pageObj;\n\n    return (\n      <div className={`flex flex-col space-y-4 ${className}`}>\n        <TextData\n          label={\"label.employment.details.lessee.details\"}\n          titleClass=\"text-primary-sideBarBgColor text-xs mb-1 font-bold\"\n        />\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.tenant.name\"}\n              name=\"tenantName\"\n              className=\"\"\n              value={tenantName}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `tenantName`,\n                tenantName,\n                \"mandatory|checkString|max:50\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputAddon\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.mobile.number\"}\n              name=\"tenantMobileNo\"\n              value={tenantMobileNo}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `tenantMobileNo`,\n                tenantMobileNo,\n                \"mandatory|onlyInteger|checkNumber|phoneNumber\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.property.owned.by\"}\n              name=\"propertyOwnedBy\"\n              value={propertyOwnedBy}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.PROPERTY_OWNED_BY_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `propertyOwnedBy`,\n                propertyOwnedBy,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.type.of.structures\"}\n              name=\"structureType\"\n              value={structureType}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.STRUCTURE_TYPE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `structureType`,\n                structureType,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.type.of.lease.or.tenant\"}\n              name=\"tenantType\"\n              value={tenantType}\n              onChange={handleChange}\n              validation={simpleValidator?.current?.message(`tenantType`, tenantType, \"mandatory\")}\n              onBlur={validate}\n              options={dropdownOption?.TENANT_TYPE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.area.of.property\"}\n              name=\"areaOfProperty\"\n              className=\"text-right\"\n              value={areaOfProperty}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `areaOfProperty`,\n                areaOfProperty,\n                \"mandatory|checkNumber|max:6,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.rent.amount.agreement\"}\n              name=\"rentAmount\"\n              className=\"text-right\"\n              value={rentAmount}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `rentAmount`,\n                rentAmount,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.rent.paid.since.in.months\"}\n              name=\"rentPaidSinceMonths\"\n              className=\"text-right\"\n              value={rentPaidSinceMonths}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `rentPaidSinceMonths`,\n                rentPaidSinceMonths,\n                \"mandatory|onlyInteger|max:20,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.rent.agreement\"}\n              name=\"rentAgreement\"\n              value={rentAgreement}\n              onChange={handleChange}\n              onBlur={validate}\n              options={YES_NO_OPTIONS}\n              optionLabel=\"label\"\n              optionValue=\"value\"\n              validation={simpleValidator?.current?.message(\n                `rentAgreement`,\n                rentAgreement,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SystemDatePicker\n              disabled={rentAgreement === YES_NO.NO}\n              label={\"label.employment.details.rental.agreement.date\"}\n              name=\"rentalAgreementDate\"\n              onChange={handleChange}\n              value={rentalAgreementDate ? new Date(rentalAgreementDate) : null}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `rentalAgreementDate`,\n                rentalAgreementDate,\n                `${rentAgreement === YES_NO.YES ? \"mandatory\" : \"optional\"}`\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SystemDatePicker\n              label={\"label.employment.details.rental.start.date\"}\n              name=\"rentalStartDate\"\n              onChange={handleChange}\n              value={rentalStartDate ? new Date(rentalStartDate) : null}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `rentalStartDate`,\n                rentalStartDate,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.rent.mode\"}\n              name=\"rentMode\"\n              value={rentMode}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.RENT_MODE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(`rentMode`, rentMode, \"mandatory\")}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              disabled\n              label={\"label.employment.details.resi.cum.office\"}\n              name=\"resiCumOffice\"\n              value={resiCumOffice}\n              onChange={handleChange}\n              onBlur={validate}\n              options={YES_NO_OPTIONS}\n              optionLabel=\"label\"\n              optionValue=\"value\"\n              validation={simpleValidator?.current?.message(\n                `resiCumOffice`,\n                resiCumOffice,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <AutoComplete\n              disabled={renderConfig?.disableFieldDependentOnRentMode}\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              label={\"label.employment.details.rentReceiptBank.name\"}\n              name=\"rentReceiptBank\"\n              value={rentReceiptBank?.name}\n              suggestions={suggestionsTemplate}\n              completeMethod={searchAutoCompleteBank}\n              onChange={handleAutoCompleteChange}\n              itemTemplate={itemBankTemplate}\n              loader={isSuggestionLoading}\n              onBlur={!renderConfig?.disableFieldDependentOnRentMode ? validate : undefined}\n              validation={\n                !renderConfig?.disableFieldDependentOnRentMode\n                  ? simpleValidator?.current?.message(\n                      \"rentReceiptBank\",\n                      rentReceiptBank?.uid,\n                      \"mandatory\"\n                    )\n                  : null\n              }\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled={renderConfig?.disableFieldDependentOnRentMode}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.rentReceiptBank.account.number\"}\n              name=\"rentBankAccount\"\n              className=\"text-right\"\n              value={rentBankAccount}\n              onChange={handleChange}\n              onBlur={!renderConfig?.disableFieldDependentOnRentMode ? validate : undefined}\n              validation={\n                !renderConfig?.disableFieldDependentOnRentMode\n                  ? simpleValidator?.current?.message(\n                      `rentBankAccount`,\n                      rentBankAccount,\n                      \"mandatory|alpha_num|min:8|max:18\"\n                    )\n                  : null\n              }\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled={renderConfig?.disableFieldDependentOnRentMode}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.amount.collected.last.one.month\"}\n              name=\"lastOneMonthAmountCollected\"\n              className=\"text-right\"\n              value={lastOneMonthAmountCollected}\n              onChange={handleAmountInputChange}\n              onBlur={!renderConfig?.disableFieldDependentOnRentMode ? validate : undefined}\n              validation={\n                !renderConfig?.disableFieldDependentOnRentMode\n                  ? simpleValidator?.current?.message(\n                      `lastOneMonthAmountCollected`,\n                      lastOneMonthAmountCollected,\n                      \"mandatory|onlyInteger|max:20,number\"\n                    )\n                  : null\n              }\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled={renderConfig?.disableFieldDependentOnRentMode}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.amount.collected.second.last.month\"}\n              name=\"secondLastMonthAmountCollected\"\n              className=\"text-right\"\n              value={secondLastMonthAmountCollected}\n              onChange={handleAmountInputChange}\n              onBlur={!renderConfig?.disableFieldDependentOnRentMode ? validate : undefined}\n              validation={\n                !renderConfig?.disableFieldDependentOnRentMode\n                  ? simpleValidator?.current?.message(\n                      `secondLastMonthAmountCollected`,\n                      secondLastMonthAmountCollected,\n                      \"mandatory|onlyInteger|max:20,number\"\n                    )\n                  : undefined\n              }\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled={renderConfig?.disableFieldDependentOnRentMode}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.amount.collected.third.last.month\"}\n              name=\"thirdLastMonthAmountCollected\"\n              className=\"text-right\"\n              value={thirdLastMonthAmountCollected}\n              onChange={handleAmountInputChange}\n              onBlur={!renderConfig?.disableFieldDependentOnRentMode ? validate : undefined}\n              validation={\n                !renderConfig?.disableFieldDependentOnRentMode\n                  ? simpleValidator?.current?.message(\n                      `thirdLastMonthAmountCollected`,\n                      thirdLastMonthAmountCollected,\n                      \"mandatory|onlyInteger|max:20,number\"\n                    )\n                  : undefined\n              }\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled={renderConfig?.disableFieldDependentOnRentMode}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.tenure.of.rent.in.months\"}\n              placeholder=\"Enter Annual Net Income\"\n              name=\"tenureRentInMonths\"\n              className=\"text-right\"\n              value={tenureRentInMonths}\n              onChange={handleChange}\n              onBlur={!renderConfig?.disableFieldDependentOnRentMode ? validate : undefined}\n              validation={\n                !renderConfig?.disableFieldDependentOnRentMode\n                  ? simpleValidator?.current?.message(\n                      `tenureRentInMonths`,\n                      tenureRentInMonths,\n                      \"mandatory|onlyInteger|max:6,number\"\n                    )\n                  : undefined\n              }\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.employment.details.escalation\"}\n              name=\"escalation\"\n              className=\"text-right\"\n              value={escalation}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `escalation`,\n                escalation,\n                \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-2\">\n            <InputTextArea\n              name=\"remark\"\n              className=\"!h-40\"\n              label={\"label.employment.details.remark\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={300}\n              onChange={handleChange}\n              value={remark}\n              autoResize\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(`remark`, remark, \"mandatory\")}\n            />\n          </div>\n        </div>\n\n        {renderAddressSection()}\n\n        {renderBusinessProofUploader({ mandatory: false })}\n\n        {renderRecordingsOrDocuments({ mandatory: false })}\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    return (\n      <React.Fragment>\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.employment.details.employment.type\"}\n              name=\"employmentType\"\n              value={pageObj?.employmentType}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.EMPLOYMENT_TYPE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `employmentType`,\n                pageObj?.employmentType,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              disabled={\n                pageObj?.employmentType ===\n                EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME\n              }\n              label={\"label.employment.details.industry\"}\n              name=\"industry\"\n              value={pageObj?.industry}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.INDUSTRY_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"uid\"\n              validation={simpleValidator?.current?.message(\n                `industry`,\n                pageObj?.industry,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              disabled={\n                pageObj?.employmentType ===\n                EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME\n              }\n              label={\"label.employment.details.core.business.category\"}\n              name=\"businessCategory\"\n              value={pageObj?.businessCategory}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.BUSINESS_CATEGORY_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"uid\"\n              validation={simpleValidator?.current?.message(\n                `businessCategory`,\n                pageObj?.businessCategory,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              disabled={checkBusinessTypeDisabled()}\n              label={\"label.employment.details.business.type\"}\n              name=\"businessType\"\n              value={pageObj?.businessType}\n              onChange={handleChange}\n              onBlur={validate}\n              options={dropdownOption?.BUSINESS_TYPE_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `businessType`,\n                pageObj?.businessType,\n                \"mandatory\"\n              )}\n            />\n          </div>\n        </div>\n\n        {pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SALARIED\n          ? renderSalariedEmployment()\n          : null}\n        {pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED\n          ? renderSelfEmployed()\n          : null}\n        {pageObj?.employmentType === EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME\n          ? renderSelfEmployedRental()\n          : null}\n      </React.Fragment>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <>\n      <div className={`w-full h-full ${className ?? \"\"}`}>\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <SaveComponent\n            title={\"title.employment.details\"}\n            titleArgs={{ count: cardNumber }}\n            pageMode={pageMode}\n            onCancel={onCancel}\n            onEdit={onEdit}\n            onSave={onSaveEmploymentDetails}\n            kebabModel={menuModel}\n          >\n            <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n          </SaveComponent>\n        )}\n      </div>\n\n      <MenuBox\n        ref={innerCardMenuRef}\n        model={innerCardMenuModel}\n        variant=\"SECONDARY\"\n        buttonClassName=\"!bg-transparent\"\n        className=\"width-full-menubox bg-white  w-max p-1.5 rounded-md mt-0.5 border shadow-autoCompletePanel\"\n      />\n    </>\n  );\n});\n\nEmploymentDetails.defaultProps = {\n  data: {},\n};\n\nexport default EmploymentDetails;\n","import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\n\n// --------- ---------- //\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { INPUT_STYLE_TYPE, PAGE_MODE } from \"utils/Constant\";\n\nexport interface IFamilyData {\n  familyType?: string;\n  noOfHouseholdMembers?: string;\n  noOfDependantsMembers?: string;\n  ownershipOfResidence?: string;\n  areaOfResidence?: string;\n  yearsInCurrentCity?: string;\n  detailsOnNeighbour?: string;\n  storyboard?: string;\n}\n\ninterface IProps {\n  data?: IFamilyData;\n  className?: string;\n  isLoading?: boolean;\n  pageMode?: string;\n  dropdownOptions?: any;\n}\n\nexport const initialFamilyData = {\n  familyType: \"\",\n  noOfHouseholdMembers: \"\",\n  noOfDependantsMembers: \"\",\n  ownershipOfResidence: \"\",\n  areaOfResidence: \"\",\n  yearsInCurrentCity: \"\",\n  detailsOnNeighbour: \"\",\n  storyboard: \"\",\n};\n\nconst FamilyDetails = forwardRef<any, IProps>((props, ref) => {\n  const { data = {}, isLoading, className, pageMode = PAGE_MODE.EDIT, dropdownOptions } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IFamilyData>(\n    Object.keys(data).length ? data : initialFamilyData\n  );\n\n  // error handling states\n\n  // --------------------- ref ---------------------------- //\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    // onSaveSuccess: onSaveSuccess,\n    // remove: onRemove,\n    onCancel: onCancel,\n    resetValidator: resetValidator,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCancel = () => {\n    resetValidator();\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    return { ...pageObj };\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderContent = () => {\n    const {\n      familyType,\n      noOfHouseholdMembers,\n      noOfDependantsMembers,\n      ownershipOfResidence,\n      areaOfResidence,\n      yearsInCurrentCity,\n      detailsOnNeighbour,\n      storyboard,\n    } = pageObj;\n\n    return (\n      <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n        <div className=\"col-span-1\">\n          <SimpleDropDown\n            label={\"label.family.type.mandatory\"}\n            name=\"familyType\"\n            value={familyType}\n            onChange={handleChange}\n            validation={simpleValidator?.current?.message(`familyType`, familyType, \"mandatory\")}\n            onBlur={validate}\n            options={dropdownOptions?.FAMILY_TYPE_OPTION}\n            optionLabel=\"name\"\n            optionValue=\"code\"\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.family.no.household.members.mandatory\"}\n            name=\"noOfHouseholdMembers\"\n            className=\"text-right\"\n            value={noOfHouseholdMembers}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `noOfHouseholdMembers`,\n              noOfHouseholdMembers,\n              \"mandatory|onlyInteger|checkNumber|max:6,number\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.family.no.dependants.member.mandatory\"}\n            name=\"noOfDependantsMembers\"\n            className=\"text-right\"\n            value={noOfDependantsMembers}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `noOfDependantsMembers`,\n              noOfDependantsMembers,\n              \"mandatory|onlyInteger|checkNumber|max:6,number\"\n            )}\n          />\n        </div>\n\n        <div></div>\n\n        <div className=\"col-span-1\">\n          <SimpleDropDown\n            label={\"label.family.ownership.current.residence.mandatory\"}\n            name=\"ownershipOfResidence\"\n            value={ownershipOfResidence}\n            onChange={handleChange}\n            onBlur={validate}\n            options={dropdownOptions?.OWNERSHIP_OF_RESIDENCE_OPTION}\n            optionLabel=\"name\"\n            optionValue=\"code\"\n            validation={simpleValidator?.current?.message(\n              `ownershipOfResidence`,\n              ownershipOfResidence,\n              \"mandatory\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.family.area.current.residence.mandatory\"}\n            name=\"areaOfResidence\"\n            className=\"text-right\"\n            value={areaOfResidence}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `areaOfResidence`,\n              areaOfResidence,\n              \"mandatory|checkNumber|max:6,number\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.family.years.current.city.mandatory\"}\n            name=\"yearsInCurrentCity\"\n            className=\"text-right\"\n            value={yearsInCurrentCity}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `yearsInCurrentCity`,\n              yearsInCurrentCity,\n              \"mandatory|checkNumber|max:6,number\"\n            )}\n          />\n        </div>\n\n        <div></div>\n\n        <div className=\"col-span-3\">\n          <InputTextArea\n            name=\"detailsOnNeighbour\"\n            className=\"!h-40\"\n            label={\"label.family.details.neighbour.mandatory\"}\n            placeholder={\"\"}\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            maxCount={300}\n            onChange={handleChange}\n            value={detailsOnNeighbour}\n            autoResize\n            validation={simpleValidator?.current?.message(\n              `detailsOnNeighbour`,\n              detailsOnNeighbour,\n              \"mandatory\"\n            )}\n            onBlur={validate}\n          />\n        </div>\n\n        <div className=\"col-span-3\">\n          <InputTextArea\n            name=\"storyboard\"\n            className=\"!h-40\"\n            label={\"label.family.storyboard.mandatory\"}\n            placeholder={\"\"}\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            maxCount={2000}\n            onChange={handleChange}\n            value={storyboard}\n            autoResize\n            validation={simpleValidator?.current?.message(\n              `storyboard`,\n              storyboard,\n              \"mandatory|min:300\"\n            )}\n            onBlur={validate}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className={`w-full h-full ${className ?? \"\"}`}>\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n      )}\n    </div>\n  );\n});\n\nFamilyDetails.defaultProps = {\n  data: {},\n};\n\nexport default FamilyDetails;\n","import { useTextConverter } from \"hook/CustomHooks\";\nimport React, { BaseSyntheticEvent, forwardRef, useEffect, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport AutoComplete from \"components/AutoComplete\";\nimport DatePicker from \"components/DatePicker/DatePicker\";\nimport { Column } from \"components/EditableTableV2\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton\";\nimport InputTextArea from \"components/InputTextArea\";\nimport ReadOnlyTable from \"components/ReadOnlyTable\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ChipsBox from \"components/base/BaseChips\";\n\n// --------- ---------- //\nimport MediaGallery, {\n  IMediaInfo,\n  initialMediaGallerySectionInfo,\n} from \"components/MediaGallery/MediaGallery\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport {\n  APPLICANT_TYPE_LABEL,\n  INITIATE_STAGE_OPTIONS,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n} from \"utils/Constant\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\n\nexport interface IInitiationInfoRef {\n  save: () => IInitiationInfoData | undefined;\n  remove: () => IInitiationInfoData | undefined;\n  onSaveSuccess: () => void;\n  resetValidator: () => any;\n}\n\nexport interface IInitiationInfoData {\n  dateOfInitiation?: any;\n  stage?: string;\n  pdType?: string;\n  assignTo?: any;\n  CCEmails?: any[];\n  description?: string;\n  applicant?: any;\n  stageDocuments?: any[];\n}\n\ninterface IProps {\n  data?: IInitiationInfoData;\n  className?: string;\n  isLoading?: boolean;\n  pageMode?: string;\n  loanId?: string;\n  dropdownOptions?: any;\n}\n\nconst initialInitiationInfoData = {\n  dateOfInitiation: \"\",\n  stage: \"\",\n  vendorType: \"\",\n  externalVendor: \"\",\n  internalAssignee: \"\",\n  CCEmails: [],\n  description: \"\",\n  applicant: null,\n  stageDocuments: [],\n};\n\nconst InitiationInfo = forwardRef<IInitiationInfoRef, IProps>((props, ref) => {\n  const {\n    data = initialInitiationInfoData,\n    isLoading,\n    className,\n    pageMode = PAGE_MODE.EDIT,\n    loanId,\n    dropdownOptions,\n  } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IInitiationInfoData>(data);\n  const [showMediaGallery, setShowMediaGallery] = useState<boolean>(false);\n  const [currentItemToViewInGallery, setCurrentItemToViewInGallery] = useState<IMediaInfo>({\n    ...initialMediaGallerySectionInfo,\n  });\n  // error handling states\n\n  // --------------------- ref ---------------------------- //\n  const selectedDocsTableRef: any = useRef<any>();\n  const customerTableRef = useRef<any>(null);\n  const chipRef = useRef<any>(null);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    customerTableRef?.current?.search();\n  }, []);\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onViewFile = (e: BaseSyntheticEvent, rowData: any) => {\n    let preparedInfoInList: IMediaInfo = {\n      uid: \"\",\n      placeOfUpload: \"\",\n      name: \"\",\n      fileName: \"\",\n      fileType: \"\",\n      download: \"\",\n      category: \"\",\n      type: \"\",\n      sectionName: \"\",\n      url: \"\",\n    };\n\n    if (rowData?.loanDocumentSection) {\n      preparedInfoInList = {\n        uid: rowData?.uid,\n        placeOfUpload: \"\",\n        name: rowData?.loanDocumentSection?.loanDocument?.applicant?.firstName ?? \"-\",\n        fileName: rowData?.loanDocumentSection?.fileName ?? \"-\",\n        fileType: rowData?.loanDocumentSection?.fileType ?? \"-\",\n        download: \"\",\n        category: rowData?.loanDocumentSection?.loanDocument?.docCategory ?? \"-\",\n        type: rowData?.loanDocumentSection?.loanDocument?.docType?.name ?? \"-\",\n        sectionName: rowData?.loanDocumentSection?.section ?? \"-\",\n        url: rowData?.loanDocumentSection?.url,\n      };\n    } else if (rowData?.kycDocument) {\n      preparedInfoInList = {\n        uid: rowData?.uid,\n        placeOfUpload: \"\",\n        name: rowData?.kycDocument?.kyc?.applicant?.firstName ?? \"-\",\n        fileName: rowData?.kycDocument?.fileName ?? \"-\",\n        fileType: rowData?.kycDocument?.fileType ?? \"-\",\n        download: \"\",\n        category: \"KYC\",\n        type: rowData?.kycDocument?.kyc?.docType?.name ?? \"-\",\n        sectionName: rowData?.kycDocument?.smDocSectionType ?? \"-\",\n        url: rowData?.kycDocument?.url,\n      };\n    }\n\n    setCurrentItemToViewInGallery(preparedInfoInList);\n    setShowMediaGallery(true);\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderCustomerType = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {/* @ts-ignore: will */}\n        {APPLICANT_TYPE_LABEL[rowData?.applicantType] ?? \"-\"}\n      </div>\n    );\n  };\n\n  const renderCustomerNameHeader = () => {\n    return (\n      <div className=\"flex justify-end items-center w-full\">\n        <Text label={\"label.stages.initiate.customer.name\"} className=\"w-1/2 truncate\" />\n      </div>\n    );\n  };\n\n  const renderCustomerName = (rowData: any) => {\n    return (\n      <div className=\"flex items-center justify-end w-full\">\n        <div className=\"w-1/2 truncate\">\n          {rowData?.firstName || rowData?.middleName || rowData?.lastName\n            ? ` ${rowData?.firstName ?? \"\"} ${rowData?.middleName ?? \"\"} ${rowData?.lastName ?? \"\"}`\n            : \"-\"}\n        </div>\n      </div>\n    );\n  };\n\n  const renderCustomerTable = () => {\n    return (\n      <div className=\" flex flex-col justify-start items-start space-y-2 mt-4\">\n        <Text\n          className=\"text-xs text-primary-sideBarBgColor font-medium\"\n          label={\"label.table.heading.stage.customer.selection\"}\n        />\n\n        <ReadOnlyTable\n          ref={customerTableRef}\n          value={[data?.applicant ?? []]}\n          hidePaginator\n          dataKey=\"id\"\n          className={\"pd-initiationInfo\"}\n        >\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n            header={textConverter(\"label.stages.initiate.customer.type\")}\n            body={renderCustomerType}\n          />\n          <Column\n            className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 w-full flex justify-start stage-status-customer-name\"\n            header={renderCustomerNameHeader()}\n            body={renderCustomerName}\n          />\n        </ReadOnlyTable>\n      </div>\n    );\n  };\n\n  const renderDocCategory = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.loanDocumentSection\n          ? rowData?.loanDocumentSection?.loanDocument?.docCategory ?? \"-\"\n          : \"KYC\"}\n      </div>\n    );\n  };\n\n  const renderDocType = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.stageDocType ?? \"-\"}</div>;\n  };\n\n  const renderDocSection = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.loanDocumentSection\n          ? rowData?.loanDocumentSection?.section ?? \"-\"\n          : rowData?.kycDocument?.smDocSectionType ?? \"-\"}\n      </div>\n    );\n  };\n\n  const renderAction = (rowData: any) => {\n    return (\n      <IconButton\n        buttonType={BUTTON_TYPES.VIEW}\n        onClick={(e: BaseSyntheticEvent) => {\n          onViewFile(e, rowData);\n        }}\n        isIgnoreAccessLevel\n      />\n    );\n  };\n\n  const renderSelectedExistingDocs = () => {\n    return (\n      <ReadOnlyTable\n        dataKey=\"id\"\n        ref={selectedDocsTableRef}\n        value={data?.stageDocuments}\n        className={` h-auto selected-existing-doc-read-table ${\n          data?.stageDocuments?.length ? \"!min-h-auto\" : \"!min-h-50\"\n        }`}\n      >\n        <Column\n          header={textConverter(\"label.existing.document.category\")}\n          className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n          body={renderDocCategory}\n        />\n        <Column\n          header={textConverter(\"label.existing.document.type\")}\n          className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n          body={renderDocType}\n        />\n        <Column\n          header={textConverter(\"label.existing.document.section\")}\n          className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n          body={renderDocSection}\n        />\n        <Column\n          header={textConverter(\"label.existing.document.action\")}\n          className=\"text-primary-ptext-1000 text-center text-xs h-12 px-6\"\n          style={{ minWidth: \"50px\", width: \"50px\" }}\n          body={renderAction}\n        />\n      </ReadOnlyTable>\n    );\n  };\n\n  const renderContent = () => {\n    const { dateOfInitiation, stage, pdType, assignTo, CCEmails, description } = pageObj;\n\n    return (\n      <React.Fragment>\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 \">\n          <div className=\"col-span-1\">\n            {/* Sys date */}\n            <SystemDatePicker\n              label={\"label.initiationInfo.date.of.initiation\"}\n              placeholder={\"placeholder.initiationInfo.date.of.initiation\"}\n              name=\"dateOfInitiation\"\n              onChange={handleChange}\n              showMinMaxRange\n              value={new Date(dateOfInitiation)}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              //onBlur={handleDateBlur}\n              validation={simpleValidator?.current?.message(\n                `dateOfInitiation`,\n                dateOfInitiation,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.initiationInfo.stage\"}\n              name=\"stage\"\n              optionLabel=\"label\"\n              optionValue=\"value\"\n              options={INITIATE_STAGE_OPTIONS}\n              validation={simpleValidator?.current?.message(`stage`, stage, \"mandatory\")}\n              value={stage}\n              //\n              onBlur={validate}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.initiationInfo.PD.type\"}\n              name=\"pdType\"\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              options={dropdownOptions?.PD_TYPE_OPTION}\n              validation={simpleValidator?.current?.message(`pdType`, pdType, \"mandatory\")}\n              value={pdType}\n              //\n              onBlur={validate}\n              onChange={handleChange}\n            />\n          </div>\n\n          <div />\n\n          <div className=\"col-span-1\">\n            <AutoComplete\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              label={\"label.initiationInfo.assign.to\"}\n              name=\"internalAssignee\"\n              value={assignTo?.name}\n            />\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-4\">\n          <div className=\"col-span-2\">\n            <ChipsBox\n              ref={chipRef}\n              className={\"\"}\n              name=\"CCEmails\"\n              value={CCEmails}\n              label={\"label.initiationInfo.cc\"}\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-6\">{renderSelectedExistingDocs()}</div>\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-7\">\n          <div className=\"col-span-3\">{renderCustomerTable()}</div>\n        </div>\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-7\">\n          <div className=\"col-span-2\">\n            <InputTextArea\n              name=\"description\"\n              className=\"!h-40\"\n              label={\"label.initiationInfo.description\"}\n              placeholder={\"placeholder.initiationInfo.description\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              onChange={handleChange}\n              value={description}\n              autoResize\n            />\n          </div>\n        </div>\n\n        <MediaGallery\n          visible={showMediaGallery}\n          onToggleVisibility={() => setShowMediaGallery((prev) => !prev)}\n          list={[]}\n          currentSection={currentItemToViewInGallery}\n        />\n      </React.Fragment>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className={`w-full h-full ${className ?? \"\"}`}>\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n      )}\n    </div>\n  );\n});\n\nInitiationInfo.defaultProps = {\n  data: {},\n};\n\nexport default InitiationInfo;\n","import AclGuard from \"components/AclGuard\";\nimport ButtonBox from \"components/ButtonBox\";\nimport EditableTableV2, { Column, EditableComponentRef } from \"components/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport { IUploadedFile } from \"components/FileUploadCustom\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport { RouteProps } from \"hoc/withRouter\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport { numberFormatter } from \"locale\";\nimport { DropdownChangeParams } from \"primereact/dropdown\";\nimport React, {\n  BaseSyntheticEvent,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport FinancialService from \"services/transaction/FinancialService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport { BUTTON_TYPE, DROPDOWN_LIST_CODE, INPUT_STYLE_TYPE, PAGE_MODE } from \"utils/Constant\";\n\nexport interface IInvestmentInfoData {\n  assets: ITableRowData[];\n  investmentComments: string;\n}\n\nexport interface IInvestmentInfoRef {\n  props: IProps;\n  save: () => IInvestmentInfoData | undefined;\n  editableTableRef: () => any;\n}\n\nexport interface IInvestmentProofFiles extends IUploadedFile {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  docType?: { uid: string; code: string; name: string };\n  sectionCode?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\ninterface ITableRowData {\n  uid: string;\n  amount: string;\n  isActive: boolean;\n  smAssetType: string;\n}\n\ninterface IDropDownOption {\n  uid: string;\n  label: string;\n  value: string;\n}\n\ninterface IProps extends RouteProps {\n  isLoading?: boolean;\n  data?: IInvestmentInfoData;\n  pageMode: string;\n  stageId?: string;\n}\n\nexport const initialInvestmentInfoData: IInvestmentInfoData = {\n  assets: [],\n  investmentComments: \"\",\n};\n\nconst initialTableRowData: ITableRowData = {\n  uid: \"\",\n  smAssetType: \"\",\n  amount: \"\",\n  isActive: true,\n};\n\nconst InvestmentDetails = forwardRef<IInvestmentInfoRef, IProps>((props, ref) => {\n  const { data = initialInvestmentInfoData, isLoading, pageMode, stageId } = props;\n\n  // --------------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<IInvestmentInfoData>(data);\n  const [assetOptions, setAssetOptions] = useState<any[]>([]);\n\n  //error handling states\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n\n  const tableRef = React.useRef<EditableComponentRef>(null);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    init();\n    onTableSearch();\n  }, []);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    props: props,\n    save: onSave,\n    editableTableRef: onTableSearch,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getAssetTypeOptions = async () => {\n    try {\n      const res = await StaticMasterDataService.getAll(\n        0,\n        1000,\n        `staticMasterType.code=${DROPDOWN_LIST_CODE.ASSET_TYPE}&`\n      );\n\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setAssetOptions([...res.data.results]);\n      }\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------------\n    Validators:\n    ---------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (e: BaseSyntheticEvent) => {\n    setPageObj((prev) => {\n      return {\n        ...prev,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const handleAssetChange = (e: DropdownChangeParams, rowData: any) => {\n    const rowDataObj = { ...rowData };\n    rowDataObj.smAssetType = e.target.value;\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  const handleAmountChange = (e: any, rowData: any) => {\n    const rowDataObj = { ...rowData };\n    const amt = currencyFormatToNumber(e.target.value);\n    rowDataObj.amount = numberFormatter(amt, \"en-IN\", 0);\n    tableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onAddAsset = () => {\n    tableRef?.current?.addRow(initialTableRowData);\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    let preparedData: IInvestmentInfoData = {\n      ...pageObj,\n      assets: [\n        ...(tableRef.current?.getAddedRecords() ?? []),\n        ...(tableRef.current?.getDeletedRecords() ?? []),\n        ...(tableRef.current?.getUpdatedRecords() ?? []),\n      ],\n    };\n\n    const preparedAssets: ITableRowData[] = preparedData.assets.map((asset) => {\n      return {\n        ...asset,\n        amount: currencyFormatToNumber(asset.amount?.toString())?.toString(),\n      };\n    });\n\n    preparedData = { ...preparedData, assets: preparedAssets };\n\n    return preparedData;\n  };\n\n  const onDeleteAsset = (rowData?: any) => {\n    tableRef.current?.deleteRow(rowData);\n    resetValidator();\n  };\n\n  const onTableSearch = () => {\n    tableRef.current?.search();\n    tableRef.current?.clearAll();\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = async () => {\n    getAssetTypeOptions();\n  };\n\n  const getValue = (val: number) => {\n    return numberFormatter(val, \"en-IN\", 0);\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderAssetsType = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        //appendTo={document.body}\n        name={`smAssetType${rowData.uid}`}\n        className=\"!w-32\"\n        options={assetOptions}\n        optionLabel=\"name\"\n        optionValue=\"code\"\n        value={rowData.smAssetType ?? \"\"}\n        onChange={(e: DropdownChangeParams) => {\n          handleAssetChange(e, rowData);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `smAssetType${rowData.uid}`,\n          rowData.smAssetType,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderAmount = (rowData: any) => {\n    return (\n      <InputBox\n        name={`amount${rowData.uid}`}\n        className=\"!w-40 text-right\"\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        value={typeof rowData.amount === \"number\" ? getValue(rowData.amount) : rowData.amount}\n        onChange={(e) => {\n          handleAmountChange(e, rowData);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `amount${rowData.uid}`,\n          rowData.amount,\n          \"mandatory|onlyInteger\"\n        )}\n      />\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <IconButton\n        buttonType={BUTTON_TYPES.DELETE}\n        onClick={() => onDeleteAsset(rowData)}\n        disabled={pageMode === PAGE_MODE.VIEW}\n      />\n    );\n  };\n\n  const renderContent = () => {\n    const { investmentComments } = pageObj;\n\n    return (\n      <div className=\"mt-3 flex flex-col gap-5\">\n        <div className=\"self-end\">\n          <ButtonBox buttonType={BUTTON_TYPE.ADD_ASSET} onClick={onAddAsset} />\n        </div>\n\n        <div>\n          <EditableTableV2\n            ref={tableRef}\n            uniqueKey=\"uid\"\n            mode={\"UPDATE\"}\n            standardDataFormatPromise={FinancialService.getAll}\n            search={`&stage.uid=${stageId}&isActive=${true}`}\n          >\n            <Column\n              header={textConverter(\"label.investmentInfo.table.colTitle.assetType\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderAssetsType}\n            />\n\n            <Column\n              header={textConverter(\"label.investmentInfo.table.colTitle.amt\")}\n              className=\"table-header-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n              body={renderAmount}\n            />\n\n            <Column\n              header={textConverter(\"label.investmentInfo.table.colTitle.action\")}\n              className=\"text-primary-ptext-1000 text-center text-xs h-12 px-6\"\n              style={{ minWidth: \"50px\", width: \"50px\" }}\n              body={renderActions}\n            />\n          </EditableTableV2>\n        </div>\n\n        <div className=\"w-full\">\n          <InputTextArea\n            name=\"investmentComments\"\n            className=\"!min-h-40 !max-h-80 h-40\"\n            label=\"label.investmentInfo.comments\"\n            labelClassNames=\"font-bold text-xs !text-primary-gray-700\"\n            maxCount={200}\n            placeholder={\"Enter description here\"}\n            value={investmentComments}\n            onChange={handleInputChange}\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <>\n      <div className=\"\">\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n        )}\n      </div>\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n});\n\nexport default InvestmentDetails;\n","import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport InputBox from \"components/InputBox\";\nimport SkeletonCustom from \"components/Skeleton\";\n\n// --------- ---------- //\nimport { numberFormatter } from \"locale\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { currencyFormatToNumber, getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { INPUT_STYLE_TYPE, PAGE_MODE } from \"utils/Constant\";\n\nexport interface IOtherIncomeData {\n  uid?: string;\n  totalRentalIncome?: string | number;\n  agriculturalIncome?: string | number;\n  FDDividendIncome?: string | number;\n}\n\ninterface IProps {\n  data?: IOtherIncomeData;\n  className?: string;\n  isLoading?: boolean;\n  pageMode?: string;\n}\n\nexport const initialOtherIncomeData = {\n  totalRentalIncome: \"\",\n  agriculturalIncome: \"\",\n  FDDividendIncome: \"\",\n};\n\nconst OtherIncome = forwardRef<any, IProps>((props, ref) => {\n  const { data = {}, pageMode = PAGE_MODE.EDIT, isLoading, className } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IOtherIncomeData>(\n    Object.keys(data).length ? data : initialOtherIncomeData\n  );\n\n  // error handling states\n\n  // --------------------- ref ---------------------------- //\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    // onSaveSuccess: onSaveSuccess,\n    // remove: onRemove,\n    onCancel: onCancel,\n    resetValidator: resetValidator,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleOtherIncomeChange = (e: any) => {\n    // common other income state update\n    const unformattedValue: number = currencyFormatToNumber(e.target.value);\n    setPageObj((prevState: IOtherIncomeData) => {\n      return {\n        ...prevState,\n        [e.target.name]: numberFormatter(unformattedValue, \"en-IN\", 0),\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCancel = () => {\n    resetValidator();\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    return { ...pageObj };\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderContent = () => {\n    const { totalRentalIncome, agriculturalIncome, FDDividendIncome } = pageObj;\n    return (\n      <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n        <div className=\"col-span-1\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.other.income.total.rental.income\"}\n            name=\"totalRentalIncome\"\n            className=\"text-right\"\n            value={totalRentalIncome}\n            onChange={handleOtherIncomeChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `totalRentalIncome`,\n              totalRentalIncome,\n              \"mandatory|max:20,number\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.other.income.agricultural.income\"}\n            name=\"agriculturalIncome\"\n            className=\"text-right\"\n            value={agriculturalIncome}\n            onChange={handleOtherIncomeChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `agriculturalIncome`,\n              agriculturalIncome,\n              \"mandatory|max:20,number\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.other.income.FD.interest\"}\n            name=\"FDDividendIncome\"\n            className=\"text-right\"\n            value={FDDividendIncome}\n            onChange={handleOtherIncomeChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `FDDividendIncome`,\n              FDDividendIncome,\n              \"mandatory|max:20,number\"\n            )}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className={`w-full h-full ${className ?? \"\"}`}>\n      {isLoading ? (\n        <SkeletonCustom height=\"6.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n      )}\n    </div>\n  );\n});\n\nexport default OtherIncome;\n","import React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport Address from \"components/Address\";\nimport DatePicker from \"components/DatePicker\";\nimport InputBox from \"components/InputBox\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\n\n// --------- ---------- //\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport {\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  PLACE_OF_VISIT_OPTION,\n  VARIANTS,\n  YES_NO_OPTIONS,\n} from \"utils/Constant\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\n\nexport interface IPDData {\n  uid?: string;\n  isActive?: boolean;\n  applicantType?: string;\n  customerName?: string;\n  placeOfVisit?: string;\n  dateOfPD?: any;\n  ITRAvailability?: string;\n  address?: string;\n  pincode?: any;\n  city?: any;\n  state?: string;\n  latitude?: string;\n  longitude?: string;\n  dateOfInitiation?: string;\n}\n\ninterface IProps {\n  data?: IPDData;\n  className?: string;\n  isLoading?: boolean;\n  pageMode?: string;\n}\n\nexport const initialPDData = {\n  applicantType: \"\",\n  customerName: \"\",\n  placeOfVisit: \"\",\n  dateOfPD: \"\",\n  ITRAvailability: \"\",\n  address: \"\",\n  pincode: \"\",\n  city: \"\",\n  state: \"\",\n  latitude: \"\",\n  longitude: \"\",\n  dateOfInitiation: \"\",\n};\n\nconst PDDetails = forwardRef<any, IProps>((props, ref) => {\n  const { data = {}, isLoading, className, pageMode = PAGE_MODE.EDIT } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IPDData>(Object.keys(data).length ? data : initialPDData);\n\n  // error handling states\n\n  // --------------------- ref ---------------------------- //\n\n  const addressRef = useRef<any>(null);\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (pageObj) {\n      //\n    }\n  }, [pageObj]);\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    // onSaveSuccess: onSaveSuccess,\n    // remove: onRemove,\n    onCancel: onCancel,\n    resetValidator: resetValidator,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCancel = () => {\n    resetValidator();\n  };\n\n  const onSave = () => {\n    const addressData = addressRef?.current?.save();\n\n    if (!validateForm() || !addressData) {\n      return;\n    }\n\n    return { ...pageObj, ...addressData, uid: pageObj?.uid };\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n\n    addressRef?.current?.resetValidator();\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state, latitude, longitude } = pageObj;\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      latitude,\n      longitude,\n    };\n  }, [\n    pageObj?.address,\n    pageObj?.pincode,\n    pageObj?.city,\n    pageObj?.state,\n    pageObj?.latitude,\n    pageObj?.longitude,\n  ]);\n\n  const renderAddress = () => {\n    return (\n      <div className=\"flex flex-col space-y-4\">\n        <Address\n          pageMode={pageMode}\n          ref={addressRef}\n          data={addressData}\n          variant={VARIANTS.SECONDARY}\n          isLatLong\n        />\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    const { applicantType, customerName, placeOfVisit, dateOfPD, ITRAvailability } = pageObj;\n\n    return (\n      <React.Fragment>\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.pd.type.applicant.mandatory\"}\n              name=\"applicantType\"\n              value={applicantType}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `customerName`,\n                customerName,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              disabled\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.pd.customer.name.mandatory\"}\n              name=\"customerName\"\n              className=\"\"\n              value={customerName}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `customerName`,\n                customerName,\n                \"mandatory|onlyInteger|max:50,number\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.pd.place.of.visit.mandatory\"}\n              name=\"placeOfVisit\"\n              value={placeOfVisit}\n              onChange={handleChange}\n              onBlur={validate}\n              options={PLACE_OF_VISIT_OPTION}\n              optionLabel=\"name\"\n              optionValue=\"code\"\n              validation={simpleValidator?.current?.message(\n                `placeOfVisit`,\n                placeOfVisit,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div></div>\n\n          <div className=\"col-span-1\">\n            <SystemDatePicker\n              minDate={pageObj?.dateOfInitiation ? new Date(pageObj?.dateOfInitiation) : undefined}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.pd.date.of.pd.mandatory\"}\n              name=\"dateOfPD\"\n              value={dateOfPD ? new Date(dateOfPD) : null}\n              onChange={handleChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(`dateOfPD`, dateOfPD, \"mandatory\")}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <SimpleDropDown\n              label={\"label.pd.ITR.availability.mandatory\"}\n              name=\"ITRAvailability\"\n              value={ITRAvailability}\n              onChange={handleChange}\n              onBlur={validate}\n              options={YES_NO_OPTIONS}\n              optionLabel=\"label\"\n              optionValue=\"value\"\n              validation={simpleValidator?.current?.message(\n                `ITRAvailability`,\n                ITRAvailability,\n                \"mandatory\"\n              )}\n            />\n          </div>\n        </div>\n        {renderAddress()}\n      </React.Fragment>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className={`w-full h-full ${className ?? \"\"}`}>\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n      )}\n    </div>\n  );\n});\n\nPDDetails.defaultProps = {\n  data: {},\n};\n\nexport default PDDetails;\n","import DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  ISavedDocumentRecords,\n} from \"components/DocumentUploader\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport React, { Fragment, forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { DOCUMENT_CATEGORY, PAGE_MODE } from \"utils/Constant\";\nimport { enrichPersonalDiscussionRecordings } from \"../../Helper\";\n\ninterface IPersonalDiscussionRecordingProps {\n  className?: string;\n  isLoading?: boolean;\n  pdRecordings: ISavedDocumentRecords[];\n  sectionMode: string;\n  payloadInfo: {\n    loanUid: string;\n    applicantUid: string;\n    stageUid: string;\n  };\n  onRemoveDocFromList: (docInfo: IDocumentInfo, idx: number) => void;\n}\n\nexport interface IPersonalDiscussionRecordingRef {\n  save: () => void;\n  cancel: () => void;\n}\n\nexport type T_LOAN_SECTION_KEY_DOCUMENTS_PD = \"OTHER_DOCUMENTS\";\n\nexport const PD_LOAN_SECTION_KEY: T_LOAN_SECTION_KEY_DOCUMENTS_PD = \"OTHER_DOCUMENTS\";\n\n//below constant is to pass stageName to the API endpoints for otherDocuments\nexport const STAGE = {\n  LOGIN: \"login\",\n  PD: \"pd\",\n};\n\nconst PersonalDiscussionRecording = forwardRef<\n  IPersonalDiscussionRecordingRef,\n  IPersonalDiscussionRecordingProps\n>((props, ref) => {\n  const { isLoading, className, pdRecordings, onRemoveDocFromList, sectionMode, payloadInfo } =\n    props;\n\n  const documentUploadRef = useRef<IDocumentUploaderRef[]>([]);\n\n  useImperativeHandle(ref, () => {\n    return {\n      save: onSave,\n      cancel: onCancel,\n    };\n  });\n\n  const onSave = () => {\n    const unsavedDocuments: IDocumentInfo[] = [];\n\n    for (let idx = 0; idx < pdRecordings.length; idx++) {\n      if (documentUploadRef?.current?.[idx]) {\n        const unsavedDoc = documentUploadRef?.current?.[idx]?.getUploadedData();\n        if (unsavedDoc) {\n          unsavedDocuments.push(unsavedDoc);\n        } else {\n          return;\n        }\n      }\n    }\n\n    const payloadData = enrichPersonalDiscussionRecordings(unsavedDocuments, payloadInfo);\n\n    return payloadData;\n  };\n\n  const onCancel = () => {\n    //\n  };\n\n  /*------------------------------------Helper Functions--------------------------------- */\n\n  return (\n    <React.Fragment>\n      <div className={`w-full h-full ${className ?? \"\"}`}>\n        {isLoading ? (\n          <div className=\"flex items-center justify-center w-full h-full\">\n            <SkeletonCustom height=\"19rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          </div>\n        ) : (\n          <div className=\"flex flex-col\">\n            {pdRecordings.map((otherDocument: ISavedDocumentRecords, idx) => {\n              return (\n                <Fragment key={otherDocument.uid ? otherDocument.uid : otherDocument.listKey}>\n                  <DocumentUploader\n                    ref={(refValue) => {\n                      documentUploadRef.current[idx] = refValue as IDocumentUploaderRef;\n                    }}\n                    docUploaderIndex={idx}\n                    mode={\n                      sectionMode === PAGE_MODE.CREATE\n                        ? DOC_UPLOADER_MODE.EDIT\n                        : DOC_UPLOADER_MODE.VIEW\n                    }\n                    queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_OTHER_DOCUMENTS}\n                    savedDocument={otherDocument ?? {}}\n                    accessKebab\n                    onRemoveFromList={onRemoveDocFromList}\n                  />\n                </Fragment>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default PersonalDiscussionRecording;\n","import AclGuard from \"components/AclGuard\";\nimport AutoComplete from \"components/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport EditableTableV2, { Column } from \"components/EditableTableV2\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport { numberFormatter } from \"locale\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport BankAccountDetailsService from \"services/transaction/DDE/BankAccountDetailsService\";\nimport StageService from \"services/transaction/DDE/StageService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  CAM_APPLICANT_TYPE,\n  CAM_APPLICANT_TYPE_OPTIONS,\n  DROPDOWN_LIST_CODE,\n  INPUT_STYLE_TYPE,\n  LOAN_PURPOSE_OPTIONS,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n} from \"utils/Constant\";\n\nexport interface IRepaymentHistoryRef {\n  props: IProps;\n  save: () => IRepaymentHistoryData | undefined;\n  search: () => any;\n  onCancel: () => any;\n  editableTableRef: any;\n}\n\nexport interface IRepaymentHistoryData {\n  repaymentHistory: ITableRowData[];\n}\ninterface ITableRowData {\n  uid: string;\n  isActive: boolean;\n  smCustomerType: string;\n  applicant: { uid: string };\n  customerName: string;\n  bank: any;\n  smPurpose: string;\n  sanctionedAmount: string;\n  outstandingAmount: string;\n  balanceTenor: string;\n  emiAmount: string;\n  pastDefaults: string;\n  sanctionedTenor: string;\n  noOfBounces: string;\n  roi: string;\n}\n\ninterface IRepaymentHistoryDropdownOptions {\n  CUSTOMER_TYPE_OPTION?: any[];\n  CUSTOMER_NAME_OPTION?: any[];\n  CUSTOMER_NAME_OPTION_FOR_APPLICANT?: any[];\n  CUSTOMER_NAME_OPTION_FOR_CO_APPLICANT?: any[];\n  CUSTOMER_NAME_OPTION_FOR_GUARANTOR?: any[];\n  FINANCIER_TYPE_OPTION?: any[];\n}\n\ninterface IProps {\n  data: IRepaymentHistoryData;\n  className?: string;\n  isLoading?: boolean;\n  pageMode?: string;\n  stageId?: string;\n  loanId?: string;\n  applicantDetails?: any;\n}\n\nconst initialTableRowData: ITableRowData = {\n  uid: \"\",\n  isActive: true,\n  smCustomerType: \"\",\n  customerName: \"\",\n  applicant: { uid: \"\" },\n  bank: { name: \"\", uid: \"\", type: { code: \"\" } },\n  smPurpose: \"\",\n  sanctionedAmount: \"\",\n  outstandingAmount: \"\",\n  balanceTenor: \"\",\n  emiAmount: \"\",\n  pastDefaults: \"\",\n  sanctionedTenor: \"\",\n  noOfBounces: \"\",\n  roi: \"\",\n};\n\nexport const initialRepaymentHistoryData = {\n  repaymentHistory: [],\n};\n\nconst RepaymentHistory = forwardRef<IRepaymentHistoryRef, IProps>((props, ref) => {\n  const {\n    isLoading,\n    className,\n    pageMode,\n    applicantDetails,\n    stageId,\n    loanId,\n    data = initialRepaymentHistoryData,\n  } = props;\n\n  // --------------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<IRepaymentHistoryData>(data);\n\n  const [repaymentHistoryDropdownOptions, setRepaymentHistoryDropdownOptions] =\n    useState<IRepaymentHistoryDropdownOptions>({\n      CUSTOMER_TYPE_OPTION: CAM_APPLICANT_TYPE_OPTIONS,\n      CUSTOMER_NAME_OPTION: [],\n      FINANCIER_TYPE_OPTION: [],\n    });\n  const [isSuggestionLoading, setIsSuggestionLoading] = useState(false);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<\n    {\n      name: string | undefined;\n      code: string | undefined;\n    }[]\n  >([]);\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // --------------------- ref ---------------------------- //\n\n  const repaymentHistoryTableRef = useRef<any>(null);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    // initial empty dependency useEffect\n    // Do not add any dependency for this\n    init();\n    onTableSearch();\n    getCustomerNameOptions();\n  }, []);\n\n  // for future use\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    // if (applicantDetails?.applicantType) {\n    // }\n  }, [applicantDetails?.applicantType]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useImperativeHandle(ref, () => ({\n    props: props,\n    save: onSave,\n    onCancel: onCancel,\n    search: onTableSearch,\n    editableTableRef: repaymentHistoryTableRef,\n  }));\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getCustomerNameOptions = async (rowData?: any) => {\n    const searchQueryForApplicant = `applicantType=${CAM_APPLICANT_TYPE.PRIMARY}&loan.uid=${loanId}`;\n    const searchQueryForCoApplicant = `applicantType=${CAM_APPLICANT_TYPE.CO_APPLICANT}&loan.uid=${loanId}`;\n    const searchQueryForGuarantor = `applicantType=${CAM_APPLICANT_TYPE.GUARANTOR}&loan.uid=${loanId}`;\n\n    try {\n      const res = await StageService.getCustomerDetails(0, 50, searchQueryForApplicant);\n\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setRepaymentHistoryDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            CUSTOMER_NAME_OPTION_FOR_APPLICANT: [...res.data.results],\n          };\n        });\n      }\n      const res1 = await StageService.getCustomerDetails(0, 50, searchQueryForCoApplicant);\n      if (validateGetAPIResponse(res1) && !!res1.data?.totalRecords) {\n        setRepaymentHistoryDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            CUSTOMER_NAME_OPTION_FOR_CO_APPLICANT: [...res1.data.results],\n          };\n        });\n      }\n      const res2 = await StageService.getCustomerDetails(0, 50, searchQueryForGuarantor);\n      if (validateGetAPIResponse(res2) && !!res2.data?.totalRecords) {\n        setRepaymentHistoryDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            CUSTOMER_NAME_OPTION_FOR_GUARANTOR: [...res2.data.results],\n          };\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const getFinancierTypeOptions = async () => {\n    try {\n      const res = await StaticMasterDataService.getAll(\n        0,\n        1000,\n        `staticMasterType.code=${DROPDOWN_LIST_CODE.BANK_FINANCIER_TYPE}&`\n      );\n\n      if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n        setRepaymentHistoryDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            FINANCIER_TYPE_OPTION: [...res.data.results],\n          };\n        });\n      } else {\n        //\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any, rowData: any, name: string) => {\n    const rowDataObj = { ...rowData };\n    rowDataObj[name] = e.target.value;\n    repaymentHistoryTableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  const handleAmountChange = (e: any, rowData: any, name: string) => {\n    const rowDataObj = { ...rowData };\n    const amt = currencyFormatToNumber(e.target.value);\n    rowDataObj[name] = numberFormatter(amt, \"en-IN\", 0);\n    repaymentHistoryTableRef.current?.reportDataChange(rowDataObj);\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onAddRepaymentHistory = () => {\n    repaymentHistoryTableRef?.current?.addRow(JSON.parse(JSON.stringify(initialTableRowData)));\n    resetValidator();\n  };\n\n  const onTableSearch = () => {\n    repaymentHistoryTableRef.current?.search();\n    repaymentHistoryTableRef.current?.clearAll();\n    resetValidator();\n  };\n\n  const onDeleteAsset = (rowData?: any) => {\n    repaymentHistoryTableRef.current?.deleteRow(rowData);\n    resetValidator();\n  };\n\n  const onCancel = () => {\n    resetValidator();\n  };\n\n  const onSave = () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    let preparedData: IRepaymentHistoryData = {\n      ...pageObj,\n      repaymentHistory: [\n        ...(repaymentHistoryTableRef.current?.getAddedRecords() ?? []),\n        ...(repaymentHistoryTableRef.current?.getDeletedRecords() ?? []),\n        ...(repaymentHistoryTableRef.current?.getUpdatedRecords() ?? []),\n      ],\n    };\n\n    const preparedRepaymentHistory: ITableRowData[] = preparedData.repaymentHistory.map((data) => {\n      return {\n        ...data,\n        sanctionedAmount: `${currencyFormatToNumber(data.sanctionedAmount?.toString())}`,\n        outstandingAmount: `${currencyFormatToNumber(data.outstandingAmount?.toString())}`,\n        emiAmount: `${currencyFormatToNumber(data.emiAmount?.toString())}`,\n      };\n    });\n\n    preparedData = { ...preparedData, repaymentHistory: preparedRepaymentHistory };\n\n    return preparedData;\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getFinancierTypeOptions();\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  const searchAutoCompleteInstitutionName = async (event: any, financierType?: string) => {\n    let suggestionsTemplate = [];\n    setIsSuggestionLoading(true);\n    try {\n      await BankAccountDetailsService.findBankName(\n        0,\n        10,\n        `name:lk=${event.query}&isActive=true&type.code=${financierType}`\n      ).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data.results];\n          setIsSuggestionLoading(false);\n        }\n      });\n    } catch (error) {\n      setPosition(\"top-right\");\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: undefined, code: undefined, uid: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const itemInstitutionNameTemplate = (item: any) => {\n    if (!item?.name) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item?.name} />\n      </div>\n    );\n  };\n\n  const renderCustomerType = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`smCustomerType${rowData.uid}`}\n        className=\"!w-32\"\n        options={repaymentHistoryDropdownOptions?.CUSTOMER_TYPE_OPTION}\n        optionLabel=\"name\"\n        optionValue=\"code\"\n        value={rowData.smCustomerType ?? \"\"}\n        onChange={(e: any) => {\n          const rowDataObj = { ...rowData };\n          rowDataObj.smCustomerType = e.target.value;\n          // reset the customer name when customer type is changed\n          if (rowDataObj.applicant.uid) {\n            rowDataObj.applicant.uid = \"\";\n          }\n          repaymentHistoryTableRef.current?.reportDataChange(rowDataObj);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `smCustomerType${rowData.uid}`,\n          rowData.smCustomerType,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderCustomerName = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`customerName${rowData.uid}`}\n        className=\"!w-32\"\n        options={\n          rowData.smCustomerType === CAM_APPLICANT_TYPE.PRIMARY\n            ? repaymentHistoryDropdownOptions?.CUSTOMER_NAME_OPTION_FOR_APPLICANT\n            : rowData.smCustomerType === CAM_APPLICANT_TYPE.CO_APPLICANT\n            ? repaymentHistoryDropdownOptions?.CUSTOMER_NAME_OPTION_FOR_CO_APPLICANT\n            : repaymentHistoryDropdownOptions?.CUSTOMER_NAME_OPTION_FOR_GUARANTOR\n        }\n        optionLabel=\"firstName\"\n        optionValue=\"uid\"\n        value={rowData.applicant?.uid ?? \"\"}\n        onChange={(e: any) => {\n          const rowDataObj = { ...rowData };\n          rowDataObj.applicant.uid = e.target.value;\n          repaymentHistoryTableRef.current?.reportDataChange(rowDataObj);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `customerName${rowData.uid}`,\n          rowData.applicant?.uid,\n          \"mandatory\"\n        )}\n        disabled={!rowData?.smCustomerType}\n      />\n    );\n  };\n\n  const renderFinancierType = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`financierType${rowData.uid}`}\n        className=\"!w-32\"\n        options={repaymentHistoryDropdownOptions?.FINANCIER_TYPE_OPTION}\n        optionLabel=\"name\"\n        optionValue=\"code\"\n        value={rowData?.bank?.type?.code ?? \"\"}\n        onChange={(e: any) => {\n          const rowDataObj = { ...rowData };\n          rowDataObj.bank.type.code = e.target.value;\n          repaymentHistoryTableRef.current?.reportDataChange(rowDataObj);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `financierType${rowData.uid}`,\n          rowData?.bank?.type?.code,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderPurpose = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`smPurpose${rowData.uid}`}\n        className=\"!w-32\"\n        options={LOAN_PURPOSE_OPTIONS}\n        optionLabel=\"name\"\n        optionValue=\"value\"\n        value={rowData.smPurpose ?? \"\"}\n        onChange={(e: any) => {\n          handleChange(e, rowData, \"smPurpose\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `smPurpose${rowData.uid}`,\n          rowData.smPurpose,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderInstitutionName = (rowData: any) => {\n    return (\n      <AutoComplete\n        disabled={!rowData?.bank?.type?.code}\n        variant={INPUT_STYLE_TYPE.PRIMARY}\n        name={`bank${rowData.uid}`}\n        className=\"!w-44\"\n        value={rowData.bank?.name ?? \"\"}\n        suggestions={suggestionsTemplate}\n        completeMethod={(e) => searchAutoCompleteInstitutionName(e, rowData?.bank?.type?.code)}\n        onChange={(e: any) => {\n          const { value } = e.target;\n          const rowDataObj = rowData;\n          if (typeof value === \"object\") {\n            rowDataObj.bank.name = value?.name;\n            rowDataObj.bank.uid = value?.uid;\n          } else {\n            rowDataObj.bank.name = value;\n          }\n          repaymentHistoryTableRef.current?.reportDataChange(rowDataObj);\n        }}\n        itemTemplate={itemInstitutionNameTemplate}\n        loader={isSuggestionLoading}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `bank${rowData.uid}`,\n          rowData.bank?.uid,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderSanctionAmount = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`sanctionedAmount${rowData.uid}`}\n        className=\"!w-44 text-right\"\n        value={rowData.sanctionedAmount ?? \"\"}\n        onChange={(e: any) => {\n          handleAmountChange(e, rowData, \"sanctionedAmount\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `sanctionedAmount${rowData.uid}`,\n          rowData.sanctionedAmount,\n          \"mandatory|max:20\"\n        )}\n      />\n    );\n  };\n\n  const renderOutstandingAmount = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`outstandingAmount${rowData.uid}`}\n        className=\"!w-44 text-right\"\n        value={rowData.outstandingAmount ?? \"\"}\n        onChange={(e: any) => {\n          handleAmountChange(e, rowData, \"outstandingAmount\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `outstandingAmount${rowData.uid}`,\n          rowData.outstandingAmount,\n          \"mandatory|max:20\"\n        )}\n      />\n    );\n  };\n\n  const renderBalanceTenor = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`balanceTenor${rowData.uid}`}\n        className=\"!w-44 text-right\"\n        value={rowData.balanceTenor ?? \"\"}\n        onChange={(e: any) => {\n          handleChange(e, rowData, \"balanceTenor\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `balanceTenor${rowData.uid}`,\n          rowData.balanceTenor,\n          \"mandatory|checkNumber|max:3,number|onlyInteger\"\n        )}\n      />\n    );\n  };\n\n  const renderEMI = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`emiAmount${rowData.uid}`}\n        className=\"text-right !w-44\"\n        value={rowData.emiAmount ?? \"\"}\n        onChange={(e: any) => {\n          handleAmountChange(e, rowData, \"emiAmount\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `emiAmount${rowData.uid}`,\n          rowData.emiAmount,\n          \"mandatory|max:20\"\n        )}\n      />\n    );\n  };\n\n  const renderPastDefaults = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`pastDefaults${rowData.uid}`}\n        className=\"!w-44 text-left\"\n        value={rowData.pastDefaults ?? \"\"}\n        onChange={(e: any) => {\n          handleChange(e, rowData, \"pastDefaults\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `pastDefaults${rowData.uid}`,\n          rowData.pastDefaults,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderSanctionTenor = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`sanctionedTenor${rowData.uid}`}\n        className=\"!w-44 text-right\"\n        value={rowData.sanctionedTenor ?? \"\"}\n        onChange={(e: any) => {\n          handleChange(e, rowData, \"sanctionedTenor\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `sanctionedTenor${rowData.uid}`,\n          rowData.sanctionedTenor,\n          \"mandatory|checkNumber|max:3,number|onlyInteger\"\n        )}\n      />\n    );\n  };\n\n  const renderNoOfBounces = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`noOfBounces${rowData.uid}`}\n        className=\"text-right !w-44\"\n        value={rowData.noOfBounces ?? \"\"}\n        onChange={(e: any) => {\n          handleChange(e, rowData, \"noOfBounces\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `noOfBounces${rowData.uid}`,\n          rowData.noOfBounces,\n          \"mandatory|checkNumber|max:6,number|onlyInteger\"\n        )}\n      />\n    );\n  };\n\n  const renderROI = (rowData: any) => {\n    return (\n      <InputBox\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        name={`roi${rowData.uid}`}\n        className=\"text-right !w-44\"\n        value={rowData.roi ?? \"\"}\n        onChange={(e: any) => {\n          handleChange(e, rowData, \"roi\");\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `roi${rowData.uid}`,\n          rowData.roi,\n          \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n        )}\n      />\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <IconButton\n        buttonType={BUTTON_TYPES.DELETE}\n        onClick={() => onDeleteAsset(rowData)}\n        disabled={pageMode === PAGE_MODE.VIEW}\n      />\n    );\n  };\n\n  const renderContent = () => {\n    return (\n      <div className=\"mt-3 flex flex-col gap-5\">\n        <div className=\"self-end\">\n          <ButtonBox buttonType={BUTTON_TYPE.ADD_ASSET} onClick={onAddRepaymentHistory} />\n        </div>\n\n        <div>\n          <EditableTableV2\n            ref={repaymentHistoryTableRef}\n            uniqueKey=\"uid\"\n            mode={\"UPDATE\"}\n            standardDataFormatPromise={StageService.getRepaymentHistory}\n            search={`&stage.uid=${stageId}&isActive=${true}`}\n          >\n            <Column\n              header={textConverter(\"label.repayment.history.customer.type\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderCustomerType}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.customer.name\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderCustomerName}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.financier.type\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderFinancierType}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.purpose\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderPurpose}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.name.of.institution\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderInstitutionName}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.sanction.amount\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderSanctionAmount}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.roi\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderROI}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.outstanding.amount\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderOutstandingAmount}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.balance.tenor\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderBalanceTenor}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.sanction.tenor\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderSanctionTenor}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.emi\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderEMI}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.past.defaults\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderPastDefaults}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.no.of.bounces\")}\n              className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n              body={renderNoOfBounces}\n            />\n            <Column\n              header={textConverter(\"label.repayment.history.actions\")}\n              className=\"text-primary-ptext-1000 text-center text-xs h-12 px-6\"\n              style={{ minWidth: \"50px\", width: \"50px\" }}\n              body={renderActions}\n            />\n          </EditableTableV2>\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div className={`w-full h-full ${className ?? \"\"}`}>\n      {isLoading ? (\n        <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n      ) : (\n        <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n      )}\n    </div>\n  );\n});\n\nexport default RepaymentHistory;\n","import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport {\n  IDocumentInfo,\n  ISavedDocumentRecords,\n  dummySavedDocStructureInList,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport LazyLoader from \"components/LazyLoader/LazyLoader\";\nimport RichTextEditor from \"components/RichTextEditor/RichTextEditor\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section/Section\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport ToastCustom from \"components/Toast\";\nimport { ISectionDropdownOption } from \"interface/common\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BusinessService from \"services/BusinessService\";\nimport Industry from \"services/masterdata/Industry\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport StageService from \"services/transaction/DDE/StageService\";\nimport OtherDocumentService from \"services/transaction/OtherDocumentService\";\nimport PDService from \"services/transaction/PDService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  ACTION_TYPE,\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  EMPLOYMENT_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport {\n  enrichEmploymentDetails,\n  enrichFamilyDetails,\n  enrichInvestmentDetails,\n  enrichOtherIncome,\n  enrichPDObj,\n  enrichPersonalDiscussionRecordings,\n  enrichReferenceDetailsObj,\n  enrichRepaymentHistory,\n  structSavedDocStrucutureForPersonalDiscussionRecordings,\n  updateEmploymentDetails,\n  updateFamilyObj,\n  updateInitiationInfoObj,\n  updateInvestmentDetails,\n  updateOtherIncome,\n  updatePDDetailsObj,\n  updateReferenceDetailsObj,\n} from \"../Helper\";\nimport EmploymentDetails, {\n  IEmploymentData,\n  IEmploymentDetailsRef,\n  initialEmploymentData,\n} from \"../section/EmploymentDetails/EmploymentDetails\";\nimport FamilyDetails, { IFamilyData } from \"../section/FamilyDetails/FamilyDetails\";\nimport InitiationInfo from \"../section/InitiationInfo/InitiationInfo\";\nimport InvestmentDetails, {\n  IInvestmentInfoData,\n} from \"../section/InvestmentDetails/InvestmentDetails\";\nimport OtherIncome, {\n  IOtherIncomeData,\n  initialOtherIncomeData,\n} from \"../section/OtherIncome/OtherIncome\";\nimport PDDetails, { IPDData } from \"../section/PDDetails/PDDetails\";\nimport PersonalDiscussionRecording, {\n  IPersonalDiscussionRecordingRef,\n  STAGE,\n} from \"../section/PersonalDiscussionRecording/PersonalDiscussionRecording\";\nimport ReferenceDetails, {\n  IReferenceData,\n  IReferenceDetailsRef,\n  initialReferenceData,\n} from \"../section/ReferenceDetails/ReferenceDetails\";\nimport RepaymentHistory, {\n  IRepaymentHistoryData,\n} from \"../section/RepaymentHistory/RepaymentHistory\";\n\ntype Mode = string;\ninterface IPageData {\n  initiationInfo: {\n    isInitiationInfoLoading: boolean;\n    initiationInfoData: any;\n    initiationInfoMode: Mode;\n  };\n  PDDetails: {\n    isPDDetailsLoading: boolean;\n    PDData: any;\n    PDDetailsMode: Mode;\n  };\n  familyDetails: {\n    isFamilyDetailsLoading: boolean;\n    familyData: any;\n    familyDetailsMode: Mode;\n  };\n  employmentDetails: {\n    isEmploymentDetailsLoading: boolean;\n    employmentDetailsList: IEmploymentData[];\n    employmentDetailsMode: Mode;\n  };\n  referenceDetails: {\n    isReferenceDetailsLoading: boolean;\n    referenceDetailsList: IReferenceData[];\n    referenceDetailsMode: Mode;\n  };\n  otherIncome: {\n    isOtherIncomeLoading: boolean;\n    otherIncomeData: IOtherIncomeData;\n    otherIncomeMode: Mode;\n  };\n  writeUpDetails: {\n    uid: string;\n    isWriteUpLoading: boolean;\n    writeUpData: any;\n    writeUpDetailsMode: Mode;\n    writeUpValidation:\n      | {\n          isWriteUpValid?: boolean;\n          errorMessage: string;\n        }\n      | null\n      | undefined;\n  };\n  investmentDetails: {\n    isInvestmentDetailsLoading: boolean;\n    investmentData: any;\n    investmentDetailsMode: Mode;\n  };\n  repaymentHistory: {\n    isRepaymentHistoryLoading: boolean;\n    repaymentHistoryData: any;\n    repaymentHistoryMode: Mode;\n  };\n  personalDiscussionRecording: {\n    isPDRecordingLoading: boolean;\n    pdRecordingData: ISavedDocumentRecords[];\n    pdRecordingSectionMode: Mode;\n  };\n}\n\nconst initialPageData: IPageData = {\n  initiationInfo: {\n    isInitiationInfoLoading: false,\n    initiationInfoData: {},\n    initiationInfoMode: PAGE_MODE.VIEW,\n  },\n  PDDetails: {\n    isPDDetailsLoading: false,\n    PDData: {},\n    PDDetailsMode: PAGE_MODE.VIEW,\n  },\n  familyDetails: {\n    isFamilyDetailsLoading: false,\n    familyData: {},\n    familyDetailsMode: PAGE_MODE.VIEW,\n  },\n  employmentDetails: {\n    isEmploymentDetailsLoading: false,\n    employmentDetailsList: [{ ...initialEmploymentData }],\n    employmentDetailsMode: PAGE_MODE.VIEW,\n  },\n  referenceDetails: {\n    isReferenceDetailsLoading: false,\n    referenceDetailsList: [{ ...initialReferenceData }],\n    referenceDetailsMode: PAGE_MODE.VIEW,\n  },\n  otherIncome: {\n    isOtherIncomeLoading: false,\n    otherIncomeMode: PAGE_MODE.VIEW,\n    otherIncomeData: { ...initialOtherIncomeData },\n  },\n  writeUpDetails: {\n    uid: \"\",\n    isWriteUpLoading: false,\n    writeUpData: \"\",\n    writeUpDetailsMode: PAGE_MODE.VIEW,\n    writeUpValidation: null,\n  },\n  investmentDetails: {\n    isInvestmentDetailsLoading: false,\n    investmentData: [],\n    investmentDetailsMode: PAGE_MODE.VIEW,\n  },\n  repaymentHistory: {\n    isRepaymentHistoryLoading: false,\n    repaymentHistoryData: [],\n    repaymentHistoryMode: PAGE_MODE.VIEW,\n  },\n  personalDiscussionRecording: {\n    isPDRecordingLoading: false,\n    pdRecordingData: [dummySavedDocStructureInList],\n    pdRecordingSectionMode: PAGE_MODE.VIEW,\n  },\n};\n\nconst PagePD = () => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n  const stageId = params.stageUid ?? \"\";\n  // --------------------- states ---------------------- //\n\n  const [pageData, setPageData] = useState<IPageData>({ ...initialPageData });\n  const [allPDData, setAllPDData] = useState<any>(null);\n  const [showReferenceSection, setShowReferenceSection] = useState<boolean>(false);\n  const [isEmploymentRemoved, setIsEmploymentRemoved] = useState<boolean>(false);\n\n  const [dropdownOptions, setDropdownOptions] = useState<ISectionDropdownOption>({\n    FAMILY_TYPE_OPTION: [],\n    OWNERSHIP_OF_RESIDENCE_OPTION: [],\n    PD_TYPE_OPTION: [],\n    EMPLOYMENT_TYPE_OPTION: [],\n    INDUSTRY_OPTION: [],\n    BUSINESS_CATEGORY_OPTION: [],\n    NO_EMPLOYEE_OPTION: [],\n    BUSINESS_CONSTITUTION_OPTION: [],\n    NATURE_OF_RELATIONSHIP: [],\n    OWNERSHIP_OF_BUSINESS_PREMISES_OPTION: [],\n    BUSINESS_LOCATION_OPTION: [],\n    STRUCTURE_TYPE_OPTION: [],\n    SEASONALITY_OPTION: [],\n    BUSINESS_TYPE_OPTION: [],\n    RENT_MODE_OPTION: [],\n    PROPERTY_OWNED_BY_OPTION: [],\n    TENANT_TYPE_OPTION: [],\n  });\n\n  // error handling states\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n\n  const PDDetailsRef = useRef<any>(null);\n  const familyDetailsRef = useRef<any>(null);\n  const writeUpEditorRef = useRef<any>(null);\n  const otherIncomeRef = useRef<any>(null);\n  const investmentDetailsRef = useRef<any>(null);\n  const repaymentHistoryRef = useRef<any>(null);\n  const employmentDetailsRef = useRef<IEmploymentDetailsRef[]>([]);\n  const referenceDetailsRef = useRef<IReferenceDetailsRef[]>([]);\n  const pdRecordingRef = useRef<IPersonalDiscussionRecordingRef | null>(null);\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    // initial empty dependency useEffect\n    // Do not add any dependency for this\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (stageId) {\n      init();\n      getPersonalDiscussionRecordings();\n    }\n  }, [stageId]);\n\n  useEffect(() => {\n    if (isEmploymentRemoved) {\n      removeAllRentalRelatedReference();\n    }\n  }, [isEmploymentRemoved]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getAllStageDetails = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      allStateLoaderFunc();\n    }\n\n    try {\n      const res = await StageService.getStageDetails(stageId);\n\n      if (validateGetAPIResponse(res)) {\n        setAllPDData(res?.data);\n\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            initiationInfo: {\n              ...prevState.initiationInfo,\n              initiationInfoData: updateInitiationInfoObj(res?.data),\n              isInitiationInfoLoading: false,\n            },\n            PDDetails: {\n              ...prevState.PDDetails,\n              isPDDetailsLoading: false,\n              PDData: updatePDDetailsObj(res?.data),\n            },\n            familyDetails: {\n              ...prevState.familyDetails,\n              isFamilyDetailsLoading: false,\n              familyData: updateFamilyObj(res?.data),\n            },\n            //reference\n            // employment\n            otherIncome: {\n              ...prevState.otherIncome,\n              isOtherIncomeLoading: false,\n              otherIncomeData: updateOtherIncome(res?.data),\n            },\n            writeUpDetails: {\n              ...prevState.writeUpDetails,\n              isWriteUpLoading: false,\n              writeUpData: res?.data?.stage?.pd?.workProfileDescription,\n              uid: res?.data?.stage?.pd?.uid,\n              //writeUpData: updateWriteUpDetails(res?.data),\n            },\n            investmentDetails: {\n              ...prevState.investmentDetails,\n              isInvestmentDetailsLoading: false,\n              investmentData: updateInvestmentDetails(res?.data),\n            },\n            repaymentHistory: {\n              ...prevState.repaymentHistory,\n              isRepaymentHistoryLoading: false,\n              repaymentHistoryData: { repaymentHistory: [] },\n            },\n          };\n        });\n      }\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const getPDDetails = async () => {\n    try {\n      const res = await PDService.getPDDetails(stageId);\n      if (validateGetAPIResponse(res)) {\n        return res?.data?.results[0];\n      }\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const getPDEmploymentDetails = async (isIgnoreLoader?: boolean, actionType?: string) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          employmentDetails: {\n            ...prevState.employmentDetails,\n            isEmploymentDetailsLoading: true,\n          },\n        };\n      });\n    }\n\n    try {\n      const res = await PDService.getEmploymentDetail(loanId, stageId);\n      if (validateGetAPIResponse(res)) {\n        if (res?.data?.length > 0) {\n          const shouldShowReference: boolean = checkWhetherToShowReferenceSection(res?.data);\n          setShowReferenceSection((prevState: boolean) => shouldShowReference);\n          const savedEmpDetails = res?.data?.map((empDetail: any) => {\n            return updateEmploymentDetails(empDetail);\n          });\n\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              employmentDetails: {\n                ...prevState.employmentDetails,\n                isEmploymentDetailsLoading: false,\n                employmentDetailsList: [...savedEmpDetails],\n              },\n            };\n          });\n        } else {\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              employmentDetails: {\n                ...prevState.employmentDetails,\n                isEmploymentDetailsLoading: false,\n                employmentDetailsList: [{ ...initialEmploymentData }],\n              },\n            };\n          });\n        }\n        if (actionType && actionType === ACTION_TYPE.REMOVE) {\n          setIsEmploymentRemoved(true);\n        }\n      }\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const getPDReferenceDetails = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          referenceDetails: {\n            ...prevState.referenceDetails,\n            isReferenceDetailsLoading: true,\n          },\n        };\n      });\n    }\n\n    try {\n      const res = await PDService.getReferenceDetail(stageId);\n      if (validateGetAPIResponse(res)) {\n        if (res?.data?.results?.length > 0) {\n          const savedRefDetails = res?.data?.results?.map((refDetail: any) => {\n            return updateReferenceDetailsObj(refDetail);\n          });\n\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              referenceDetails: {\n                ...prevState.referenceDetails,\n                isReferenceDetailsLoading: false,\n                referenceDetailsList: [...savedRefDetails],\n              },\n            };\n          });\n        } else {\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              referenceDetails: {\n                ...prevState.referenceDetails,\n                isReferenceDetailsLoading: false,\n                referenceDetailsList: [{ ...initialReferenceData }],\n              },\n            };\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const getPersonalDiscussionRecordings = async () => {\n    setPageData((prev: IPageData) => ({\n      ...prev,\n      personalDiscussionRecording: {\n        ...prev.personalDiscussionRecording,\n        isPDRecordingLoading: true,\n      },\n    }));\n\n    try {\n      const res = await OtherDocumentService.getDocsByStage(STAGE.PD, stageId);\n\n      if (validateGetAPIResponse(res)) {\n        if (res?.data?.length > 0) {\n          const preparedListOfOtherDocuments = res?.data?.map((document: any) => {\n            return structSavedDocStrucutureForPersonalDiscussionRecordings(document);\n          });\n\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            personalDiscussionRecording: {\n              ...prev.personalDiscussionRecording,\n              pdRecordingData: [...preparedListOfOtherDocuments],\n              isPDRecordingLoading: false,\n            },\n          }));\n        } else {\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            personalDiscussionRecording: {\n              ...prev.personalDiscussionRecording,\n              pdRecordingData: [dummySavedDocStructureInList],\n              isPDRecordingLoading: false,\n            },\n          }));\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        personalDiscussionRecording: {\n          ...prev.personalDiscussionRecording,\n          pdRecordingData: [dummySavedDocStructureInList],\n          isPDRecordingLoading: false,\n        },\n      }));\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const getFamilyTypeOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      10000,\n      `staticMasterType.code=FAMILY_TYPE`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            FAMILY_TYPE_OPTION: [...res.data.results],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getOwnerShipOfResidenceOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      10000,\n      `staticMasterType.code=RESIDENTIAL_OWNERSHIP`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            OWNERSHIP_OF_RESIDENCE_OPTION: [...res.data.results],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getPDTypeOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=PD_TYPE&\").then(\n      (res) => {\n        if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n          setDropdownOptions((prevState: any) => {\n            return {\n              ...prevState,\n              PD_TYPE_OPTION: [...res.data.results],\n            };\n          });\n        } else {\n          console.log(\"error\");\n        }\n      }\n    );\n  };\n\n  const getEmploymentTypeOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=EMPLOYMENT_TYPE`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            EMPLOYMENT_TYPE_OPTION: [...res.data.results],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getIndustryOptions = async () => {\n    await Industry.getAll(0, 1000, ``).then((res: any) => {\n      if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            INDUSTRY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getCoreBusinessCategoryOptions = async () => {\n    await BusinessService.getCoreBusinessCategory(0, 1000, ``).then((res: any) => {\n      if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            BUSINESS_CATEGORY_OPTION: [...res.data.results],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getNoOfEmployeesOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=NO_OF_EMPLOYEES`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res) && res.data?.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            NO_EMPLOYEE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBusinessConstitutionOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=BUSINESS_CONSTITUTION`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            BUSINESS_CONSTITUTION_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getRelationShipNatureOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=RELATIONSHIP_REFERENCE`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            NATURE_OF_RELATIONSHIP: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getOwnerShipOfBusinessPremisesOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=OWNERSHIP_OF_BUSINESS_PREMISES`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            OWNERSHIP_OF_BUSINESS_PREMISES_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBusinessLocationOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=BUSINESS_LOCATION`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            BUSINESS_LOCATION_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getStructureTypeOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=TYPE_OF_STRUCTURE`\n    ).then((res: any) => {\n      if (validateGetAPIResponse(res)) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            STRUCTURE_TYPE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getSeasonalityOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=BUSINESS_SEASONALITY_TYPES`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            SEASONALITY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getBusinessTypeOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=OCCUPATION_TYPE`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            BUSINESS_TYPE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getRentModeOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=RENT_MODE`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            RENT_MODE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getPropertyOwnedByOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=PROPERTY_OWNED_BY`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            PROPERTY_OWNED_BY_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n\n  const getTenantTypeOptions = async () => {\n    await StaticMasterDataService.getAll(\n      0,\n      1000,\n      `staticMasterType.code=TYPE_OF_TENANT`\n    ).then((res: any) => {\n      if (res.data.results && res.data.results.length > 0) {\n        setDropdownOptions((prevState: any) => {\n          return {\n            ...prevState,\n            TENANT_TYPE_OPTION: [...(res.data.results ?? [])],\n          };\n        });\n      } else {\n        console.log(\"error\");\n      }\n    });\n  };\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const validateEditor = () => {\n    const wordcount =\n      writeUpEditorRef?.current?.editor?.plugins?.wordcount?.body.getCharacterCount();\n\n    if (wordcount < 1) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          writeUpDetails: {\n            ...prevState.writeUpDetails,\n            writeUpValidation: {\n              ...prevState.writeUpDetails.writeUpValidation,\n              errorMessage: \"Mandatory\",\n            },\n          },\n        };\n      });\n      return false;\n    }\n\n    if (wordcount > 300) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          writeUpDetails: {\n            ...prevState.writeUpDetails,\n            writeUpValidation: {\n              ...prevState.writeUpDetails.writeUpValidation,\n              errorMessage: \"Maximum 500 characters\",\n            },\n          },\n        };\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleEditorValidation = (e: any) => {\n    if (validateEditor()) {\n      if (pageData?.writeUpDetails?.writeUpValidation?.errorMessage) {\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            writeUpDetails: {\n              ...prevState.writeUpDetails,\n              writeUpValidation: {\n                ...prevState.writeUpDetails.writeUpValidation,\n                errorMessage: \"\",\n              },\n            },\n          };\n        });\n      }\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onEditPDDetails = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        PDDetails: {\n          ...prevState.PDDetails,\n          PDDetailsMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelPDDetails = () => {\n    PDDetailsRef?.current?.onCancel();\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        PDDetails: {\n          ...prevState.PDDetails,\n          PDDetailsMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n\n    getPersonalDiscussionDetails(true);\n  };\n\n  const onEditFamilyDetails = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        familyDetails: {\n          ...prevState.familyDetails,\n          familyDetailsMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelFamilyDetails = () => {\n    familyDetailsRef?.current?.onCancel();\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        familyDetails: {\n          ...prevState.familyDetails,\n          familyDetailsMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n\n    getFamilyDetails(true);\n  };\n\n  const onEditOtherIncome = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        otherIncome: {\n          ...prevState.otherIncome,\n          otherIncomeMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelOtherIncome = () => {\n    otherIncomeRef?.current?.onCancel();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        otherIncome: {\n          ...prevState.otherIncome,\n          otherIncomeMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n\n    getOtherIncomeDetails(true);\n  };\n\n  const onEditWorkProfileWriteUp = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        writeUpDetails: {\n          ...prevState.writeUpDetails,\n          writeUpDetailsMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelWorkProfileWriteUp = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        writeUpDetails: {\n          ...prevState.writeUpDetails,\n          writeUpDetailsMode: PAGE_MODE.VIEW,\n          writeUpValidation: {\n            ...prevState.writeUpDetails?.writeUpValidation,\n            errorMessage: \"\",\n          },\n        },\n      };\n    });\n\n    getWriteUpDetails(true);\n  };\n\n  const onEditInvestmentDetails = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        investmentDetails: {\n          ...prevState.investmentDetails,\n          investmentDetailsMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelInvestmentDetails = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        investmentDetails: {\n          ...prevState.investmentDetails,\n          investmentDetailsMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onEditRepaymentHistory = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        repaymentHistory: {\n          ...prevState.repaymentHistory,\n          repaymentHistoryMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelRepaymentHistory = () => {\n    repaymentHistoryRef?.current?.onCancel();\n    repaymentHistoryRef?.current?.search();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        repaymentHistory: {\n          ...prevState.repaymentHistory,\n          repaymentHistoryMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onSavePDDetails = async () => {\n    const data: IPDData | undefined = PDDetailsRef?.current?.save();\n\n    if (data) {\n      const payload = enrichPDObj(data);\n\n      try {\n        const res = await PDService.updatePDDetails(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          getPersonalDiscussionDetails(true);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveFamilyDetails = async () => {\n    const data: IFamilyData | undefined = familyDetailsRef?.current?.save();\n\n    if (data) {\n      const payload = enrichFamilyDetails(data);\n\n      try {\n        const res = await PDService.updateFamilyDetails(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          getFamilyDetails(true);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveOtherIncome = async () => {\n    const data: IOtherIncomeData | undefined = otherIncomeRef?.current?.save();\n\n    if (data) {\n      const payload = enrichOtherIncome(data);\n\n      try {\n        const res = await PDService.updateOtherIncomeDetails(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          getOtherIncomeDetails(true);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveWriteUp = async () => {\n    if (!validateEditor()) {\n      return;\n    }\n\n    if (writeUpEditorRef.current?.editor?.getContent()) {\n      const payload: any = {\n        uid: pageData?.writeUpDetails?.uid,\n        workProfileDescription: writeUpEditorRef.current?.editor?.getContent(),\n      };\n\n      try {\n        const res = await PDService.updateWriteUpDetails(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n          getWriteUpDetails(true);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveInvestmentDetails = async () => {\n    const data: IInvestmentInfoData | undefined = investmentDetailsRef?.current?.save();\n\n    if (data) {\n      const payload = enrichInvestmentDetails(data);\n\n      try {\n        const res = await PDService.updateInvestmentDetails(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          investmentDetailsRef?.current?.editableTableRef();\n\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              investmentDetails: {\n                ...prevState.investmentDetails,\n                investmentDetailsMode: PAGE_MODE.VIEW,\n              },\n            };\n          });\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveRepaymentHistory = async () => {\n    const data: IRepaymentHistoryData | undefined = repaymentHistoryRef?.current?.save();\n\n    if (data) {\n      const payload = enrichRepaymentHistory(data, loanId, stageId);\n\n      try {\n        const res = await PDService.updateRepaymentHistory(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setTriggerToast(!triggerToast);\n\n          repaymentHistoryRef?.current?.search();\n\n          setPageData((prevState: IPageData) => {\n            return {\n              ...prevState,\n              repaymentHistory: {\n                ...prevState.repaymentHistory,\n                repaymentHistoryMode: PAGE_MODE.VIEW,\n              },\n            };\n          });\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onSaveEmploymentDetails = async (index: number) => {\n    const data: IEmploymentData | undefined = employmentDetailsRef?.current?.[index]?.save();\n    const employmentType: string =\n      employmentDetailsRef?.current?.[index]?.getSelectedEmploymentType();\n\n    if (data) {\n      const payload = enrichEmploymentDetails(\n        data,\n        loanId,\n        allPDData?.stage?.applicant?.uid,\n        allPDData?.stage?.uid,\n        employmentType\n      );\n\n      if (data?.uid) {\n        try {\n          const res = await PDService.updateEmploymentDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            getPDEmploymentDetails(true);\n            employmentDetailsRef?.current?.[index]?.onSuccess();\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const { uid, ...rest } = payload;\n        try {\n          const res = await PDService.createEmploymentDetail(rest);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            getPDEmploymentDetails(true);\n            employmentDetailsRef?.current?.[index]?.onSuccess();\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onRemoveEmploymentDetails = async (index: number) => {\n    const data: IEmploymentData | undefined = employmentDetailsRef?.current?.[index]?.remove();\n    const employmentType: string =\n      employmentDetailsRef?.current?.[index]?.getSelectedEmploymentType();\n\n    if (data) {\n      const payload = enrichEmploymentDetails(\n        data,\n        loanId,\n        allPDData?.stage?.applicant?.uid,\n        allPDData?.stage?.uid,\n        employmentType\n      );\n\n      if (data.uid) {\n        try {\n          const res = await PDService.updateEmploymentDetail(payload);\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            getPDEmploymentDetails(true, ACTION_TYPE.REMOVE);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        const newEmploymentDetailsList = pageData.employmentDetails?.employmentDetailsList?.filter(\n          (_, idx: number) => idx !== index\n        );\n\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            employmentDetails: {\n              ...prevState.employmentDetails,\n              employmentDetailsList: [...newEmploymentDetailsList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const onAddMoreEmployDetails = () => {\n    const newEmployListItem = {\n      ...initialEmploymentData,\n      key: Math.random().toString(36).substring(2),\n    };\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        employmentDetails: {\n          ...prevState.employmentDetails,\n          employmentDetailsList: [\n            ...prevState.employmentDetails.employmentDetailsList,\n            newEmployListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onAddMoreReferenceDetails = () => {\n    const newReferenceListItem = {\n      ...initialReferenceData,\n      key: Math.random().toString(36).substring(2),\n    };\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        referenceDetails: {\n          ...prevState.referenceDetails,\n          referenceDetailsList: [\n            ...prevState.referenceDetails.referenceDetailsList,\n            newReferenceListItem,\n          ],\n        },\n      };\n    });\n  };\n\n  const onSaveReferenceDetails = async (index: number) => {\n    const data: IReferenceData | undefined = referenceDetailsRef?.current?.[index]?.save();\n\n    if (data) {\n      const payload = enrichReferenceDetailsObj(data, loanId, stageId);\n\n      if (data?.uid) {\n        updatePDReferenceDetails([payload]);\n      } else {\n        try {\n          const res = await PDService.createReferenceDetail(payload);\n          if (validatePostAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setTriggerToast(!triggerToast);\n            getPDReferenceDetails(true);\n          }\n        } catch (error) {\n          console.log(error);\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      }\n    }\n  };\n\n  const onRemoveReferenceDetails = async (index: number) => {\n    const data: IReferenceData | undefined = referenceDetailsRef?.current?.[index]?.remove();\n\n    if (data) {\n      const payload = enrichReferenceDetailsObj(data, loanId, stageId);\n\n      if (data.uid) {\n        updatePDReferenceDetails([payload]);\n      } else {\n        const newReferenceDetailsList = pageData.referenceDetails?.referenceDetailsList?.filter(\n          (_, idx: number) => idx !== index\n        );\n\n        setPageData((prevState: IPageData) => {\n          return {\n            ...prevState,\n            referenceDetails: {\n              ...prevState.referenceDetails,\n              referenceDetailsList: [...newReferenceDetailsList],\n            },\n          };\n        });\n      }\n    }\n  };\n\n  const updatePDReferenceDetails = async (payload: any, isIgnoreGETAPI?: boolean) => {\n    try {\n      const res = await PDService.updateReferenceDetail(payload);\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setTriggerToast(!triggerToast);\n\n        if (!isIgnoreGETAPI) {\n          getPDReferenceDetails(true);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    getAllStageDetails();\n\n    //\n    getFamilyTypeOptions();\n    getOwnerShipOfResidenceOptions();\n    getPDTypeOptions();\n\n    //employment details\n    getPDEmploymentDetails();\n    getEmploymentTypeOptions();\n    getIndustryOptions();\n    getCoreBusinessCategoryOptions();\n    getNoOfEmployeesOptions();\n    getBusinessConstitutionOptions();\n    getRelationShipNatureOptions();\n    getOwnerShipOfBusinessPremisesOptions();\n    getBusinessLocationOptions();\n    getStructureTypeOptions();\n    getSeasonalityOptions();\n    getBusinessTypeOptions();\n    getRentModeOptions();\n    getPropertyOwnedByOptions();\n    getTenantTypeOptions();\n\n    //reference details\n    getPDReferenceDetails();\n  };\n\n  const allStateLoaderFunc = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        initiationInfo: {\n          ...prevState.initiationInfo,\n          isInitiationInfoLoading: true,\n        },\n        PDDetails: {\n          ...prevState.PDDetails,\n          isPDDetailsLoading: true,\n        },\n        familyDetails: {\n          ...prevState.familyDetails,\n          isFamilyDetailsLoading: true,\n        },\n        otherIncome: {\n          ...prevState.otherIncome,\n          isOtherIncomeLoading: true,\n        },\n        writeUpDetails: {\n          ...prevState.writeUpDetails,\n          isWriteUpLoading: true,\n        },\n        investmentDetails: {\n          ...prevState.investmentDetails,\n          isInvestmentDetailsLoading: true,\n        },\n        repaymentHistory: {\n          ...prevState.repaymentHistory,\n          isRepaymentHistoryLoading: true,\n        },\n      };\n    });\n  };\n\n  const getPersonalDiscussionDetails = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          PDDetails: {\n            ...prevState.PDDetails,\n            isPDDetailsLoading: true,\n          },\n        };\n      });\n    }\n\n    const PDData: any = await getPDDetails();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        PDDetails: {\n          ...prevState.PDDetails,\n          isPDDetailsLoading: false,\n          PDData: updatePDDetailsObj({ stage: { pd: PDData } }),\n          PDDetailsMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const getFamilyDetails = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          familyDetails: {\n            ...prevState.familyDetails,\n            isFamilyDetailsLoading: true,\n          },\n        };\n      });\n    }\n\n    const PDData: any = await getPDDetails();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        familyDetails: {\n          ...prevState.familyDetails,\n          isFamilyDetailsLoading: false,\n          familyData: updateFamilyObj({ stage: { pd: PDData } }),\n          familyDetailsMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const getOtherIncomeDetails = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          otherIncome: {\n            ...prevState.otherIncome,\n            isOtherIncomeLoading: true,\n          },\n        };\n      });\n    }\n\n    const PDData: any = await getPDDetails();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        otherIncome: {\n          ...prevState.otherIncome,\n          isOtherIncomeLoading: false,\n          otherIncomeData: updateOtherIncome({ stage: { pd: PDData } }),\n          otherIncomeMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const getWriteUpDetails = async (isIgnoreLoader?: boolean) => {\n    if (!isIgnoreLoader) {\n      setPageData((prevState: IPageData) => {\n        return {\n          ...prevState,\n          writeUpDetails: {\n            ...prevState.writeUpDetails,\n            isWriteUpLoading: true,\n          },\n        };\n      });\n    }\n\n    const PDData: any = await getPDDetails();\n\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        writeUpDetails: {\n          ...prevState.writeUpDetails,\n          isWriteUpLoading: false,\n          uid: PDData?.uid,\n          writeUpData: PDData?.workProfileDescription,\n          writeUpDetailsMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const checkWhetherToShowReferenceSection = (employmentDataArr: any[]) => {\n    const isTypeRentalIncomePresent = employmentDataArr?.some(\n      (employmentData: any, index: number) =>\n        employmentData?.smEmploymentNature ===\n        EMPLOYMENT_TYPE.EMPLOYMENT_TYPE_SELF_EMPLOYED_RENTAL_INCOME\n    );\n\n    return isTypeRentalIncomePresent;\n  };\n\n  const removeAllRentalRelatedReference = () => {\n    const employmentData = employmentDetailsRef.current.map(\n      (reference: IReferenceDetailsRef, index: number) => {\n        return employmentDetailsRef?.current?.[index]?.save() as IEmploymentDetailsRef;\n      }\n    );\n\n    if (employmentData.length && isEmploymentRemoved) {\n      const shouldShowReference: boolean = checkWhetherToShowReferenceSection(employmentData);\n      if (!shouldShowReference) {\n        const updatedReferenceDetails = pageData?.referenceDetails?.referenceDetailsList?.map(\n          (reference: any, index: number) => {\n            return { ...reference, isActive: false };\n          }\n        );\n\n        const payload = updatedReferenceDetails\n          ?.map((reference: any, index: number) => {\n            if (reference?.uid) {\n              return enrichReferenceDetailsObj(reference, loanId, stageId);\n            }\n          })\n          .filter(Boolean);\n\n        updatePDReferenceDetails(payload);\n      }\n\n      setShowReferenceSection(false);\n      setIsEmploymentRemoved(false);\n    }\n  };\n\n  const onAddAnotherRecording = () => {\n    const newDocument = {\n      ...dummySavedDocStructureInList,\n      listKey: Math.random().toString(36).substring(2),\n    };\n\n    setPageData((prev) => ({\n      ...prev,\n      personalDiscussionRecording: {\n        ...prev.personalDiscussionRecording,\n        pdRecordingData: [...prev.personalDiscussionRecording.pdRecordingData, newDocument],\n      },\n    }));\n  };\n\n  //delete document uploader from other documents template list\n  const deleteRecordingInList = (itemIndex?: number) => {\n    setPageData((prev: IPageData) => {\n      const newKycDocList = pageData.personalDiscussionRecording.pdRecordingData.filter(\n        (_: any, index: number) => index !== itemIndex\n      );\n      return {\n        ...prev,\n        personalDiscussionRecording: {\n          ...prev.personalDiscussionRecording,\n          pdRecordingData: [...newKycDocList],\n        },\n      };\n    });\n  };\n\n  const onSavePdRecordings = async () => {\n    const payloadData = pdRecordingRef.current?.save();\n    if (!payloadData) {\n      return;\n    }\n\n    try {\n      const res = await OtherDocumentService.saveDocument(STAGE.PD, \"\", payloadData);\n\n      if (validatePutAPIResponse(res)) {\n        setPageData((prev: IPageData) => ({\n          ...prev,\n          personalDiscussionRecording: {\n            ...prev.personalDiscussionRecording,\n            isPDRecordingLoading: true,\n            pdRecordingSectionMode: PAGE_MODE.VIEW,\n          },\n        }));\n\n        getPersonalDiscussionRecordings();\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onCancelPdRecordings = () => {\n    getPersonalDiscussionRecordings();\n    setPageData((prev: IPageData) => ({\n      ...prev,\n      personalDiscussionRecording: {\n        ...prev.personalDiscussionRecording,\n        pdRecordingSectionMode: PAGE_MODE.VIEW,\n      },\n    }));\n  };\n\n  const onRemovePdRecording = async (docInfo: IDocumentInfo, itemIndex: number) => {\n    if (docInfo.uid) {\n      const deletedOtherDoc = { ...docInfo };\n      deletedOtherDoc.isActive = false;\n\n      const payloadData = enrichPersonalDiscussionRecordings([deletedOtherDoc], {\n        loanUid: loanId,\n        applicantUid: allPDData?.stage?.applicant?.uid ?? null,\n        stageUid: stageId,\n      });\n\n      try {\n        const res = await OtherDocumentService.saveDocument(STAGE.PD, \"\", payloadData);\n\n        if (validatePutAPIResponse(res)) {\n          setPageData((prev: IPageData) => ({\n            ...prev,\n            personalDiscussionRecording: {\n              ...prev.personalDiscussionRecording,\n              isPDRecordingLoading: true,\n            },\n          }));\n\n          getPersonalDiscussionRecordings();\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n\n    if (itemIndex !== undefined) {\n      deleteRecordingInList(itemIndex);\n    }\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderInitiationInfo = () => {\n    const { isInitiationInfoLoading, initiationInfoMode, initiationInfoData } =\n      pageData.initiationInfo;\n\n    return isInitiationInfoLoading ? (\n      <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n    ) : (\n      <InitiationInfo\n        className=\"border border-primary-ptext-500 rounded-xl p-5 \"\n        pageMode={initiationInfoMode}\n        data={initiationInfoData}\n        loanId={loanId}\n        dropdownOptions={dropdownOptions}\n      />\n    );\n  };\n\n  const renderPDDetails = () => {\n    const { isPDDetailsLoading, PDDetailsMode, PDData } = pageData.PDDetails;\n\n    return (\n      <SaveComponent\n        pageMode={PDDetailsMode}\n        onCancel={onCancelPDDetails}\n        onEdit={onEditPDDetails}\n        onSave={onSavePDDetails}\n      >\n        {isPDDetailsLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <PDDetails ref={PDDetailsRef} pageMode={PDDetailsMode} data={PDData} />\n        )}\n      </SaveComponent>\n    );\n  };\n\n  const renderFamilyDetails = () => {\n    const { isFamilyDetailsLoading, familyDetailsMode, familyData } = pageData.familyDetails;\n\n    return (\n      <SaveComponent\n        pageMode={familyDetailsMode}\n        onCancel={onCancelFamilyDetails}\n        onEdit={onEditFamilyDetails}\n        onSave={onSaveFamilyDetails}\n      >\n        {isFamilyDetailsLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <FamilyDetails\n            ref={familyDetailsRef}\n            pageMode={familyDetailsMode}\n            data={familyData}\n            dropdownOptions={dropdownOptions}\n          />\n        )}\n      </SaveComponent>\n    );\n  };\n\n  const renderEmploymentDetails = () => {\n    const { isEmploymentDetailsLoading, employmentDetailsList } = pageData.employmentDetails;\n\n    return (\n      <div className=\"flex flex-col gap-4 \">\n        {employmentDetailsList?.map((employeeDetail: any, index: number) => (\n          <EmploymentDetails\n            key={employeeDetail?.uid ?? employeeDetail?.key}\n            ref={(refValue) => {\n              employmentDetailsRef.current[index] = refValue as IEmploymentDetailsRef;\n            }}\n            isLoading={isEmploymentDetailsLoading}\n            data={employeeDetail}\n            cardNumber={index + 1}\n            dropdownOption={dropdownOptions}\n            documentCategory={{\n              salaryDocumentCategory: DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_SALARIED_SALARY_PROOF,\n              businessDocumentCategory: DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_BUSINESS_PROOF_PD,\n              recordingDocumentCategory:\n                DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_EMPLOYMENT_RETAILS_RECORDING,\n            }}\n            onSaveEmploymentDetails={() => onSaveEmploymentDetails(index)}\n            onRemoveEmploymentDetails={() => onRemoveEmploymentDetails(index)}\n            onCancelEmploymentDetails={() => getPDEmploymentDetails(true)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderReferenceDetails = () => {\n    const { isReferenceDetailsLoading, referenceDetailsList } = pageData.referenceDetails;\n\n    return (\n      <div className=\"flex flex-col gap-4\">\n        {referenceDetailsList?.map((referenceDetail: any, index: number) => (\n          <ReferenceDetails\n            key={referenceDetail?.uid ?? referenceDetail?.key}\n            isSectionSaveWrapped\n            ref={(refValue) => {\n              referenceDetailsRef.current[index] = refValue as IReferenceDetailsRef;\n            }}\n            isLoading={isReferenceDetailsLoading}\n            data={referenceDetail}\n            cardNumber={index + 1}\n            dropdownOption={dropdownOptions}\n            onSaveReferenceDetails={() => onSaveReferenceDetails(index)}\n            onRemoveReferenceDetails={() => onRemoveReferenceDetails(index)}\n            onCancelReferenceDetails={() => getPDReferenceDetails(true)}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  const renderOtherIncome = () => {\n    const { otherIncomeData, isOtherIncomeLoading, otherIncomeMode } = pageData.otherIncome;\n\n    return (\n      <SaveComponent\n        pageMode={otherIncomeMode}\n        onCancel={onCancelOtherIncome}\n        onEdit={onEditOtherIncome}\n        onSave={onSaveOtherIncome}\n      >\n        <OtherIncome\n          ref={otherIncomeRef}\n          isLoading={isOtherIncomeLoading}\n          pageMode={otherIncomeMode}\n          data={otherIncomeData}\n        />\n      </SaveComponent>\n    );\n  };\n\n  const renderWriteUpDetails = () => {\n    const { writeUpData, isWriteUpLoading, writeUpDetailsMode, writeUpValidation } =\n      pageData.writeUpDetails;\n\n    return (\n      <SaveComponent\n        pageMode={writeUpDetailsMode}\n        onCancel={onCancelWorkProfileWriteUp}\n        onEdit={onEditWorkProfileWriteUp}\n        onSave={onSaveWriteUp}\n      >\n        {isWriteUpLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <RichTextEditor\n            ref={writeUpEditorRef}\n            initialValue={writeUpData}\n            validation={writeUpValidation}\n            onChange={handleEditorValidation}\n            disabled={writeUpDetailsMode === PAGE_MODE.VIEW}\n          />\n        )}\n      </SaveComponent>\n    );\n  };\n\n  const renderInvestmentDetails = () => {\n    const { isInvestmentDetailsLoading, investmentDetailsMode, investmentData } =\n      pageData.investmentDetails;\n\n    return (\n      <SaveComponent\n        title={\"label.investmentInfo.assets\"}\n        pageMode={investmentDetailsMode}\n        onCancel={onCancelInvestmentDetails}\n        onEdit={onEditInvestmentDetails}\n        onSave={onSaveInvestmentDetails}\n      >\n        <InvestmentDetails\n          ref={investmentDetailsRef}\n          isLoading={isInvestmentDetailsLoading}\n          pageMode={investmentDetailsMode}\n          stageId={stageId}\n          data={investmentData}\n        />\n      </SaveComponent>\n    );\n  };\n\n  const renderRepaymentHistory = () => {\n    const { isRepaymentHistoryLoading, repaymentHistoryMode, repaymentHistoryData } =\n      pageData.repaymentHistory;\n\n    return (\n      <SaveComponent\n        pageMode={repaymentHistoryMode}\n        onCancel={onCancelRepaymentHistory}\n        onEdit={onEditRepaymentHistory}\n        onSave={onSaveRepaymentHistory}\n      >\n        <RepaymentHistory\n          ref={repaymentHistoryRef}\n          isLoading={isRepaymentHistoryLoading}\n          pageMode={repaymentHistoryMode}\n          data={repaymentHistoryData}\n          stageId={stageId}\n          loanId={loanId}\n          applicantDetails={allPDData?.stage?.pd?.applicant}\n        />\n      </SaveComponent>\n    );\n  };\n\n  const renderPDRecordings = () => {\n    return (\n      <PersonalDiscussionRecording\n        ref={pdRecordingRef}\n        isLoading={pageData.personalDiscussionRecording.isPDRecordingLoading}\n        pdRecordings={pageData.personalDiscussionRecording.pdRecordingData}\n        sectionMode={pageData.personalDiscussionRecording.pdRecordingSectionMode}\n        payloadInfo={{\n          loanUid: loanId,\n          applicantUid: allPDData?.stage?.applicant?.uid ?? \"\",\n          stageUid: stageId,\n        }}\n        onRemoveDocFromList={onRemovePdRecording}\n      />\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <>\n      <div className=\"flex flex-col gap-4\">\n        <LazyLoader>\n          <Section className=\"mb-4\" title={\"heading.initiation.info\"}>\n            {renderInitiationInfo()}\n          </Section>\n          <Section title={\"heading.personal.discussion.details\"}>{renderPDDetails()}</Section>\n        </LazyLoader>\n\n        <LazyLoader>\n          <Section title={\"heading.family.details\"}>{renderFamilyDetails()}</Section>\n        </LazyLoader>\n\n        <LazyLoader>\n          <Section title={\"heading.employment.details\"}>\n            <>\n              {renderEmploymentDetails()}\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"label.dde.add.another.employmentDetail\"}\n                  onClick={onAddMoreEmployDetails}\n                />\n              </div>\n            </>\n          </Section>\n\n          {showReferenceSection ? (\n            <Section\n              title={\"heading.reference.details.self.employed.rental.income\"}\n              alertText={\"At least two reference detail is mandatory\"}\n            >\n              <>\n                {renderReferenceDetails()}\n                <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                    customLabel={\"label.dde.add.another.referenceDetail\"}\n                    onClick={onAddMoreReferenceDetails}\n                  />\n                </div>\n              </>\n            </Section>\n          ) : null}\n        </LazyLoader>\n\n        <LazyLoader>\n          <Section className=\"mb-4\" title={\"heading.other.income\"}>\n            {renderOtherIncome()}\n          </Section>\n\n          <Section title={\"heading.writeup.on.work.profile.business.model\"}>\n            {renderWriteUpDetails()}\n          </Section>\n        </LazyLoader>\n\n        <LazyLoader>\n          <Section className=\"mb-4\" title={\"heading.investmentDetails\"}>\n            {renderInvestmentDetails()}\n          </Section>\n\n          <Section className=\"mb-4\" title={\"heading.repayment.history\"}>\n            {renderRepaymentHistory()}\n          </Section>\n\n          <Section title={\"heading.pd.recordings\"}>\n            <Fragment>\n              <SaveComponent\n                title={\"heading.pd.recordingDoc\"}\n                pageMode={pageData.personalDiscussionRecording.pdRecordingSectionMode}\n                onSave={onSavePdRecordings}\n                onCancel={onCancelPdRecordings}\n                onEdit={() =>\n                  setPageData((prev: IPageData) => ({\n                    ...prev,\n                    personalDiscussionRecording: {\n                      ...prev.personalDiscussionRecording,\n                      pdRecordingSectionMode: PAGE_MODE.CREATE,\n                    },\n                  }))\n                }\n              >\n                {renderPDRecordings()}\n              </SaveComponent>\n\n              <div className=\"p-5 w-full rounded-xl bg-slate-100 mt-5\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                  customLabel={\"Add Another Recording\"}\n                  onClick={onAddAnotherRecording}\n                />\n              </div>\n            </Fragment>\n          </Section>\n        </LazyLoader>\n      </div>\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n};\n\nexport default PagePD;\n"],"names":["DEFAULT_PATH","DEFAULT_CORE_BUSINESS_PATH","BusinessService","BaseApiService","__publicField","start","limit","search","url","BusinessService$1","updateInitiationInfoObj","data","_a","_b","_c","_e","_d","_f","_g","_h","updatePDDetailsObj","pd","YES_NO","_i","_k","_j","_m","_l","_o","_n","_r","_q","_p","_s","_t","_u","_v","enrichPDObj","updateFamilyObj","enrichFamilyDetails","updateOtherIncome","numberFormatter","enrichOtherIncome","currencyFormatToNumber","updateInvestmentDetails","enrichInvestmentDetails","asset","enrichRepaymentHistory","loanId","stageId","ele","enrichLoanDocuments","loanDoc","index","prepareAttributes","prepareDocSections","updateEmploymentDetails","updatedEmploymentDetails","structLoanDocumentsFromAPIResponse","initialSavedDocumentStructure","reference","EMPLOYMENT_TYPE","enrichEmploymentDetails","pageId","type","preparedPayload","updateReferenceDetailsObj","enrichReferenceDetailsObj","documentSections","docSection","enrichPersonalDiscussionRecordings","documents","payloadInfo","document","LOAN_SECTION_KEY_TYPES","DOCUMENT_CATEGORY","validForUpload","idx","prepareDocumentSectionStructureForPDRecordings","sections","preparedStructure","structSavedDocStrucutureForPersonalDiscussionRecordings","initialReferenceData","ReferenceDetails","forwardRef","props","ref","pageMode","PAGE_MODE","isLoading","className","title","titleArgs","dropdownOption","renderHeaderContent","headerContainerClassName","isSectionSaveWrapped","cardNumber","onRemoveReferenceDetails","onSaveReferenceDetails","onCancelReferenceDetails","pageObj","setPageObj","useState","sectionMode","setSectionMode","addressRef","useRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","menuModel","useEffect","useImperativeHandle","onSave","onRemove","onCancel","resetValidator","validate","e","validateForm","isValid","handleChange","prevPageObj","onEdit","prevState","addressData","useMemo","address","pincode","city","state","renderAddress","jsx","Address","VARIANTS","renderContent","referenceName","knownInYears","mobileNo","relationshipNature","jsxs","React","InputBox","INPUT_STYLE_TYPE","InputAddon","SimpleDropDown","renderMain","Text","AclGuard","SkeletonCustom","SaveComponent","dynamicEmploymentSectionData","initialLoanDocsInfo","initialEmploymentData","initialDocsAndRecordingData","initialDocInfo","initialDeletedExistingDocsInApi","EmploymentDetails","children","documentCategory","onSaveEmploymentDetails","onRemoveEmploymentDetails","onCancelEmploymentDetails","setPageMode","preventStateUpdateDependentOnEmpType","setPreventStateUpdateDependentOnEmpType","renderConfig","setRenderConfig","referenceArray","setReferenceArray","recordingDocsArray","setRecordingDocsArray","salaryDocsList","setSalaryDocsList","businessDocsList","setBusinessDocsList","isSuggestionLoading","setIsSuggestionLoading","suggestionsTemplate","setSuggestionsTemplate","deletedListOfExistingDocsInApi","setDeletedListOfExistingDocsInApi","position","setPosition","toastMessage","setToastMessage","triggerToast","setTriggerToast","referenceDetailsRef","salaryProofDocumentUploaderRef","businessProofDocumentUploaderRef","recordingDocsUploaderRef","innerCardMenuRef","innerCardMenuModel","updateStateDependentOnDataChange","updateStateDependentOnEmploymentType","updateStateDependentOnRentAgreement","updateStateDependentOnRentMode","yearInCurrentEmp","calculateDateDifference","monthlyGrossSalary","monthlyDeductions","getSelectedEmploymentType","onSuccess","getCoreBusinessCategoryByIndustry","INDUSTRY_TYPE","res","validateGetAPIResponse","validateReference","allReferencesValid","getAllReferenceData","validateRecordingDocs","allRecordingDocsValid","getAllRecordingDocsUploaderData","resetAllDocUploaders","handleAmountInputChange","unformattedValue","handleFirstGenerationBusiness","handleAutoCompleteChange","name","value","resetReferenceValidator","resetAddressValidator","getAllData","onSaveSelfEmployedRentalIncome","onSaveSalariedOrSelfEmployed","uploadedDocsInfo","referenceValidation","recordingDocsValidation","onAddMoreReferenceDetails","newReferenceListItem","onAddMoreDocuments","newRecordingDocListItem","onRemoveReferenceDetail","deletedReference","newReferenceArr","_","onRemoveRecordingDocs","deletedDocOrRecording","newRecordingDocsArr","onClickMenu","event","dynamicActionMenuOptions","SECTION_NAME","menu","getRentalIncomeFinalData","loanDocumentsProof","getSalariedOrSelfEmployedFinalData","recordingDocsUploaderData","checkBusinessTypeDisabled","retrieveBusinessTypeInfo","OCCUPATION_TYPE","savedRecordingDocs","savedSalaryDocsList","savedBusinessDocsList","resetPageObj","coreBusinessData","RENT_MODE","searchAutoCompleteBank","BankAccountDetailsService","STATIC_MASTER_TYPE_TOAST_TEXT","itemBankTemplate","item","renderReferenceHeaderContent","ButtonBox","BUTTON_TYPE","renderReferenceDetails","Fragment","refValue","latitude","longitude","renderAddressSection","renderBusinessProofUploader","options","TextData","DocumentUploader","renderRecordingsOrDocuments","recordingDoc","renderSalaryProofUploader","renderSalariedEmployment","orgName","totalExpInYear","dateOfJoining","yearsInCurrentEmp","noOfEmp","businessConstitution","designation","monthlyNetSalary","annualBonus","performanceIncentive","SystemDatePicker","renderSelfEmployed","establishmentName","businessOwnerShip","yearsInCurrentBusiness","totalWorkExp","businessInCurrentLoc","businessManagedBy","resiCumOffice","sizeOfBusinessPremises","businessLocation","structureType","noOfEmpAtVisit","noOfOperationalDays","businessSeasonality","salaryPaidToEmp","creditorCycle","serviceOffered","rawMaterials","avgDailySales","lastSixMonthAvgMonthlySales","lastSixMonthHighestMonthlySales","lastSixMonthLowestMonthlySales","lastSixMonthAvgMonthlyPurchase","avgExpense","estimateGrossMargin","netMargin","stockSeenAtVisit","approachRoad","assetsInPremises","commentOnBusiness","firstGenerationBusiness","YES_NO_OPTIONS","RadioButton","InputError","_w","_x","_y","_z","_A","_B","InputTextArea","_C","_D","_E","_F","renderSelfEmployedRental","tenantName","tenantMobileNo","propertyOwnedBy","tenantType","areaOfProperty","rentAmount","rentPaidSinceMonths","rentAgreement","rentalAgreementDate","rentalStartDate","rentMode","rentReceiptBank","rentBankAccount","lastOneMonthAmountCollected","secondLastMonthAmountCollected","thirdLastMonthAmountCollected","tenureRentInMonths","escalation","remark","AutoComplete","MenuBox","initialFamilyData","FamilyDetails","dropdownOptions","familyType","noOfHouseholdMembers","noOfDependantsMembers","ownershipOfResidence","areaOfResidence","yearsInCurrentCity","detailsOnNeighbour","storyboard","initialInitiationInfoData","InitiationInfo","showMediaGallery","setShowMediaGallery","currentItemToViewInGallery","setCurrentItemToViewInGallery","initialMediaGallerySectionInfo","selectedDocsTableRef","customerTableRef","chipRef","textConverter","useTextConverter","onViewFile","rowData","preparedInfoInList","renderCustomerType","renderCustomerNameHeader","renderCustomerName","renderCustomerTable","ReadOnlyTable","Column","renderDocCategory","renderDocType","renderDocSection","renderAction","IconButton","BUTTON_TYPES","renderSelectedExistingDocs","dateOfInitiation","stage","pdType","assignTo","CCEmails","description","INITIATE_STAGE_OPTIONS","ChipsBox","MediaGallery","initialInvestmentInfoData","initialTableRowData","InvestmentDetails","assetOptions","setAssetOptions","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","tableRef","init","onTableSearch","getAssetTypeOptions","StaticMasterDataService","DROPDOWN_LIST_CODE","error","parseStandardAPIErrorMessage","handleInputChange","handleAssetChange","rowDataObj","handleAmountChange","amt","onAddAsset","preparedData","preparedAssets","onDeleteAsset","getValue","val","renderAssetsType","renderAmount","renderActions","investmentComments","EditableTableV2","FinancialService","ErrorDialog","initialOtherIncomeData","OtherIncome","handleOtherIncomeChange","totalRentalIncome","agriculturalIncome","FDDividendIncome","initialPDData","PDDetails","applicantType","customerName","placeOfVisit","dateOfPD","ITRAvailability","PLACE_OF_VISIT_OPTION","STAGE","PersonalDiscussionRecording","pdRecordings","onRemoveDocFromList","documentUploadRef","unsavedDocuments","unsavedDoc","otherDocument","DOC_UPLOADER_MODE","initialRepaymentHistoryData","RepaymentHistory","applicantDetails","repaymentHistoryDropdownOptions","setRepaymentHistoryDropdownOptions","CAM_APPLICANT_TYPE_OPTIONS","repaymentHistoryTableRef","getCustomerNameOptions","searchQueryForApplicant","CAM_APPLICANT_TYPE","searchQueryForCoApplicant","searchQueryForGuarantor","StageService","res1","res2","getFinancierTypeOptions","onAddRepaymentHistory","preparedRepaymentHistory","searchAutoCompleteInstitutionName","financierType","itemInstitutionNameTemplate","renderFinancierType","renderPurpose","LOAN_PURPOSE_OPTIONS","renderInstitutionName","renderSanctionAmount","renderOutstandingAmount","renderBalanceTenor","renderEMI","renderPastDefaults","renderSanctionTenor","renderNoOfBounces","renderROI","initialPageData","dummySavedDocStructureInList","PagePD","params","useParams","pageData","setPageData","allPDData","setAllPDData","showReferenceSection","setShowReferenceSection","isEmploymentRemoved","setIsEmploymentRemoved","setDropdownOptions","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","toastMessageRef","PDDetailsRef","familyDetailsRef","writeUpEditorRef","otherIncomeRef","investmentDetailsRef","repaymentHistoryRef","employmentDetailsRef","pdRecordingRef","getPersonalDiscussionRecordings","removeAllRentalRelatedReference","getAllStageDetails","isIgnoreLoader","allStateLoaderFunc","getPDDetails","PDService","getPDEmploymentDetails","actionType","shouldShowReference","checkWhetherToShowReferenceSection","savedEmpDetails","empDetail","ACTION_TYPE","getPDReferenceDetails","savedRefDetails","refDetail","OtherDocumentService","preparedListOfOtherDocuments","getFamilyTypeOptions","getOwnerShipOfResidenceOptions","getPDTypeOptions","getEmploymentTypeOptions","getIndustryOptions","Industry","getCoreBusinessCategoryOptions","getNoOfEmployeesOptions","getBusinessConstitutionOptions","getRelationShipNatureOptions","getOwnerShipOfBusinessPremisesOptions","getBusinessLocationOptions","getStructureTypeOptions","getSeasonalityOptions","getBusinessTypeOptions","getRentModeOptions","getPropertyOwnedByOptions","getTenantTypeOptions","validateEditor","wordcount","handleEditorValidation","onEditPDDetails","onCancelPDDetails","getPersonalDiscussionDetails","onEditFamilyDetails","onCancelFamilyDetails","getFamilyDetails","onEditOtherIncome","onCancelOtherIncome","getOtherIncomeDetails","onEditWorkProfileWriteUp","onCancelWorkProfileWriteUp","getWriteUpDetails","onEditInvestmentDetails","onCancelInvestmentDetails","onEditRepaymentHistory","onCancelRepaymentHistory","onSavePDDetails","payload","validatePutAPIResponse","onSaveFamilyDetails","onSaveOtherIncome","onSaveWriteUp","onSaveInvestmentDetails","onSaveRepaymentHistory","employmentType","uid","rest","validatePostAPIResponse","newEmploymentDetailsList","onAddMoreEmployDetails","newEmployListItem","updatePDReferenceDetails","newReferenceDetailsList","isIgnoreGETAPI","PDData","employmentDataArr","employmentData","updatedReferenceDetails","onAddAnotherRecording","newDocument","deleteRecordingInList","itemIndex","newKycDocList","onSavePdRecordings","payloadData","onCancelPdRecordings","onRemovePdRecording","docInfo","deletedOtherDoc","renderInitiationInfo","isInitiationInfoLoading","initiationInfoMode","initiationInfoData","renderPDDetails","isPDDetailsLoading","PDDetailsMode","renderFamilyDetails","isFamilyDetailsLoading","familyDetailsMode","familyData","renderEmploymentDetails","isEmploymentDetailsLoading","employmentDetailsList","employeeDetail","isReferenceDetailsLoading","referenceDetailsList","referenceDetail","renderOtherIncome","otherIncomeData","isOtherIncomeLoading","otherIncomeMode","renderWriteUpDetails","writeUpData","isWriteUpLoading","writeUpDetailsMode","writeUpValidation","RichTextEditor","renderInvestmentDetails","isInvestmentDetailsLoading","investmentDetailsMode","investmentData","renderRepaymentHistory","isRepaymentHistoryLoading","repaymentHistoryMode","repaymentHistoryData","renderPDRecordings","LazyLoader","Section","ToastCustom"],"mappings":"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"}