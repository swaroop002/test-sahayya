{"version":3,"file":"PagePartnerUserCreateViewEdit-026d1458.js","sources":["../../src/views/masterData/PartnerManagement/PagePartnerUserCreateViewEdit/PagePartnerUserCreateViewEdit.tsx"],"sourcesContent":["/**\n * Author : Sachin pandey\n * Created on : 20 Dec, 2023\n *\n **/\n\n/*\n  -------------------------------------------------------\n   Imports:\n  -------------------------------------------------------\n*/\nimport LoadingIcon from \"assets/img/common/Loading.svg\";\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport AutoComplete from \"components/AutoComplete/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputPassword from \"components/InputPassword/InputPassword\";\nimport InputTextArea from \"components/InputTextArea\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkPartnerUser } from \"routes\";\nimport PartnerMasterDataService from \"services/masterdata/Partners/PartnerMasterDataService\";\nimport StaticMasterTypeService from \"services/masterdata/StaticMaster/StaticMasterTypeService\";\nimport UserService from \"services/masterdata/User/UserService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  stringifyObject,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  ENTITY,\n  INPUT_STYLE_TYPE,\n  OPERATION_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\n/*\n  -------------------------------------------------------\n  PROPS:\n  -------------------------------------------------------\n*/\n\nconst PagePartnerUserCreateViewEdit = (props: RouteProps) => {\n  /*\n    -------------------------------------------------------\n      States\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState({\n    partnerName: \"\",\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    reasons: \"\",\n    description: \"\",\n    isActive: \"\",\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const toastMessageRef = useRef(null);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [partnerNameList, setPartnerNameList] = useState<any>([]);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [toastMessage, setToastMessage] = useState<any>(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [navigateBack, setNavigateBack] = useState(false);\n\n  const [uid, setUid] = useState<any>(\"\");\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n      -------------------------------------------------------\n        Hooks: useEffect\n      -------------------------------------------------------\n    */\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n    console.log(parsed.mode, \"hmm\");\n    setUid(parsed.uid);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n    if (parsed?.mode === PAGE_MODE.CREATE) {\n      setPageObj({\n        partnerName: \"\",\n        name: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        reasons: \"\",\n        description: \"\",\n        isActive: \"\",\n      });\n    }\n    getPartnerNameList();\n  }, []);\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  const getPartnerNameList = () => {\n    PartnerMasterDataService.getAll()\n      .then((res: any) => {\n        setPartnerNameList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  /*\n      -------------------------------------------------------\n        Handlers: Event handler for onChange, onBlur etc\n      -------------------------------------------------------\n    */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    console.log(name, value);\n    setPageObj((prevPageObj: any) => {\n      const updatedObj = {\n        ...prevPageObj,\n        [name]: value,\n      };\n      return updatedObj;\n    });\n  };\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /* \n      -------------------------------------------------------\n        ButtonClick Functions:\n      -------------------------------------------------------\n    */\n\n  const payloadForSave = () => {\n    const enrichObjForSave = {\n      name: pageObj.name,\n      lastName: pageObj.lastName,\n      email: pageObj.email,\n      sahayyaUserType: \"PARTNER_USER\", // fixed\n      reason: pageObj.reasons,\n      password: pageObj.password,\n      partner: pageObj.partnerName,\n      description: pageObj.description,\n    };\n    return enrichObjForSave;\n  };\n  const payloadForApprove = () => {\n    const enrichObjForUpdate = {\n      uid: uid,\n      name: pageObj.name,\n      lastName: pageObj.lastName,\n      email: pageObj.email,\n      sahayyaUserType: \"PARTNER_USER\", // fixed\n      reason: pageObj.reasons,\n      password: pageObj.password,\n      partner: pageObj.partnerName,\n      description: pageObj.description,\n    };\n    return enrichObjForUpdate;\n  };\n\n  const prepareToApprove = () => {\n    const payloadForApprove = {\n      uid: uid,\n      name: pageObj.name,\n      lastName: pageObj.lastName,\n      email: pageObj.email,\n      sahayyaUserType: \"PARTNER_USER\", // fixed\n      reason: pageObj.reasons,\n      password: pageObj.password,\n      partner: pageObj.partnerName,\n      description: pageObj.description,\n    };\n\n    let enrichForSave;\n    const finalJsonObject = payloadForApprove;\n    const initialJsonObject = initialData;\n    if (pageMode === PAGE_MODE.CREATE) {\n      enrichForSave = {\n        name: pageObj.name,\n        operationType: OPERATION_TYPE.CREATE,\n        entity: ENTITY.PARTNER_USER,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    } else {\n      enrichForSave = {\n        name: pageObj.name,\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.PARTNER_USER,\n        initialStateJson: stringifyObject(initialJsonObject),\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons ?? \"reason\",\n      };\n    }\n    return enrichForSave;\n  };\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n  useEffect(() => {\n    if (uid) {\n      getInitialData();\n    }\n  }, [uid]);\n  const [initialData, setInitData] = useState<any>({\n    partnerName: \"\",\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    reasons: \"\",\n    description: \"\",\n    isActive: \"\",\n  });\n  const getInitialData = () => {\n    UserService.getPartnerUserByID(uid)\n      .then((res: any) => {\n        setPageObj({\n          ...pageObj,\n          partnerName: res.data?.partner,\n          name: res.data.name,\n          lastName: res.data.lastName,\n          email: res.data.email,\n          reasons: res.data.reason,\n          description: res.data.description,\n          // isActive: res.data.isActive,\n        });\n        resetValidator();\n        setInitData({\n          name: res.data.name,\n          lastName: res.data.lastName,\n          email: res.data.email,\n          sahayyaUserType: \"PARTNER_USER\", // fixed\n          reason: res.data.reason,\n          // password: pageObj.password,\n          partner: {\n            uid: res.data?.partner?.uid,\n          },\n          password: \"\",\n          description: res.data.description,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const validateForm = async () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid() ?? false;\n\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const onSaveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n    const enrichForSave = payloadForSave();\n    const enrichForUpdate = payloadForApprove();\n\n    if (simpleValidator?.current?.allValid()) {\n      if (pageMode !== PAGE_MODE.CREATE) {\n        try {\n          const res = await UserService.update(uid, enrichForUpdate);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setPosition(\"bottom-right\");\n          setNavigateBack(true);\n        } catch (error) {\n          setErrorMessage(parseStandardAPIErrorMessage(error));\n        }\n      } else {\n        if (!isPasswordValidated) {\n          return;\n        }\n        try {\n          const res = await UserService.save(enrichForSave);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setPosition(\"bottom-right\");\n          setNavigateBack(true);\n        } catch (err) {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        }\n      }\n    } else {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n    }\n  };\n\n  const onCancelClick = () => {\n    props.navigate(linkPartnerUser);\n  };\n\n  const onApproveClick = async () => {\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      return;\n    }\n    const enrichedObj = prepareToApprove();\n    return StaticMasterTypeService.approve(enrichedObj)\n      .then((res) => {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SENT_FOR_APPROVAL);\n        setTriggerToast(!triggerToast);\n        setNavigateBack(true);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkPartnerUser);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  /* \n      -------------------------------------------------------\n        Helper Functions:\n      -------------------------------------------------------\n    */\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.partnerUser.create\";\n      case PAGE_MODE.VIEW:\n        return \"heading.partnerUser.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.partnerUser.edit\";\n      default:\n        return \"heading.partnerUser.create\";\n    }\n  };\n  const [isLoading, setIsLoading] = useState(false);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState([]);\n  const searchAutoCompleteReportingManager = async (event: any) => {\n    let suggestionsTemplate: any = [];\n    setIsLoading(true);\n    // https://sahayya.dev.vm.web-devapp.com/custom/api/partner/search?start=0&limit=10&name:lk=d&\n    // https://sahayya.dev.vm.web-devapp.com/custom/api/partner/search?start=0&limit=10&isActive=true&sahayyaUserType=EMPLOYEE_USER&name:lk=d\n    await PartnerMasterDataService.getAll(0, 10, `&name:lk=${event.query}&isActive=true`).then(\n      (res) => {\n        if (validateGetAPIResponse(res)) {\n          suggestionsTemplate = [...res.data.results];\n          setIsLoading(false);\n        }\n      }\n    );\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n  const itemTemplateForReportingManager = (item: any) => {\n    if (item.name === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39\">\n          <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n          <Text className=\"mt-2 text-primary-labelColor\" label=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item.name} />\n      </div>\n    );\n  };\n  const [isPasswordValidated, setIsPasswordValidated] = useState(false);\n  const handlePasswordValidityChange = (isPasswordValid: boolean) => {\n    // Now you can use the isPasswordValid value in your page\n\n    setIsPasswordValidated(isPasswordValid);\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n  const { partnerName, name, lastName, email, password, description, reasons, isActive } = pageObj;\n  return (\n    <AclGuard>\n      <div className=\"\">\n        <div className=\"flex items-center justify-between w-full\">\n          <Text\n            label={getPageTitle()}\n            className=\"flex font-bold text-primary-ptext-1000 text-h2 font-Roboto\"\n          />\n          <div className=\"flex mr-5\">\n            {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox\n                    className=\"reset-red\"\n                    buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n                    onClick={onCancelClick}\n                  />\n                </div>\n                <div className=\"mr-10\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                    onClickWithLoader={onSaveClick}\n                  />\n                </div>\n                <div>\n                  <ButtonBox\n                    className=\"approve-primary\"\n                    buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                    onClickWithLoader={onApproveClick}\n                  />\n                </div>\n              </>\n            ) : (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n                </div>\n                <div className=\"\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                    className=\"blue-primary\"\n                    onClick={onEditClick}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <AclGuard override={{ read: [PAGE_MODE.VIEW, PAGE_MODE.REVIEW].includes(pageMode) }}>\n          <div className=\"grid grid-cols-4 gap-3\">\n            <div className=\"col-span-1\">\n              {/* <SimpleDropDown\n              label=\"input.partnerUser.partnerName\"\n              name=\"partnerName\"\n              variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n              onChange={handleInputChange}\n              value={partnerName}\n              options={partnerNameList}\n              optionLabel=\"name\"\n              optionValue=\"uid\"\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `partnerName`,\n                partnerName,\n                \"mandatory\"\n              )}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            /> */}\n              <AutoComplete\n                label=\"input.partnerUser.partnerName\"\n                name=\"partnerName\"\n                placeholder=\"Type to search\"\n                field=\"name\"\n                value={partnerName}\n                variant={INPUT_STYLE_TYPE.PRIMARY}\n                suggestions={suggestionsTemplate}\n                completeMethod={searchAutoCompleteReportingManager}\n                onChange={handleInputChange}\n                itemTemplate={itemTemplateForReportingManager}\n                disabled={pageMode === PAGE_MODE.EDIT}\n                loader={isLoading}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.partnerUser.name\"\n                name=\"name\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={name}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(`name`, name, \"mandatory\")}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.partnerUser.lastName\"\n                name=\"lastName\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={lastName}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(`lastName`, lastName, \"mandatory\")}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.partnerUser.email\"\n                name=\"email\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={email}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(`email`, email, \"mandatory|email\")}\n                disabled={pageMode === PAGE_MODE.VIEW || pageMode === PAGE_MODE.EDIT}\n              />\n            </div>\n          </div>\n          {pageMode === PAGE_MODE.CREATE && (\n            <div className=\"grid grid-cols-4 gap-3\">\n              <div className=\"col-span-1\">\n                <InputPassword\n                  label=\"input.partnerUser.password\"\n                  placeholder={\"placeholder.partnerUser.password\"}\n                  name=\"password\"\n                  value={password}\n                  type=\"password\"\n                  onChange={handleInputChange}\n                  toggleMask\n                  onBlur={validate}\n                  validation={\n                    pageMode !== \"CREATE\"\n                      ? \"\"\n                      : simpleValidator?.current?.message(`password`, password, \"mandatory\")\n                  }\n                  showPasswordVerification\n                  onPasswordValidityChange={handlePasswordValidityChange}\n                />\n              </div>\n            </div>\n          )}\n          <div className=\"grid grid-cols-4 gap-3\">\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.partnerUser.description\"\n                name=\"description\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={description}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n            {pageMode !== PAGE_MODE.VIEW && (\n              <div className=\"col-span-2\">\n                <InputTextArea\n                  label=\"input.partnerUser.reasons\"\n                  name=\"reasons\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  maxCount={200}\n                  onChange={handleInputChange}\n                  value={reasons}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(`reasons`, reasons, \"mandatory\")}\n                  disabled={pageMode === PAGE_MODE.VIEW}\n                />\n              </div>\n            )}\n          </div>\n        </AclGuard>\n        <ErrorDialog\n          onHide={() => setShowDialogAPIError(false)}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n        <ToastCustom\n          position={position}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n          onRemove={() => {\n            if (navigateBack) {\n              props.navigate(linkPartnerUser);\n            }\n          }}\n        />\n      </div>\n    </AclGuard>\n  );\n};\n\nexport default withRouter(PagePartnerUserCreateViewEdit);\n"],"names":["PagePartnerUserCreateViewEdit","props","pageObj","setPageObj","useState","pageMode","setPageMode","PAGE_MODE","toastMessageRef","useRef","forceUpdate","partnerNameList","setPartnerNameList","showDialogAPIError","setShowDialogAPIError","errorMessage","setErrorMessage","position","setPosition","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","toastMessage","setToastMessage","triggerToast","setTriggerToast","navigateBack","setNavigateBack","uid","setUid","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","parsed","queryString","getPartnerNameList","_a","PartnerMasterDataService","res","err","handleInputChange","event","name","value","prevPageObj","resetValidator","payloadForSave","payloadForApprove","prepareToApprove","enrichForSave","finalJsonObject","initialJsonObject","initialData","OPERATION_TYPE","ENTITY","stringifyObject","getInitialData","setInitData","UserService","_c","_b","validateForm","isValid","validate","onSaveClick","STATIC_MASTER_TYPE_TOAST_TEXT","enrichForUpdate","error","parseStandardAPIErrorMessage","isPasswordValidated","onCancelClick","linkPartnerUser","onApproveClick","enrichedObj","StaticMasterTypeService","onBackClick","onEditClick","getPageTitle","isLoading","setIsLoading","suggestionsTemplate","setSuggestionsTemplate","searchAutoCompleteReportingManager","validateGetAPIResponse","itemTemplateForReportingManager","item","jsxs","jsx","LoadingIcon","Text","setIsPasswordValidated","handlePasswordValidityChange","isPasswordValid","partnerName","lastName","email","password","description","reasons","isActive","AclGuard","Fragment","ButtonBox","BUTTON_TYPE","AutoComplete","INPUT_STYLE_TYPE","InputBox","InputPassword","_d","InputTextArea","_e","ErrorDialog","ToastCustom","PagePartnerUserCreateViewEdit$1","withRouter"],"mappings":"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"}