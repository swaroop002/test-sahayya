{"version":3,"file":"PagePasswordReset-14323286.js","sources":["../../src/views/auth/PagePasswordReset/PagePasswordReset.tsx"],"sourcesContent":["/**\n * Author : Kaviraj RM\n * Created on : 24 May, 2023\n **/\n\n/*\n    --------------------------------------------------------------------------------------------------------------------\n    Imports:\n    --------------------------------------------------------------------------------------------------------------------\n  */\nimport sahayyaIllustration from \"assets/img/common/Sahayya_Illustration.svg\";\nimport sahayyaLogo from \"assets/img/common/Sahayya_Logo.svg\";\nimport ButtonBox from \"components/ButtonBox\";\nimport InputBox from \"components/InputBox\";\nimport SimpleButton from \"components/SimpleButton\";\nimport Text from \"components/Text/Text\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkPageLogin, linkPagePasswordResetOTP } from \"routes\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { BUTTON_STYLE_TYPE, BUTTON_TYPE } from \"utils/Constant\";\nimport queryString from \"query-string\";\nimport AuthService from \"services/AuthService\";\nimport InputError from \"components/InputError/InputError\";\n\n// -------------------------------------------------- IProps ----------------------------------------------------- //\ntype IProps = RouteProps\n\nfunction PasswordReset(props: IProps) {\n  /*\n    ----------------------------------------------------------------------------------------------------------------------\n    States\n    ----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const [pageObj, setPageObj] = useState({\n    emailId: \"\",\n    channel: \"EMAIL\",\n    actionType: \"RESET_PASSWORD\",\n    otp:\"\"\n  });\n\n  const [userData, setUserData] = useState({\n    username:\"waseem.akram@viamagus.com\",\n    password: \"password\"\n  })\n  const [error, setError] = useState([]);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  useEffect(() => {\n    const parsed: {\n      email?: string;\n    } = queryString.parse(props.location.search);\n    console.log(parsed);\n    if (parsed?.email && parsed?.email !== undefined) {\n      setPageObj({ ...pageObj, emailId: parsed?.email });\n    }\n  }, []);\n\n  /*\n    ----------------------------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    ----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Submit / Save Data Functions:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const onLogin = (e: any) => {\n    e.preventDefault();\n\n    if (simpleValidator?.current?.allValid()) {\n      AuthService.resetPasswordByOTP(pageObj)\n        .then((res) => {\n          if (res.status === 201) {\n            props.navigateNoAuth(`${linkPagePasswordResetOTP}?email=${emailId}`);\n          }\n        })\n        .catch((err) => {\n          const status = err.response.status;\n          if (status === 400) {\n            setError(err.response.data?.message);\n          }\n        });\n    } else {\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n    }\n  };\n\n  console.log(error);\n\n  const { emailId } = pageObj;\n  return (\n    <div className=\"flex justify-center relative h-screen\">\n      <div className=\"absolute left-6 top-6\">\n        <img src={sahayyaLogo} alt=\"Sahayya Logo\" />\n      </div>\n      <div className=\"w-102 z-10 px-9 mt-56 mb-35\">\n        <div className=\"flex justify-center\">\n          <Text\n            label=\"heading.auth.resetPassword\"\n            className=\"text-primary-primaryTextColor text-h1 font-Roboto font-bold\"\n          />\n        </div>\n        <div className=\"my-6 flex justify-center text-center\">\n          <Text\n            label=\"text.auth.resetPassword\"\n            className=\"text-primary-primaryTextColor text-xs font-Roboto\"\n          />\n        </div>\n        <div>\n          <InputBox\n            label=\"label.auth.login.emailID\"\n            name=\"emailId\"\n            placeholder={\"placeholder.auth.login.emailID\"}\n            value={emailId}\n            onChange={handleInputChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\"Email\", emailId, \"mandatory\")}\n          />\n        </div>\n\n        <div className=\" w-full mt-7\">\n          <SimpleButton\n            label=\"component.button.resetPassword\"\n            variant={BUTTON_STYLE_TYPE.PRIMARY}\n            onClick={onLogin}\n          />\n        </div>\n        {error.map((val, idx) => (\n          <InputError errorMessage={val} key={idx} />\n        ))}\n\n        <div className=\" w-full mt-12 flex items-center justify-center\">\n          <ButtonBox\n            buttonType={BUTTON_TYPE.ICON_TEXT_BACK_TO_LOGIN}\n            onClick={() => props.navigateNoAuth(`${linkPageLogin}`)}\n          />\n        </div>\n      </div>\n      <div className=\"absolute -bottom-6 \">\n        <img src={sahayyaIllustration} alt=\"search-icon\" className=\"max-w-fit w-full h-61\" />\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(PasswordReset);\n"],"names":["PasswordReset","props","pageObj","setPageObj","useState","error","setError","forceUpdate","simpleValidator","useRef","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","parsed","queryString","handleInputChange","event","name","value","prevPageObj","validate","_b","_a","onLogin","AuthService","res","linkPagePasswordResetOTP","emailId","err","jsxs","jsx","sahayyaLogo","Text","InputBox","SimpleButton","BUTTON_STYLE_TYPE","val","idx","InputError","ButtonBox","BUTTON_TYPE","linkPageLogin","sahayyaIllustration","PagePasswordReset","withRouter"],"mappings":"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"}