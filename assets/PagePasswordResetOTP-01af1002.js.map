{"version":3,"file":"PagePasswordResetOTP-01af1002.js","sources":["../../src/views/auth/PagePasswordResetOTP/PagePasswordResetOTP.tsx"],"sourcesContent":["/**\n * Author : Kaviraj RM\n * Created on : 24 May, 2023\n **/\n\n/*\n    --------------------------------------------------------------------------------------------------------------------\n    Imports:\n    --------------------------------------------------------------------------------------------------------------------\n  */\nimport sahayyaIllustration from \"assets/img/common/Sahayya_Illustration.svg\";\nimport sahayyaLogo from \"assets/img/common/Sahayya_Logo.svg\";\nimport LinkButton from \"components/LinkButton\";\nimport OTPBox from \"components/OTPBox\";\nimport SimpleButton from \"components/SimpleButton\";\nimport Text from \"components/Text/Text\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkPageNewPassword, linkPagePasswordReset } from \"routes\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { getStandardValidator, messageReplace } from \"utils/CommonUtil\";\nimport { BUTTON_STYLE_TYPE } from \"utils/Constant\";\nimport queryString from \"query-string\";\nimport AuthService from \"services/AuthService\";\nimport InputError from \"components/InputError/InputError\";\n\n// -------------------------------------------------- IProps ----------------------------------------------------- //\ninterface IProps extends RouteProps {}\n\nfunction PasswordResetOTP(props: IProps) {\n  /*\n    ----------------------------------------------------------------------------------------------------------------------\n    States\n    ----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const [pageObj, setPageObj] = useState({\n    channel: \"EMAIL\",\n    actionType: \"RESET_PASSWORD\",\n    emailId: \"\",\n    otp: \"\",\n  });\n\n  const [userData, setUserData] = useState({\n    username:\"waseem.akram@viamagus.com\",\n    password: \"password\"\n  })\n\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [error, setError] = useState([]);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  useEffect(() => {\n    let parsed: {\n      email?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.email && parsed?.email !== undefined) {\n      setPageObj({ ...pageObj, emailId: parsed?.email });\n    }\n  }, []);\n\n  /*\n    ----------------------------------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    ----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const handleInputChange = (e: any) => {\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      otp: e,\n    }));\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Submit / Save Data Functions:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const onLogin = async (e: any) => {\n    if (simpleValidator?.current?.allValid()) {\n        props.navigateNoAuth(`${linkPageNewPassword}?email=${emailId}&otp=${otp}`);\n    } else {\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n    }\n  };\n  const { otp, emailId } = pageObj;\n  return (\n    <div className=\"flex justify-center relative h-screen\">\n      <div className=\"absolute left-6 top-6\">\n        <img src={sahayyaLogo} alt=\"Sahayya Logo\" />\n      </div>\n      <div className=\"w-102 z-10 px-9 mt-56 mb-35\">\n        <div className=\"flex justify-center\">\n          <Text\n            label=\"heading.auth.resetPassword\"\n            className=\"text-primary-primaryTextColor text-h1 font-Roboto font-bold\"\n          />\n        </div>\n        <div className=\"my-6 flex justify-center text-center\">\n          <Text\n            label=\"text.auth.resetPasswordOTP\"\n            className=\"text-primary-primaryTextColor text-xs font-Roboto\"\n            args={{ email: emailId }}\n          />\n        </div>\n        <div className=\"ml-7.5\">\n          <OTPBox\n            OTPLength={6}\n            value={otp}\n            onChange={handleInputChange}\n            resendOTPClassName=\"flex-col mt-6\"\n            showTimer\n            hideLabel\n            validation={simpleValidator?.current?.message(\"otp\", otp, \"mandatory\")}\n            errorClassNames=\"!mr-5 !justify-center\"\n            onResendClick={() => {\n              console.log(\"resend\");\n            }}\n          />\n        </div>\n\n        <div className=\" w-full \">\n          <SimpleButton\n            label=\"component.button.verify\"\n            variant={BUTTON_STYLE_TYPE.PRIMARY}\n            onClickWithLoader={onLogin}\n          />\n        </div>\n\n        {error.map((val, idx) => (\n          <InputError errorMessage={val} key={idx} />\n        ))}\n\n        <div className=\"flex justify-center mt-11\">\n          <LinkButton label=\"link.auth.resetPasswordOTP.email\" path={linkPagePasswordReset} />\n        </div>\n      </div>\n      <div className=\"absolute -bottom-20 \">\n        <img src={sahayyaIllustration} alt=\"search-icon\" className=\"max-w-fit w-full h-61\" />\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(PasswordResetOTP);\n"],"names":["PasswordResetOTP","props","pageObj","setPageObj","useState","forceUpdate","error","setError","simpleValidator","useRef","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","parsed","queryString","handleInputChange","e","prevPageObj","onLogin","_a","linkPageNewPassword","emailId","otp","_b","jsxs","jsx","sahayyaLogo","Text","OTPBox","SimpleButton","BUTTON_STYLE_TYPE","val","idx","InputError","LinkButton","linkPagePasswordReset","sahayyaIllustration","PagePasswordResetOTP","withRouter"],"mappings":"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"}