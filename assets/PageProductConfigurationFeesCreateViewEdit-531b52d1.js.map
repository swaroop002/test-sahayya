{"version":3,"file":"PageProductConfigurationFeesCreateViewEdit-531b52d1.js","sources":["../../src/views/masterData/productConfiguration/PageProductConfigurationFees/PageProductConfigurationFeesCreateViewEdit/PageProductConfigurationFeesCreateViewEdit.tsx"],"sourcesContent":["/**\n * Author : Kaviraj Manampadi\n * Created on : 28 June, 2023\n * updated by :sachin pandey\n **/\n\n/*\n  -------------------------------------------------------\n   Imports:\n  -------------------------------------------------------\n*/\nimport LoadingIcon from \"assets/img/common/Loading.svg\";\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport AutoComplete from \"components/AutoComplete/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport CheckBox from \"components/CheckBox/CheckBox\";\nimport DatePicker from \"components/DatePicker/DatePicker\";\nimport EditableTable from \"components/EditableTable/EditableTable\";\nimport EditableTableV2 from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport Menubox from \"components/MenuBox\";\nimport PageTitle from \"components/PageTitle/PageTitle\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { numberFormatter } from \"locale\";\nimport { Column } from \"primereact/column\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkProductConfigurationFees, linkProductConfigurationFeesCreateViewEdit } from \"routes\";\nimport BankMasterDataService from \"services/masterdata/Banks/BankMasterDataService\";\nimport ProductConfigFeesService from \"services/masterdata/ProductConfig/ProductConfigFeesService\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport StaticMasterTypeService from \"services/masterdata/StaticMaster/StaticMasterTypeService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  convertDateToISO,\n  currencyFormatToNumber,\n  formatDate,\n  getLocalStorage,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  parsedDateFromAPIValue,\n  stringifyObject,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  AUTOCOMPLETE_MESSAGES,\n  BUTTON_TYPE,\n  CHECKBOX_STYLE_TYPE,\n  DROPDOWN_STYLE_TYPE,\n  ENTITY,\n  INPUT_STYLE_TYPE,\n  LOCAL_STORAGE,\n  OPERATION_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { getParsedDate } from \"utils/Util\";\n\n/*\n  -------------------------------------------------------\n  PROPS:\n  -------------------------------------------------------\n*/\ntype IProps = RouteProps;\nconst CONFIGURATION_TYPE = {\n  VARIABLE: \"Variable\",\n  FIXED: \"Fixed\",\n};\nconst PageProductConfigurationFeesCreateViewEdit = (props: IProps) => {\n  /*\n    -------------------------------------------------------\n      States\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState({\n    changeName: \"\",\n    systemCode: \"\",\n    productType: \"\",\n    chargeType: \"\",\n    configurationType: \"\",\n    encrypted: \"\",\n    description: \"\",\n    reasons: \"\",\n    isActive: \"\",\n  });\n  const [initObj, setInitObj] = useState({\n    changeName: \"\",\n    systemCode: \"\",\n    productType: \"\",\n    chargeType: \"\",\n    configurationType: \"\",\n    encrypted: \"\",\n    description: \"\",\n    reasons: \"\",\n    isActive: \"\",\n  });\n\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const initialObj = {\n    bank: { uid: \"\" },\n    lendingType: { uid: \"\" },\n    amount: \"\",\n    isGst: false,\n    gstType: { uid: \"\" },\n    isWaiver: false,\n    isDefault: false,\n    cgst: \"\",\n    sgst: \"\",\n    igst: \"\",\n    amountInPercent: \"\",\n    applicableFrom: \"\",\n    applicableTo: \"\",\n    isAdded: true,\n  };\n\n  const isFirstRender = useRef(true);\n  const dataTableRef = useRef<any>(null);\n  const deleteRowRef = useRef(null);\n  const [dataTable, setDataTable] = useState({\n    limit: 1000,\n    loading: false,\n    totalRecords: 0,\n    start: 0,\n    search: \"\",\n    runCustomQuery: false,\n    records: [],\n  });\n  const [editModuleCardMenu, setEditModuleCardMenu] = useState([\n    {\n      items: [\n        {\n          label: \"Delete\",\n          className: \"\",\n        },\n      ],\n    },\n  ]);\n\n  const [feeRecordsUpdated, setFeeRecordsUpdated] = useState([]);\n  const toastMessageRef = useRef(null);\n  const [feeRecordsAdded, setFeeRecordsAdded] = useState([{ ...initialObj }]);\n  const [feeRecordsDeleted, setFeeRecordsDeleted] = useState([]);\n  const [uid, setUid] = useState<string | undefined>(undefined);\n  const [configurationTypeNameSelected, setConfigurationTypeNameSelected] = useState<\n    string | undefined\n  >(undefined);\n  const [productTypeList, setProductTypeList] = useState<any>([]);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [lendingTypeList, setLendingTypeList] = useState<any>([]);\n  const [gstTypeList, setGSTTypeList] = useState<any>([]);\n  const [chargeTypeList, setChargeTypeList] = useState<any>([]);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [configurationTypeList, setConfigurationTypeList] = useState<any>([]);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [navigateBack, setNavigateBack] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [bankList, setBankList] = useState<any>([]);\n  const [bankSearch, setBankSearch] = useState<any>(\"\");\n  const [renderFirst, setRenderFirst] = useState(true);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n  const [systemDate, setSystemDate] = useState<any>(\"\");\n  /*\n    -------------------------------------------------------\n      Hooks: useEffect\n    -------------------------------------------------------\n  */\n\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n    setUid(parsed.uid);\n    getProductType();\n    getChargeType();\n    getConfigurationType();\n    getLendingType();\n    getGSTType();\n\n    if (renderFirst && parsed.mode == \"CREATE\") {\n      dataTableRef?.current?.addRow(initialObj);\n      setRenderFirst(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (uid) {\n      getInitialData();\n    }\n  }, [uid]);\n  const getInitialData = () => {\n    ProductConfigFeesService.getFeeInfo(uid)\n      .then((res: any) => {\n        setPageObj({\n          ...pageObj,\n          chargeType: res?.data?.chargeType?.uid ?? \"\",\n          productType: res?.data?.productType?.uid ?? \"\",\n          changeName: res?.data?.name ?? \"\",\n          configurationType: res?.data?.configurationType.uid ?? \"\",\n          reasons: res?.data?.reason ?? \"\",\n          description: res?.data?.description ?? \"\",\n        });\n\n        setConfigurationTypeNameSelected(res?.data?.configurationType?.name);\n        setInitObj({\n          ...initObj,\n          chargeType: res?.data?.chargeType?.uid ?? \"\",\n          productType: res?.data?.productType?.uid ?? \"\",\n          changeName: res?.data?.name ?? \"\",\n          configurationType: res?.data?.configurationType.uid ?? \"\",\n          reasons: res?.data?.reason ?? \"\",\n          description: res?.data?.description ?? \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  // useEffect(() => {\n  //   const parsed: {\n  //     mode?: string;\n  //     uid?: string;\n  //   } = queryString.parse(props.location.search);\n\n  //   if (parsed?.mode && parsed?.mode !== undefined) {\n  //     setPageMode(parsed.mode);\n  //   }\n  //   if (renderFirst && parsed.mode == \"CREATE\") {\n  //     dataTableRef?.current?.addRow(initialObj);\n  //     setRenderFirst(false);\n  //   }\n  //   if (parsed?.uid && parsed?.uid !== undefined) {\n  //     setUid(parsed.uid);\n  //     ProductConfigFeesService.getFeeInfo(parsed.uid)\n  //       .then((res: any) => {\n  //         if (validateGetAPIResponse(res)) {\n  //           console.log(res);\n  //           if (res.data.length !== 0) {\n  //             setPageObj({\n  //               ...pageObj,\n  //               chargeType: res?.data?.chargeType?.uid ?? \"\",\n  //               productType: res?.data?.productType?.uid ?? \"\",\n  //               changeName: res?.data?.name ?? \"\",\n  //               configurationType: res?.data?.configurationType.uid ?? \"\",\n  //               reasons: res?.data?.reason ?? \"\",\n  //               description: res?.data?.description ?? \"\",\n  //             });\n  //             setInitObj({\n  //               ...initObj,\n  //               chargeType: res?.data?.chargeType?.uid ?? \"\",\n  //               productType: res?.data?.productType?.uid ?? \"\",\n  //               changeName: res?.data?.name ?? \"\",\n  //               configurationType: res?.data?.configurationType.uid ?? \"\",\n  //               reasons: res?.data?.reason ?? \"\",\n  //               description: res?.data?.description ?? \"\",\n  //             });\n  //           }\n  //         }\n  //       })\n  //       .catch((err) => {\n  //         setErrorMessage(parseStandardAPIErrorMessage(err));\n  //       });\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will fix later\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (pageMode == PAGE_MODE.EDIT || pageMode == PAGE_MODE.VIEW) {\n      if (isFirstRender.current) {\n        // Skip the effect on initial render\n        isFirstRender.current = false;\n        setFeeRecordsAdded([]);\n        // @ts-ignore: will fix later\n        dataTableRef?.current?.search();\n      }\n    }\n  }, [pageMode]);\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e.target.name);\n  };\n\n  /*\n    -------------------------------------------------------\n      Handlers: Event handler for onChange, onBlur etc\n    -------------------------------------------------------\n  */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    if (name == \"configurationType\") {\n      setConfigurationTypeNameSelected(\n        configurationTypeList.find((obj: any) => obj.uid === value).name\n      );\n\n      dataTableRef?.current.getCurrentRecords().map((obj: any) => {\n        obj.amount = \"\";\n        obj.amountInPercent = \"\";\n        return obj;\n      });\n    }\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  const getProductType = () => {\n    StaticMasterDataService.getAll(0, 10, `staticMasterType.code=PRODUCT_NAME`)\n      .then((res: any) => {\n        console.log(res);\n        setProductTypeList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const [timeOutLocal, setTimeOutLocal] = useState<any>(undefined);\n\n  const getChargeType = () => {\n    StaticMasterDataService.getAll(0, 10, `staticMasterType.code=CHARGE_TYPE`)\n      .then((res: any) => {\n        setChargeTypeList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getConfigurationType = () => {\n    StaticMasterDataService.getAll(0, 10, `staticMasterType.code=CONFIGURATION`)\n      .then((res: any) => {\n        setConfigurationTypeList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getLendingType = () => {\n    StaticMasterDataService.getAll(0, 10, `staticMasterType.code=PRODUCT_LENDING_TYPE`)\n      .then((res: any) => {\n        setLendingTypeList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getGSTType = () => {\n    StaticMasterDataService.getAll(0, 10, `staticMasterType.code=GST_TYPE`)\n      .then((res: any) => {\n        setGSTTypeList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  /* \n    -------------------------------------------------------\n      ButtonClick Functions:\n    -------------------------------------------------------\n  */\n\n  const prepareToSave = () => {\n    const detailRecords = [\n      ...(dataTableRef?.current?.getAddedRecords() ?? []),\n      ...(dataTableRef?.current?.getDeletedRecords() ?? []),\n      ...(dataTableRef?.current?.getUpdatedRecords() ?? []),\n    ];\n    console.log(detailRecords, \"check\");\n    const enrichForSave: any = {\n      productType: {\n        uid: pageObj?.productType,\n      },\n      chargeType: {\n        uid: pageObj?.chargeType,\n      },\n      configurationType: {\n        uid: pageObj?.configurationType,\n      },\n      name: pageObj?.changeName,\n      description: pageObj?.description,\n      reason: pageObj?.reasons,\n\n      feeConfigurations: detailRecords,\n    };\n\n    const preparedAssets: any = enrichForSave.feeConfigurations.map((asset: any) => {\n      return {\n        ...asset,\n        amount:\n          configurationTypeNameSelected === CONFIGURATION_TYPE.VARIABLE\n            ? asset.amountInPercent\n            : currencyFormatToNumber(asset.amount),\n        igst: parseFloat(`${asset.sgst}`) + parseFloat(`${asset.cgst}`) ?? null,\n        configurationType: {\n          uid: pageObj?.configurationType,\n        },\n      };\n    });\n    enrichForSave.feeConfigurations = preparedAssets;\n\n    enrichForSave.feeConfigurations.forEach((record: any) => {\n      if (configurationTypeNameSelected == CONFIGURATION_TYPE.VARIABLE) {\n        record.amountInPercent = parseFloat(record?.amountInPercent);\n        record.amount = null;\n      } else {\n        record.amountInPercent = null;\n      }\n      if (record?.applicableTo === \"\") {\n        record.applicableTo = null;\n      }\n      if (record?.gstType.uid === \"\") {\n        record.gstType = null;\n      }\n      if (!record.isGst) {\n        record.cgst = null;\n        record.igst = null;\n        record.sgst = null;\n      }\n    });\n\n    return enrichForSave;\n  };\n\n  const prepareToUpdate = () => {\n    const detailRecords = [\n      ...(dataTableRef?.current?.getAddedRecords() ?? []),\n      ...(dataTableRef?.current?.getDeletedRecords() ?? []),\n      ...(dataTableRef?.current?.getUpdatedRecords() ?? []),\n    ];\n\n    const enrichForSave: any = {\n      uid: uid,\n      productType: {\n        uid: pageObj?.productType,\n      },\n      chargeType: {\n        uid: pageObj?.chargeType,\n      },\n      configurationType: {\n        uid: pageObj?.configurationType,\n      },\n      name: pageObj?.changeName,\n      description: pageObj?.description,\n      reason: pageObj?.reasons,\n\n      feeConfigurations: detailRecords,\n    };\n\n    const preparedAssets: any = enrichForSave.feeConfigurations.map((asset: any) => {\n      return {\n        ...asset,\n        uid: asset.uid,\n        amount:\n          configurationTypeNameSelected === CONFIGURATION_TYPE.VARIABLE\n            ? asset.amountInPercent\n            : currencyFormatToNumber(asset.amount),\n        igst: parseFloat(`${asset.sgst}`) + parseFloat(`${asset.cgst}`) ?? null,\n        configurationType: {\n          uid: pageObj?.configurationType,\n        },\n      };\n    });\n    enrichForSave.feeConfigurations = preparedAssets;\n\n    enrichForSave.feeConfigurations.forEach((record: any) => {\n      // Resolve null condition for the amountInPercent and Amount i guess\n      if (configurationTypeNameSelected == CONFIGURATION_TYPE.VARIABLE) {\n        record.amountInPercent = parseFloat(record?.amountInPercent);\n        record.amount = null;\n      } else {\n        record.amountInPercent = null;\n      }\n      // Resolve null condition for applicableTo\n      if (record?.applicableTo === \"\") {\n        record.applicableTo = null;\n      }\n\n      // Resolve null condition for gstType.uid\n      if (record?.gstType?.uid === \"\") {\n        record.gstType = null;\n      }\n\n      // Resolve null condition for isGst\n      if (!record.isGst) {\n        record.cgst = null;\n        record.igst = null;\n        record.sgst = null;\n      }\n    });\n\n    return enrichForSave;\n  };\n  const validateForm = async () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n  const onSaveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n\n    isValid = await validateForm();\n\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n    if (simpleValidator?.current?.allValid()) {\n      if (pageMode === PAGE_MODE.CREATE) {\n        const enrichedObj = prepareToSave();\n        return ProductConfigFeesService.save(enrichedObj)\n          .then((res) => {\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setToastMessage(\"Saved Successfully\");\n            setTriggerToast(!triggerToast);\n            setNavigateBack(true);\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n            setNavigateBack(false);\n          });\n      } else {\n        const enrichedObj = prepareToUpdate();\n        return ProductConfigFeesService.update(uid, enrichedObj)\n          .then((res) => {\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setToastMessage(\"Saved Successfully\");\n            setTriggerToast(!triggerToast);\n            setNavigateBack(true);\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n            setNavigateBack(false);\n          });\n      }\n    } else {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n    }\n  };\n  const onToggleMenu = (rowData: any, props: any, e: any) => {\n    setEditModuleCardMenu((prevState) => [\n      {\n        ...prevState[0], // Retain the other properties of the first object\n        items: [\n          {\n            ...prevState[0].items[0], // Retain the other properties of the first item\n            command: () => {\n              deleteRow(rowData, props);\n            }, // Add the new key-value pair\n          },\n        ],\n      },\n    ]);\n\n    // @ts-ignore: will fix later\n    deleteRowRef?.current?.toggle(e);\n  };\n\n  const onCancelClick = () => {\n    props.navigate(linkProductConfigurationFees);\n  };\n\n  const prepareToApprove = () => {\n    let enrichForApprove;\n    if (pageMode === PAGE_MODE.CREATE) {\n      enrichForApprove = {\n        name: pageObj.changeName,\n        operationType: OPERATION_TYPE.CREATE,\n        entity: ENTITY.FEE,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(prepareToSave()),\n        reqPayload: stringifyObject(prepareToSave()),\n        reasonForChange: pageObj.reasons,\n      };\n    } else {\n      enrichForApprove = {\n        uid: uid,\n        name: pageObj.changeName,\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.FEE,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(prepareToSave()),\n        reqPayload: stringifyObject(prepareToUpdate()),\n        reasonForChange: pageObj.reasons,\n      };\n    }\n    return enrichForApprove;\n  };\n\n  const onApproveClick = () => {\n    \n    setErrorMessage(\"\");\n    if (simpleValidator?.current?.allValid()) {\n      const enrichedObj = prepareToApprove();\n      return StaticMasterTypeService.approve(enrichedObj)\n        .then((res) => {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(\"Sent For Approval Successfully\");\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setNavigateBack(false);\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    } else {\n      simpleValidator?.current?.showMessages();\n    }\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkProductConfigurationFees);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n    props.navigate(\n      `${linkProductConfigurationFeesCreateViewEdit}?mode=${PAGE_MODE.EDIT}&uid=${uid}`\n    );\n  };\n\n  const onAddRow = () => {\n    // @ts-ignore: will fix later\n    dataTableRef?.current?.addRow(initialObj);\n  };\n\n  const debounce = (func: any, delay: any) => {\n    clearTimeout(timeOutLocal);\n    setTimeOutLocal(setTimeout(func, delay));\n  };\n\n  const searchBank = (event: any) => {\n    if (event.query.length >= 1) {\n      debounce(getBankList, 1200);\n    } else {\n      setBankList([]);\n    }\n  };\n\n  const itemTemplate = (item: any) => {\n    if (item.name === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39\">\n          <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n          <Text className=\"text-primary-labelColor mt-2\" label=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item.name} />\n        <Text className=\"text-secondary-gray-500 text-xxs\" label={item.code} />\n        {/* <Text className=\"text-secondary-gray-500 text-xxs\" label={item.emailId} /> */}\n      </div>\n    );\n  };\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState([]);\n  const getBankList = async (event: any) => {\n    let suggestionsTemplate: any = [];\n    // const limit = 30;\n    // const searchParam = `&name:lk=${event.query}&`;\n    // totalRecords = totalRecords ?? 100;\n    // if (totalRecords >= startValue) {\n    //   BankMasterDataService.getAll(startValue, limit, searchParam).then((res) => {\n    //     const results = res.data?.results?.length > 0 ? [...res.data.results] : [];\n\n    //     if (results.length === 0) {\n    //       setBankList([{ name: AUTOCOMPLETE_MESSAGES.NO_Banks }]);\n    //     } else {\n    //       setBankList([...results]);\n    //     }\n    //   });\n    // }\n\n    await BankMasterDataService.getAll(0, 10, `&name:lk=${event.query}&`).then((res) => {\n      if (validateGetAPIResponse(res)) {\n        suggestionsTemplate = [...res.data.results];\n      }\n    });\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  /* \n    -------------------------------------------------------\n      Helper Functions:\n    -------------------------------------------------------\n  */\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.productConfiguration.fee.create\";\n      case PAGE_MODE.VIEW:\n        return \"heading.productConfiguration.fee.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.productConfiguration.fee.edit\";\n      default:\n        return \"heading.productConfiguration.fee.create\";\n    }\n  };\n\n  const onEditorValueChange = (props: any, value: any, field: any) => {\n    // @ts-ignore: will fix later\n    dataTableRef?.current?.updateRecords(props, value, field);\n    setTimeout(() => {\n      handleTableChange();\n    }, 2);\n  };\n\n  const handleTableChange = () => {\n    // @ts-ignore: will fix later\n    const records = dataTableRef?.current?.getAddedRecords();\n    setFeeRecordsAdded(records);\n    if (pageMode === PAGE_MODE.EDIT) {\n      // @ts-ignore: will fix later\n      const recordsUpdated = dataTableRef?.current?.getUpdatedRecords();\n      setFeeRecordsUpdated(recordsUpdated);\n    }\n  };\n\n  const renderBank = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-40 \">\n        <AutoComplete\n          placeholder=\"\"\n          value={rowData?.bank.name}\n          variant={DROPDOWN_STYLE_TYPE.PRIMARY}\n          suggestions={suggestionsTemplate}\n          completeMethod={getBankList}\n          onChange={(e: any) => {\n            const selectedUser = e.target.value;\n            const rowDataObj = { ...rowData };\n            if (typeof e.target.value === \"object\") {\n              rowDataObj.bank.uid = selectedUser.uid;\n            }\n            rowDataObj.bank.name = selectedUser;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          itemTemplate={itemTemplate}\n          field=\"name\"\n          onBlur={validate}\n          disabled={!rowData.temp && pageMode === PAGE_MODE.EDIT}\n          name={`Bank-${rowData.uid}`}\n          validation={simpleValidator?.current?.message(\n            `Bank-${rowData.uid}`,\n            rowData?.bank.uid,\n            \"autocomplete\"\n          )}\n        />\n      </div>\n    );\n  };\n\n  const renderLendingType = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-40 mt-1\">\n        <SimpleDropDown\n          variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n          options={lendingTypeList}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.lendingType.uid = e.target.value;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          value={rowData.lendingType?.uid ? rowData.lendingType?.uid : rowData.lendingType}\n          placeholder=\"\"\n          optionLabel=\"name\"\n          optionValue=\"uid\"\n          name={`lendingType-${rowData.uid}`}\n          onBlur={validate}\n          validation={simpleValidator?.current?.message(\n            `lendingType-${rowData.uid}`,\n            rowData.lendingType.uid,\n            \"mandatory\"\n          )}\n          disabled={!rowData.temp && pageMode === PAGE_MODE.EDIT}\n        />\n      </div>\n    );\n  };\n  const getValidationForAmount = () => {\n    if (configurationTypeNameSelected === CONFIGURATION_TYPE.VARIABLE) {\n      return \"mandatory|maxDecimal:2\";\n    } else {\n      return \"mandatory\";\n    }\n  };\n\n  const renderAmount = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-40\">\n        <InputBox\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            configurationTypeNameSelected !== CONFIGURATION_TYPE.VARIABLE\n              ? rowData.amount\n              : rowData.amountInPercent\n          }\n          placeholder=\"\"\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            if (configurationTypeNameSelected === CONFIGURATION_TYPE.VARIABLE) {\n              rowDataObj.amountInPercent = e.target.value;\n              rowDataObj.amount = null;\n              dataTableRef.current?.reportDataChange(rowDataObj);\n            } else {\n              const amt = currencyFormatToNumber(e.target.value);\n              rowDataObj.amount = numberFormatter(amt, \"en-IN\", 0);\n              rowDataObj.amountInPercent = null;\n              dataTableRef.current?.reportDataChange(rowDataObj);\n            }\n          }}\n          name={`amount${rowData.uid}`}\n          validation={simpleValidator?.current?.message(\n            `amount${rowData.uid}`,\n            configurationTypeNameSelected !== CONFIGURATION_TYPE.VARIABLE\n              ? rowData.amount\n              : rowData.amountInPercent,\n            getValidationForAmount()\n          )}\n          onBlur={validate}\n          className=\"text-right\"\n          disabled={!rowData.temp && pageMode === PAGE_MODE.EDIT}\n        />\n      </div>\n    );\n  };\n\n  const renderGST = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-7 flex items-center justify-center\">\n        <CheckBox\n          variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n          value={rowData?.isGst}\n          checked={rowData.isGst}\n          disabled={!rowData.temp && pageMode === PAGE_MODE.EDIT}\n          onChange={(e) => {\n            if (rowData?.gstType?.uid) {\n              rowData.gstType.uid = \"\";\n            }\n            if (rowData?.cgst) {\n              rowData.cgst = \"\";\n            }\n            if (rowData?.sgst) {\n              rowData.sgst = \"\";\n            }\n            const rowDataObj = { ...rowData };\n            if (rowDataObj?.isGst == true) {\n              resetValidator();\n            }\n\n            rowDataObj.isGst = e.target.checked;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n        />\n      </div>\n    );\n  };\n\n  const renderCGST = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-40\">\n        <InputBox\n          variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.cgst = e.target.value;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          value={rowData.cgst}\n          placeholder=\"\"\n          name={`cgst${rowData.uid}`}\n          onBlur={validate}\n          validation={\n            rowData.isGst === true\n              ? simpleValidator?.current?.message(`cgst${rowData.uid}`, rowData.cgst, \"mandatory\")\n              : false\n          }\n          className=\"text-right\"\n          disabled={(!rowData.temp && pageMode === PAGE_MODE.EDIT) || !rowData.isGst}\n        />\n      </div>\n    );\n  };\n\n  const renderSGST = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-40\">\n        <InputBox\n          variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.sgst = e.target.value;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          value={rowData.sgst}\n          placeholder=\"\"\n          name={`sgst-${rowData.uid}`}\n          onBlur={validate}\n          validation={\n            rowData.isGst === true\n              ? simpleValidator?.current?.message(`sgst-${rowData.uid}`, rowData.sgst, \"mandatory\")\n              : false\n          }\n          className=\"text-right\"\n          disabled={(!rowData.temp && pageMode === PAGE_MODE.EDIT) || !rowData.isGst}\n        />\n      </div>\n    );\n  };\n\n  const renderIGST = (rowData: any, props: any) => {\n    const igst = parseFloat(`${rowData.sgst}`) + parseFloat(`${rowData.cgst}`);\n\n    return (\n      <div className=\"w-40\">\n        <InputBox\n          variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n          value={isNaN(igst) ? \"\" : Number(igst.toFixed(1))}\n          placeholder=\"\"\n          onChange={(e) => {\n            onEditorValueChange(props, e.target.value, \"igst\");\n          }}\n          disabled\n        />\n      </div>\n    );\n  };\n\n  const renderWaiver = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-9 flex items-center justify-center\">\n        <CheckBox\n          variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n          value={rowData.isWaiver}\n          checked={rowData.isWaiver}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.isWaiver = e.target.checked;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          disabled={!rowData.temp && pageMode === PAGE_MODE.EDIT}\n        />\n      </div>\n    );\n  };\n\n  const renderDefault = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-9 mt-5\">\n        <CheckBox\n          variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n          value={rowData.isDefault}\n          checked={rowData.isDefault}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.isDefault = e.target.checked;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          hideLabel\n          disabled={!rowData.temp && pageMode === PAGE_MODE.EDIT}\n        />\n      </div>\n    );\n  };\n\n  const renderGSTType = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-40\">\n        <SimpleDropDown\n          variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n          options={gstTypeList}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            if (rowDataObj.gstType === null) {\n              rowDataObj.gstType = { uid: \"\" };\n              rowDataObj.gstType.uid = e.target.value;\n            } else {\n              rowDataObj.gstType.uid = e.target.value;\n            }\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          value={rowData.gstType?.uid ? rowData?.gstType?.uid : rowData?.gstType}\n          placeholder=\"\"\n          optionLabel=\"name\"\n          optionValue=\"uid\"\n          name={`gstType-${rowData.uid}`}\n          disabled={(!rowData.temp && pageMode === PAGE_MODE.EDIT) || !rowData.isGst}\n          onBlur={validate}\n          validation={\n            rowData.isGst === true\n              ? simpleValidator?.current?.message(\n                  `gstType-${rowData.uid}`,\n                  rowData.gstType,\n                  \"mandatory\"\n                )\n              : false\n          }\n        />\n      </div>\n    );\n  };\n  const [currentDate, setCurrentDate] = useState<any>(\"\");\n  const renderApplicableFrom = (rowData: any, props: any) => {\n   \n    const parsedDate = parsedDateFromAPIValue(rowData.applicableFrom);\n  \n    return (\n      <div className=\"w-40 mt-1\">\n        <DatePicker\n          disabled={!rowData.temp && pageMode === PAGE_MODE.EDIT}\n          name={`applicableFrom${rowData.uid}`}\n          value={rowData.applicableFrom != \"\" ? parsedDate : \"\"}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            if (rowDataObj.applicableTo) {\n              rowDataObj.applicableTo = \"\";\n            }\n            rowDataObj.applicableFrom = e.target.value;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          onBlur={validate}\n          validation={\n            new Date(rowData.expiryDate) < new Date(currentDate)\n              ? \"Applicable from Date should not be less than System Date\"\n              : simpleValidator?.current?.message(\n                  `applicableFrom${rowData.uid}`,\n                  rowData.applicableFrom,\n                  \"mandatory\"\n                )\n          }\n          placeholder=\"DD-MMM-YYYY\"\n        />\n      </div>\n    );\n  };\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n  const renderApplicableTo = (rowData: any, props: any) => {\n    return (\n      <div className=\" w-40 mt-1\">\n        <DatePicker\n          name={`applicableTo${rowData.uid}`}\n          value={rowData.applicableTo != null ? getParsedDate(rowData.applicableTo) : \"\"}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          onChange={(e) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.applicableTo = e.target.value ?? \"\";\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          minDate={getParsedDate(rowData.applicableFrom)}\n          placeholder=\"DD-MMM-YYYY\"\n        />\n      </div>\n    );\n  };\n\n  const deleteRow = (rowData: any, props: any) => {\n    // @ts-ignore: will fix later\n    dataTableRef?.current?.deleteRow(rowData);\n    resetValidator();\n    setTimeout(() => {\n      // @ts-ignore: will fix later\n      const records = dataTableRef?.current?.getAddedRecords();\n      // @ts-ignore: will fix later\n      const deletedRecords = dataTableRef?.current?.getDeletedRecords();\n      setFeeRecordsDeleted(deletedRecords);\n      setFeeRecordsAdded(records);\n    }, 2);\n  };\n\n  const renderActions = (rowData: any, props: any) => {\n    return (\n      <div className=\"flex items-center ml-2 \">\n        <ButtonBox\n          disabled={!rowData.temp}\n          buttonType={BUTTON_TYPE.MENU}\n          onClick={(e: any) => onToggleMenu(rowData, props, e)}\n          className=\"!rounded-none bg-transparent !hover:bg-primary-gray-300\"\n        />\n      </div>\n    );\n  };\n\n  const renderActionHeader = () => {\n    return <div className=\"flex items-center \">Actions</div>;\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n  const { changeName, productType, description, reasons, chargeType, configurationType } = pageObj;\n  return (\n    <AclGuard>\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex w-full justify-between  items-center\">\n          <PageTitle title={getPageTitle()} />\n\n          <div className=\"flex\">\n            {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <div className=\"flex gap-10\">\n                <div className=\"flex gap-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancelClick} />\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                    onClickWithLoader={onSaveClick}\n                  />\n                </div>\n                <div>\n                  <ButtonBox\n                    className=\"approve-primary\"\n                    buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                    onClickWithLoader={onApproveClick}\n                  />\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n                </div>\n                <div className=\"\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                    className=\"blue-primary\"\n                    onClick={onEditClick}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <AclGuard override={{ read: [PAGE_MODE.VIEW, PAGE_MODE.REVIEW].includes(pageMode) }}>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-3 !gap-y-6\">\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.masterData.productConfiguration.changeName\"\n                name=\"changeName\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={changeName}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                validation={simpleValidator?.current?.message(\n                  `changeName`,\n                  changeName,\n                  \"mandatory\"\n                )}\n                onBlur={validate}\n              />\n            </div>\n            <div className=\"col-span-1\"></div>\n            <div className=\"col-span-1\"></div>\n            <div className=\"col-span-1\"></div>\n            <div className=\"col-span-1\">\n              <SimpleDropDown\n                label=\"input.masterData.productConfiguration.productType\"\n                name=\"productType\"\n                variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                value={productType}\n                options={productTypeList}\n                onChange={handleInputChange}\n                disabled={pageMode === PAGE_MODE.VIEW || pageMode == PAGE_MODE.EDIT}\n                optionLabel=\"name\"\n                optionValue=\"uid\"\n                validation={simpleValidator?.current?.message(\n                  `productType`,\n                  productType,\n                  \"mandatory\"\n                )}\n                onBlur={validate}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <SimpleDropDown\n                label=\"input.masterData.productConfiguration.chargeType\"\n                name=\"chargeType\"\n                variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                value={chargeType}\n                options={chargeTypeList}\n                onChange={handleInputChange}\n                disabled={pageMode === PAGE_MODE.VIEW || pageMode == PAGE_MODE.EDIT}\n                optionLabel=\"name\"\n                optionValue=\"uid\"\n                validation={simpleValidator?.current?.message(\n                  `chargeType`,\n                  chargeType,\n                  \"mandatory\"\n                )}\n                onBlur={validate}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <SimpleDropDown\n                label=\"input.masterData.productConfiguration.configuration\"\n                name=\"configurationType\"\n                variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                value={configurationType}\n                options={configurationTypeList}\n                onChange={handleInputChange}\n                disabled={pageMode === PAGE_MODE.VIEW || pageMode == PAGE_MODE.EDIT}\n                optionLabel=\"name\"\n                optionValue=\"uid\"\n              />\n            </div>\n            <div className=\"col-span-1\"></div>\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.systemConfiguration.description\"\n                name=\"description\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={description}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.systemConfiguration.reasons\"\n                name=\"reasons\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={reasons}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                validation={simpleValidator?.current?.message(`reasons`, reasons, \"mandatory\")}\n                onBlur={validate}\n              />\n            </div>\n          </div>\n          <div className=\"mt-3 flex w-full justify-between\">\n            <Text\n              label=\"text.productConfiguration.fees\"\n              className=\"text-primary-ptext-1000 text-base font-Roboto font-bold flex\"\n            />\n            <ButtonBox buttonType={BUTTON_TYPE.ICON_TEXT_ROW} onClick={onAddRow} />\n          </div>\n          <div className=\"\">\n            <EditableTableV2\n              standardDataFormatPromise={ProductConfigFeesService.getAllFeeData}\n              uniqueKey=\"uid\"\n              search={`fee.uid=${uid}&`}\n              ref={dataTableRef}\n              className=\"border border-secondary-concrete px-0 overflow-x-auto mt-4 rounded-lg read-only-table !min-h-111 w-full\"\n              //hidePaginator\n              mode={pageMode === PAGE_MODE.CREATE ? \"CREATE\" : \"UPDATE\"}\n            >\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"Bank/Financier*\"\n                body={renderBank}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"Lending Type*\"\n                body={renderLendingType}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header={\n                  configurationTypeNameSelected == CONFIGURATION_TYPE.VARIABLE\n                    ? \"Amount*(%)\"\n                    : \"Amount*(₹)\"\n                }\n                body={renderAmount}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"GST\"\n                body={renderGST}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"GST Type\"\n                body={renderGSTType}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"Waiver\"\n                body={renderWaiver}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"Default\"\n                body={renderDefault}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"CGST(%)\"\n                body={renderCGST}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"SGST(%)\"\n                body={renderSGST}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"IGST(%)\"\n                body={renderIGST}\n              />\n\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"Applicable From*\"\n                body={renderApplicableFrom}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/6    h-12 pl-6\"\n                header=\"Applicable To\"\n                body={renderApplicableTo}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left -mt-5 text-xs w-1/6     h-12 pl-6\"\n                header={renderActionHeader}\n                body={renderActions}\n              />\n            </EditableTableV2>\n          </div>\n\n          <div className=\"\">\n            <ToastCustom\n              position={position}\n              ref={toastMessageRef}\n              toastText={toastMessage}\n              variant={toastMessageVariant}\n              onRemove={() => {\n                if (navigateBack) {\n                  props.navigate(linkProductConfigurationFees);\n                }\n              }}\n            />\n          </div>\n        </AclGuard>\n        <Menubox\n          className=\"w-20 bg-white font-Roboto text-xs text-primary-pText-1300 pt-2 rounded-lg mt-0.5 flex justify-center align-center shadow-autoCompletePanel\"\n          model={editModuleCardMenu}\n          ref={deleteRowRef}\n        />\n        <ErrorDialog\n          onHide={() => setShowDialogAPIError(false)}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />{\" \"}\n      </div>\n    </AclGuard>\n  );\n};\n\nexport default withRouter(PageProductConfigurationFeesCreateViewEdit);\n"],"names":["CONFIGURATION_TYPE","PageProductConfigurationFeesCreateViewEdit","props","pageObj","setPageObj","useState","initObj","setInitObj","pageMode","setPageMode","PAGE_MODE","initialObj","isFirstRender","useRef","dataTableRef","deleteRowRef","editModuleCardMenu","setEditModuleCardMenu","feeRecordsUpdated","setFeeRecordsUpdated","toastMessageRef","feeRecordsAdded","setFeeRecordsAdded","feeRecordsDeleted","setFeeRecordsDeleted","uid","setUid","configurationTypeNameSelected","setConfigurationTypeNameSelected","productTypeList","setProductTypeList","position","setPosition","forceUpdate","lendingTypeList","setLendingTypeList","gstTypeList","setGSTTypeList","chargeTypeList","setChargeTypeList","showDialogAPIError","setShowDialogAPIError","configurationTypeList","setConfigurationTypeList","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","navigateBack","setNavigateBack","errorMessage","setErrorMessage","renderFirst","setRenderFirst","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","parsed","queryString","getProductType","getChargeType","getConfigurationType","getLendingType","getGSTType","_a","getInitialData","ProductConfigFeesService","res","_b","_d","_c","_e","_f","_g","_h","_j","_i","_l","_k","_n","_m","_o","_p","_q","_r","err","validate","handleInputChange","event","name","value","obj","prevPageObj","StaticMasterDataService","parseStandardAPIErrorMessage","prepareToSave","detailRecords","enrichForSave","preparedAssets","asset","currencyFormatToNumber","record","prepareToUpdate","validateForm","isValid","onSaveClick","STATIC_MASTER_TYPE_TOAST_TEXT","enrichedObj","onToggleMenu","rowData","e","prevState","deleteRow","onCancelClick","linkProductConfigurationFees","prepareToApprove","enrichForApprove","OPERATION_TYPE","ENTITY","stringifyObject","onApproveClick","StaticMasterTypeService","onBackClick","onEditClick","linkProductConfigurationFeesCreateViewEdit","onAddRow","itemTemplate","item","jsxs","jsx","LoadingIcon","Text","suggestionsTemplate","setSuggestionsTemplate","getBankList","BankMasterDataService","validateGetAPIResponse","getPageTitle","onEditorValueChange","field","handleTableChange","records","recordsUpdated","renderBank","AutoComplete","DROPDOWN_STYLE_TYPE","selectedUser","rowDataObj","renderLendingType","SimpleDropDown","getValidationForAmount","renderAmount","InputBox","INPUT_STYLE_TYPE","amt","numberFormatter","renderGST","CheckBox","CHECKBOX_STYLE_TYPE","resetValidator","renderCGST","renderSGST","renderIGST","igst","renderWaiver","renderDefault","renderGSTType","currentDate","setCurrentDate","renderApplicableFrom","parsedDate","parsedDateFromAPIValue","DatePicker","renderApplicableTo","getParsedDate","deletedRecords","renderActions","ButtonBox","BUTTON_TYPE","renderActionHeader","changeName","productType","description","reasons","chargeType","configurationType","AclGuard","PageTitle","Fragment","InputTextArea","EditableTableV2","Column","ToastCustom","Menubox","ErrorDialog","PageProductConfigurationFeesCreateViewEdit$1","withRouter"],"mappings":"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"}