{"version":3,"file":"PagePropertyLoanLinking-0785ac02.js","sources":["../../src/views/transaction/PageDDE/Dedupe/PagePropertyLoanLinking/PagePropertyLoanLinking.tsx"],"sourcesContent":["import loaderIcon from \"assets/img/fileUploadIcons/Loading.png\";\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport DialogBox from \"components/Dialog/Dialog\";\nimport EditableTableV2, { Column } from \"components/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport Loader from \"components/Loader\";\nimport RadioButton from \"components/RadioButton/RadioButton\";\nimport ReadOnlyTable from \"components/ReadOnlyTable\";\nimport RichTextEditor from \"components/RichTextEditor\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport Section from \"components/Section\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SimpleTab from \"components/SimpleTab/SimpleTab\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport { DropdownChangeParams } from \"primereact/dropdown\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, { BaseSyntheticEvent, Fragment, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport DedupeService from \"services/transaction/DedupeService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  ADDRESS_TYPE_VALUES,\n  BUTTON_TYPE,\n  CURRENT_STAGE_STATUS,\n  DEDUPE_MATCHING_TYPE,\n  INPUT_STYLE_TYPE,\n  LINKAGE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\ninterface IPropertyLinkageDedupeTabs {\n  tabName: string;\n  key: string;\n}\ninterface IAddressInfo {\n  uid: string;\n  lanId: string;\n  stage: string;\n  applicantUid: string;\n  applicantFirstname: string;\n  applicantMiddlename: string;\n  applicantLastname: string;\n  applicantType: string;\n  addressType: string;\n  propertyType: string;\n  address: string;\n  city: string;\n  pincode: string;\n  state: string;\n  latitude: string | number;\n  longitude: string | number;\n}\n\ninterface IPageData {\n  loanUid: string;\n  stageUid: string;\n  linkProperty: {\n    linkPropertyPageMode: string;\n    addressInLoan: IAddressInfo[];\n  };\n  finalStatus: {\n    uid: string | null;\n    isFinalStatusLoading: boolean;\n    finalStatusPageMode: string;\n    status: string;\n    statusEditorData: string;\n  };\n}\n\ninterface ITableObj {\n  search: string;\n}\n\nconst initialAddressInfo: IAddressInfo = {\n  uid: \"\",\n  lanId: \"\",\n  stage: \"\",\n  applicantUid: \"\",\n  applicantFirstname: \"\",\n  applicantMiddlename: \"\",\n  applicantLastname: \"\",\n  applicantType: \"\",\n  addressType: \"\",\n  propertyType: \"\",\n  address: \"\",\n  city: \"\",\n  pincode: \"\",\n  state: \"\",\n  latitude: \"\",\n  longitude: \"\",\n};\n\nconst initialPageData = {\n  loanUid: \"\",\n  stageUid: \"\",\n  linkProperty: {\n    linkPropertyPageMode: PAGE_MODE.VIEW,\n    addressInLoan: [],\n  },\n  finalStatus: {\n    uid: \"\",\n    isFinalStatusLoading: false,\n    status: \"\",\n    statusEditorData: \"\",\n    finalStatusPageMode: PAGE_MODE.VIEW,\n  },\n};\n\nconst initialTableObj: ITableObj = {\n  search: \"\",\n};\n\nconst ADDRESS_TYPE_TAB_NAMES = {\n  [`${ADDRESS_TYPE_VALUES.COLLATERAL_PROPERTY}`]: \"Collateral Property\",\n  [`${ADDRESS_TYPE_VALUES.PERMANENT}`]: \"Permanent\",\n  [`${ADDRESS_TYPE_VALUES.RESIDENTIAL}`]: \"Residential\",\n};\n\nconst PagePropertyLoanLinking = () => {\n  // --------------------- states ---------------------- //\n\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  const [isPageLoading, setIsPageLoading] = useState<boolean>(true);\n  const [pageData, setPageData] = useState<IPageData>(initialPageData);\n  const [allLinkedAddressList, setAllLinkedAddressList] = useState<IAddressInfo[]>([]);\n  const [currentAddressInfo, setCurrentAddressInfo] = useState<IAddressInfo>(initialAddressInfo);\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n  const [propertyLinkTabsListForDedupe, setPropertyLinkTabsListForDedupe] = useState<\n    IPropertyLinkageDedupeTabs[]\n  >([]);\n  const [isSearchDialogVisible, setIsSearchDialogVisible] = useState<boolean>(false);\n  const [tableObj, setTableObj] = useState(initialTableObj);\n  const [tableSelectionDetails, setTableSelectionDetails] = useState<any>({\n    selectedRowData: {},\n    selectionObj: {},\n  });\n  const [lanAddPropertySearch, setLanAddPropertySearch] = useState(\"\");\n  const [isLanAddPropSearchLoading, setIsLanAddPropSearchLoading] = useState<boolean>();\n\n  // error handling states\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\"); //NOSONAR\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const tabRef = useRef<any>(null);\n  const addressDetailsTableRef = useRef<any>(null);\n  const linkPropertyTableRef = useRef<any>(null);\n  const matchedResultsTableRef = useRef<any>(null);\n  const statusEditorRef = useRef<any>(null);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    useEffect: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (params?.loanUid && params?.stageUid) {\n      setPageData((prev: IPageData) => ({\n        ...prev,\n        loanUid: params.loanUid ?? \"\",\n        stageUid: params.stageUid ?? \"\",\n      }));\n    }\n  }, [params?.stageUid, params?.loanUid]);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (pageData.loanUid) {\n      getLinkedLoanAddress();\n    }\n  }, [pageData.loanUid]);\n\n  useEffect(() => {\n    if (currentAddressInfo.uid) {\n      getPropertyLoanLinkFinalStatus();\n    }\n  }, [currentAddressInfo.uid]);\n\n  useEffect(() => {\n    let timerId: any;\n    if (lanAddPropertySearch) {\n      timerId = setTimeout(() => {\n        matchedResultsTableRef?.current?.search();\n        setIsLanAddPropSearchLoading(false);\n      }, 1000);\n    }\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [lanAddPropertySearch]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getLinkedLoanAddress = async () => {\n    const search = `loan.uid=${pageData.loanUid}&primaryAddressType=${\n      ADDRESS_TYPE_VALUES.COLLATERAL_PROPERTY\n    }&isActive=${true}`;\n\n    try {\n      const res = await DedupeService.getAddress(search);\n\n      if (validateGetAPIResponse(res)) {\n        const linkedAddressList: IAddressInfo[] = res?.data?.results?.map((record: any) => {\n          return {\n            uid: record?.uid ?? \"\",\n            lanId: record?.loan?.lanId ?? \"\",\n            applicantUid: record?.applicant?.uid ?? \"\",\n            applicantFirstname: record?.applicant?.firstName ?? \"\",\n            applicantMiddlename: record?.applicant?.middleName ?? \"\",\n            applicantLastname: record?.applicant?.lastName ?? \"\",\n            applicantType: record?.applicant?.applicantType ?? \"\",\n            addressType: record?.primaryAddressType ?? \"\",\n            propertyType: record?.propertyType ?? \"\",\n            address: record?.address ?? \"\",\n            city: record?.city?.name ?? \"\",\n            pincode: record?.pincode?.pinCode ?? \"\",\n            state: record?.city?.state?.name ?? \"\",\n            latitude: `${record?.latitude ?? 0}`,\n            longitude: `${record?.longitude ?? 0}`,\n          };\n        });\n\n        const preparePropertyTabsForCurrentLoan = linkedAddressList.map((record, idx) => ({\n          tabName: `${ADDRESS_TYPE_TAB_NAMES[record.addressType] ?? \"\"} ${idx + 1}`,\n          key: record.uid,\n        }));\n\n        setPageData((prev: IPageData) => ({\n          ...prev,\n          linkProperty: {\n            ...prev.linkProperty,\n            addressInLoan: linkedAddressList,\n          },\n        }));\n\n        setPropertyLinkTabsListForDedupe(preparePropertyTabsForCurrentLoan);\n        setAllLinkedAddressList(linkedAddressList);\n        setCurrentAddressInfo(linkedAddressList[activeIndex]);\n        setIsPageLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getPropertyLoanLinkFinalStatus = async () => {\n    const search = `linkedAddressUid=${currentAddressInfo.uid}&linkedLanId=${\n      currentAddressInfo.lanId\n    }&type=Status&isLinkage=${true}`;\n\n    setPageData((prev: IPageData) => {\n      return {\n        ...prev,\n        finalStatus: {\n          ...prev.finalStatus,\n          isFinalStatusLoading: true,\n        },\n      };\n    });\n\n    try {\n      const res = await DedupeService.getPropertyLinkageStatus(search);\n\n      if (validateGetAPIResponse(res)) {\n        //always one record will come in response in the results array\n        const statusInfo = res.data?.results?.[0];\n        if (statusInfo) {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              finalStatus: {\n                ...prev.finalStatus,\n                isFinalStatusLoading: false,\n                uid: statusInfo?.uid ?? \"\",\n                status: statusInfo?.action ?? \"\",\n                statusEditorData: statusInfo?.remark ?? \"\",\n              },\n            };\n          });\n        } else {\n          setPageData((prev: IPageData) => {\n            return {\n              ...prev,\n              finalStatus: {\n                ...prev.finalStatus,\n                uid: null,\n                isFinalStatusLoading: false,\n                status: \"\",\n                statusEditorData: \"\",\n                finalStatusPageMode: PAGE_MODE.VIEW,\n              },\n            };\n          });\n        }\n      }\n    } catch (err) {\n      console.log(err);\n      setPageData((prev: IPageData) => {\n        return {\n          ...prev,\n          finalStatus: {\n            ...prev.finalStatus,\n            isFinalStatusLoading: false,\n          },\n        };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleTabChange = (e: any) => {\n    setActiveIndex(e.index);\n    const currentAddressDetails: IAddressInfo[] = allLinkedAddressList.filter(\n      (applicant: IAddressInfo) => applicant.uid === propertyLinkTabsListForDedupe[e.index].key\n    );\n    setCurrentAddressInfo(currentAddressDetails[0]);\n  };\n\n  const handleChangeSearch = (e: BaseSyntheticEvent) => {\n    setIsLanAddPropSearchLoading(true);\n    setTableObj({ search: e.target.value });\n    setLanAddPropertySearch(e.target.value);\n  };\n\n  const handleTableSelection = (e: any, rowData: any) => {\n    setTableSelectionDetails({\n      selectedRowData: { ...rowData },\n      selectionObj: {\n        [e.target.name]: e.checked,\n      },\n    });\n  };\n\n  const handleStatusChange = (e: DropdownChangeParams) => {\n    setPageData((prev: IPageData) => ({\n      ...prev,\n      finalStatus: {\n        ...prev.finalStatus,\n        status: e.target.value,\n      },\n    }));\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSaveSelectedSearch = async () => {\n    const payload: any = enrichSelectedSearch();\n\n    try {\n      if ((payload?.address?.uid && payload?.lanId) || payload?.blackList) {\n        const res = await DedupeService.updateDedupe(payload);\n\n        if (validatePutAPIResponse(res)) {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setIsSearchDialogVisible(false);\n          setLanAddPropertySearch(\"\");\n          setTableObj({ search: \"\" });\n          setTableSelectionDetails({\n            selectedRowData: {},\n            selectionObj: {},\n          });\n          linkPropertyTableRef?.current?.search();\n        }\n      } else {\n        setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n        setToastMessage(\"Failed to link\");\n        setTriggerToast(!triggerToast);\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onCancelLanAddPropertySearch = () => {\n    setIsSearchDialogVisible(false);\n    setLanAddPropertySearch(\"\");\n    setTableObj({ search: \"\" });\n    setTableSelectionDetails({\n      selectedRowData: {},\n      selectionObj: {},\n    });\n    resetValidator();\n  };\n\n  const onSaveLinkProperty = async () => {\n    const payloadData = enrichDeleteLinkage();\n\n    try {\n      const res = await DedupeService.updateDedupeMultiple(payloadData);\n      if (validatePutAPIResponse(res)) {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        linkPropertyTableRef.current?.search();\n\n        setPageData((prev) => ({\n          ...prev,\n          linkProperty: {\n            ...prev.linkProperty,\n            linkPropertyPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onEditLinkProperty = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        linkProperty: {\n          ...prevState.linkProperty,\n          linkPropertyPageMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelLinkProperty = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        linkProperty: {\n          ...prevState.linkProperty,\n          linkPropertyPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n  };\n\n  const onSavePropertyLinkFinalStatus = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    const payload = enrichPropertyLinkFinalStatus();\n\n    try {\n      const res = await DedupeService.updateDedupeFinalStatus(payload);\n\n      if (validatePutAPIResponse(res)) {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageData((prev) => ({\n          ...prev,\n          finalStatus: {\n            ...prev.finalStatus,\n            finalStatusPageMode: PAGE_MODE.VIEW,\n          },\n        }));\n      }\n    } catch (err) {\n      console.log(err);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const onEditFinalStatus = () => {\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        finalStatus: {\n          ...prevState.finalStatus,\n          finalStatusPageMode: PAGE_MODE.EDIT,\n        },\n      };\n    });\n  };\n\n  const onCancelFinalStatus = () => {\n    getPropertyLoanLinkFinalStatus();\n    setPageData((prevState: IPageData) => {\n      return {\n        ...prevState,\n        finalStatus: {\n          ...prevState.finalStatus,\n          finalStatusPageMode: PAGE_MODE.VIEW,\n        },\n      };\n    });\n    resetValidator();\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const init = () => {\n    linkPropertyTableRef.current?.search();\n  };\n\n  const enrichSelectedSearch = () => {\n    const payloadData = {\n      isLinkage: true,\n      linkType: LINKAGE_TYPE.USER,\n      linkedLanId: currentAddressInfo.lanId, // collateral property lan\n      linkedAddressUid: currentAddressInfo.uid, // collateral property\n      lanId: tableSelectionDetails?.selectedRowData?.lanId, //lan Id of selected property for linkage\n      type: \"Address\",\n    };\n\n    if (tableSelectionDetails?.selectedRowData?.matchingList === DEDUPE_MATCHING_TYPE.BLACKLIST) {\n      const payloadDataBlackList = {\n        ...payloadData,\n        blackList: {\n          uid: tableSelectionDetails?.selectedRowData?.uid ?? null,\n        },\n        matchingList: DEDUPE_MATCHING_TYPE.BLACKLIST,\n      };\n      return payloadDataBlackList;\n    } else if (\n      tableSelectionDetails?.selectedRowData?.matchingList === DEDUPE_MATCHING_TYPE.SAHAYYA_LIST\n    ) {\n      return {\n        ...payloadData,\n        address: {\n          uid: tableSelectionDetails?.selectedRowData?.addressUid, //addressUid of selected property for linkage\n        },\n      };\n    }\n\n    return payloadData;\n  };\n\n  const enrichDeleteLinkage = () => {\n    const deleteLinkages = [\n      ...(linkPropertyTableRef?.current?.getUpdatedRecords() ?? []),\n      ...(linkPropertyTableRef?.current?.getDeletedRecords() ?? []),\n    ];\n    const payloadData = deleteLinkages?.map((record) => {\n      return {\n        uid: record?.uid ?? null,\n        isActive: false,\n      };\n    });\n\n    return payloadData;\n  };\n\n  const enrichPropertyLinkFinalStatus = () => {\n    const payloadData = {\n      uid: pageData.finalStatus.uid ? pageData.finalStatus.uid : null,\n      isLinkage: true,\n      linkedLanId: currentAddressInfo.lanId,\n      linkedAddressUid: currentAddressInfo.uid,\n      action: pageData.finalStatus.status,\n      remark: statusEditorRef.current?.editor?.getContent(),\n      type: \"Status\",\n    };\n\n    return payloadData;\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderLinkPropertyAction = (rowData?: any) => {\n    return (\n      <Fragment>\n        {LINKAGE_TYPE.USER === rowData?.link_type ? (\n          <IconButton\n            buttonType={BUTTON_TYPES.DELETE}\n            onClick={() => {\n              linkPropertyTableRef?.current?.deleteRow(rowData);\n            }}\n            disabled={pageData.linkProperty.linkPropertyPageMode === PAGE_MODE.VIEW}\n          />\n        ) : (\n          <></>\n        )}\n      </Fragment>\n    );\n  };\n\n  const renderLinkType = (rowData?: any) => {\n    if (rowData?.uid) {\n      return <Text className=\"\" label={rowData?.link_type ?? \"-\"} />;\n    }\n  };\n\n  const renderLoanAppNo = (rowData?: any) => {\n    if (rowData?.uid) {\n      return <Text className=\"\" label={rowData?.lan_id ?? \"-\"} />;\n    } else {\n      return <Text className=\"\" label={rowData?.lanId ?? \"-\"} />;\n    }\n  };\n\n  const renderFileStatus = (rowData?: any) => {\n    if (rowData?.uid) {\n      return <Text className=\"\" label={rowData?.loan_status ?? \"-\"} />;\n    }\n  };\n\n  const renderAddressType = (rowData?: any) => {\n    if (rowData?.linkedAddressUid) {\n      return (\n        <Text\n          className=\"\"\n          label={ADDRESS_TYPE_TAB_NAMES[`${rowData?.address?.primaryAddressType}`] ?? \"-\"}\n        />\n      );\n    } else if (rowData?.uid) {\n      return (\n        <Text\n          className=\"\"\n          label={ADDRESS_TYPE_TAB_NAMES[`${rowData?.primary_address_type}`] ?? \"-\"}\n        />\n      );\n    } else {\n      return <Text className=\"\" label={ADDRESS_TYPE_TAB_NAMES[`${rowData?.addressType}`] ?? \"-\"} />;\n    }\n  };\n\n  const renderPropertyID = (rowData?: any) => {\n    if (rowData?.uid) return <Text className=\"\" label={rowData?.property_id ?? \"-\"} />;\n  };\n\n  const renderAddress = (rowData?: any) => {\n    if (rowData?.linkedAddressUid) {\n      return <Text className=\"\" label={rowData?.address?.address ?? \"-\"} />;\n    } else if (\n      rowData?.uid &&\n      rowData?.linked_address_uid &&\n      rowData?.matching_list === DEDUPE_MATCHING_TYPE.SAHAYYA_LIST\n    ) {\n      return <Text className=\"\" label={rowData?.address_detail ?? \"-\"} />;\n    } else if (rowData?.matching_list === DEDUPE_MATCHING_TYPE.BLACKLIST) {\n      return <Text className=\"\" label={rowData?.bl_address ?? \"-\"} />;\n    } else {\n      return <Text className=\"\" label={rowData?.address ?? \"-\"} />;\n    }\n  };\n\n  const renderCity = (rowData?: any) => {\n    if (rowData?.linkedAddressUid) {\n      return <Text className=\"\" label={rowData?.address?.city?.name ?? \"-\"} />;\n    } else if (rowData?.matching_list === DEDUPE_MATCHING_TYPE.BLACKLIST) {\n      return <Text className=\"\" label={rowData?.bl_city ?? \"-\"} />;\n    } else if (rowData?.uid) {\n      return <Text className=\"\" label={rowData?.city ?? \"-\"} />;\n    } else {\n      return <Text className=\"\" label={rowData?.city ?? \"-\"} />;\n    }\n  };\n\n  const renderState = (rowData?: any) => {\n    if (rowData?.linkedAddressUid) {\n      return <Text className=\"\" label={rowData?.address?.city?.state?.name ?? \"-\"} />;\n    } else if (rowData?.matching_list === DEDUPE_MATCHING_TYPE.BLACKLIST) {\n      return <Text className=\"\" label={rowData?.bl_state ?? \"-\"} />;\n    } else if (rowData?.uid) {\n      return <Text className=\"\" label={rowData?.state ?? \"-\"} />;\n    } else {\n      return <Text className=\"\" label={rowData?.state ?? \"-\"} />;\n    }\n  };\n\n  const renderPincode = (rowData?: any) => {\n    if (rowData?.linkedAddressUid) {\n      return <Text className=\"\" label={rowData?.address?.pincode?.pinCode ?? \"-\"} />;\n    } else if (rowData?.matching_list === DEDUPE_MATCHING_TYPE.BLACKLIST) {\n      let pincode = rowData?.bl_pincode;\n      pincode = pincode?.split(\" \");\n      pincode = pincode?.join(\"\");\n      return <Text className=\"\" label={pincode ?? \"-\"} />;\n    } else if (rowData?.uid) {\n      return <Text className=\"\" label={rowData?.pincode ?? \"-\"} />;\n    } else {\n      return <Text className=\"\" label={rowData?.pincode ?? \"-\"} />;\n    }\n  };\n\n  const renderAddressDetails = () => {\n    return (\n      <ReadOnlyTable\n        value={[pageData.linkProperty.addressInLoan[activeIndex]]}\n        className=\"selected-existing-doc-read-table !min-h-auto\"\n        ref={addressDetailsTableRef}\n        dataKey=\"uid\"\n      >\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs py-3 pl-6\"\n          header={textConverter(\"label.section.addressDetails.address\")}\n          body={renderAddress}\n        />\n\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs py-3 pl-6\"\n          header={textConverter(\"label.section.addressDetails.city\")}\n          body={renderCity}\n        />\n\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs py-3 pl-6\"\n          header={textConverter(\"label.section.addressDetails.state\")}\n          body={renderState}\n        />\n\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs py-3 pl-6\"\n          header={textConverter(\"label.section.addressDetails.pincode\")}\n          body={renderPincode}\n        />\n      </ReadOnlyTable>\n    );\n  };\n\n  const renderLinkProperty = () => {\n    return (\n      <div className=\"flex flex-col justify-center items-start space-y-6\">\n        <div className=\"w-full flex justify-between items-center pr-2\">\n          <Text className=\"text-primary-ptext-1000 text-xs\" label={\"label.dedupe.details\"} />\n        </div>\n\n        <div className=\"w-full\">\n          <EditableTableV2\n            ref={linkPropertyTableRef}\n            standardDataFormatPromise={DedupeService.getLinkedAddress}\n            search={`&linkedaddressuid=${currentAddressInfo.uid}`}\n            paginator\n            uniqueKey=\"uid\"\n            mode={\"UPDATE\"}\n          >\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.linkType\")}\n              body={renderLinkType}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.loanApplicationNo\")}\n              body={renderLoanAppNo}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.fileStatus\")}\n              body={renderFileStatus}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.addressType\")}\n              body={renderAddressType}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.propertyID\")}\n              body={renderPropertyID}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.address\")}\n              body={renderAddress}\n            />\n\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.city\")}\n              body={renderCity}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.state\")}\n              body={renderState}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.pincode\")}\n              body={renderPincode}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.section.linkProperty.matchingList\")}\n              body={renderMatchingList}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={textConverter(\"label.dedupe.action\")}\n              body={renderLinkPropertyAction}\n            />\n          </EditableTableV2>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFinalStatus = () => {\n    const { isFinalStatusLoading, finalStatusPageMode, status, statusEditorData } =\n      pageData.finalStatus;\n\n    return isFinalStatusLoading ? (\n      <SkeletonCustom height=\"19rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n    ) : (\n      <div className=\"flex flex-col justify-center items-start w-full gap-y-3 mt-3\">\n        <div className=\"w-62.5\">\n          <SimpleDropDown\n            label={\"label.section.finalStatus.status*\"}\n            name=\"status\"\n            options={[...CURRENT_STAGE_STATUS]}\n            optionLabel=\"label\"\n            optionValue=\"value\"\n            value={status}\n            onChange={handleStatusChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(`status`, status, \"mandatory\")}\n            disabled={pageData.finalStatus.finalStatusPageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n\n        <RichTextEditor\n          ref={statusEditorRef}\n          initialValue={statusEditorData}\n          disabled={finalStatusPageMode === PAGE_MODE.VIEW}\n        />\n      </div>\n    );\n  };\n\n  const renderSelect = (rowData: any) => {\n    return (\n      <RadioButton\n        name={`${rowData?.addressUid ? rowData?.addressUid : rowData?.uid}`}\n        checked={tableSelectionDetails?.selectionObj?.[rowData?.addressUid || rowData?.uid]}\n        onChange={(e) => handleTableSelection(e, rowData)}\n        hideLabel\n        hideErrorRow\n      />\n    );\n  };\n\n  const renderMatchingList = (rowData?: any) => {\n    if (rowData?.uid && rowData?.linked_address_uid) {\n      return <Text className=\"\" label={rowData?.matching_list ?? \"-\"} />;\n    } else {\n      return <Text className=\"\" label={rowData?.matchingList ?? \"-\"} />;\n    }\n  };\n\n  const renderBranch = (rowData?: any) => {\n    return <Text className=\"\" label={rowData?.branch ?? \"-\"} />;\n  };\n\n  const renderApplicantName = (rowData?: any) => {\n    if (rowData?.firstName || rowData?.lastName) {\n      return (\n        <Text\n          className=\"\"\n          label={`${rowData?.firstName ?? \"\"} ${rowData?.middleName ?? \"\"} ${\n            rowData?.lastName ?? \"\"\n          }`}\n        />\n      );\n    }\n  };\n\n  const renderLinkDialog = () => {\n    return (\n      <DialogBox className=\"!w-3/5 !py-4 px-8\" visible={isSearchDialogVisible} closable={false}>\n        <div className=\"flex flex-col justify-start gap-3\">\n          <div className=\"flex justify-between items-center\">\n            <Text\n              className=\"text-base font-bold text-primary-primaryTextColor\"\n              label={\"label.search.searchProperty\"}\n            />\n\n            <div className=\"flex items-center gap-4\">\n              <ButtonBox\n                buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n                onClick={onCancelLanAddPropertySearch}\n              />\n\n              <ButtonBox\n                buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                className=\"create-button mr-1\"\n                onClickWithLoader={onSaveSelectedSearch}\n              />\n            </div>\n          </div>\n\n          <hr />\n\n          <div className=\"w-full relative\">\n            <InputBox\n              name=\"lanAddPropertySearch\"\n              className=\"!h-6\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              placeholder={\"Search LAN, Address or Property ID\"}\n              value={lanAddPropertySearch}\n              onChange={handleChangeSearch}\n              autoComplete=\"off\"\n            />\n            {isLanAddPropSearchLoading && lanAddPropertySearch && (\n              <div className=\"w-4 h-4 absolute top-0 bottom-0 right-0 my-auto mx-2\">\n                <img className=\"animate-spin\" src={loaderIcon} alt=\"loader\" />\n              </div>\n            )}\n          </div>\n\n          <div className=\"w-full\">\n            <ReadOnlyTable\n              ref={matchedResultsTableRef}\n              standardDataFormatPromise={DedupeService.getSuggestionsForPropertyLinkSearch}\n              search={tableObj.search ? tableObj.search : \"null\"}\n              className=\"!min-h-auto\"\n              dataKey=\"uid\"\n            >\n              <Column\n                className=\"text-primary-ptext-1000 text-xs p-1 h-12 px-3 flex justify-center items-center\"\n                header={textConverter(\"label.search.selectOnlyOne\")}\n                body={renderSelect}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.matchingList\")}\n                body={renderMatchingList}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.loanApplicationNo\")}\n                body={renderLoanAppNo}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.branch\")}\n                body={renderBranch}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.applicantName\")}\n                body={renderApplicantName}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.propertyID\")}\n                body={renderPropertyID}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.address\")}\n                body={renderAddress}\n              />\n\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.city\")}\n                body={renderCity}\n              />\n\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.state\")}\n                body={renderState}\n              />\n\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n                header={textConverter(\"label.search.pincode\")}\n                body={renderPincode}\n              />\n            </ReadOnlyTable>\n          </div>\n        </div>\n      </DialogBox>\n    );\n  };\n\n  const renderContent = (customerDedupe: any) => {\n    return (\n      <div className=\"mt-4\" key={customerDedupe?.key}>\n        <Section>\n          <div className=\"flex flex-col gap-4\">\n            <div className={`border border-primary-ptext-500  rounded-xl p-5 flex flex-col gap-3`}>\n              <div className={` flex items-center justify-between`}>\n                <Text\n                  className=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n                  label={\"label.section.addressDetails\"}\n                />\n              </div>\n              {renderAddressDetails()}\n            </div>\n\n            <SaveComponent\n              pageMode={pageData.linkProperty.linkPropertyPageMode}\n              title={\"heading.section.linkProperty\"}\n              onCancel={onCancelLinkProperty}\n              onEdit={onEditLinkProperty}\n              onSave={onSaveLinkProperty}\n              onLink={() => {\n                setIsSearchDialogVisible(true);\n              }}\n            >\n              {renderLinkProperty()}\n            </SaveComponent>\n\n            <SaveComponent\n              pageMode={pageData.finalStatus.finalStatusPageMode}\n              title={\"heading.section.finalStatus\"}\n              onCancel={onCancelFinalStatus}\n              onEdit={onEditFinalStatus}\n              onSave={onSavePropertyLinkFinalStatus}\n            >\n              {renderFinalStatus()}\n            </SaveComponent>\n          </div>\n        </Section>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n  if (isPageLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <React.Fragment>\n      <SimpleTab\n        className=\"simple-tab-custom\"\n        showTooltip\n        scrollable\n        optionLabel={[\"tabName\"]}\n        optionKey={[\"key\"]}\n        headerClassName=\"\"\n        ref={tabRef}\n        activeIndex={activeIndex}\n        tabs={propertyLinkTabsListForDedupe}\n        onTabChange={handleTabChange}\n        renderContent={renderContent}\n      />\n\n      {renderLinkDialog()}\n\n      <ToastCustom\n        position={position}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PagePropertyLoanLinking;\n"],"names":["initialAddressInfo","initialPageData","PAGE_MODE","initialTableObj","ADDRESS_TYPE_TAB_NAMES","ADDRESS_TYPE_VALUES","PagePropertyLoanLinking","params","useParams","isPageLoading","setIsPageLoading","useState","pageData","setPageData","allLinkedAddressList","setAllLinkedAddressList","currentAddressInfo","setCurrentAddressInfo","activeIndex","setActiveIndex","propertyLinkTabsListForDedupe","setPropertyLinkTabsListForDedupe","isSearchDialogVisible","setIsSearchDialogVisible","tableObj","setTableObj","tableSelectionDetails","setTableSelectionDetails","lanAddPropertySearch","setLanAddPropertySearch","isLanAddPropSearchLoading","setIsLanAddPropSearchLoading","position","setPosition","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","useRef","tabRef","addressDetailsTableRef","linkPropertyTableRef","matchedResultsTableRef","statusEditorRef","textConverter","useTextConverter","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","init","getLinkedLoanAddress","getPropertyLoanLinkFinalStatus","timerId","_a","search","res","DedupeService","validateGetAPIResponse","linkedAddressList","_b","record","_c","_d","_e","_f","_g","_h","_j","_i","preparePropertyTabsForCurrentLoan","idx","err","parseStandardAPIErrorMessage","statusInfo","validate","validateForm","isValid","resetValidator","handleTabChange","currentAddressDetails","applicant","handleChangeSearch","handleTableSelection","rowData","handleStatusChange","onSaveSelectedSearch","payload","enrichSelectedSearch","validatePutAPIResponse","STATIC_MASTER_TYPE_TOAST_TEXT","onCancelLanAddPropertySearch","onSaveLinkProperty","payloadData","enrichDeleteLinkage","onEditLinkProperty","prevState","onCancelLinkProperty","onSavePropertyLinkFinalStatus","enrichPropertyLinkFinalStatus","onEditFinalStatus","onCancelFinalStatus","LINKAGE_TYPE","DEDUPE_MATCHING_TYPE","deleteLinkages","renderLinkPropertyAction","Fragment","jsx","IconButton","BUTTON_TYPES","renderLinkType","Text","renderLoanAppNo","renderFileStatus","renderAddressType","renderPropertyID","renderAddress","renderCity","renderState","renderPincode","pincode","renderAddressDetails","jsxs","ReadOnlyTable","Column","renderLinkProperty","EditableTableV2","renderMatchingList","renderFinalStatus","isFinalStatusLoading","finalStatusPageMode","status","statusEditorData","SkeletonCustom","SimpleDropDown","CURRENT_STAGE_STATUS","RichTextEditor","renderSelect","RadioButton","e","renderBranch","renderApplicantName","renderLinkDialog","DialogBox","ButtonBox","BUTTON_TYPE","InputBox","INPUT_STYLE_TYPE","loaderIcon","renderContent","customerDedupe","Section","SaveComponent","Loader","React","SimpleTab","ToastCustom","ErrorDialog"],"mappings":"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"}