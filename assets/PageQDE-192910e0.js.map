{"version":3,"file":"PageQDE-192910e0.js","sources":["../../src/components/ConfirmPopup/ConfirmPopup.tsx","../../src/components/ScoreCard/ScoreCard.tsx","../../src/services/transaction/QDE/QDE.ts","../../src/views/transaction/PageQDE/Helper.ts","../../src/views/transaction/PageQDE/PageQDE.tsx"],"sourcesContent":["import Close from \"assets/img/buttonIcons/Close.svg\";\nimport Confirm from \"assets/img/buttonIcons/Confirm.svg\";\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport DialogBox from \"components/Dialog\";\nimport Text from \"components/Text\";\nimport React from \"react\";\nimport { BUTTON_TYPE } from \"utils/Constant\";\n\ninterface IConfirmPopupProps {\n  visible: boolean;\n  title: string;\n  description: string;\n  confirmActionTitle: string;\n  closeActionTitle: string;\n  onConfirm: () => void;\n  onClose: () => void;\n}\n\nconst ConfirmPopup: React.FC<IConfirmPopupProps> = (props: IConfirmPopupProps) => {\n  const { visible, title, description, confirmActionTitle, closeActionTitle, onConfirm, onClose } =\n    props;\n\n  /* ---------------- Event Handlers------------------------------- */\n\n  const onConfirmAction = () => {\n    onConfirm();\n  };\n\n  const onCloseAction = () => {\n    onClose();\n  };\n\n  return (\n    <div>\n      <DialogBox\n        className={`!w-77 !p-0 rounded-masterDataPageRadius`}\n        visible={visible}\n        closable={false}\n      >\n        <div className=\"py-4 px-12 flex flex-col gap-4 items-center justify-center\">\n          <Text\n            className=\"font-bold text-base text-center text-primary-primaryTextColor\"\n            label={title ?? \"\"}\n          />\n          <Text\n            className=\"text-xs text-center text-primary-primaryTextColor\"\n            label={description ?? \"\"}\n          />\n          <div className={`action-btn-container flex gap-9 justify-center items-center text-xs`}>\n            <div className=\"gap-1.5\">\n              <ButtonBox\n                buttonType={BUTTON_TYPE.YES}\n                onClick={onConfirmAction}\n                className=\"w-8 h-8\"\n              />\n            </div>\n\n            <div className=\"gap-1.5\">\n              <ButtonBox\n                buttonType={BUTTON_TYPE.NO_OUTLINE}\n                onClick={onCloseAction}\n                className=\"w-8 h-8\"\n              />\n            </div>\n          </div>\n        </div>\n      </DialogBox>\n    </div>\n  );\n};\n\nexport default React.memo(ConfirmPopup);\n","import Text from \"components/Text/Text\";\nimport React from \"react\";\n\ninterface IScoreCardProps{\n label:string;\n score:number;\n}\nconst ScoreCard: React.FC<IScoreCardProps> = ({label,score}: IScoreCardProps) => {\n  // const { title, scor, min, max } = props;\n\n  // let score = 200;\n\n  // Define your minimum and maximum values\n  const minScore = 0;\n  const maxScore = 1000;\n\n  // Determine the relevant text based on the score\n  let status;\n  let textColorClass;\n\n  if (score < minScore) {\n    status = \"label.component.text.poor\";\n    textColorClass = \"text-primary-deepForestGreen\"; // Change this to the desired class for \"Poor\" text color\n  } else if (score >= minScore && score < maxScore * 0.25) {\n    status = \"label.component.text.fair\";\n    textColorClass = \"text-primary-goldenSaffron\"; // Change this to the desired class for \"Fair\" text color\n  } else if (score >= maxScore * 0.25 && score < maxScore * 0.75) {\n    status = \"label.component.text.good\";\n    textColorClass = \"text-primary-emeraldEnvy\"; // Change this to the desired class for \"Good\" text color\n  } else {\n    status = \"label.component.text.very.good\";\n    textColorClass = \"text-primary-mysticPine\"; // Change this to the desired class for \"Very Good\" text color\n  }\n\n  return (\n    <div className=\"flex flex-col justify-center items-center text-xs w-full text-primary-sideBarBgColor \">\n      <div className=\"text-base mb-4.25 font-medium\">\n        <Text className=\"\" label={label} />\n      </div>\n\n      <div className=\"font-medium\">\n        <Text className=\"\" label={\"label.component.text.score\"} />\n      </div>\n      <div className={`text-body-copy1 font-medium ${textColorClass}`}>\n        <Text className=\"\" label={`${score}`} />\n      </div>\n      <div className=\"mb-7.5 text-sm text-primary-deepForestGreen\">\n        <Text className=\"\" label={status} />\n      </div>\n\n      <div className=\"flex justify-between items-center w-full\">\n        <div className=\"flex flex-col justify-start items-center w-full gap-2\">\n          <div className=\"h-2.5 bg-semantic-crimson-600 w-[96%] rounded-xl\" />\n          <Text className=\"\" label={\"label.component.text.poor\"} />\n        </div>\n\n        <div className=\"flex flex-col justify-start items-center w-full gap-2\">\n          <div className=\"h-2.5 bg-primary-goldenSaffron w-[96%] rounded-xl\" />\n          <Text className=\"\" label={\"label.component.text.fair\"} />\n        </div>\n\n        <div className=\"flex flex-col justify-start items-center w-full gap-2\">\n          <div className=\"h-2.5 bg-primary-emeraldEnvy w-[96%] rounded-xl\" />\n          <Text className=\"\" label={\"label.component.text.good\"} />\n        </div>\n\n        <div className=\"flex flex-col justify-start items-center w-full gap-2\">\n          <div className=\"h-2.5 bg-primary-mysticPine w-[96%] rounded-xl\" />\n          <Text className=\"\" label={\"label.component.text.very.good\"} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreCard;\n","import BaseApiService from \"../../BaseApiService\";\n\nconst DEFAULT_PATH = \"/custom/api/login/qde/generatelan\";\n\nclass QDEService extends BaseApiService {\n  getAll = (start = 0, limit = 10, search = \"\") => {\n    const url = `${DEFAULT_PATH}/search?${search}start=${start}&limit=${limit}`;\n    return this.makeGetRequestWithAuth(url);\n  };\n  save = ( loanuid: string) => {\n    const url = `${DEFAULT_PATH}/${loanuid}`;\n    return this.makePutRequestWithAuth(url);\n  };\n}\n\nexport default new QDEService();\n","import { IUploadedFile } from \"components/FileUploadCustom/FileUploadCustom\";\nimport { APPLICANT_TYPE, DROPDOWN_LIST_CODE, LOAN_SECTION_KEY } from \"utils/Constant\";\nimport { IQdeResidentialAddress, ISourcingDetails } from \"./PageQDE\";\nimport {\n  IDocumentInfo,\n  IUploadedDocumentSection,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport { structLoanDocumentsFromAPIResponse } from \"../PageDDE/Login/Helper\";\n\nexport interface IDocumentProofFile extends IUploadedFile {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  docType?: { uid: string; code: string; name: string };\n  sectionCode?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\nexport interface IDocument {\n  fileName: string;\n  fileType: string;\n  thumbUrl: string;\n  url: string;\n  meta: string;\n  loanSectionKey?: string;\n  docType?: any;\n  section?: any;\n  isActive?: boolean;\n  signedUrl?: string;\n  contentType?: string;\n}\n\nexport interface IDocuments extends IDocument {\n  uid?: string; //individual uploaded file uid\n  docFor?: string;\n  signedUrl?: string;\n  docType?: { uid?: string; code?: string; name?: string };\n  sectionCode?: string;\n  sectionName?: string;\n  isActive?: boolean;\n}\n\ninterface ISectionDocuments extends IUploadedFile {\n  docFor?: string;\n  docTypeUid?: string;\n  isActive?: boolean;\n  uid?: string; //individual uploaded file uid\n}\n\nexport const initialDocInfo: ISectionDocuments = {\n  uid: \"\",\n  isActive: true,\n  fileName: \"\",\n  url: \"\",\n  thumbUrl: \"\",\n  signedUrl: \"\",\n  contentType: \"\",\n};\n\nconst prepareAttributes = (docInfo: IDocumentInfo) => {\n  const {\n    documentUid,\n    documentName,\n    documentCode,\n    documentCategory,\n    documentSectionUrls,\n    isActive,\n    uid,\n    primaryKeyAttributeName,\n    meta,\n    ...attributes\n  } = docInfo;\n\n  return JSON.stringify(attributes);\n};\n\nconst prepareDocSections = (documentSections: IUploadedDocumentSection[]) => {\n  const sections = documentSections.map((docSection: any) => ({\n    uid: docSection.uid ? docSection.uid : null,\n    section: docSection.code,\n    fileName: docSection.fileName,\n    fileType: docSection.contentType,\n    thumbUrl: docSection.thumbUrl,\n    url: docSection.url,\n    isActive: docSection.isActive,\n  }));\n  return sections;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nQDE - Address section\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const initialAddressDocInfo: IDocuments = {\n  uid: \"\",\n  fileName: \"\",\n  url: \"\",\n  thumbUrl: \"\",\n  signedUrl: \"\",\n  contentType: \"\",\n  docFor: \"\",\n  docType: { uid: \"\", code: \"\", name: \"\" },\n  sectionCode: \"\",\n  sectionName: \"\",\n  isActive: true,\n  fileType: \"\",\n  meta: \"\",\n  loanSectionKey: DROPDOWN_LIST_CODE.ADDRESS_PROOF,\n};\n\nconst updatedPayloadDocumentsData: any = (\n  documents: any,\n  loanId: string,\n  pageId: string,\n  loanSectionKey: string\n) => {\n  return documents?.map((document: any) => {\n    return {\n      uid: document?.uid ?? \"\",\n      loan: { uid: loanId },\n      applicant: { uid: pageId },\n      docType: {\n        uid: document.docType?.uid,\n      },\n      fileName: document?.fileName,\n      fileType: document?.contentType,\n      thumbUrl: document?.thumbUrl,\n      url: document?.url,\n      meta: \"\", //optional field\n      section: document?.sectionCode, //section code name,\n      isActive: document?.isActive,\n      loanSectionKey: loanSectionKey,\n    };\n  });\n};\n\nexport const enrichAddressData = (\n  data: any,\n  loanId: string,\n  applicantUid: string,\n  type: string\n) => {\n  const finalData = {\n    loan: { uid: loanId },\n    applicant: { uid: applicantUid, applicantType: type },\n    address: data.address,\n    smAddressType: data.smAddressType,\n    pincode: { uid: data?.pincode?.uid },\n    city: { uid: data?.city?.uid },\n    latitude: parseFloat(data?.latitude).toFixed(4),\n    longitude: parseFloat(data?.longitude).toFixed(4),\n    loanDocuments: data.addressDocumentsInfo.documentUid\n      ? [\n          {\n            uid: data.addressDocumentsInfo?.uid ?? null,\n            docType: {\n              uid: data.addressDocumentsInfo.documentUid,\n            },\n            docNo:\n              data.addressDocumentsInfo[`${data.addressDocumentsInfo.primaryKeyAttributeName}`] ??\n              null,\n            dob: data.addressDocumentsInfo?.dob ? data.addressDocumentsInfo?.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.ADDRESS_PROOF,\n            docCategory: data.addressDocumentsInfo.documentCategory,\n            attributes: prepareAttributes(data.addressDocumentsInfo),\n            documentSections: prepareDocSections(data.addressDocumentsInfo.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n  return finalData;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nQDE - sourcing details section\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const initialSourcingDetailObj: ISourcingDetails = {\n  loanRequestDetails: {\n    product: {\n      name: \"\",\n      uid: \"\",\n    },\n    loanAmount: \"\",\n    loanAmountInWords: \"\",\n    loanTenure: \"\",\n    loanTenureInWords: \"\",\n  },\n  sourceAndBranch: {\n    salesAgent: {\n      name: \"\",\n      uid: \"\",\n    },\n    branch: {\n      name: \"\",\n      uid: \"\",\n    },\n    salesManager: {\n      name: \"\",\n      uid: \"\",\n    },\n  },\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nQDE - basic information section\n-----------------------------------------------------------------------------------------------------------\n*/\n\nexport const enrichBasicInfoData = (data: any, loanId: string, applicantId: string) => {\n  const { documents, loanDocumentsInfo, ...payloadData } = data;\n\n  const updatedData: any = {\n    ...payloadData,\n    uid: data.uid || applicantId,\n    loanDocuments: loanDocumentsInfo.documentUid\n      ? [\n          {\n            uid: loanDocumentsInfo.uid,\n            docType: {\n              uid: loanDocumentsInfo.documentUid,\n            },\n            docNo: loanDocumentsInfo[`${loanDocumentsInfo.primaryKeyAttributeName}`] ?? null,\n            dob: loanDocumentsInfo.dob ? loanDocumentsInfo.dob : null,\n            loanSectionKey: LOAN_SECTION_KEY.DOB,\n            docCategory: loanDocumentsInfo.documentCategory,\n            attributes: prepareAttributes(loanDocumentsInfo),\n            documentSections: prepareDocSections(loanDocumentsInfo.documentSectionUrls),\n          },\n        ]\n      : [],\n  };\n\n  return {\n    loan: { uid: loanId },\n    applicantType: APPLICANT_TYPE.PRIMARY,\n    ...updatedData,\n  };\n};\n\nexport const updateResidentialAddressObj = (data: any): IQdeResidentialAddress => {\n  const obj = {\n    address: {\n      address: data?.address,\n      pincode: { pinCode: data?.pincode?.pinCode, uid: data?.pincode?.uid },\n      city: { name: data?.city?.name, uid: data?.city?.uid },\n      state: data?.city?.state?.name,\n      smAddressType: data?.smAddressType,\n      latitude: data?.latitude,\n      longitude: data?.longitude,\n    },\n    loanDocuments: structLoanDocumentsFromAPIResponse(data?.loanDocuments),\n  };\n\n  return obj;\n};\n","import AclGuard from \"components/AclGuard\";\nimport Address, { IAddressData, IAddressRef } from \"components/Address\";\nimport AutoComplete from \"components/AutoComplete\";\nimport BasicInformation, {\n  IBasicInformationData,\n  IBasicInformationRef,\n  initialBasicInformationData,\n} from \"components/BasicInformation\";\nimport ButtonBox from \"components/ButtonBox\";\nimport ConfirmPopup from \"components/ConfirmPopup/ConfirmPopup\";\nimport DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentUploaderRef,\n  dummySavedDocStructure,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport { IUploadedFile } from \"components/FileUploadCustom\";\nimport InputBox from \"components/InputBox\";\nimport { IAadharOTP, IAadharVerification, IPopulateOcr } from \"components/KYCV3\";\nimport KYCV3 from \"components/KYCV3/KYCV3\";\nimport { PLACE_OF_UPLOAD_KYC } from \"components/MediaGallery/MediaGallery\";\nimport SaveComponent from \"components/Save\";\nimport ScoreCard from \"components/ScoreCard\";\nimport Section from \"components/Section\";\nimport SimpleButton from \"components/SimpleButton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { numberFormatter } from \"locale\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, { ChangeEvent, useEffect, useMemo, useRef, useState } from \"react\";\nimport { linkAuthRoute, linkBasePath } from \"routes\";\nimport ACLService from \"services/ACLService\";\nimport KYCService from \"services/KYCService\";\nimport OrgStructureBranchService from \"services/masterdata/OrgStruct/Branch/Branch\";\nimport ProductConfigProductService from \"services/masterdata/ProductConfig/ProductConfigProductService\";\nimport UserService from \"services/masterdata/User/UserService\";\nimport BasicInformationService from \"services/transaction/QDE/BasicInformation\";\nimport QDEService from \"services/transaction/QDE/QDE\";\nimport ResidentialService from \"services/transaction/QDE/Residential\";\nimport SourcingService from \"services/transaction/SourcingService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  convertMonthsToYearsAndMonths,\n  convertToIndianNumbering,\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  setLocalStorage,\n  validateGetAPIResponse,\n  validatePostAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  APPLICANT_TYPE,\n  BUTTON_STYLE_TYPE,\n  BUTTON_TYPE,\n  DOCUMENT_CATEGORY,\n  DOCUMENT_SECTION,\n  DOCUMENT_TYPE,\n  INPUT_STYLE_TYPE,\n  LOCAL_STORAGE,\n  OCR_STAGE_NAMES,\n  PAGE_MODE,\n  SECTION_NAME,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  SUB_STAGE,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport {\n  LINK_DDE_DETAIL,\n  LINK_DDE_LOGIN,\n  LINK_LOAN_DETAIL,\n  LINK_LOAN_LIST,\n} from \"../../../transactionRoutes\";\nimport { initialSectionDocInfo, updateBasicInfoObj } from \"../PageDDE/Login/Helper\";\nimport {\n  IDocumentProofFile,\n  enrichAddressData,\n  enrichBasicInfoData,\n  initialDocInfo,\n  initialSourcingDetailObj,\n  updateResidentialAddressObj,\n} from \"./Helper\";\n\n// --------------------------------- interface ---------------------------------------------- //\ninterface IAutoComplete {\n  name: string;\n  uid: string;\n  fullName?: string;\n}\n\nexport interface ISourcingDetails {\n  loanRequestDetails: {\n    product: any;\n    loanAmount: string;\n    loanAmountInWords?: string;\n    loanTenure: string;\n    loanTenureInWords?: string;\n  };\n  sourceAndBranch: {\n    salesAgent?: IAutoComplete;\n    branch: IAutoComplete;\n    salesManager: IAutoComplete;\n  };\n}\nexport interface IKycDocuments {\n  documentType: string;\n  documentNumber: string;\n  documentUrl: any[];\n  [key: string]: any;\n}\n\ninterface IKycDocumentTemplateList {\n  listId: string; // to pass as key while mapping with array of KycDocument components\n  uid: string; //saved document uid\n  docName: string; //saved document name\n  docNo: string; //saved document number\n  dob: string; //saved dob\n  maskedDocNo: string; //saved masked number (only for aadhar)\n  docSections: IKycUploadedDocSection[];\n}\ninterface IKycUploadedDocSection {\n  sectionUid: string;\n  fileType: string;\n  sectionType: string;\n  url: Promise<string>;\n}\n\nexport interface IQdeResidentialAddress {\n  address: IAddressData;\n  loanDocuments: any[];\n}\n\nconst initialResidentialAddress: IQdeResidentialAddress = {\n  address: {\n    address: \"\",\n    city: { name: \"\", uid: \"\" },\n    pincode: { pinCode: \"\", uid: \"\" },\n    state: \"\",\n    smAddressType: \"\",\n    latitude: \"\",\n    longitude: \"\",\n  },\n  loanDocuments: [],\n};\n\ntype Section = keyof typeof SECTION_NAME;\n\n// ----------------------------------------- Functional component ------------------------------------- //\n\nconst PageQDE = (props: RouteProps) => {\n  // ----------------- states ---------------------- //\n\n  const [loanId, setLoanId] = useState(\"\");\n  // const [basicInformationData, setBasicInformationData] = useState({\n  //   ...initialBasicInformationData,\n  // });\n  const [showCancelLoanPopup, setShowCancelLoanPopup] = useState<boolean>(false);\n  const [applicantId, setApplicantUid] = useState(\"\");\n  const [prepopulatedData, setPrepopulatedData] = useState<any>({});\n  const [kycDocumentTemplateList, setKycDocumentTemplateList] = useState<\n    IKycDocumentTemplateList[]\n  >([\n    {\n      listId: `kyc-card-1`,\n      uid: \"\",\n      docName: \"\",\n      docNo: \"\",\n      maskedDocNo: \"\",\n      dob: \"\",\n      docSections: [],\n    },\n  ]);\n  const [kycCardCount, setKycCardCount] = useState(1);\n  const [uniqueKycCardTracker, setUniqueKycCardTracker] = useState<string[]>([]);\n\n  const [populateOcr, setPopulateOcr] = useState<IPopulateOcr>({\n    uid: \"\",\n    success: false,\n    failed: false,\n  });\n  const [aadharVerificationStatus, setAadhaarVerificationStatus] = useState<IAadharVerification>({\n    verified: false,\n    failedToVerify: false,\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showHighMarkScore, setShowHighMarkScore] = useState<boolean>(false);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const toastMessageRef = useRef(null);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  // ts-ignore: will use later\n  const [navigateBack, setNavigateBack] = useState(false);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<IAutoComplete[]>([]);\n\n  // -------------------- Basic Information -------------------- //\n  const [basicInfo, setBasicInfo] = useState<IBasicInformationData>({\n    ...initialBasicInformationData,\n  });\n  const [basicInfoSectionMode, setBasicInfoSectionMode] = useState(PAGE_MODE.VIEW);\n  const [prePopulateBasicInfo, setPrePopulateBasicInfo] = useState<boolean>(false);\n\n  // -------------------- Address -------------------- //\n  const [addressMode, setAddressMode] = useState(PAGE_MODE.VIEW);\n  const [residentialAddress, setResidentialAddress] = useState<IQdeResidentialAddress>({\n    ...initialResidentialAddress,\n  });\n  const [addressDocument, setAddressDocument] = useState<IDocumentProofFile[]>([\n    initialSectionDocInfo,\n  ]);\n  const [prePopulateAddress, setPrePopulateAddress] = useState<boolean>(false);\n\n  // -------------------- Sourcing Details -------------------- //\n\n  const [sourceDetailMode, setSourceDetailMode] = useState(PAGE_MODE.VIEW);\n  const [sourcingDetails, setSourcingDetails] = useState<ISourcingDetails>({\n    ...initialSourcingDetailObj,\n  });\n\n  // --------------------- ref ---------------------------- //\n  const basicInformationRef = useRef<IBasicInformationRef | null>(null);\n  const addressRef = useRef<IAddressRef | null>(null);\n  const addressDocUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    setResidentialAddress((prevObj) => ({\n      ...prevObj,\n      address: {\n        ...prevObj.address,\n        address: prepopulatedData?.address,\n        pincode: {\n          ...prevObj.address.pincode,\n          pinCode: prepopulatedData?.pincode?.pinCode,\n          uid: prepopulatedData?.pincode?.uid,\n        },\n      },\n    }));\n  }, [prePopulateAddress]);\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const getSavedKycDocuments = async () => {\n    const res = await KYCService.getKycDocument(loanId, applicantId);\n    if (validateGetAPIResponse(res)) {\n      const { data } = res;\n      return data;\n    }\n  };\n\n  const getSourcingDetails = async () => {\n    try {\n      const res = await SourcingService.getDdeDetails(loanId);\n      console.log(\"details \", res);\n      const formattedLoanAmount: string | 0 = numberFormatter(res.data?.amount, \"en-IN\", 0);\n      setSourcingDetails((prevPageObj) => ({\n        ...prevPageObj,\n\n        loanRequestDetails: {\n          ...prevPageObj.loanRequestDetails,\n          product: res.data?.product,\n          loanAmount: formattedLoanAmount ? formattedLoanAmount : \"\",\n          loanAmountInWords: res.data?.amountInWords,\n          loanTenure: res.data?.tenure,\n          loanTenureInWords: res.data?.tenureInWords,\n        },\n        sourceAndBranch: {\n          ...prevPageObj.sourceAndBranch,\n          branch: res.data?.branch,\n          salesAgent: res.data?.salesAgent ?? {\n            name: \"\",\n            uid: \"\",\n          },\n          salesManager: res.data?.salesAgent?.parent?.name ?? \"\",\n        },\n      }));\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const getBasicInformation = () => {\n    BasicInformationService.getDde(applicantId)\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          setBasicInfo(updateBasicInfoObj({ ...res.data, resetDocumentData: false }));\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      });\n  };\n\n  const getAddress = async () => {\n    try {\n      const res: any = await ResidentialService.findByUid(loanId, applicantId);\n      if (validateGetAPIResponse(res)) {\n        setResidentialAddress((prevObj) => ({\n          ...prevObj,\n          ...updateResidentialAddressObj(res?.data),\n        }));\n      }\n    } catch (err) {\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  // -------------------------------- Sourcing Details AutoComplete Handlers -------------------------------- //\n\n  const handleLoanRequestDetailsInputChange = (event: any) => {\n    const { name, value } = event.target;\n    if (typeof value === \"object\") {\n      setSourcingDetails((prevPageObj) => ({\n        ...prevPageObj,\n        loanRequestDetails: { ...prevPageObj.loanRequestDetails, [name]: value },\n      }));\n    } else {\n      setSourcingDetails((prevPageObj) => ({\n        ...prevPageObj,\n        loanRequestDetails: { ...prevPageObj.loanRequestDetails, [name]: { name: value } },\n      }));\n    }\n  };\n\n  const handleLoanAmountInputChange = (event: any) => {\n    const { name, value } = event.target;\n    const unformattedValue: number = currencyFormatToNumber(value);\n    setSourcingDetails((prevPageObj) => ({\n      ...prevPageObj,\n      loanRequestDetails: {\n        ...prevPageObj.loanRequestDetails,\n        [name]: numberFormatter(unformattedValue, \"en-IN\", 0),\n        loanAmountInWords: convertToIndianNumbering(unformattedValue),\n      },\n    }));\n  };\n\n  const handleLoanTenureInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setSourcingDetails((prevPageObj) => ({\n      ...prevPageObj,\n      loanRequestDetails: {\n        ...prevPageObj.loanRequestDetails,\n        [name]: value,\n        loanTenureInWords: convertMonthsToYearsAndMonths(value),\n      },\n    }));\n  };\n\n  const handleSourceAndBranchInputChange = (event: ChangeEvent<HTMLInputElement> | any) => {\n    const { name, value } = event.target;\n\n    if (typeof value === \"object\") {\n      if (name === \"salesAgent\") {\n        console.log(value);\n        setSourcingDetails((prevPageObj) => ({\n          ...prevPageObj,\n          sourceAndBranch: {\n            ...prevPageObj.sourceAndBranch,\n            [name]: value,\n            salesManager: {\n              name: value?.parent?.name ?? \"\",\n              uid: value?.parent?.uid ?? \"\",\n            },\n          },\n        }));\n      } else {\n        setSourcingDetails((prevPageObj: any) => ({\n          ...prevPageObj,\n          sourceAndBranch: { ...prevPageObj.sourceAndBranch, [name]: value },\n        }));\n      }\n    } else {\n      setSourcingDetails((prevPageObj) => ({\n        ...prevPageObj,\n        sourceAndBranch: { ...prevPageObj.sourceAndBranch, [name]: { name: value } },\n      }));\n    }\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = async () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  // -------------------------------- Sourcing Details Data preparation -------------------------------- //\n  const prepareToUpdate = () => {\n    const payload = {\n      product: {\n        uid: sourcingDetails?.loanRequestDetails?.product?.uid,\n      },\n      branch: {\n        uid: sourcingDetails?.sourceAndBranch?.branch?.uid,\n      },\n      amount: currencyFormatToNumber(sourcingDetails?.loanRequestDetails?.loanAmount),\n      amountInWords: sourcingDetails?.loanRequestDetails?.loanAmountInWords,\n      tenure: parseInt(sourcingDetails?.loanRequestDetails?.loanTenure),\n      tenureInWords: sourcingDetails?.loanRequestDetails?.loanTenureInWords,\n      salesAgent: sourcingDetails?.sourceAndBranch?.salesAgent?.uid\n        ? {\n            uid: sourcingDetails?.sourceAndBranch?.salesAgent?.uid,\n          }\n        : null,\n      salesManager: sourcingDetails?.sourceAndBranch?.salesManager.uid\n        ? {\n            uid: sourcingDetails?.sourceAndBranch?.salesManager?.uid,\n          }\n        : null,\n    };\n    return payload;\n  };\n\n  const onSaveSourcingDetails = async () => {\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      return;\n    }\n\n    const payload = prepareToUpdate();\n    return SourcingService.saveQde(payload)\n      .then((res: any) => {\n        if (validatePostAPIResponse(res)) {\n          setLoanId(res.data.uid);\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setSourceDetailMode(PAGE_MODE.VIEW);\n        }\n      })\n      .catch((err: any) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  // -------------------------------- BASIC Information API   -------------------------------- //\n\n  const onSaveBasicInformation = async () => {\n    const data: any = basicInformationRef?.current?.save();\n    if (!data) {\n      return Promise.resolve(true);\n    }\n\n    if (data) {\n      const payload = enrichBasicInfoData(data, loanId, applicantId);\n      if (applicantId) {\n        BasicInformationService.updateQde(payload)\n          .then((res: any) => {\n            if (validatePutAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setBasicInfoSectionMode(PAGE_MODE.VIEW);\n            }\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      } else {\n        BasicInformationService.saveQde(payload)\n          .then((res: any) => {\n            if (validatePostAPIResponse(res)) {\n              setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n              setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n              setTriggerToast(!triggerToast);\n              setBasicInfo({ ...data, uid: res?.data?.uid, isActive: res?.data?.isActive });\n              setBasicInfoSectionMode(PAGE_MODE.VIEW);\n            }\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      }\n    }\n  };\n\n  const onPrePopulate = async (section?: string) => {\n    return KYCService.getPopulateDocumentByKyc(loanId, applicantId)\n      .then((res: any) => {\n        if (validateGetAPIResponse(res)) {\n          const [firstName, middleName, lastName] = res?.data?.name.split(\" \") ?? \"\";\n          res.data = {\n            ...res.data,\n            address: res?.data?.address ?? \"\",\n            firstName: firstName,\n            middleName: middleName,\n            lastName: lastName,\n          };\n          setPrepopulatedData(res.data);\n\n          if (section === SECTION_NAME.ADDRESS) {\n            setPrePopulateAddress((prevState: boolean) => !prevState);\n          }\n\n          if (section === SECTION_NAME.BASIC_INFO) {\n            setPrePopulateBasicInfo((prevState: boolean) => !prevState);\n          }\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onSaveAddress = async () => {\n    const data = addressRef?.current?.save();\n    const uploadedDocsInfo = addressDocUploaderRef?.current?.getUploadedData();\n\n    if (!validateForm() || !uploadedDocsInfo) {\n      return;\n    }\n\n    if (data) {\n      const payload = enrichAddressData(\n        { ...data, addressDocumentsInfo: uploadedDocsInfo ? uploadedDocsInfo : {} },\n        loanId,\n        applicantId,\n        APPLICANT_TYPE.PRIMARY\n      );\n\n      ResidentialService.save(payload)\n        .then((res) => {\n          if (validatePostAPIResponse(res)) {\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setTriggerToast(!triggerToast);\n            setAddressMode(PAGE_MODE.VIEW);\n          }\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    }\n  };\n\n  const onCancelAddressSection = () => {\n    addressRef?.current?.resetValidator();\n    addressDocUploaderRef?.current?.resetValidator();\n    addressDocUploaderRef?.current?.resetDocUpload()\n    setAddressMode(PAGE_MODE.VIEW);\n    if (applicantId) {\n      getAddress();\n    }\n  };\n\n  const onAddDocument = () => {\n    const newListItem = {\n      listId: `kyc-card-${kycCardCount + 1}`,\n      uid: \"\",\n      docName: \"\",\n      docNo: \"\",\n      maskedDocNo: \"\",\n      dob: \"\",\n      docSections: [],\n    };\n    setKycCardCount((prevCount) => prevCount + 1);\n    setKycDocumentTemplateList((prev) => {\n      return [...prev, newListItem];\n    });\n    setPopulateOcr(() => {\n      return { uid: \"\", success: false, failed: false };\n    });\n  };\n\n  const onRequestHighMarkScore = () => {\n    setShowHighMarkScore(true);\n  };\n\n  const onCancelClick = () => {\n    const isFormDirty = ACLService.isFormDirty();\n    if (isFormDirty) {\n      return setShowCancelLoanPopup(true);\n    }\n\n    props.navigate(LINK_LOAN_LIST);\n  };\n\n  const onFinalSave = async () => {\n    return QDEService.save(loanId)\n      .then((res) => {\n        if (validatePutAPIResponse(res)) {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onSaveAndNext = () => {\n    if (loanId) {\n      return QDEService.save(loanId)\n        .then((res) => {\n          if (validatePutAPIResponse(res)) {\n            const stageUid = res.data.uid;\n            setLocalStorage(LOCAL_STORAGE.STAGE_DETAIL, JSON.stringify(res.data));\n            const URL =\n              linkBasePath +\n              linkAuthRoute +\n              LINK_LOAN_DETAIL +\n              LINK_DDE_LOGIN +\n              \"/\" +\n              loanId +\n              \"/\" +\n              stageUid +\n              LINK_DDE_DETAIL;\n            window.location.href = URL;\n          }\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    } else {\n      setErrorMessage(\"Loan Id not created\");\n    }\n  };\n\n  const onCancelBasicInformation = () => {\n    basicInformationRef?.current?.cancel();\n    setBasicInfoSectionMode(PAGE_MODE.VIEW);\n    if (applicantId) {\n      getBasicInformation();\n      // getBasicInfo();\n    }\n  };\n\n  const onConfirmCancelLoan = () => {\n    setShowCancelLoanPopup(false);\n    ACLService.clearFormDirty();\n    props.navigate(LINK_LOAN_LIST);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const uploadedAddressDocInfo = (fileInfo: IUploadedFile) => {\n    if (addressDocument.length === 1) {\n      setAddressDocument([{ ...initialDocInfo, ...fileInfo, isActive: true }, initialDocInfo]);\n    }\n\n    if (addressDocument?.length > 1) {\n      const documentProof: IDocumentProofFile[] = [...addressDocument];\n      let docProof = documentProof?.pop() as IDocumentProofFile; //get the last element in this array i.e. initialDocInfo and modify its contents\n      docProof = {\n        ...docProof,\n        ...fileInfo,\n      };\n\n      setAddressDocument([...documentProof, docProof, initialDocInfo]);\n    }\n  };\n\n  const getSectionsByDocumentUid = async (uid: string) => {\n    const savedDocuments = await getSavedKycDocuments();\n    const sections = savedDocuments[uid];\n    return sections;\n  };\n\n  const searchAutoCompleteProduct = async (event: any) => {\n    let suggestionsTemplate = [];\n    setIsLoading(true);\n    try {\n      await ProductConfigProductService.findByName(0, 50, event.query).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data.results];\n          setIsLoading(false);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const searchAutoCompleteSalesAgent = async (event: any) => {\n    let suggestionsTemplate = [];\n    try {\n      await UserService.getUserByBranchAndName(\n        0,\n        50,\n        sourcingDetails?.sourceAndBranch?.branch?.uid,\n        event.query\n      ).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data];\n\n          setIsLoading(false);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const searchAutoCompleteBranch = async (event: any) => {\n    let suggestionsTemplate = [];\n\n    try {\n      await OrgStructureBranchService.getFilterByName(0, 50, event.query).then((res) => {\n        if (res.status === 200) {\n          suggestionsTemplate = [...res.data];\n          setIsLoading(false);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", code: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  //delete kyc doc card in list\n  const deleteKycDocInList = (itemIndex?: number) => {\n    setKycDocumentTemplateList(() => {\n      const newKycDocList = kycDocumentTemplateList.filter((_, index) => index !== itemIndex);\n      return [...newKycDocList];\n    });\n  };\n\n  //update the unique kyc card name tracker list\n  const updateUniqueTrackerList = (list: string[]) => {\n    setUniqueKycCardTracker([...list]);\n  };\n\n  const onSaveKycDocument = async (documentInfo: IKycDocuments, itemIndex: number) => {\n    //update request\n    if (documentInfo.uid) {\n      const payload = await enrichUpdateKycDocument(documentInfo);\n\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.QDE);\n        if (validatePutAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return [];\n          };\n\n          setKycDocumentTemplateList((prev) => {\n            const updatedList = prev.map((item) => {\n              if (item.uid === data.uid) {\n                return {\n                  ...item,\n                  docName: data.docType?.code ?? \"\",\n                  docNo: data.docNo ?? \"\",\n                  maskedDocNo: data.maskedDocNo ?? \"\",\n                  docSections: prepareMaskedDocSections(data.kycDocuments),\n                  dob: data.dob ?? \"\",\n                };\n              }\n              return item; // Return the unchanged item if it has a UID\n            });\n            return updatedList; // Return the updated list to set state\n          });\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n    // create request\n    else {\n      const payload = enrichSaveKycDocument(documentInfo);\n      try {\n        const res = await KYCService.saveKycDocument(payload, SUB_STAGE.QDE);\n        if (validatePostAPIResponse(res)) {\n          const { data } = res;\n          const parsedOcrMeta = data.meta ? JSON.parse(data.meta) : null;\n          const getMaskedUrlForSection = (sectionType: string) => {\n            if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE)\n              return parsedOcrMeta?.ocrResponse?.frontMaskedImageUrl ?? \"\";\n            else if (sectionType === DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE)\n              return parsedOcrMeta?.ocrResponse?.backMaskedImageUrl ?? \"\";\n            return \"\";\n          };\n\n          //get the section information from response\n          const prepareMaskedDocSections = (sections: any[]) => {\n            if (data.docType?.code === DOCUMENT_TYPE.AADHAR_CARD) {\n              const sectionsInfo = sections.map((section) => {\n                return {\n                  sectionUid: section.uid ?? \"\",\n                  fileType: section.fileType ?? \"\",\n                  sectionType: section.smDocSectionType ?? \"\",\n                  url: parsedOcrMeta\n                    ? getMaskedUrlForSection(section.smDocSectionType)\n                    : section.url,\n                };\n              });\n              return sectionsInfo;\n            }\n            return [];\n          };\n\n          setApplicantUid(data.applicant.uid);\n          setKycDocumentTemplateList((prev) => {\n            const updatedList = prev.map((item, idx) => {\n              if (idx === itemIndex) {\n                return {\n                  ...item,\n                  uid: data.uid ?? \"\",\n                  docName: data.docType?.code ?? \"\",\n                  docNo: data.docNo ?? \"\",\n                  maskedDocNo: data.maskedDocNo ?? \"\",\n                  docSections: prepareMaskedDocSections(data.kycDocuments),\n                  dob: data.dob ?? \"\",\n                };\n              }\n              return item; // Return the unchanged item if it has a UID\n            });\n            return updatedList; // Return the updated list to set state\n          });\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onRemoveKycDocument = async (documentInfo: IKycDocuments, itemIndex?: number) => {\n    if (documentInfo.uid) {\n      const payload = await enrichUpdateKycDocument(documentInfo);\n      try {\n        const res = await KYCService.updateKycDocument(payload, SUB_STAGE.QDE);\n        if (validatePutAPIResponse(res)) {\n          if (itemIndex !== undefined) {\n            deleteKycDocInList(itemIndex);\n          }\n          setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.REMOVED);\n          setTriggerToast(!triggerToast);\n        }\n      } catch (err) {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onPopulateWithOcr = async (documentInfo: IKycDocuments, itemIndex: number) => {\n    const payload = enrichPopulateDocWithOcr(documentInfo);\n\n    try {\n      const res = await KYCService.populateKycDocument(payload, SUB_STAGE.QDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        setApplicantUid(data.applicant.uid);\n        setKycDocumentTemplateList((prev) => {\n          const updatedList = prev.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid,\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item;\n          });\n          return updatedList; // Return the updated list to set state\n        });\n        setPopulateOcr((prev) => {\n          return { ...prev, uid: data.uid ?? \"\", success: true, failed: false };\n        });\n      }\n    } catch (err) {\n      setPopulateOcr((prev) => {\n        return { ...prev, success: false, failed: true };\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const enrichSaveKycDocument = (documentInfo: IKycDocuments) => {\n    const { documentUid: kycDocTypeUid, documentUrl, documentNumber, dob } = documentInfo;\n\n    const documentSections = documentUrl.map((docUrl) => {\n      const preparedSectionPayload = {\n        loan: {}, //always has to be empty\n        kyc: {}, //always has to be empty\n        smDocSectionType: docUrl.code,\n        fileName: docUrl.fileName,\n        fileType: docUrl.contentType,\n        thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n        url: docUrl.url,\n        meta: \"\",\n      };\n\n      return preparedSectionPayload;\n    });\n\n    const payload = {\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: applicantId || \"\",\n        applicantType: APPLICANT_TYPE.PRIMARY,\n      },\n      docType: {\n        uid: kycDocTypeUid,\n      },\n      dob: dob ? dob : null,\n      docNo: documentNumber,\n      meta: \"\",\n      kycDocuments: documentSections,\n    };\n    return payload;\n  };\n\n  const enrichUpdateKycDocument = async (documentInfo: IKycDocuments) => {\n    const {\n      uid,\n      documentUid: kycDocTypeUid,\n      documentUrl,\n      documentNumber,\n      dob,\n      isActive,\n    } = documentInfo;\n\n    const sections: any = await getSectionsByDocumentUid(uid);\n\n    const getSectionUid = (sectionCode: string) => {\n      const currentSection = sections.find((section: any) => {\n        return section.smDocSectionType === sectionCode;\n      });\n      return currentSection.uid;\n    };\n\n    const documentSections = documentUrl.map((docUrl) => {\n      const preparedSectionPayload = {\n        uid: getSectionUid(docUrl.code),\n        loan: {}, //always has to be empty\n        kyc: {}, //always has to be empty\n        smDocSectionType: docUrl.code,\n        fileName: docUrl.fileName,\n        fileType: docUrl.contentType,\n        thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n        url: docUrl.url,\n        meta: \"\",\n      };\n\n      return preparedSectionPayload;\n    });\n\n    const payload = {\n      uid: uid,\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: applicantId || \"\",\n        applicantType: APPLICANT_TYPE.PRIMARY,\n      },\n      docType: {\n        uid: kycDocTypeUid,\n      },\n      dob: dob ? dob : null,\n      docNo: documentNumber,\n      meta: \"\",\n      kycDocuments: documentSections,\n      isActive: isActive,\n    };\n    return payload;\n  };\n\n  const enrichPopulateDocWithOcr = (document: IKycDocuments) => {\n    const { documentUid: kycDocTypeUid, documentUrl } = document;\n\n    const documentSections = documentUrl.map((docUrl) => {\n      const preparedSectionPayload = {\n        loan: {}, //always has to be empty\n        kyc: {}, //always has to be empty\n        smDocSectionType: docUrl.code,\n        fileName: docUrl.fileName,\n        fileType: docUrl.contentType,\n        thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n        url: docUrl.url,\n        meta: \"\",\n      };\n      return preparedSectionPayload;\n    });\n\n    const getSectionSignedUrl = (sectionCode: string) => {\n      const section = documentUrl.find((docUrl) => {\n        return docUrl.isOcrActive && docUrl.code === sectionCode;\n      });\n      return section?.signedUrl;\n    };\n\n    const payload = {\n      uid: populateOcr.uid ? populateOcr.uid : \"\",\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: applicantId || \"\",\n        applicantType: APPLICANT_TYPE.PRIMARY,\n      },\n      docType: {\n        uid: kycDocTypeUid,\n      },\n      dob: null,\n      docNo: \"0\",\n      meta: \"\",\n      kycDocuments: documentSections,\n      backSignedUrl: getSectionSignedUrl(DOCUMENT_SECTION.DOCUMENT_SECTIONS_BACK_PAGE) ?? \"\",\n      frontSignedUrl: getSectionSignedUrl(DOCUMENT_SECTION.DOCUMENT_SECTIONS_FRONT_PAGE) ?? \"\",\n    };\n    return payload;\n  };\n\n  const onVerifyAadhar = async (\n    documentInfo: IKycDocuments,\n    aadharOtpInfo: IAadharOTP,\n    itemIndex: number,\n    uid: string\n  ) => {\n    const payload = enrichAadharValidation(documentInfo, aadharOtpInfo, uid);\n    try {\n      const res = await KYCService.validateAadhar(payload, SUB_STAGE.QDE);\n      if (validatePostAPIResponse(res)) {\n        const { data } = res;\n\n        setApplicantUid(data.applicant.uid);\n        setAadhaarVerificationStatus({\n          ...aadharVerificationStatus,\n          verified: true,\n        });\n        setKycDocumentTemplateList((prev) => {\n          const updatedList = prev.map((item, idx) => {\n            if (idx === itemIndex) {\n              return {\n                ...item,\n                uid: data.uid ?? \"\",\n                docName: data.docType?.code ?? \"\",\n                docNo: data.docNo ?? \"\",\n                maskedDocNo: data.maskedDocNo ?? \"\",\n                dob: data.dob ?? \"\",\n              };\n            }\n            return item; // Return the unchanged item if it has a UID\n          });\n          return updatedList; // Return the updated list to set state\n        });\n      }\n    } catch (err) {\n      setAadhaarVerificationStatus({\n        ...aadharVerificationStatus,\n        failedToVerify: true,\n      });\n      setErrorMessage(parseStandardAPIErrorMessage(err));\n    }\n  };\n\n  const enrichAadharValidation = (\n    documentInfo: IKycDocuments,\n    aadharOtpInfo: IAadharOTP,\n    uid: string\n  ) => {\n    const { documentUid: kycDocTypeUid, documentUrl, documentNumber } = documentInfo;\n    const { otp, requestId } = aadharOtpInfo;\n\n    const documentSections = documentUrl.map((docUrl) => {\n      const preparedSectionPayload = {\n        loan: {}, //always has to be empty\n        kyc: {}, //always has to be empty\n        smDocSectionType: docUrl.code,\n        fileName: docUrl.fileName,\n        fileType: docUrl.contentType,\n        thumbUrl: docUrl.thumbUrl ? docUrl.thumbUrl : \"\",\n        url: docUrl.url ?? \"\",\n        meta: \"\",\n      };\n\n      return preparedSectionPayload;\n    });\n\n    const preparedPayload = {\n      uid: uid ? uid : \"\",\n      loan: {\n        uid: loanId,\n      },\n      applicant: {\n        uid: applicantId || \"\",\n        applicantType: APPLICANT_TYPE.PRIMARY,\n      },\n      docType: {\n        uid: kycDocTypeUid,\n      },\n      docNo: documentNumber,\n      meta: \"\",\n      kycDocuments: documentSections,\n      otp: otp,\n      accessKey: requestId,\n      aadhaarNo: documentNumber,\n      consent: \"Y\",\n    };\n\n    return preparedPayload;\n  };\n\n  const onCancelSourcingDetails = () => {\n    simpleValidator?.current?.hideMessages();\n    simpleValidator.current.visibleFields = [];\n    setSourceDetailMode(PAGE_MODE.VIEW);\n    if (loanId) {\n      getSourcingDetails();\n      return;\n    }\n    if (loanId === \"\") {\n      setSourcingDetails({ ...initialSourcingDetailObj });\n    }\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const itemTemplate = (item: any) => {\n    if (item?.name === undefined || item.name.length < 1) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item?.name} />\n        <Text\n          className=\"text-secondary-gray-500 text-xxs\"\n          label={`${item?.name} ${item?.lastName}`}\n        />\n      </div>\n    );\n  };\n  const itemTemplateForSalesAgent = (item: any) => {\n    console.log(item);\n    if (item?.name === undefined || item.name.length < 1) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={`${item?.fullName} `} />\n        <Text className=\"text-secondary-gray-500 text-xxs\" label={`${item?.fullName} `} />\n      </div>\n    );\n  };\n\n  const itemProductTemplate = (item: any) => {\n    if (item?.name === undefined || item?.name.length < 1) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item?.name} />\n        <Text className=\"text-secondary-gray-500 text-xxs\" label={`${item?.name}`} />\n      </div>\n    );\n  };\n\n  const renderKycDocuments = () => {\n    return (\n      <>\n        {kycDocumentTemplateList.map((template, index) => {\n          return (\n            <div className=\"\" key={`document-${template.listId}`}>\n              <KYCV3\n                mode={loanId ? \"EDIT\" : \"READ\"}\n                uid={template.uid}\n                documentListIndex={index}\n                docName={template.docName}\n                docNo={template.docNo}\n                dateOfBirth={template.dob}\n                docSections={template.docSections}\n                maskedDocNo={template.maskedDocNo}\n                removeDocumentInList={deleteKycDocInList}\n                cardNameList={uniqueKycCardTracker}\n                handlerCardNameList={updateUniqueTrackerList}\n                ocrStatus={populateOcr}\n                onSave={onSaveKycDocument}\n                onRemove={onRemoveKycDocument}\n                onPopulate={onPopulateWithOcr}\n                onVerifyAadhar={onVerifyAadhar}\n                aadharVerificationStatus={aadharVerificationStatus}\n                handlerAadharVerificationStatus={() => {\n                  setAadhaarVerificationStatus({\n                    verified: false,\n                    failedToVerify: false,\n                  });\n                }}\n                placeOfUpload={PLACE_OF_UPLOAD_KYC.LOGIN_QDE}\n              />\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  const basicInfoPrePopulatedData = useMemo(() => {\n    return prepopulatedData;\n  }, [prePopulateBasicInfo]);\n\n  const renderBasicInformation = () => {\n    return (\n      <SaveComponent\n        title=\"heading.kycDocuments.nameContact\"\n        pageMode={basicInfoSectionMode}\n        onSave={onSaveBasicInformation}\n        onCancel={onCancelBasicInformation}\n        onEdit={() => {\n          setBasicInfoSectionMode(PAGE_MODE.CREATE);\n        }}\n        onPrePopulate={() => onPrePopulate(SECTION_NAME.BASIC_INFO)}\n        disabled={!loanId || !applicantId}\n      >\n        <BasicInformation\n          pageMode={basicInfoSectionMode}\n          ref={basicInformationRef}\n          data={basicInfo}\n          prePopulated={basicInfoPrePopulatedData}\n          type=\"QDE\"\n          ocrRelatedData={{\n            ocrStageName: OCR_STAGE_NAMES.LOGIN,\n            ocrSubstageName: SUB_STAGE.QDE,\n            ocrPayloadData: {\n              loanUid: loanId,\n              applicant: {\n                uid: applicantId,\n              },\n            },\n          }}\n        />\n      </SaveComponent>\n    );\n  };\n\n  const addressData = useMemo(() => {\n    const { address, city, latitude, longitude, pincode, state, smAddressType } =\n      residentialAddress.address;\n    return {\n      address: address,\n      city: { name: city?.name, uid: city?.uid },\n      pincode: { pinCode: pincode.pinCode, uid: pincode?.uid },\n      state: state,\n      smAddressType: smAddressType,\n      latitude: latitude,\n      longitude: longitude,\n    };\n  }, [residentialAddress]);\n\n  const renderAddressSection = () => {\n    return (\n      <SaveComponent\n        title=\"label.cibilDetails.Address\"\n        pageMode={addressMode}\n        onSave={onSaveAddress}\n        onCancel={onCancelAddressSection}\n        onPrePopulate={() => onPrePopulate(SECTION_NAME.ADDRESS)}\n        disabled={!loanId || !applicantId}\n        onEdit={() => {\n          setAddressMode(PAGE_MODE.CREATE);\n        }}\n      >\n        <Address pageMode={addressMode} ref={addressRef} data={addressData} isLatLong />\n\n        <div className=\"flex flex-col gap-3\">\n          <TextData\n            label={\"label.text.address.proof*\"}\n            value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n            titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n          />\n\n          <DocumentUploader\n            mandatoryDocUpload\n            ref={addressDocUploaderRef}\n            mode={\n              addressMode === PAGE_MODE.CREATE ? DOC_UPLOADER_MODE.EDIT : DOC_UPLOADER_MODE.VIEW\n            }\n            savedDocument={\n              residentialAddress?.loanDocuments?.[0]\n                ? residentialAddress?.loanDocuments?.[0]\n                : dummySavedDocStructure\n            }\n            queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_ADDRESS_PROOF}\n            ocrStageName={OCR_STAGE_NAMES.LOGIN}\n            ocrSubstageName={SUB_STAGE.QDE}\n            ocrPayloadData={{\n              loanUid: loanId,\n              applicant: {\n                uid: applicantId,\n              },\n            }}\n          />\n        </div>\n      </SaveComponent>\n    );\n  };\n\n  const {\n    loanRequestDetails: { product, loanAmount, loanAmountInWords, loanTenure, loanTenureInWords },\n    sourceAndBranch: { salesAgent, branch, salesManager },\n  } = sourcingDetails;\n\n  return (\n    <div className=\"\">\n      <div className=\"flex flex-row justify-between items-center mb-4 px-5\">\n        <label className=\"text-primary-ptext-1000 text-base font-bold\">New Application</label>\n        <div className=\"flex gap-10 \">\n          <div>\n            <ButtonBox\n              className=\"reset-red\"\n              buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n              onClick={onCancelClick}\n            />\n          </div>\n          <div className=\"flex gap-5\">\n            <ButtonBox\n              buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n              onClickWithLoader={onFinalSave}\n              disabled={!loanId}\n            />\n            <ButtonBox\n              buttonType={BUTTON_TYPE.SAVE_AND_CONTINUE}\n              onClickWithLoader={onSaveAndNext}\n              disabled={!loanId}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex flex-col gap-5 pb-3 screen-body-scroll-qde  h-screen\">\n        <Section title=\"heading.sourceDetails\">\n          <SaveComponent\n            title=\"Loan Request Details\"\n            pageMode={sourceDetailMode}\n            onEdit={() => setSourceDetailMode(PAGE_MODE.CREATE)}\n            onSave={() => onSaveSourcingDetails()}\n            onCancel={onCancelSourcingDetails}\n          >\n            <AclGuard override={{ read: sourceDetailMode === PAGE_MODE.VIEW }}>\n              <div className=\"grid grid-cols-4 gap-3\">\n                <div>\n                  <AutoComplete\n                    label=\"input.sourceDetails.product\"\n                    name=\"product\"\n                    value={product?.name}\n                    className={\"rounded-r\"}\n                    variant={INPUT_STYLE_TYPE.PRIMARY}\n                    suggestions={suggestionsTemplate}\n                    completeMethod={searchAutoCompleteProduct}\n                    onChange={handleLoanRequestDetailsInputChange}\n                    itemTemplate={itemProductTemplate}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      \"product\",\n                      product?.uid,\n                      \"mandatory\"\n                    )}\n                    emptyMessage=\"no data\"\n                    dropdown={false}\n                    // showEmptyMessage={true}\n                  />\n                </div>\n                <div>\n                  <InputBox\n                    label=\"input.sourceDetails.loanAmount\"\n                    name=\"loanAmount\"\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    onChange={handleLoanAmountInputChange}\n                    onBlur={validate}\n                    value={loanAmount}\n                    className=\"text-right\"\n                    validation={simpleValidator?.current?.message(\n                      \"loanAmount\",\n                      currencyFormatToNumber(loanAmount),\n                      \"mandatory|onlyInteger|min:100000,num|max:50000000,num\"\n                    )}\n                  />\n                </div>\n                <div className=\"col-span-2\">\n                  <TextData label=\"input.sourceDetails.loanAmountWords\" value={loanAmountInWords} />\n                </div>\n              </div>\n              <div className=\"grid grid-cols-4 gap-3\">\n                <div>\n                  <InputBox\n                    label=\"input.sourceDetails.loanTenure\"\n                    name=\"loanTenure\"\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    onChange={handleLoanTenureInputChange}\n                    onBlur={validate}\n                    value={loanTenure}\n                    className=\"text-right\"\n                    validation={simpleValidator?.current?.message(\n                      \"loanTenure\",\n                      loanTenure,\n                      \"mandatory|checkNumber|onlyInteger|min:12,num|max:360,num\"\n                    )}\n                  />\n                </div>\n                <div>\n                  <TextData label=\"input.sourceDetails.loanTenureWords\" value={loanTenureInWords} />\n                </div>\n              </div>\n              <div className=\"flex flex-col gap-4\">\n                <Text\n                  label=\"Source & Branch\"\n                  className=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n                />\n                <div className=\"grid grid-cols-4 gap-3\">\n                  <div>\n                    <AutoComplete\n                      label=\"input.sourceDetails.branch\"\n                      name=\"branch\"\n                      variant={INPUT_STYLE_TYPE.PRIMARY}\n                      onBlur={validate}\n                      suggestions={suggestionsTemplate}\n                      completeMethod={searchAutoCompleteBranch}\n                      onChange={handleSourceAndBranchInputChange}\n                      itemTemplate={itemProductTemplate}\n                      value={branch?.name}\n                      validation={simpleValidator?.current?.message(\n                        \"branch\",\n                        branch?.uid,\n                        \"mandatory\"\n                      )}\n                    />\n                  </div>\n                  <div>\n                    <AutoComplete\n                      label=\"input.sourceDetails.salesAgent\"\n                      name=\"salesAgent\"\n                      variant={INPUT_STYLE_TYPE.PRIMARY}\n                      onBlur={validate}\n                      value={salesAgent?.fullName}\n                      suggestions={suggestionsTemplate}\n                      completeMethod={searchAutoCompleteSalesAgent}\n                      onChange={handleSourceAndBranchInputChange}\n                      itemTemplate={itemTemplateForSalesAgent}\n                      validation={simpleValidator?.current?.message(\n                        \"salesAgent\",\n                        salesAgent?.uid,\n                        \"mandatory\"\n                      )}\n                    />\n                  </div>\n                  <div>\n                    <InputBox\n                      label=\"input.sourceDetails.salesManager\"\n                      name=\"salesManager\"\n                      variant={INPUT_STYLE_TYPE.SECONDARY}\n                      onChange={handleSourceAndBranchInputChange}\n                      onBlur={validate}\n                      value={salesManager.name}\n                      disabled\n                    />\n                  </div>\n                  <div></div>\n                </div>\n              </div>\n            </AclGuard>\n          </SaveComponent>\n        </Section>\n\n        <Section title=\"KYC Documents\" alertText={\"Either PAN or Form - 60 are mandatory\"}>\n          <React.Fragment>\n            <div className=\"grid grid-cols-2 gap-5\">{renderKycDocuments()}</div>\n            <div className=\"p-5 w-full rounded-xl bg-slate-100 \">\n              <ButtonBox\n                buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n                customLabel={\"Add Another Document\"}\n                onClick={onAddDocument}\n              />\n            </div>\n          </React.Fragment>\n        </Section>\n\n        <Section title=\"heading.basicInformation\">\n          <>\n            {renderBasicInformation()}\n            {renderAddressSection()}\n          </>\n        </Section>\n\n        {showHighMarkScore ? (\n          <div className=\"w-full flex justify-center items-center bg-white p-5\">\n            <ScoreCard score={750} label=\"label.dde.crifHighmarks\" />\n          </div>\n        ) : (\n          <div className=\"w-1/4\">\n            <SimpleButton\n              label=\"Request Highmark Score\"\n              variant={BUTTON_STYLE_TYPE.PRIMARY}\n              onClickWithLoader={onRequestHighMarkScore}\n            />\n          </div>\n        )}\n      </div>\n\n      <div className=\"\">\n        <ToastCustom\n          position={position}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n          onRemove={() => {\n            if (navigateBack) {\n              const URL = LINK_LOAN_LIST;\n              props.navigate(URL);\n            }\n          }}\n        />\n      </div>\n\n      <ConfirmPopup\n        visible={showCancelLoanPopup}\n        title=\"label.loan.cancelCreation\"\n        description=\"description.loan.cancelCreation\"\n        confirmActionTitle=\"Sure\"\n        closeActionTitle=\"Not Sure\"\n        onConfirm={onConfirmCancelLoan}\n        onClose={() => setShowCancelLoanPopup(false)}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(PageQDE);\n"],"names":["ConfirmPopup","props","visible","title","description","confirmActionTitle","closeActionTitle","onConfirm","onClose","onConfirmAction","onCloseAction","jsx","DialogBox","jsxs","Text","ButtonBox","BUTTON_TYPE","ConfirmPopup$1","React","ScoreCard","label","score","status","textColorClass","DEFAULT_PATH","QDEService","BaseApiService","__publicField","start","limit","search","url","loanuid","QDEService$1","prepareAttributes","docInfo","documentUid","documentName","documentCode","documentCategory","documentSectionUrls","isActive","uid","primaryKeyAttributeName","meta","attributes","prepareDocSections","documentSections","docSection","enrichAddressData","data","loanId","applicantUid","type","_a","_b","_c","_d","_e","LOAN_SECTION_KEY","initialSourcingDetailObj","enrichBasicInfoData","applicantId","documents","loanDocumentsInfo","payloadData","updatedData","APPLICANT_TYPE","updateResidentialAddressObj","_f","structLoanDocumentsFromAPIResponse","initialResidentialAddress","PageQDE","setLoanId","useState","showCancelLoanPopup","setShowCancelLoanPopup","setApplicantUid","prepopulatedData","setPrepopulatedData","kycDocumentTemplateList","setKycDocumentTemplateList","kycCardCount","setKycCardCount","uniqueKycCardTracker","setUniqueKycCardTracker","populateOcr","setPopulateOcr","aadharVerificationStatus","setAadhaarVerificationStatus","errorMessage","setErrorMessage","showHighMarkScore","setShowHighMarkScore","position","setPosition","toastMessageRef","useRef","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","showDialogAPIError","setShowDialogAPIError","isLoading","setIsLoading","navigateBack","setNavigateBack","suggestionsTemplate","setSuggestionsTemplate","basicInfo","setBasicInfo","initialBasicInformationData","basicInfoSectionMode","setBasicInfoSectionMode","PAGE_MODE","prePopulateBasicInfo","setPrePopulateBasicInfo","addressMode","setAddressMode","residentialAddress","setResidentialAddress","initialSectionDocInfo","prePopulateAddress","setPrePopulateAddress","sourceDetailMode","setSourceDetailMode","sourcingDetails","setSourcingDetails","basicInformationRef","addressRef","addressDocUploaderRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","prevObj","getSavedKycDocuments","res","KYCService","validateGetAPIResponse","getSourcingDetails","SourcingService","formattedLoanAmount","numberFormatter","prevPageObj","_i","_h","_g","err","parseStandardAPIErrorMessage","getBasicInformation","BasicInformationService","updateBasicInfoObj","error","getAddress","ResidentialService","handleLoanRequestDetailsInputChange","event","name","value","handleLoanAmountInputChange","unformattedValue","currencyFormatToNumber","convertToIndianNumbering","handleLoanTenureInputChange","convertMonthsToYearsAndMonths","handleSourceAndBranchInputChange","validate","validateForm","isValid","prepareToUpdate","_j","_l","_k","_m","_o","_n","onSaveSourcingDetails","payload","validatePostAPIResponse","STATIC_MASTER_TYPE_TOAST_TEXT","onSaveBasicInformation","validatePutAPIResponse","onPrePopulate","section","firstName","middleName","lastName","SECTION_NAME","prevState","onSaveAddress","uploadedDocsInfo","onCancelAddressSection","onAddDocument","newListItem","prevCount","onRequestHighMarkScore","onCancelClick","ACLService","LINK_LOAN_LIST","onFinalSave","onSaveAndNext","stageUid","setLocalStorage","LOCAL_STORAGE","URL","linkBasePath","linkAuthRoute","LINK_LOAN_DETAIL","LINK_DDE_LOGIN","LINK_DDE_DETAIL","onCancelBasicInformation","onConfirmCancelLoan","getSectionsByDocumentUid","searchAutoCompleteProduct","ProductConfigProductService","searchAutoCompleteSalesAgent","UserService","searchAutoCompleteBranch","OrgStructureBranchService","deleteKycDocInList","itemIndex","_","index","updateUniqueTrackerList","list","onSaveKycDocument","documentInfo","enrichUpdateKycDocument","SUB_STAGE","parsedOcrMeta","getMaskedUrlForSection","sectionType","DOCUMENT_SECTION","prepareMaskedDocSections","sections","DOCUMENT_TYPE","item","enrichSaveKycDocument","idx","onRemoveKycDocument","onPopulateWithOcr","enrichPopulateDocWithOcr","kycDocTypeUid","documentUrl","documentNumber","dob","docUrl","getSectionUid","sectionCode","document","getSectionSignedUrl","onVerifyAadhar","aadharOtpInfo","enrichAadharValidation","otp","requestId","onCancelSourcingDetails","itemTemplateForSalesAgent","itemProductTemplate","renderKycDocuments","Fragment","template","KYCV3","PLACE_OF_UPLOAD_KYC","basicInfoPrePopulatedData","useMemo","renderBasicInformation","SaveComponent","BasicInformation","OCR_STAGE_NAMES","addressData","address","city","latitude","longitude","pincode","state","smAddressType","renderAddressSection","Address","TextData","DocumentUploader","DOC_UPLOADER_MODE","dummySavedDocStructure","DOCUMENT_CATEGORY","product","loanAmount","loanAmountInWords","loanTenure","loanTenureInWords","salesAgent","branch","salesManager","Section","AclGuard","AutoComplete","INPUT_STYLE_TYPE","InputBox","SimpleButton","BUTTON_STYLE_TYPE","ToastCustom","ErrorDialog","PageQDE$1","withRouter"],"mappings":"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"}