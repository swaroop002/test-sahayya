{"version":3,"file":"PageQuery-6d7b63c2.js","sources":["../../src/views/transaction/PageCAM/PageQuery/PageQuery.tsx"],"sourcesContent":["import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport DialogBox from \"components/Dialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputTextArea from \"components/InputTextArea/InputTextArea\";\nimport Label from \"components/Label\";\nimport ReadOnlyTable from \"components/ReadOnlyTable/ReadOnlyTable\";\nimport Text from \"components/Text/Text\";\nimport i18n from \"i18n\";\nimport { Column } from \"primereact/column\";\nimport { BaseSyntheticEvent, useEffect, useRef, useState } from \"react\";\nimport ApprovalRequestService from \"services/masterdata/Approval/ApprovalRequestService\";\nimport CreditQueryService from \"services/transaction/CreditQueryService\";\nimport {\n  formatDate,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  removeHtmlTags,\n} from \"utils/CommonUtil\";\nimport {\n  APPROVAL_STATUS,\n  BUTTON_TYPE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { useParams } from \"react-router-dom\";\nimport ToastCustom from \"components/Toast\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\n\ninterface IRowData {\n  stage: {\n    uid: string;\n    stageName: string;\n  };\n  queryMessage: string;\n  createdAt: string;\n  createdByUserName: string;\n  updatedAt: string;\n  updatedByUserName: string;\n  status: string;\n}\n\ninterface IDialogInfo {\n  uid: string;\n  stage: string;\n  query: string;\n  raisedOn: string;\n  raisedBy: string;\n  updatedOn: string;\n  updatedBy: string;\n  // respondedOn:string;\n  // respondedBy:string;\n  status: string;\n  reply: string;\n  action: string;\n}\n\nconst initialDialogData: IDialogInfo = {\n  uid: \"\",\n  stage: \"\",\n  query: \"\",\n  raisedOn: \"\",\n  raisedBy: \"\",\n  updatedOn: \"\",\n  updatedBy: \"\",\n  status: \"\",\n  action: \"\",\n  reply: \"\",\n};\n\nconst STAGE_NAMES: { [key: string]: string } = {\n  IN_PRINCIPAL_APPROVAL: \"In Principal Approval\",\n  FINANCIAL_APPROVAL: \"Financial Approval\",\n  FINAL_APPROVAL: \"Final Approval\",\n  CAM_AND_RECOMMENDATION: \"CAM and Recommendation\",\n};\n\nconst LOAN_QUERY_STATUS: { [key: string]: string } = {\n  IN_PROGRESS: \"In Progress\",\n  CLOSED: \"Closed\",\n};\n\nconst PageQuery = () => {\n  const params: { loanUid?: string } = useParams();\n\n  const [showQueryBox, setShowQueryBox] = useState(false);\n  const [dialogInfo, setDialogInfo] = useState<IDialogInfo>({\n    ...initialDialogData,\n  });\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const dataTableRef = useRef<any>(null);\n  const toastMessageRef = useRef<any>(null);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  /* --------------------------------Hooks---------------------------------------------------- */\n\n  useEffect(() => {\n    if (dialogInfo.uid) {\n      setShowQueryBox(true);\n    }\n  }, [dialogInfo]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /* -------------------------Validator----------------------- */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n  /* -------------------------Handle change----------------------- */\n\n  const handleChange = (e: BaseSyntheticEvent) => {\n    setDialogInfo((prev) => ({\n      ...prev,\n      reply: e.target.value,\n    }));\n  };\n  /* -------------------------Event Handlers -> OnClick, onToggle etc----------------------- */\n\n  const onViewComplete = (rowInfo: any) => {\n    const info = {\n      uid: rowInfo?.uid ?? null,\n      stage: rowInfo?.stage?.stageName ?? \"\",\n      query: rowInfo?.queryMessage ?? \"\",\n      raisedOn: rowInfo?.createdAt ?? new Date().toISOString(),\n      raisedBy: rowInfo?.createdByUserName ?? \"\",\n      updatedOn: rowInfo?.updatedAt ?? new Date().toISOString(),\n      updatedBy: rowInfo?.updatedByUserName ?? \"\",\n      status: LOAN_QUERY_STATUS[`${rowInfo?.status}`] ?? \"\",\n      reply: rowInfo?.queryResponse ?? \"\",\n      action: \"\",\n    };\n\n    setDialogInfo(info);\n  };\n\n  const onViewInProgress = (rowInfo: any) => {\n    const info = {\n      uid: rowInfo?.uid ?? null,\n      stage: rowInfo?.stage?.stageName ?? \"\",\n      query: rowInfo?.queryMessage ?? \"\",\n      raisedOn: rowInfo?.createdAt ?? new Date().toISOString(),\n      raisedBy: rowInfo?.createdByUserName ?? \"\",\n      updatedOn: rowInfo?.updatedAt ?? new Date().toISOString(),\n      updatedBy: rowInfo?.updatedByUserName ?? \"\",\n      status: LOAN_QUERY_STATUS[`${rowInfo?.status}`] ?? \"\",\n      reply: \"\",\n      action: \"\",\n    };\n\n    setDialogInfo(info);\n  };\n\n  const onCancel = () => {\n    setShowQueryBox(false);\n    resetValidator();\n  };\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    const payload = {\n      uid: dialogInfo.uid,\n      status: APPROVAL_STATUS.CLOSED,\n      queryResponse: dialogInfo.reply,\n    };\n\n    try {\n      const res = await CreditQueryService.updateQueryResponse(payload);\n\n      dataTableRef?.current?.search();\n      resetValidator();\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n      setTriggerToast(!triggerToast);\n      setShowQueryBox(false);\n    } catch (error) {\n      console.log(error);\n      // setShowQueryBox(false);\n\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /* ----------------------Helper----------------------------- */\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /* ----------------------Sectional Renders----------------------------- */\n\n  const renderHeaderStage = () => {\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.stage\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderStage = (rowData: IRowData) => {\n    return (\n      <>\n        <div className=\"text-primary-ptext-1000 text-xs text-left w-30\">\n          {STAGE_NAMES?.[rowData.stage?.stageName] ?? \"\"}\n        </div>\n      </>\n    );\n  };\n\n  const renderHeaderQuery = () => {\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.query\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderQuery = (rowData: IRowData) => {\n    return (\n      <div\n        className=\"text-primary-ptext-1000 text-xs text-left truncate w-40\"\n        // dangerouslySetInnerHTML={{ __html: rowData.queryMessage }}\n        title={removeHtmlTags(rowData.queryMessage)}\n      >\n        {removeHtmlTags(rowData.queryMessage)}\n      </div>\n    );\n  };\n\n  const renderHeaderRaisedOn = () => {\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.raisedOn\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderRaisedOn = (rowData: IRowData) => {\n    return (\n      <>\n        <div className=\"text-primary-ptext-1000 text-xs text-left w-30\">\n          {formatDate(rowData?.createdAt)}\n        </div>\n      </>\n    );\n  };\n\n  const renderHeaderRaisedBy = () => {\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.raisedBy\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderRaisedBy = (rowData: IRowData) => {\n    return (\n      <>\n        <div className=\"text-primary-ptext-1000 text-xs text-left w-30\">\n          {rowData.createdByUserName}\n        </div>\n      </>\n    );\n  };\n\n  const renderHeaderRespondedOn = () => {\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.respondedOn\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderRespondedOn = (rowData: IRowData) => {\n    return (\n      <>\n        <div className=\"text-primary-ptext-1000 text-xs text-left w-30\">\n          {formatDate(rowData.updatedAt)}\n        </div>\n      </>\n    );\n  };\n\n  const renderHeaderRespondedBy = () => {\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.respondedBy\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderRespondedBy = (rowData: IRowData) => {\n    return (\n      <>\n        <div className=\"text-primary-ptext-1000 text-xs text-left w-30\">\n          {rowData.updatedByUserName}\n        </div>\n      </>\n    );\n  };\n\n  const renderHeaderStatus = () => {\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.status\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderStatus = (rowData: IRowData) => {\n    return (\n      <>\n        <div className=\"text-primary-ptext-1000 text-xs text-left w-30\">\n          {LOAN_QUERY_STATUS[`${rowData?.status}`] ?? \"\"}\n        </div>\n      </>\n    );\n  };\n\n  const renderHeaderAction = () => {\n    console.log(\"header aciton called\");\n    return (\n      <div className=\"flex\">\n        <Label label={`${i18n.t(\"label.cq.action\")}`} className=\"mr-1\" />\n      </div>\n    );\n  };\n\n  const renderAction = (rowData: IRowData) => {\n    return (\n      <>\n        <div className=\"flex justify-center items-center text-primary-ptext-1000 text-xs cursor-pointer\">\n          {rowData.status === APPROVAL_STATUS.CLOSED ? (\n            <IconButton\n              className={`select-none`}\n              buttonType={BUTTON_TYPES.VIEW}\n              onClick={() => {\n                onViewComplete(rowData);\n              }}\n            />\n          ) : (\n            <IconButton\n              className={`select-none`}\n              buttonType={BUTTON_TYPES.REPLY}\n              onClick={() => onViewInProgress(rowData)}\n            />\n          )}\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      {/* Table  */}\n      <div className=\"bg-white rounded-xl pt-6 px-7 pb-7\">\n        <div className=\"mb-4 flex\">\n          <Text\n            className=\"text-xl font-bold text-primary-ptext-1000\"\n            label={\"label.cam.recommendation.query\"}\n          />\n        </div>\n\n        <div>\n          <ReadOnlyTable\n            standardDataFormatPromise={CreditQueryService.getAll}\n            dataKey=\"uid\"\n            search={`&loan.uid=${params.loanUid}&isActive=${true}`}\n            ref={dataTableRef}\n            // paginator={false}\n            // className=\"border border-secondary-concrete px-0  mt-4 rounded-lg  w-full h-40 overflow-auto approval-request-wrapper\"\n            style={{ width: \"100%\" }}\n          >\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={renderHeaderStage}\n              body={renderStage}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6 min-w-80\"\n              header={renderHeaderQuery}\n              body={renderQuery}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={renderHeaderRaisedOn}\n              body={renderRaisedOn}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs w-1/12  p-1 h-12 pl-6\"\n              header={renderHeaderRaisedBy}\n              body={renderRaisedBy}\n            />\n\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={renderHeaderRespondedOn}\n              body={renderRespondedOn}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={renderHeaderRespondedBy}\n              body={renderRespondedBy}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={renderHeaderStatus}\n              body={renderStatus}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={renderHeaderAction}\n              body={renderAction}\n            />\n          </ReadOnlyTable>\n        </div>\n      </div>\n\n      <DialogBox className={`min-w-[780px] !p-0`} visible={showQueryBox} closable={false}>\n        <div className=\"p-6\">\n          <div className=\"mb-6 flex justify-between\">\n            <div className=\"flex flex-col gap-2.5\">\n              <div className=\"text-base font-bold text-primary-primaryTextColor\">\n                <Text label={\"label.cq.responseToQuery\"} />\n              </div>\n              <div className=\"flex items-center gap-2 text-xs\">\n                <div>\n                  <span className=\"font-medium\">\n                    <Text label={\"label.cq.raisedOn\"} />\n                  </span>\n                  <span className=\"ml-2\">{formatDate(dialogInfo.raisedOn)}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">\n                    <Text label={\"label.cq.raisedBy\"} />\n                  </span>\n                  <span className=\"ml-2\">{dialogInfo.raisedBy}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"self-start flex items-center gap-5 text-xs text-primary-ptext-1000\">\n              <div>\n                <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancel} />\n              </div>\n              {dialogInfo.status === LOAN_QUERY_STATUS.IN_PROGRESS && (\n                <div>\n                  <ButtonBox\n                    className=\"\"\n                    buttonType={BUTTON_TYPE.SUBMIT_OUTLINE}\n                    onClickWithLoader={onSubmit}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex flex-col\">\n            <div className=\"h-40\">\n              <InputTextArea\n                name=\"query\"\n                label={\"label.cq.query\"}\n                value={dialogInfo?.query}\n                autoResize\n                maxCount={200}\n                disabled\n              />\n            </div>\n\n            {dialogInfo.status === \"completed\" && (\n              <div className=\"mb-3 flex items-center gap-2 text-xs\">\n                <div>\n                  <span className=\"font-medium\">\n                    <Text label={\"label.cq.updatedOn\"} />\n                  </span>\n                  <span className=\"ml-2\">{formatDate(dialogInfo.updatedOn)}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">\n                    <Text label={\"label.cq.updatedBy\"} />\n                  </span>\n                  <span className=\"ml-2\">{dialogInfo.updatedBy}</span>\n                </div>\n              </div>\n            )}\n\n            <div className=\"h-40\">\n              <InputTextArea\n                name=\"reply\"\n                label={\"label.cq.reply\"}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(\n                  `reply`,\n                  dialogInfo.reply,\n                  \"mandatory\"\n                )}\n                value={dialogInfo.reply}\n                maxCount={200}\n                onChange={handleChange}\n                autoResize\n                disabled={dialogInfo.status === LOAN_QUERY_STATUS.CLOSED}\n              />\n            </div>\n          </div>\n        </div>\n      </DialogBox>\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default PageQuery;\n"],"names":["initialDialogData","STAGE_NAMES","LOAN_QUERY_STATUS","PageQuery","params","useParams","showQueryBox","setShowQueryBox","useState","dialogInfo","setDialogInfo","toastMessage","setToastMessage","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","forceUpdate","dataTableRef","useRef","toastMessageRef","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","_a","validate","_b","validateForm","isValid","handleChange","onViewComplete","rowInfo","info","onViewInProgress","onCancel","resetValidator","onSubmit","payload","APPROVAL_STATUS","res","CreditQueryService","STATIC_MASTER_TYPE_TOAST_TEXT","error","parseStandardAPIErrorMessage","renderHeaderStage","jsx","Label","i18n","renderStage","rowData","Fragment","renderHeaderQuery","renderQuery","removeHtmlTags","renderHeaderRaisedOn","renderRaisedOn","formatDate","renderHeaderRaisedBy","renderRaisedBy","renderHeaderRespondedOn","renderRespondedOn","renderHeaderRespondedBy","renderRespondedBy","renderHeaderStatus","renderStatus","renderHeaderAction","renderAction","IconButton","BUTTON_TYPES","jsxs","Text","ReadOnlyTable","Column","DialogBox","ButtonBox","BUTTON_TYPE","InputTextArea","ToastCustom","TOAST_STYLE_TYPE","ErrorDialog"],"mappings":"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"}