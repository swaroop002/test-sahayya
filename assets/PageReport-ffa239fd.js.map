{"version":3,"file":"PageReport-ffa239fd.js","sources":["../../src/views/transaction/PageTechnical/Helper.ts","../../src/views/transaction/PageTechnical/Sections/DocumentDetails/DocumentDetails.tsx","../../src/views/transaction/PageTechnical/Sections/GeneralDetails/GeneralDetails.tsx","../../src/views/transaction/PageTechnical/Sections/GovernmentGuideLines/GovernmentGuideLines.tsx","../../src/views/transaction/PageTechnical/Sections/InitiationInfo/InitiationInfo.tsx","../../src/views/transaction/PageTechnical/Sections/LocalityDetails/LocalityDetails.tsx","../../src/views/transaction/PageTechnical/Sections/OccupancyDetails/OccupancyDetails.tsx","../../src/views/transaction/PageTechnical/Sections/PropertyDetails/PropertyDetails.tsx","../../src/views/transaction/PageTechnical/Sections/PropertyPhotos/PropertyPhotos.tsx","../../src/views/transaction/PageTechnical/Sections/PropertyValuationAndAmenities/PropertyValuationAndAmenities.tsx","../../src/views/transaction/PageTechnical/Sections/StageOfConstruction/StageOfConstruction.tsx","../../src/views/transaction/PageTechnical/Sections/TechnicalStatus/TechnicalStatus.tsx","../../src/views/transaction/PageTechnical/Sections/UploadTechnicalReport/UploadTechnicalReport.tsx","../../src/views/transaction/PageTechnical/PageReport/PageReport.tsx"],"sourcesContent":["import {\n  ISavedDocumentRecords,\n  ISavedDocumentSections,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport { numberFormatter } from \"locale\";\nimport { ITechnicalDocumentDetailsPageObj } from \"./Sections/DocumentDetails/DocumentDetails\";\nimport { ITechnicalGeneralDetailsPageObj } from \"./Sections/GeneralDetails/GeneralDetails\";\nimport { IGovernmentRateData } from \"./Sections/GovernmentGuideLines/GovernmentGuideLines\";\nimport { ITechnicalInitiationInfo } from \"./Sections/InitiationInfo/InitiationInfo\";\nimport { ITechnicalLocalityDetailsPageObj } from \"./Sections/LocalityDetails/LocalityDetails\";\nimport { IOccupancyData } from \"./Sections/OccupancyDetails/OccupancyDetails\";\nimport {\n  ITechnicalBoundariesOnSiteRowData,\n  ITechnicalPropertyDetailsPageObj,\n} from \"./Sections/PropertyDetails/PropertyDetails\";\nimport { IPropertyPhotosData } from \"./Sections/PropertyPhotos/PropertyPhotos\";\nimport { IPropertyValuationAndAmenities } from \"./Sections/PropertyValuationAndAmenities/PropertyValuationAndAmenities\";\nimport { IStageOfConstructionData } from \"./Sections/StageOfConstruction/StageOfConstruction\";\nimport { ITechnicalStatusData } from \"./Sections/TechnicalStatus/TechnicalStatus\";\nimport { IUploadTechnicalReportData } from \"./Sections/UploadTechnicalReport/UploadTechnicalReport\";\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Initiation Info\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateTechnicalInitiationInfoPageObj = (\n  data: any,\n  addressData: any\n): ITechnicalInitiationInfo => {\n  const ADDRESS_TYPES: { [key: string]: string } = {\n    PERMANENT: \"Permanent\",\n    RESIDENTIAL: \"Residential\",\n    EMPLOYEMENT_ADDRESS: \"Employment Address\",\n    COLLATERAL_PROPERTY: \"Collateral Property\",\n  };\n\n  const ccEmail = JSON.parse(data?.ccEmail ? data?.ccEmail : \"{}\");\n  const pageObj: ITechnicalInitiationInfo = {\n    dateOfInitiation: data?.stage?.createdAtSystemDate,\n    vendorType: data?.stage?.smStageType ?? \"\",\n    internalAssignee: { name: data?.stage?.assignee?.name ?? \"\" },\n    externalVendor: { name: data?.stage?.partner?.name ?? \"\" },\n    addressType: ADDRESS_TYPES[`${data?.stage?.address?.primaryAddressType}`] ?? \"\",\n    CCEmails: Array.isArray(ccEmail) ? ccEmail : [],\n    description: data?.stage?.remarks,\n\n    // address\n    address: addressData?.address ?? \"\",\n    propertyType: addressData?.propertyType ?? \"\",\n    pincode: { pinCode: addressData?.pincode?.pinCode, uid: addressData?.pincode?.uid },\n    city: { name: addressData?.city?.name, uid: addressData?.city?.uid },\n    state: addressData?.city?.state?.name,\n    latitude: addressData?.latitude ? `${parseFloat(addressData.latitude).toFixed(4)}` : \"\",\n    longitude: addressData?.longitude ? `${parseFloat(addressData?.longitude).toFixed(4)}` : \"\",\n\n    stageDocuments: data?.stage?.stageDocuments\n      ? data?.stage?.stageDocuments?.filter(\n          (document: any) => document?.isSharedAtInitiation === true\n        )\n      : [],\n  };\n\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - General Details\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateGeneralDetailsPageObj = (data: any): ITechnicalGeneralDetailsPageObj => {\n  const pageObj: ITechnicalGeneralDetailsPageObj = {\n    dateOfVisit: data?.dateOfVisit ? new Date(data?.dateOfVisit) : \"\",\n    customerName: data?.stage?.applicant?.firstName ?? \"\",\n    ownershipName: data?.ownerName ?? \"\",\n    typeOfCase: data?.loan?.product?.name ?? \"\",\n    address: {\n      address: data?.address?.address ?? \"\",\n      smAddressType: data?.address?.smAddressType ?? \"\",\n      propertyType: data?.address?.propertyType ?? \"\",\n      pincode: { pinCode: data?.address?.pincode?.pinCode, uid: data?.address?.pincode?.uid },\n      city: { name: data?.address?.city?.name, uid: data?.address?.city?.uid },\n      state: data?.address?.city?.state?.name ?? \"\",\n      latitude: data?.address?.latitude ? `${parseFloat(data?.address?.latitude).toFixed(4)}` : \"\",\n      longitude: data?.address?.longitude\n        ? `${parseFloat(data?.address?.longitude).toFixed(4)}`\n        : \"\",\n    },\n  };\n\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Document Details\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateDocumentDetailsPageObj = (data: any): ITechnicalDocumentDetailsPageObj => {\n  const pageObj: ITechnicalDocumentDetailsPageObj = {\n    layoutPlanProvided: data?.stage?.technical?.isLayoutPlanProvided ?? \"\",\n    approvingAuthority: data?.stage?.technical?.approvingAuthority ?? \"\",\n    approvalNo: data?.stage?.technical?.approvalNo ?? \"\",\n    constructionAsPerPlanned: data?.stage?.technical?.buildingConstructionAsPerPlan ?? \"\",\n    planProvided: data?.stage?.technical?.isPlanProvided ?? \"\",\n    areaOfProperty: data?.stage?.technical?.areaOfPropertyAsPerDoc ?? \"\",\n    units: data?.stage?.technical?.areaUnit ?? \"\",\n    holdingType: data?.stage?.technical?.smHoldingType ?? \"\",\n  };\n\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Surrounding Locality Details\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateLocalityDetailsPageObj = (data: any): ITechnicalLocalityDetailsPageObj => {\n  const pageObj: ITechnicalLocalityDetailsPageObj = {\n    classOfLocality: data?.stage?.technical?.smClassOfLocality ?? \"\",\n    distanceFromCity: data?.stage?.technical?.distanceFromCityCenter ?? \"\",\n    nearbyBusStop: data?.stage?.technical?.distanceFromNearByBusstop ?? \"\",\n    developmentInVicinity: data?.stage?.technical?.vicinityDevelopmentPct ?? \"\",\n  };\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Property Details\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updatePropertyDetailsPageObj = (data: any): ITechnicalPropertyDetailsPageObj => {\n  const prepareBoundariesTableDataFromAPI = (): ITechnicalBoundariesOnSiteRowData[] => {\n    const preparedTableData: ITechnicalBoundariesOnSiteRowData[] = [\n      {\n        direction: \"North\",\n        uid: \"1\",\n        actualOnSite: data?.boundaryNorthAsActual ?? \"\",\n        asPerDoc: data?.boundaryNorthAsPerDoc ?? \"\",\n      },\n      {\n        direction: \"South\",\n        uid: \"2\",\n        actualOnSite: data?.boundarySouthAsActual ?? \"\",\n        asPerDoc: data?.boundarySouthAsPerDoc ?? \"\",\n      },\n      {\n        direction: \"East\",\n        uid: \"3\",\n        actualOnSite: data?.boundaryEastAsActual ?? \"\",\n        asPerDoc: data?.boundaryEastAsPerDoc ?? \"\",\n      },\n      {\n        direction: \"West\",\n        uid: \"4\",\n        actualOnSite: data?.boundaryWestAsActual ?? \"\",\n        asPerDoc: data?.boundaryWestAsPerDoc ?? \"\",\n      },\n    ];\n    return preparedTableData;\n  };\n\n  const pageObj: ITechnicalPropertyDetailsPageObj = {\n    boundariesOnSiteTable: prepareBoundariesTableDataFromAPI(),\n    boundariesMatching: data?.isPropertyBoundaryMatching ?? \"\",\n    landUse: data?.smLandUse ?? \"\",\n    propertyDescription: data?.propertyDescription ?? \"\",\n    noOfFloors: data?.noOfFloors ?? \"\",\n    noOfLifts: data?.noOfLift ?? \"\",\n    noOfFlatsPerFloor: data?.noOfFlatsPerFloor ?? \"\",\n    noOfWings: data?.noOfWings ?? \"\",\n    structureDescription: data?.structureDescription ?? \"\",\n    conditionOfProperty: data?.smConditionOfProperty ?? \"\",\n    yearOfConstruction: data?.yearOfConstruction ?? \"\",\n    ageOfProperty: data?.ageOfProperty ?? \"\",\n    approachRoadType: data?.smApproachRoadType ?? \"\",\n    approachRoadWidth: data?.approachRoadWidth ?? \"\",\n    propertyNearHighTensionLine: data?.isPropertyNearHighTensionLine ?? \"\",\n    distanceFromHighTensionLine: data?.distanceFromHighTensionLine ?? \"\",\n    marketFeedback: data?.marketFeedback ?? \"\",\n    marketability: data?.smMarketability ?? \"\",\n    planAsPerDcrNorms: data?.isPlanAsPerDcrNorms ?? \"\",\n    noOfFloorsPermitted: data?.noOfFloorsPermiteed ?? \"\",\n    numberOfFloorConstructed: data?.noOfFloorsConstructed ?? \"\",\n    fsiAchieved: data?.fsiAchieved ?? \"\",\n    riskOfDemolition: data?.smRiskOfDemolition ?? \"\",\n    setbackDeviation: data?.setbackDeviationPct ?? \"\",\n    horizontalDeviation: data?.horizontalDeviationPct ?? \"\",\n    stageChecklists: data?.stageChecklists ?? [],\n    isQuestionsTableDataEmptyFromApi: data?.stageChecklists?.length > 0 ? false : true,\n  };\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Property Valuation And Amenities\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updatePropertyValuationAndAmenities = (data: any): IPropertyValuationAndAmenities => {\n  const fairMarketValue = `${numberFormatter(data?.fairMarketValue, \"en-IN\", 0)}`;\n  const totalPropertyValueOnCompletion = `${numberFormatter(\n    data?.totalMarketValueOnCompletion,\n    \"en-IN\",\n    0\n  )}`;\n  const forcedSaleValue = `${numberFormatter(data?.forcedSaleValue, \"en-IN\", 0)}`;\n\n  const pageObj: IPropertyValuationAndAmenities = {\n    fairMarketValue: fairMarketValue,\n    totalPropertyValueOnCompletion:\n      totalPropertyValueOnCompletion === \"0\" ? \"\" : totalPropertyValueOnCompletion,\n    forcedSaleValue: forcedSaleValue === \"0\" ? \"\" : forcedSaleValue,\n    stagePropertyValuations: [...(data?.stagePropertyValuations ?? [])],\n    stagePropertyAmenities: [...(data?.stagePropertyAmenities ?? [])],\n  };\n\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Property Valuation And Amenities\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateStageOfConstructionPageObj = (data: any): IStageOfConstructionData => {\n  const pageObj: IStageOfConstructionData = {\n    uid: data?.stageConstructionDetail?.uid ?? \"\",\n    structureDescription: data?.stageConstructionDetail?.constructionStructureDescription ?? \"\",\n    descriptionOfStage: data?.stageConstructionDetail?.constructionStageDescription ?? \"\",\n    technicalPct: data?.stageConstructionDetail?.technicalPct ?? \"\",\n    recommendedPct: data?.stageConstructionDetail?.recommendedPct ?? \"\",\n  };\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Government Guidelines\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateGovernmentGuideLinePageObj = (data: any): IGovernmentRateData => {\n  const circleRateOfLand = numberFormatter(\n    data?.stage?.technical?.govtCircleRateOfLand,\n    \"en-IN\",\n    0\n  );\n  const circleRateOfBuilding = numberFormatter(\n    data?.stage?.technical?.govtCircleRateOfBuilding,\n    \"en-IN\",\n    0\n  );\n  const landValue = numberFormatter(data?.stage?.technical?.govtLandValue, \"en-IN\", 0);\n  const totalValuationOfProperty = numberFormatter(\n    data?.stage?.technical?.govtTotalValuationOfProperty,\n    \"en-IN\",\n    0\n  );\n  const flatOrAptValue = numberFormatter(data?.stage?.technical?.govtFlatAptValue, \"en-IN\", 0);\n\n  const pageObj: IGovernmentRateData = {\n    uid: data?.stage?.technical?.uid ?? \"\",\n    circleRateOfLand: `${!circleRateOfLand ? \"\" : circleRateOfLand}`,\n    circleRateOfBuilding: `${!circleRateOfBuilding ? \"\" : circleRateOfBuilding}`,\n    landValue: `${!landValue ? \"\" : landValue}`,\n    totalValuationOfProperty: `${!totalValuationOfProperty ? \"\" : totalValuationOfProperty}`,\n    flatOrAptValue: `${!flatOrAptValue ? \"\" : flatOrAptValue}`,\n    remarks: data?.stage?.technical?.govtGuidelineRemarks ?? \"\",\n  };\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Occupancy Details\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateOccupancyDetailsPageObj = (data: any): IOccupancyData => {\n  const pageObj: IOccupancyData = {\n    uid: data?.stage?.technical?.uid ?? \"\",\n    stateOfOccupancy: data?.stage?.technical?.smStatusOccupancy ?? \"\",\n    occupiedBy: data?.stage?.technical?.occupiedByRelationshipWithCustomer ?? \"\",\n    occupiedSince: data?.stage?.technical?.occupiedSinceYear ?? \"\",\n    personAtSite: data?.stage?.technical?.personAvailableAtSite ?? \"\",\n  };\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Property Photos\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updatePropertyPhotos = (data: any): IPropertyPhotosData => {\n  const prepareDocumentSectionStructure = (sections: any) => {\n    const preparedStructure: ISavedDocumentSections[] = sections.map((docSection: any) => ({\n      uid: docSection.uid,\n      fileName: docSection.fileName,\n      fileType: docSection.fileType,\n      section: docSection.section,\n      sectionName: docSection.sectionName,\n      thumbUrl: docSection.thumbUrl,\n      url: docSection.url,\n      isActive: docSection.isActive,\n    }));\n\n    return preparedStructure.length\n      ? preparedStructure\n      : [\n          {\n            uid: \"\",\n            fileName: \"\",\n            fileType: \"\",\n            section: \"\",\n            sectionName: \"\",\n            thumbUrl: \"\",\n            url: \"\",\n            isActive: false,\n          },\n        ];\n  };\n\n  const structLoanDocumentsFromAPIResponse = (documents: any[]) => {\n    const structuredSavedDocument: ISavedDocumentRecords[] = documents?.map((doc: any) => ({\n      uid: doc.uid,\n      attributes: {\n        ...doc.attributes,\n      },\n      docCategory: doc.docCategory,\n      docFor: doc.docFor,\n      docType: { ...doc.docType },\n      documentSections: prepareDocumentSectionStructure(doc.documentSections),\n      loanSectionKey: doc.loanSectionKey ?? \"\",\n      isActive: doc.isActive,\n    }));\n\n    return structuredSavedDocument;\n  };\n\n  const pageObj: IPropertyPhotosData = {\n    savedDocuments: [...structLoanDocumentsFromAPIResponse(data?.loanDocuments ?? [])],\n  };\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Technical Status\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateTechnicalStatusPageObj = (data: any): ITechnicalStatusData => {\n  const pageObj: ITechnicalStatusData = {\n    status: data?.stage?.technical?.smTechnicalStatus ?? \"\",\n    remarks: data?.stage?.technical?.overallTechnicalRemarks ?? \"\",\n    engineerName: data?.stage?.technical?.inspectionEngineerName ?? \"\",\n    declaration: data?.stage?.technical?.isDeclarationChecked ?? false,\n  };\n  return pageObj;\n};\n\n/*\n-----------------------------------------------------------------------------------------------------------\nTechnical - Technical Report\n-----------------------------------------------------------------------------------------------------------\n*/\nexport const updateTechnicalUploadReport = (data: any): IUploadTechnicalReportData => {\n  const prepareDocumentSectionStructure = (sections: any) => {\n    const preparedStructure: ISavedDocumentSections[] = sections.map((docSection: any) => ({\n      uid: docSection.uid,\n      fileName: docSection.fileName,\n      fileType: docSection.fileType,\n      section: docSection.section,\n      sectionName: docSection.sectionName,\n      thumbUrl: docSection.thumbUrl,\n      url: docSection.url,\n      isActive: docSection.isActive,\n    }));\n\n    return preparedStructure.length\n      ? preparedStructure\n      : [\n          {\n            uid: \"\",\n            fileName: \"\",\n            fileType: \"\",\n            section: \"\",\n            sectionName: \"\",\n            thumbUrl: \"\",\n            url: \"\",\n            isActive: false,\n          },\n        ];\n  };\n\n  const structLoanDocumentsFromAPIResponse = (documents: any[]) => {\n    const structuredSavedDocument: ISavedDocumentRecords[] = documents?.map((doc: any) => ({\n      uid: doc.uid,\n      attributes: {\n        ...doc.attributes,\n      },\n      docCategory: doc.docCategory,\n      docFor: doc.docFor,\n      docType: { ...doc.docType },\n      documentSections: prepareDocumentSectionStructure(doc.documentSections),\n      loanSectionKey: doc.loanSectionKey ?? \"\",\n      isActive: doc.isActive,\n    }));\n    return structuredSavedDocument;\n  };\n\n  const pageObj: IUploadTechnicalReportData = {\n    savedDocuments: [...structLoanDocumentsFromAPIResponse(data.loanDocuments)],\n  };\n  return pageObj;\n};\n","import AclGuard from \"components/AclGuard\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputError from \"components/InputError/InputError\";\nimport RadioButton from \"components/RadioButton\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  CHECKBOX_STYLE_TYPE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { ITechnicalDropdownList } from \"../../PageReport/PageReport\";\n\ninterface IProps {\n  isLoading: boolean;\n  data: ITechnicalDocumentDetailsPageObj;\n  getDataOnCancel: () => void;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n  dropDownOptions: ITechnicalDropdownList;\n}\n\nexport interface ITechnicalDocumentDetailsPageObj {\n  layoutPlanProvided: string;\n  planProvided: string;\n  approvingAuthority: string;\n  approvalNo: string;\n  constructionAsPerPlanned: string;\n  areaOfProperty: string;\n  units: string;\n  holdingType: string;\n}\ntype TIsTrue = \"YES\" | \"NO\";\n\nexport const initialTechnicalDocumentDetailsPageObj: ITechnicalDocumentDetailsPageObj = {\n  layoutPlanProvided: \"\",\n  planProvided: \"\",\n  approvalNo: \"\",\n  approvingAuthority: \"\",\n  constructionAsPerPlanned: \"\",\n  areaOfProperty: \"\",\n  holdingType: \"\",\n  units: \"\",\n};\n\nconst IS_TRUE: Record<TIsTrue, TIsTrue> = {\n  YES: \"YES\",\n  NO: \"NO\",\n};\n\nconst DocumentDetails: React.FC<IProps> = (props) => {\n  const { data, isLoading, getDataOnCancel, payloadInfo, dropDownOptions } = props;\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState<ITechnicalDocumentDetailsPageObj>({\n    ...initialTechnicalDocumentDetailsPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) return;\n\n    const payload = enrichForSaveDocumentDetails();\n    try {\n      const res = await TechnicalSevice.updateDocumentDetails(payload);\n\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const enrichForSaveDocumentDetails = () => {\n    const payloadData = {\n      uid: payloadInfo.technicalUid, //technical uid\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      isLayoutPlanProvided: pageObj.layoutPlanProvided == IS_TRUE.YES ? true : false,\n      isPlanProvided: pageObj.planProvided == IS_TRUE.YES ? true : false,\n      approvingAuthority: pageObj.approvingAuthority,\n      approvalNo: pageObj.approvalNo,\n      buildingConstructionAsPerPlan: pageObj.constructionAsPerPlanned,\n      areaOfPropertyAsPerDoc: pageObj.areaOfProperty,\n      areaUnit: pageObj.units,\n      smHoldingType: pageObj.holdingType,\n    };\n\n    return payloadData;\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  const {\n    approvingAuthority,\n    approvalNo,\n    areaOfProperty,\n    constructionAsPerPlanned,\n    holdingType,\n    layoutPlanProvided,\n    planProvided,\n    units,\n  } = pageObj;\n  return (\n    <div>\n      <SaveComponent\n        title=\"heading.technical.documentDetails\"\n        pageMode={pageMode}\n        disabled={isLoading}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\"grid grid-cols-4 gap-3  \">\n              <div className=\"col-span-1 flex flex-col justify-center items-start space-y-1\">\n                <Text\n                  className=\"text-xs text-primary-ptext-1000\"\n                  label={\"label.technical.layoutPlanProvided*\"}\n                />\n                <div className=\"flex gap-5\">\n                  <div className=\"mr-5 flex\">\n                    <RadioButton\n                      hideLabel\n                      hideErrorRow\n                      name=\"layoutPlanProvided\"\n                      variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                      value={IS_TRUE.YES}\n                      checked={layoutPlanProvided === IS_TRUE.YES}\n                      onChange={handleChange}\n                      disabled={pageMode === PAGE_MODE.VIEW}\n                    />\n                    <Text className=\"ml-1.5 text-xs \" label=\"label.dde.yes\" />\n                  </div>\n                  <div className=\"flex\">\n                    <RadioButton\n                      hideLabel\n                      hideErrorRow\n                      name=\"layoutPlanProvided\"\n                      variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                      value={IS_TRUE.NO}\n                      checked={layoutPlanProvided === IS_TRUE.NO}\n                      onChange={handleChange}\n                      disabled={pageMode === PAGE_MODE.VIEW}\n                    />\n                    <Text className=\"ml-1.5 text-xs \" label=\"label.dde.no\" />\n                  </div>\n                </div>\n\n                <div className=\"h-4 flex justify-start  items-center\">\n                  <InputError\n                    validation={simpleValidator?.current?.message(\n                      `layoutPlanProvided`,\n                      layoutPlanProvided,\n                      \"mandatory\"\n                    )}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <InputBox\n                  label=\"label.technical.approvingAuthority\"\n                  name=\"approvingAuthority\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={approvingAuthority ?? \"\"}\n                  onChange={handleChange}\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.technical.approvalNo.\"\n                  name=\"approvalNo\"\n                  className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={approvalNo ?? \"\"}\n                  onChange={handleChange}\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.technical.buildingConstructionAsPerPlanned*\"\n                  name=\"constructionAsPerPlanned\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={constructionAsPerPlanned ?? \"\"}\n                  onChange={handleChange}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    `constructionAsPerPlanned`,\n                    constructionAsPerPlanned,\n                    \"mandatory\"\n                  )}\n                />\n              </div>\n\n              <div className=\"col-span-1 flex flex-col justify-center items-start space-y-1\">\n                <div>\n                  <Text\n                    className=\"text-xs text-primary-ptext-1000\"\n                    label={\"label.technical.planProvided*\"}\n                  />\n                  <div className=\"flex gap-5\">\n                    <div className=\"mr-5 flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        name=\"planProvided\"\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        value={IS_TRUE.YES}\n                        checked={planProvided === IS_TRUE.YES}\n                        onChange={handleChange}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <Text className=\"ml-1.5 text-xs \" label=\"label.dde.yes\" />\n                    </div>\n                    <div className=\"flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        name=\"planProvided\"\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        value={IS_TRUE.NO}\n                        checked={planProvided === IS_TRUE.NO}\n                        onChange={handleChange}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <Text className=\"ml-1.5 text-xs \" label=\"label.dde.no\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"h-4 flex justify-start  items-center\">\n                  <InputError\n                    validation={simpleValidator?.current?.message(\n                      `planProvided`,\n                      planProvided,\n                      \"mandatory\"\n                    )}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <InputBox\n                  label=\"label.legal.areaOfPropertyMandatory\"\n                  name=\"areaOfProperty\"\n                  className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={areaOfProperty ?? \"\"}\n                  onChange={handleChange}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    `areaOfProperty`,\n                    areaOfProperty,\n                    \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n                  )}\n                />\n              </div>\n              <div>\n                <SimpleDropDown\n                  label=\"label.legal.unitsMandatory\"\n                  placeholder=\"placeholder.legal.unitsMandatory\"\n                  name=\"units\"\n                  value={units}\n                  onChange={handleChange}\n                  onBlur={validate}\n                  options={dropDownOptions.units}\n                  optionLabel=\"name\"\n                  optionValue=\"code\"\n                  validation={simpleValidator?.current?.message(`units`, units, \"mandatory\")}\n                />\n              </div>\n              <div>\n                <SimpleDropDown\n                  label=\"label.technical.holdingType*\"\n                  placeholder=\"placeholder.technical.holdingType\"\n                  name=\"holdingType\"\n                  value={holdingType}\n                  onChange={handleChange}\n                  onBlur={validate}\n                  options={dropDownOptions.holdingType}\n                  optionLabel=\"name\"\n                  optionValue=\"code\"\n                  validation={simpleValidator?.current?.message(\n                    `holdingType`,\n                    holdingType,\n                    \"mandatory\"\n                  )}\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default DocumentDetails;\n","import AclGuard from \"components/AclGuard\";\nimport Address, { IAddressData, IAddressRef } from \"components/Address\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\nimport ToastCustom from \"components/Toast\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n  VARIANTS,\n} from \"utils/Constant\";\n\ninterface IProps {\n  isLoading: boolean;\n  data: ITechnicalGeneralDetailsPageObj;\n  getDataOnCancel: () => void;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n}\n\nexport interface ITechnicalGeneralDetailsPageObj {\n  dateOfVisit: string | Date;\n  typeOfCase: string;\n  customerName: string;\n  ownershipName: string;\n  address: IAddressData;\n}\n\nexport const initialTechnicalGeneralDetailsPageObj: ITechnicalGeneralDetailsPageObj = {\n  dateOfVisit: \"\",\n  customerName: \"\",\n  ownershipName: \"\",\n  typeOfCase: \"\",\n  address: {\n    address: \"\",\n    pincode: { pinCode: \"\", uid: \"\" },\n    city: { name: \"\", uid: \"\" },\n    state: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    smAddressType: \"\",\n    propertyType: \"\",\n  },\n};\n\nconst GeneralDetails: React.FC<IProps> = (props: IProps) => {\n  const { data, isLoading, getDataOnCancel, payloadInfo } = props;\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n\n  const [pageObj, setPageObj] = useState<ITechnicalGeneralDetailsPageObj>({\n    ...initialTechnicalGeneralDetailsPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const addressRef = useRef<IAddressRef>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    const addressData = addressRef?.current?.save();\n    if (!validateForm() || !addressData) {\n      return;\n    }\n\n    const payload = enrichForSaveGeneralDetails(addressData);\n    try {\n      const res = await TechnicalSevice.updateGeneralDetails(payload);\n\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    addressRef.current?.resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const enrichForSaveGeneralDetails = (addressData: IAddressData) => {\n    const payloadData = {\n      uid: payloadInfo.technicalUid, //technical uid\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      dateOfVisit: pageObj.dateOfVisit,\n      typeOfCase: pageObj.typeOfCase,\n      customerName: pageObj.customerName,\n      ownerName: pageObj.ownershipName,\n      address: {\n        uid: addressData.uid ?? null,\n        address: addressData.address,\n        pincode: {\n          uid: addressData.pincode.uid,\n        },\n        city: {\n          uid: addressData.city.uid,\n        },\n        latitude: Number(parseFloat(addressData.latitude).toFixed(4)),\n        longitude: Number(parseFloat(addressData.longitude).toFixed(4)),\n      },\n    };\n    return payloadData;\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  const addressData = useMemo(() => {\n    const { address, city, state, latitude, longitude, pincode, propertyType } = pageObj.address;\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      latitude,\n      longitude,\n      propertyType,\n    };\n  }, [pageObj?.address]);\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  const { dateOfVisit, typeOfCase, customerName, ownershipName } = pageObj;\n  return (\n    <div>\n      <SaveComponent\n        title=\"heading.technical.generalDetails\"\n        pageMode={pageMode}\n        disabled={isLoading}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\"grid grid-cols-4 gap-3  \">\n              <div>\n                <SystemDatePicker\n                  label=\"label.technical.dateOfVisit*\"\n                  name=\"dateOfVisit\"\n                  value={dateOfVisit}\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={handleChange}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    `dateOfVisit`,\n                    dateOfVisit,\n                    \"mandatory\"\n                  )}\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.technical.typeOfCase*\"\n                  name=\"typeOfCase\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={typeOfCase ?? \"\"}\n                  disabled\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.pd.customer.name.mandatory\"\n                  name=\"customerName\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={customerName ?? \"\"}\n                  disabled\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.technical.ownershipName*\"\n                  name=\"ownershipName\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={handleChange}\n                  value={ownershipName ?? \"\"}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    `ownershipName`,\n                    ownershipName,\n                    \"mandatory\"\n                  )}\n                />\n              </div>\n              <div className=\"col-span-4\">\n                <Address\n                  pageMode={pageMode}\n                  ref={addressRef}\n                  data={addressData}\n                  variant={VARIANTS.SECONDARY}\n                  addressLabel={\"label.technical.addressAsPerActualSite\"}\n                  addressMaxCount={2000}\n                  isLatLong\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default GeneralDetails;\n","import React, { useEffect, useRef, useState } from \"react\";\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport ToastCustom from \"components/Toast\";\n// --------- ---------- //\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport { numberFormatter } from \"locale\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\nexport interface IGovernmentRateData {\n  uid?: string;\n  circleRateOfLand: string;\n  circleRateOfBuilding: string;\n  landValue: string;\n  totalValuationOfProperty: string;\n  flatOrAptValue: string;\n  remarks: string;\n}\n\ninterface IProps {\n  isLoading?: boolean;\n  data: IGovernmentRateData;\n  getDataOnCancel: () => void;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n}\n\nexport const initialGovernmentRateData: IGovernmentRateData = {\n  uid: \"\",\n  circleRateOfLand: \"\",\n  circleRateOfBuilding: \"\",\n  landValue: \"\",\n  totalValuationOfProperty: \"\",\n  flatOrAptValue: \"\",\n  remarks: \"\",\n};\n\nconst GovernmentGuideLines = (props: IProps) => {\n  const { data = initialGovernmentRateData, isLoading, payloadInfo, getDataOnCancel } = props;\n\n  // --------------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<IGovernmentRateData>(data);\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n\n  // --------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    ------------------------------------------------------------------------------------------------------------------------------------------------------useEffect:\n    ------------------------------------------------------------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleAmountInputChange = (e: any) => {\n    // common other income state update\n    const unformattedValue: number = currencyFormatToNumber(e.target.value);\n    setPageObj((prevState: IGovernmentRateData) => {\n      return {\n        ...prevState,\n        [e.target.name]: numberFormatter(unformattedValue, \"en-IN\", 0),\n      };\n    });\n  };\n\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) return;\n\n    const payload = enrichForGovtGuidelines();\n    try {\n      const res = await TechnicalSevice.updateGovtGuidelines(payload);\n\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const enrichForGovtGuidelines = () => {\n    const payloadData = {\n      uid: payloadInfo.technicalUid, // technical uid\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      govtCircleRateOfLand: currencyFormatToNumber(pageObj.circleRateOfLand),\n      govtCircleRateOfBuilding: currencyFormatToNumber(pageObj.circleRateOfBuilding),\n      govtLandValue: currencyFormatToNumber(pageObj.landValue),\n      govtTotalValuationOfProperty: currencyFormatToNumber(pageObj.totalValuationOfProperty),\n      govtFlatAptValue: currencyFormatToNumber(pageObj.flatOrAptValue),\n      govtGuidelineRemarks: pageObj.remarks,\n    };\n    return payloadData;\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderContent = () => {\n    const {\n      circleRateOfLand,\n      circleRateOfBuilding,\n      landValue,\n      totalValuationOfProperty,\n      flatOrAptValue,\n      remarks,\n    } = pageObj;\n    return (\n      <React.Fragment>\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5\">\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.technical.governmentGuideLines.circleRateOfLand*\"}\n              name=\"circleRateOfLand\"\n              className=\"text-right\"\n              value={circleRateOfLand}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `circleRateOfLand`,\n                circleRateOfLand,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.technical.governmentGuideLines.circleRateOfBuilding*\"}\n              name=\"circleRateOfBuilding\"\n              className=\"text-right\"\n              value={circleRateOfBuilding}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `circleRateOfBuilding`,\n                circleRateOfBuilding,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.technical.governmentGuideLines.landValue*\"}\n              name=\"landValue\"\n              className=\"text-right\"\n              value={landValue}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(`landValue`, landValue, \"mandatory\")}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.technical.governmentGuideLines.totalValuationOfProperty*\"}\n              name=\"totalValuationOfProperty\"\n              className=\"text-right\"\n              value={totalValuationOfProperty}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `totalValuationOfProperty`,\n                totalValuationOfProperty,\n                \"mandatory\"\n              )}\n            />\n          </div>\n\n          <div className=\"col-span-1\">\n            <InputBox\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              label={\"label.technical.governmentGuideLines.flatOrAptValue*\"}\n              name=\"flatOrAptValue\"\n              className=\"text-right\"\n              value={flatOrAptValue}\n              onChange={handleAmountInputChange}\n              onBlur={validate}\n              validation={simpleValidator?.current?.message(\n                `flatOrAptValue`,\n                flatOrAptValue,\n                \"mandatory\"\n              )}\n            />\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-2\">\n          <div className=\"col-span-2\">\n            <InputTextArea\n              name=\"remarks\"\n              className=\"!h-40\"\n              label={\"label.technical.governmentGuideLines.remark*\"}\n              placeholder={\"placeholder.governmentGuideLines.description\"}\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              maxCount={200}\n              onChange={handleChange}\n              value={remarks}\n              autoResize\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        title={\"heading.technical.governmentGuideLines\"}\n        pageMode={pageMode}\n        disabled={isLoading}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"6.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default GovernmentGuideLines;\n","import AclGuard from \"components/AclGuard\";\nimport Address, { IAddressRef } from \"components/Address\";\nimport AutoComplete from \"components/AutoComplete\";\nimport { Column } from \"components/EditableTableV2\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport MediaGallery, {\n  IMediaInfo,\n  initialMediaGallerySectionInfo,\n} from \"components/MediaGallery/MediaGallery\";\nimport ReadOnlyTable from \"components/ReadOnlyTable\";\nimport Section from \"components/Section\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport SystemDatePicker from \"components/SystemDatePicker/SystemDatePicker\";\nimport Text from \"components/Text/Text\";\nimport ChipsBox from \"components/base/BaseChips\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport { BaseSyntheticEvent, useEffect, useMemo, useRef, useState } from \"react\";\nimport { INPUT_STYLE_TYPE, PAGE_MODE, VARIANTS, VENDOR_TYPE_OPTIONS } from \"utils/Constant\";\nimport { IRcuProps, ITechnicalDropdownList } from \"../../PageReport/PageReport\";\n\ninterface IProps extends IRcuProps {\n  isLoadingInitial: boolean;\n  dropdownOptions: ITechnicalDropdownList;\n  data: ITechnicalInitiationInfo;\n}\n\nexport interface ITechnicalInitiationInfo {\n  dateOfInitiation: string;\n  vendorType: string;\n  internalAssignee: { name: string };\n  externalVendor: { name: string };\n  addressType: string;\n  CCEmails: string[];\n  description: string;\n  address: string;\n  pincode: { pinCode: string; uid?: string };\n  city: { name: string; uid?: string };\n  latitude: string;\n  longitude: string;\n  state: string;\n  propertyType: string;\n  stageDocuments?: any[];\n}\n\nexport const initialTechnicalInitiationInfoPageObj: ITechnicalInitiationInfo = {\n  dateOfInitiation: \"\",\n  vendorType: \"\",\n  internalAssignee: { name: \"\" },\n  externalVendor: { name: \"\" },\n  CCEmails: [],\n  description: \"\",\n  addressType: \"\",\n  address: \"\",\n  pincode: { pinCode: \"\", uid: \"\" },\n  city: { name: \"\", uid: \"\" },\n  latitude: \"\",\n  longitude: \"\",\n  propertyType: \"\",\n  state: \"\",\n};\n\nconst InitiationInfo = (props: IProps) => {\n  const { isLoadingInitial, data, dropdownOptions } = props;\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ITechnicalInitiationInfo>({\n    ...initialTechnicalInitiationInfoPageObj,\n  });\n  const [showMediaGallery, setShowMediaGallery] = useState<boolean>(false);\n  const [currentItemToViewInGallery, setCurrentItemToViewInGallery] = useState<IMediaInfo>({\n    ...initialMediaGallerySectionInfo,\n  });\n\n  // ref\n  const chipRef = useRef<any>(null);\n  const addressRef = useRef<IAddressRef | null>(null);\n  const selectedDocsTableRef: any = useRef<any>();\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    if (data.vendorType) {\n      setPageObj((prevObj) => ({\n        ...prevObj,\n        ...data,\n      }));\n    }\n  }, [data]);\n\n  /*\n  ------------------------------------------------------------\n   onClick,onBlur Handlers\n   ------------------------------------------------------------\n  */\n\n  const onViewFile = (e: BaseSyntheticEvent, rowData: any) => {\n    let preparedInfoInList: IMediaInfo = {\n      uid: \"\",\n      placeOfUpload: \"\",\n      name: \"\",\n      fileName: \"\",\n      fileType: \"\",\n      download: \"\",\n      category: \"\",\n      type: \"\",\n      sectionName: \"\",\n      url: \"\",\n    };\n\n    if (rowData?.loanDocumentSection) {\n      preparedInfoInList = {\n        uid: rowData?.uid,\n        placeOfUpload: \"\",\n        name: rowData?.loanDocumentSection?.loanDocument?.applicant?.firstName ?? \"-\",\n        fileName: rowData?.loanDocumentSection?.fileName ?? \"-\",\n        fileType: rowData?.loanDocumentSection?.fileType ?? \"-\",\n        download: \"\",\n        category: rowData?.loanDocumentSection?.loanDocument?.docCategory ?? \"-\",\n        type: rowData?.loanDocumentSection?.loanDocument?.docType?.name ?? \"-\",\n        sectionName: rowData?.loanDocumentSection?.section ?? \"-\",\n        url: rowData?.loanDocumentSection?.url,\n      };\n    } else if (rowData?.kycDocument) {\n      preparedInfoInList = {\n        uid: rowData?.uid,\n        placeOfUpload: \"\",\n        name: rowData?.kycDocument?.kyc?.applicant?.firstName ?? \"-\",\n        fileName: rowData?.kycDocument?.fileName ?? \"-\",\n        fileType: rowData?.kycDocument?.fileType ?? \"-\",\n        download: \"\",\n        category: \"KYC\",\n        type: rowData?.kycDocument?.kyc?.docType?.name ?? \"-\",\n        sectionName: rowData?.kycDocument?.smDocSectionType ?? \"-\",\n        url: rowData?.kycDocument?.url,\n      };\n    }\n\n    setCurrentItemToViewInGallery(preparedInfoInList);\n    setShowMediaGallery(true);\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  const addressData = useMemo(() => {\n    const { address, pincode, city, state, propertyType ,latitude ,longitude } = pageObj;\n    return {\n      address,\n      pincode,\n      city,\n      state,\n      propertyType,\n      latitude,\n      longitude\n    };\n  }, [pageObj?.address, pageObj?.pincode, pageObj?.city, pageObj?.state, pageObj?.propertyType ,pageObj?.latitude ,pageObj?.longitude]);\n\n  const renderDocCategory = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.loanDocumentSection\n          ? rowData?.loanDocumentSection?.loanDocument?.docCategory ?? \"-\"\n          : \"KYC\"}\n      </div>\n    );\n  };\n\n  const renderDocType = (rowData: any) => {\n    return <div className=\"flex items-center\">{rowData?.stageDocType ?? \"-\"}</div>;\n  };\n\n  const renderDocSection = (rowData: any) => {\n    return (\n      <div className=\"flex items-center\">\n        {rowData?.loanDocumentSection\n          ? rowData?.loanDocumentSection?.section ?? \"-\"\n          : rowData?.kycDocument?.smDocSectionType}\n      </div>\n    );\n  };\n\n  const renderAction = (rowData: any) => {\n    return (\n      <div className=\"px-2 flex items-center space-x-4\">\n        <div className=\"flex items-center\">\n          <IconButton\n            buttonType={BUTTON_TYPES.VIEW}\n            onClick={(e: BaseSyntheticEvent) => {\n              onViewFile(e, rowData);\n            }}\n            isIgnoreAccessLevel\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderSelectedExistingDocs = () => {\n    return (\n      <ReadOnlyTable\n        dataKey=\"id\"\n        ref={selectedDocsTableRef}\n        value={data?.stageDocuments}\n        className={` h-auto selected-existing-doc-read-table ${\n          data?.stageDocuments?.length ? \"!min-h-auto\" : \"!min-h-50\"\n        }`}\n      >\n        <Column\n          header={textConverter(\"label.existing.document.category\")}\n          className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n          body={renderDocCategory}\n        />\n        <Column\n          header={textConverter(\"label.existing.document.type\")}\n          className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n          body={renderDocType}\n        />\n        <Column\n          header={textConverter(\"label.existing.document.section\")}\n          className=\"text-primary-ptext-1000 text-left text-xs h-12 pl-6\"\n          body={renderDocSection}\n        />\n        <Column\n          header={textConverter(\"label.existing.document.action\")}\n          className=\"text-primary-ptext-1000 text-center text-xs h-12 pr-2\"\n          body={renderAction}\n        />\n      </ReadOnlyTable>\n    );\n  };\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  const {\n    dateOfInitiation,\n    vendorType,\n    internalAssignee,\n    externalVendor,\n    CCEmails,\n    description,\n    addressType,\n  } = pageObj;\n\n  return (\n    <div>\n      <Section title=\"heading.rcu.initiationInfo\">\n        <div className={`w-full h-full border border-primary-ptext-500 rounded-xl p-5`}>\n          {isLoadingInitial ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <AclGuard override={{ read: true }}>\n              <div className=\"grid grid-cols-4 gap-3\">\n                <div className=\"\">\n                  {/* Sys date */}\n                  <SystemDatePicker\n                    label=\"label.rcu.dateOfInitiation\"\n                    name=\"dateOfInitiation\"\n                    value={new Date(dateOfInitiation)}\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    placeholder=\"DD-MM-YYYY \"\n                  />\n                </div>\n\n                <div className=\"\">\n                  <SimpleDropDown\n                    label=\"label.legal.vendorType\"\n                    name=\"vendorType\"\n                    value={vendorType}\n                    optionLabel=\"name\"\n                    optionValue=\"code\"\n                    options={dropdownOptions?.vendorType ?? []}\n                  />\n                </div>\n\n                <div className=\"\">\n                  <AutoComplete\n                    label=\"label.initiationInfo.internal.assignee\"\n                    name=\"internalAssignee\"\n                    value={internalAssignee?.name}\n                    variant={INPUT_STYLE_TYPE.PRIMARY}\n                  />\n                </div>\n\n                {vendorType === VENDOR_TYPE_OPTIONS.VENDOR_TYPE_EXTERNAL ? (\n                  <div className=\"\">\n                    <AutoComplete\n                      label=\"label.text.stage.initiate.external.vendor\"\n                      name=\"externalVendor\"\n                      value={externalVendor?.name}\n                      variant={INPUT_STYLE_TYPE.PRIMARY}\n                    />\n                  </div>\n                ) : (\n                  <div />\n                )}\n\n                <div className=\"col-span-2\">\n                  <ChipsBox\n                    className={\"\"}\n                    name=\"cc\"\n                    value={CCEmails}\n                    label={\"label.rcu.cc\"}\n                    ref={chipRef}\n                  />\n                </div>\n\n                <div />\n                <div />\n\n                <div className=\"col-span-2\">\n                  <InputTextArea\n                    name=\"description\"\n                    className=\"!h-40\"\n                    label=\"input.masterData.staticMaster.description\"\n                    placeholder={\"placeholder.legal.description\"}\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    value={description}\n                    autoResize\n                  />\n                </div>\n\n                <div className=\"col-span-4\">{renderSelectedExistingDocs()}</div>\n\n                <div className=\"col-span-4\">\n                  <Text\n                    label={\"heading.technical.propertyDetails\"}\n                    className=\"text-primary-sideBarBgColor font-bold text-xs\"\n                  />\n                </div>\n\n                <div className=\"\">\n                  <InputBox\n                    className=\"!h-6\"\n                    label={\"label.technical.addressType\"}\n                    name=\"addressType\"\n                    value={addressType}\n                    disabled\n                  />\n                </div>\n\n                <div className=\"col-span-4\">\n                  <Address\n                    pageMode={PAGE_MODE.VIEW}\n                    variant={VARIANTS.TERTIARY}\n                    ref={addressRef}\n                    data={addressData}\n                    hideMarkUsingMap\n                  />\n                </div>\n              </div>\n            </AclGuard>\n          )}\n\n          <MediaGallery\n            visible={showMediaGallery}\n            onToggleVisibility={() => setShowMediaGallery((prev) => !prev)}\n            list={[]}\n            currentSection={currentItemToViewInGallery}\n          />\n        </div>\n      </Section>\n    </div>\n  );\n};\n\nexport default InitiationInfo;\n","import AclGuard from \"components/AclGuard\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport ToastCustom from \"components/Toast\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { ITechnicalDropdownList } from \"../../PageReport/PageReport\";\n\ninterface IProps {\n  isLoading?: boolean;\n  data: ITechnicalLocalityDetailsPageObj;\n  getDataOnCancel: () => void;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n  dropDownOptions: ITechnicalDropdownList;\n}\n\nexport interface ITechnicalLocalityDetailsPageObj {\n  classOfLocality: string;\n  distanceFromCity: string;\n  nearbyBusStop: string;\n  developmentInVicinity: string;\n}\n\nexport const initialTechnicalLocalityDetailsPageObj: ITechnicalLocalityDetailsPageObj = {\n  classOfLocality: \"\",\n  distanceFromCity: \"\",\n  nearbyBusStop: \"\",\n  developmentInVicinity: \"\",\n};\n\nconst LocalityDetails: React.FC<IProps> = (props) => {\n  const { data, isLoading, payloadInfo, getDataOnCancel, dropDownOptions } = props;\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState<ITechnicalLocalityDetailsPageObj>({\n    ...initialTechnicalLocalityDetailsPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef<any>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n    ------------------------------------------------------------------------------------------------------------------------------------------------------useEffect:\n    ------------------------------------------------------------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) return;\n\n    const payload = enrichForSaveLocalityDetails();\n    try {\n      const res = await TechnicalSevice.updateSurroundingLocalityDetails(payload);\n\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const enrichForSaveLocalityDetails = () => {\n    const payloadData = {\n      uid: payloadInfo.technicalUid, // technical uid\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      smClassOfLocality: pageObj.classOfLocality,\n      distanceFromCityCenter: Number(pageObj.distanceFromCity),\n      distanceFromNearByBusstop: Number(pageObj.nearbyBusStop),\n      vicinityDevelopmentPct: Number(pageObj.developmentInVicinity),\n    };\n    return payloadData;\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  const { classOfLocality, developmentInVicinity, distanceFromCity, nearbyBusStop } = pageObj;\n  return (\n    <React.Fragment>\n      <SaveComponent\n        title=\"heading.technical.surroundingLocalityDetails\"\n        pageMode={pageMode}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\"grid grid-cols-4 gap-3  \">\n              <div>\n                <SimpleDropDown\n                  label=\"label.technical.classOfLocality*\"\n                  placeholder=\"placeholder.technical.classOfLocality\"\n                  name=\"classOfLocality\"\n                  value={classOfLocality ?? \"\"}\n                  onChange={handleChange}\n                  validation={simpleValidator?.current?.message(\n                    `classOfLocality`,\n                    classOfLocality,\n                    \"mandatory\"\n                  )}\n                  onBlur={validate}\n                  options={dropDownOptions.classOfLocality}\n                  optionLabel=\"name\"\n                  optionValue=\"code\"\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.technical.distanceFromCityCenter*\"\n                  name=\"distanceFromCity\"\n                  className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={handleChange}\n                  value={distanceFromCity ?? \"\"}\n                  validation={simpleValidator?.current?.message(\n                    `distanceFromCity`,\n                    distanceFromCity,\n                    \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n                  )}\n                  onBlur={validate}\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.technical.nearbyBusStop*\"\n                  name=\"nearbyBusStop\"\n                  className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={handleChange}\n                  value={nearbyBusStop ?? \"\"}\n                  validation={simpleValidator?.current?.message(\n                    `nearbyBusStop`,\n                    nearbyBusStop,\n                    \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n                  )}\n                  onBlur={validate}\n                />\n              </div>\n              <div>\n                <InputBox\n                  label=\"label.technical.developmentInTheVicinity\"\n                  name=\"developmentInVicinity\"\n                  className=\"text-right\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={handleChange}\n                  value={developmentInVicinity ?? \"\"}\n                  validation={simpleValidator?.current?.message(\n                    `developmentInVicinity`,\n                    developmentInVicinity,\n                    \"mandatory|checkNumber|min:1,num|max:100,num|maxDecimal:2\"\n                  )}\n                  onBlur={validate}\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default LocalityDetails;\n","import { useEffect, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport InputBox from \"components/InputBox\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport ToastCustom from \"components/Toast\";\n\n// --------- ---------- //\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { ITechnicalDropdownList } from \"../../PageReport/PageReport\";\n\nexport interface IOccupancyData {\n  uid?: string;\n  stateOfOccupancy: string;\n  occupiedBy: string;\n  occupiedSince: string;\n  personAtSite: string;\n}\n\ninterface IProps {\n  data: IOccupancyData;\n  dropDownOptions?: ITechnicalDropdownList;\n  isLoading: boolean;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n  getDataOnCancel: () => void;\n}\n\nexport const initialOccupancyData: IOccupancyData = {\n  uid: \"\",\n  stateOfOccupancy: \"\",\n  occupiedBy: \"\",\n  occupiedSince: \"\",\n  personAtSite: \"\",\n};\n\nconst OccupancyDetails = (props: IProps) => {\n  const { data, isLoading, dropDownOptions, getDataOnCancel, payloadInfo } = props;\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IOccupancyData>(data);\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  // error handling states\n\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n\n  const toastMessageRef = useRef(null);\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    useEffect:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (!validateForm()) return;\n\n    const payload = enrichForSaveOccupancyDetails();\n    try {\n      const res = await TechnicalSevice.updateOccupancyDetails(payload);\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const enrichForSaveOccupancyDetails = () => {\n    const payloadData = {\n      uid: payloadInfo.technicalUid, // technical uid\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      smStatusOccupancy: pageObj.stateOfOccupancy,\n      occupiedByRelationshipWithCustomer: pageObj.occupiedBy,\n      occupiedSinceYear: pageObj.occupiedSince,\n      personAvailableAtSite: pageObj.personAtSite,\n    };\n\n    return payloadData;\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderContent = () => {\n    const { stateOfOccupancy, occupiedBy, occupiedSince, personAtSite } = pageObj;\n    return (\n      <div className=\"mt-5 flex flex-wrap gap-x-4 gap-y-5 \">\n        <div className=\"!w-64\">\n          <SimpleDropDown\n            label={\"label.technical.OccupancyDetails.stateOfOccupancy*\"}\n            name=\"stateOfOccupancy\"\n            value={stateOfOccupancy}\n            onChange={handleChange}\n            onBlur={validate}\n            options={dropDownOptions?.occupancyStatus}\n            optionLabel=\"name\"\n            optionValue=\"code\"\n            validation={simpleValidator?.current?.message(\n              `stateOfOccupancy`,\n              stateOfOccupancy,\n              \"mandatory\"\n            )}\n          />\n        </div>\n\n        <div className=\"\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.technical.OccupancyDetails.occupiedBy*\"}\n            name=\"occupiedBy\"\n            className=\"!w-64\"\n            value={occupiedBy}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(`occupiedBy`, occupiedBy, \"mandatory\")}\n          />\n        </div>\n\n        <div className=\"\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.technical.OccupancyDetails.occupiedSince*\"}\n            name=\"occupiedSince\"\n            className=\"!w-64 text-right\"\n            value={occupiedSince}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `occupiedSince`,\n              occupiedSince,\n              \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n            )}\n          />\n        </div>\n\n        <div className=\"\">\n          <InputBox\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            label={\"label.technical.OccupancyDetails.personAtSite*\"}\n            name=\"personAtSite\"\n            className=\"!w-64\"\n            value={personAtSite}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `personAtSite`,\n              personAtSite,\n              \"mandatory\"\n            )}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        title={\"heading.technical.OccupancyDetails\"}\n        pageMode={pageMode}\n        disabled={isLoading}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"6.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default OccupancyDetails;\n","import AclGuard from \"components/AclGuard\";\nimport { IAddressRef } from \"components/Address\";\nimport { Column } from \"components/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport InputError from \"components/InputError/InputError\";\nimport InputTextArea from \"components/InputTextArea\";\nimport RadioButton from \"components/RadioButton/RadioButton\";\nimport ReadOnlyTable from \"components/ReadOnlyTable\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  CHECKBOX_STYLE_TYPE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n  YES_NO,\n} from \"utils/Constant\";\nimport { ITechnicalDropdownList } from \"../../PageReport/PageReport\";\n\ninterface IProps {\n  isLoading?: boolean;\n  data: ITechnicalPropertyDetailsPageObj;\n  getDataOnCancel: () => void;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n  dropDownOptions?: ITechnicalDropdownList;\n}\nexport interface ITechnicalBoundariesOnSiteRowData {\n  uid?: string;\n  direction: string;\n  asPerDoc: string;\n  actualOnSite: string;\n}\n\nexport interface ITechnicalPropertyDetailsPageObj {\n  boundariesOnSiteTable: ITechnicalBoundariesOnSiteRowData[];\n  boundariesMatching: string;\n  landUse: string;\n  propertyDescription: string;\n  noOfFloors: string;\n  noOfLifts: string;\n  noOfFlatsPerFloor: string;\n  noOfWings: string;\n  structureDescription: string;\n  conditionOfProperty: string;\n  yearOfConstruction: string;\n  ageOfProperty: string;\n  approachRoadType: string;\n  approachRoadWidth: string;\n  propertyNearHighTensionLine: string;\n  distanceFromHighTensionLine: string;\n  marketFeedback: string;\n  marketability: string;\n  planAsPerDcrNorms: string;\n  noOfFloorsPermitted: string;\n  numberOfFloorConstructed: string;\n  fsiAchieved: string;\n  riskOfDemolition: string;\n  setbackDeviation: string;\n  horizontalDeviation: string;\n  stageChecklists: IPropertyDetailsQuestionsRowData[];\n  isQuestionsTableDataEmptyFromApi: boolean;\n}\n\ntype TIsTrue = \"YES\" | \"NO\";\n\nconst IS_TRUE: Record<TIsTrue, TIsTrue> = {\n  YES: \"YES\",\n  NO: \"NO\",\n};\n\ninterface IPropertyDetailsQuestionsRowData {\n  uid?: string;\n  smCode: string;\n  name: string;\n  value: TIsTrue | null | \"\";\n}\n\nconst BOUNDARY_DIRECTIONS = {\n  BOUNDARY_DIRECTION_NORTH: \"North\",\n  BOUNDARY_DIRECTION_SOUTH: \"South\",\n  BOUNDARY_DIRECTION_EAST: \"East\",\n  BOUNDARY_DIRECTION_WEST: \"West\",\n};\n\nexport const initialTechnicalPropertyDetailsPageObj: ITechnicalPropertyDetailsPageObj = {\n  boundariesOnSiteTable: [\n    {\n      direction: BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_NORTH,\n      uid: \"1\",\n      actualOnSite: \"\",\n      asPerDoc: \"\",\n    },\n    {\n      direction: BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_SOUTH,\n      uid: \"2\",\n      actualOnSite: \"\",\n      asPerDoc: \"\",\n    },\n    {\n      direction: BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_EAST,\n      uid: \"3\",\n      actualOnSite: \"\",\n      asPerDoc: \"\",\n    },\n    {\n      direction: BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_WEST,\n      uid: \"4\",\n      actualOnSite: \"\",\n      asPerDoc: \"\",\n    },\n  ],\n  boundariesMatching: \"\",\n  landUse: \"\",\n  propertyDescription: \"\",\n  noOfFloors: \"\",\n  noOfLifts: \"\",\n  noOfFlatsPerFloor: \"\",\n  noOfWings: \"\",\n  structureDescription: \"\",\n  conditionOfProperty: \"\",\n  yearOfConstruction: \"\",\n  ageOfProperty: \"\",\n  approachRoadType: \"\",\n  approachRoadWidth: \"\",\n  propertyNearHighTensionLine: \"\",\n  distanceFromHighTensionLine: \"\",\n  marketFeedback: \"\",\n  marketability: \"\",\n  planAsPerDcrNorms: \"\",\n  noOfFloorsPermitted: \"\",\n  numberOfFloorConstructed: \"\",\n  fsiAchieved: \"\",\n  riskOfDemolition: \"\",\n  setbackDeviation: \"\",\n  horizontalDeviation: \"\",\n  stageChecklists: [],\n  isQuestionsTableDataEmptyFromApi: false,\n};\n\nconst PropertyDetails: React.FC<IProps> = forwardRef((props, ref) => {\n  const { data, isLoading, getDataOnCancel, payloadInfo, dropDownOptions } = props;\n\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState<ITechnicalPropertyDetailsPageObj>({\n    ...initialTechnicalPropertyDetailsPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef<any>(null);\n  const addressRef = useRef<IAddressRef>(null);\n  const questionTableRef = useRef<any>(null);\n  const boundariesDetailsTableRef = useRef<any>(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // --------------------------- global variables ---------------------- //\n\n  useImperativeHandle(ref, () => ({\n    save: onSave,\n    onCancel: onCancel,\n  }));\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    const questions = dropDownOptions?.questions;\n    if (questions && questions?.length > 0 && data.isQuestionsTableDataEmptyFromApi) {\n      setPageObj((prevObj: ITechnicalPropertyDetailsPageObj) => {\n        const currentPageObj = { ...prevObj };\n        const tableData: IPropertyDetailsQuestionsRowData[] = [];\n        for (const option of questions) {\n          tableData.push({\n            smCode: option?.code ?? \"\",\n            name: option?.name ?? \"\",\n            value: null,\n          });\n        }\n        currentPageObj.stageChecklists = tableData;\n        return currentPageObj;\n      });\n    }\n  }, [dropDownOptions?.questions, data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n  const handleChange = (e: any) => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  // add a proper interface later\n  const handleRadioButtonChange = (e: any, rowData: IPropertyDetailsQuestionsRowData) => {\n    const questionIndex = pageObj.stageChecklists.findIndex(\n      (question: IPropertyDetailsQuestionsRowData) => question.smCode === rowData.smCode\n    );\n    if (questionIndex > -1) {\n      setPageObj((prevPageObj) => {\n        const currentPageObj = { ...prevPageObj };\n        currentPageObj.stageChecklists[questionIndex].value = e.value;\n        return currentPageObj;\n      });\n    }\n  };\n\n  const handleBoundariesDetails = (\n    e: any,\n    rowData: ITechnicalBoundariesOnSiteRowData,\n    name: keyof ITechnicalBoundariesOnSiteRowData\n  ) => {\n    const boundaryIndex = pageObj.boundariesOnSiteTable.findIndex(\n      (boundary: any) => boundary?.uid === rowData.uid\n    );\n\n    if (boundaryIndex > -1) {\n      setPageObj((prevPageObj: any) => {\n        const currentPageObj: any = { ...prevPageObj };\n        currentPageObj.boundariesOnSiteTable[boundaryIndex][name] = e.target.value;\n        return currentPageObj;\n      });\n    }\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (validateForm()) {\n      const payload = enrichForSavePropertyDetails();\n\n      try {\n        const res = await TechnicalSevice.updatePropertyDetails(payload);\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setPageMode(PAGE_MODE.VIEW);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    addressRef.current?.resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n    setPageObj((prevPageObj) => ({ ...prevPageObj, ...initialTechnicalPropertyDetailsPageObj }));\n    // if  form has existing saved  data then call api else clear all\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const enrichForSavePropertyDetails = () => {\n    const structBoundariesTableDataForPayload = () => {\n      const boundaryData = {\n        boundaryNorthAsPerDoc: \"\",\n        boundaryNorthAsActual: \"\",\n        boundarySouthAsPerDoc: \"\",\n        boundarySouthAsActual: \"\",\n        boundaryEastAsPerDoc: \"\",\n        boundaryEastAsActual: \"\",\n        boundaryWestAsPerDoc: \"\",\n        boundaryWestAsActual: \"\",\n      };\n\n      pageObj.boundariesOnSiteTable.forEach((boundary: ITechnicalBoundariesOnSiteRowData) => {\n        if (boundary.direction === BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_NORTH) {\n          boundaryData.boundaryNorthAsPerDoc = boundary.asPerDoc;\n          boundaryData.boundaryNorthAsActual = boundary.actualOnSite;\n        } else if (boundary.direction === BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_SOUTH) {\n          boundaryData.boundarySouthAsPerDoc = boundary.asPerDoc;\n          boundaryData.boundarySouthAsActual = boundary.actualOnSite;\n        } else if (boundary.direction === BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_EAST) {\n          boundaryData.boundaryEastAsPerDoc = boundary.asPerDoc;\n          boundaryData.boundaryEastAsActual = boundary.actualOnSite;\n        } else if (boundary.direction === BOUNDARY_DIRECTIONS.BOUNDARY_DIRECTION_WEST) {\n          boundaryData.boundaryWestAsPerDoc = boundary.asPerDoc;\n          boundaryData.boundaryWestAsActual = boundary.actualOnSite;\n        }\n      });\n\n      return boundaryData;\n    };\n\n    const payloadData = {\n      uid: payloadInfo.technicalUid,\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      isPropertyBoundaryMatching: pageObj.boundariesMatching === YES_NO.YES ? true : false,\n      ...structBoundariesTableDataForPayload(),\n      smLandUse: pageObj.landUse,\n      propertyDescription: pageObj.propertyDescription,\n      noOfFloors: pageObj.noOfFloors,\n      noOfLift: Number(pageObj.noOfLifts),\n      noOfFlatsPerFloor: pageObj.noOfFlatsPerFloor,\n      noOfWings: Number(pageObj.noOfWings),\n      structureDescription: pageObj.structureDescription,\n      smConditionOfProperty: pageObj.conditionOfProperty,\n      yearOfConstruction: pageObj.yearOfConstruction,\n      ageOfProperty: pageObj.ageOfProperty,\n      smApproachRoadType: pageObj.approachRoadType,\n      approachRoadWidth: Number(pageObj.approachRoadWidth),\n      isWithinCorpUrbanGpLimit: false,\n      isBasicAmenityAvailable: false,\n      isStructureAsPerNbcGuidelines: false,\n      isPropertyNearNaalaCanal: false,\n      isNegativeArea: false,\n      isAnyRecentDemolition: false,\n      distanceFromNaalaCanal: 2,\n      residualAgeOfPropertyInYear: 2,\n      isPropertyNearHighTensionLine:\n        pageObj.propertyNearHighTensionLine === YES_NO.YES ? true : false,\n      distanceFromHighTensionLine: Number(pageObj.distanceFromHighTensionLine),\n      smMarketability: pageObj.marketability,\n      isCalamityHazardAsPerNdma: false,\n      marketFeedback: pageObj.marketFeedback,\n      recentDemolitionSinceYears: 2,\n      isPlanAsPerDcrNorms: pageObj.planAsPerDcrNorms === YES_NO.YES ? true : false,\n      noOfFloorsPermiteed: 2,\n      noOfFloorsConstructed: 2,\n      fsiAchieved: pageObj.fsiAchieved,\n      smRiskOfDemolition: pageObj.riskOfDemolition,\n      setbackDeviationPct: Number(pageObj.setbackDeviation),\n      horizontalDeviationPct: Number(pageObj.horizontalDeviation),\n      stageChecklists: pageObj.stageChecklists,\n    };\n\n    return payloadData;\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Rendering\n    -------------------------------------------------------\n  */\n  const renderQuestion = (rowData: IPropertyDetailsQuestionsRowData) => {\n    return <Text className=\" text-xs text-secondary-labelColor \" label={rowData?.name} />;\n  };\n\n  const renderYesOrNo = (rowData: IPropertyDetailsQuestionsRowData) => {\n    return (\n      <div className=\"mt-5 \">\n        <div className=\"flex flex-shrink-0 \">\n          <div className=\"mr-5 flex\">\n            <RadioButton\n              hideLabel\n              hideErrorRow\n              variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n              value={IS_TRUE.YES}\n              checked={rowData.value === IS_TRUE.YES}\n              onChange={(e) => handleRadioButtonChange(e, rowData)}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n            <Text className=\"ml-1.5 text-xs \" label=\"label.dde.yes\" />\n          </div>\n          <div className=\"flex\">\n            <RadioButton\n              hideLabel\n              hideErrorRow\n              variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n              value={IS_TRUE.NO}\n              checked={rowData?.value === IS_TRUE.NO}\n              onChange={(e) => handleRadioButtonChange(e, rowData)}\n              disabled={pageMode === PAGE_MODE.VIEW}\n            />\n            <Text className=\"ml-1.5 text-xs \" label=\"label.dde.no\" />\n          </div>\n        </div>\n        <div className=\"h-4 flex ml-6 items-start mb-1.5\">\n          <InputError\n            validation={simpleValidator?.current?.message(\n              `value${rowData?.smCode}`,\n              rowData.value,\n              \"mandatory\"\n            )}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderDirection = (rowData: ITechnicalBoundariesOnSiteRowData) => {\n    return <Text className=\" text-xs text-secondary-labelColor \" label={rowData?.direction} />;\n  };\n\n  const renderAsPerDoc = (rowData: ITechnicalBoundariesOnSiteRowData) => {\n    return (\n      <InputTextArea\n        autoResize\n        hideMaxCount\n        name={`asPerDoc${rowData?.uid}`}\n        className=\"!h-30\"\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        onChange={(e: any) => handleBoundariesDetails(e, rowData, \"asPerDoc\")}\n        value={rowData?.asPerDoc ?? \"\"}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `asPerDoc${rowData?.uid}`,\n          rowData?.asPerDoc,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n\n  const renderActualOnSite = (rowData: ITechnicalBoundariesOnSiteRowData) => {\n    return (\n      <InputTextArea\n        autoResize\n        hideMaxCount\n        name={`actualOnSite${rowData?.uid}`}\n        className=\"!h-30\"\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        onChange={(e: any) => handleBoundariesDetails(e, rowData, \"actualOnSite\")}\n        value={rowData?.actualOnSite ?? \"\"}\n        validation={simpleValidator?.current?.message(\n          `actualOnSite${rowData?.uid}`,\n          rowData?.actualOnSite,\n          \"mandatory\"\n        )}\n        onBlur={validate}\n      />\n    );\n  };\n\n  const renderQuestionTable = () => {\n    return (\n      <ReadOnlyTable\n        value={pageObj?.stageChecklists}\n        className=\"selected-existing-doc-read-table !min-h-auto\"\n        ref={questionTableRef}\n        dataKey=\"uid\"\n      >\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n          header={\"Question\"}\n          body={renderQuestion}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n          header={\"Yes/No*\"}\n          body={renderYesOrNo}\n        />\n      </ReadOnlyTable>\n    );\n  };\n\n  const renderBoundariesTable = () => {\n    return (\n      <ReadOnlyTable\n        value={pageObj?.boundariesOnSiteTable}\n        className=\"selected-existing-doc-read-table !min-h-auto\"\n        ref={boundariesDetailsTableRef}\n        dataKey=\"uid\"\n      >\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n          header={\"Direction\"}\n          body={renderDirection}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n          header={\"As Per Doc\"}\n          body={renderAsPerDoc}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n          header={\"Actual On Site\"}\n          body={renderActualOnSite}\n        />\n      </ReadOnlyTable>\n    );\n  };\n\n  /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      <SaveComponent\n        title={\"heading.technical.propertyDetails\"}\n        pageMode={pageMode}\n        disabled={isLoading}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <React.Fragment>\n              <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5 w-full\">\n                <div className=\"col-span-4\">\n                  <Text\n                    className=\"text-primary-sideBarBgColor text-xs font-bold mb-1\"\n                    label={\"label.section.propertyDetails.boundariesOnSite*\"}\n                  />\n                </div>\n                <div className=\"col-span-4\">{renderBoundariesTable()}</div>\n\n                <div className=\"col-span-1 flex flex-col justify-start items-start space-y-1\">\n                  <div className=\"flex items-top\">\n                    <Text\n                      label={\"label.section.propertyDetails.boundariesMatching*\"}\n                      className=\"text-xs\"\n                    />\n                  </div>\n\n                  <div className=\"flex justify-start items-center space-x-8\">\n                    <div className=\"flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        name=\"boundariesMatching\"\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        className=\"flex items-center\"\n                        onChange={handleChange}\n                        value={YES_NO.YES}\n                        checked={pageObj?.boundariesMatching === YES_NO.YES}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <div className=\"ml-2 flex items-top\">\n                        <Text label={\"label.radioButton.yes\"} className=\"text-xs\" />\n                      </div>\n                    </div>\n\n                    <div className=\"flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        name=\"boundariesMatching\"\n                        className=\"flex items-center\"\n                        onChange={handleChange}\n                        value={YES_NO.NO}\n                        checked={pageObj?.boundariesMatching === YES_NO.NO}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <div className=\"ml-2 flex items-top\">\n                        <Text label={\"label.radioButton.no\"} className=\"text-xs\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"h-4 flex justify-start  items-center\">\n                    <InputError\n                      validation={simpleValidator?.current?.message(\n                        `boundariesMatching`,\n                        pageObj?.boundariesMatching,\n                        \"mandatory\"\n                      )}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-span-1\">\n                  <SimpleDropDown\n                    label={\"label.section.propertyDetails.landUse*\"}\n                    name=\"landUse\"\n                    value={pageObj?.landUse}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    options={dropDownOptions?.landOfUse}\n                    optionLabel=\"name\"\n                    optionValue=\"code\"\n                    validation={simpleValidator?.current?.message(\n                      `landUse`,\n                      pageObj?.landUse,\n                      \"mandatory\"\n                    )}\n                  />\n                </div>\n\n                <div />\n                <div />\n\n                <div className=\"col-span-2 row-span-2\">\n                  <InputTextArea\n                    name=\"propertyDescription\"\n                    className=\"!h-40\"\n                    label={\"label.section.propertyDetails.propertyDescription*\"}\n                    placeholder={\"\"}\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    maxCount={300}\n                    onChange={handleChange}\n                    value={pageObj?.propertyDescription}\n                    autoResize\n                    validation={simpleValidator?.current?.message(\n                      `propertyDescription`,\n                      pageObj?.propertyDescription,\n                      \"mandatory\"\n                    )}\n                    onBlur={validate}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.noOfFloors*\"}\n                    name=\"noOfFloors\"\n                    className=\"text-right\"\n                    value={pageObj?.noOfFloors}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `noOfFloors`,\n                      pageObj?.noOfFloors,\n                      \"mandatory|alpha_num\"\n                    )}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.noOfLifts*\"}\n                    name=\"noOfLifts\"\n                    className=\"text-right\"\n                    value={pageObj?.noOfLifts}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `noOfLifts`,\n                      pageObj?.noOfLifts,\n                      \"mandatory|checkNumber|onlyPositive|onlyInteger\"\n                    )}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.noOfFloor*\"}\n                    name=\"noOfFlatsPerFloor\"\n                    className=\"text-right\"\n                    value={pageObj?.noOfFlatsPerFloor}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `noOfFlatsPerFloor`,\n                      pageObj?.noOfFlatsPerFloor,\n                      \"mandatory|alpha_num\"\n                    )}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.noOfWings*\"}\n                    name=\"noOfWings\"\n                    className=\"text-right\"\n                    value={pageObj?.noOfWings}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `noOfWings`,\n                      pageObj?.noOfWings,\n                      \"mandatory|checkNumber|onlyPositive|onlyInteger\"\n                    )}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.structureDescription*\"}\n                    name=\"structureDescription\"\n                    value={pageObj?.structureDescription}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `structureDescription`,\n                      pageObj?.structureDescription,\n                      \"mandatory\"\n                    )}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <SimpleDropDown\n                    label={\"label.section.propertyDetails.conditionOfProperty*\"}\n                    name=\"conditionOfProperty\"\n                    value={pageObj?.conditionOfProperty}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    options={dropDownOptions?.conditionOfProperty}\n                    optionLabel=\"name\"\n                    optionValue=\"code\"\n                    validation={simpleValidator?.current?.message(\n                      `conditionOfProperty`,\n                      pageObj?.conditionOfProperty,\n                      \"mandatory\"\n                    )}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.yearOfConstruction*\"}\n                    name=\"yearOfConstruction\"\n                    className=\"text-right\"\n                    value={pageObj?.yearOfConstruction}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `yearOfConstruction`,\n                      pageObj?.yearOfConstruction,\n                      \"mandatory|checkNumber|onlyPositive|onlyInteger\"\n                    )}\n                  />\n                </div>\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.ageOfTheProperty*\"}\n                    name=\"ageOfProperty\"\n                    className=\"text-right\"\n                    value={pageObj?.ageOfProperty}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `ageOfProperty`,\n                      pageObj?.ageOfProperty,\n                      \"mandatory|checkNumber|onlyPositive|onlyInteger\"\n                    )}\n                  />\n                </div>\n\n                <div className=\"col-span-4\">{renderQuestionTable()}</div>\n\n                <div className=\"col-span-1 flex flex-col justify-start items-start space-y-1\">\n                  <div className=\"flex items-top\">\n                    <Text\n                      label={\"label.section.propertyDetails.approachRoadType*\"}\n                      className=\"text-xs\"\n                    />\n                  </div>\n\n                  <div className=\"flex justify-start items-center space-x-8\">\n                    <div className=\"flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        name=\"approachRoadType\"\n                        className=\"flex items-center\"\n                        onChange={handleChange}\n                        value={YES_NO.YES}\n                        checked={pageObj?.approachRoadType === YES_NO.YES}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <div className=\"ml-2 flex items-top\">\n                        {/* <Text label={\"label.radioButton.yes\"} className=\"text-xs\" /> */}\n                        <Text label={\"label.section.propertyDetails.kachha\"} className=\"text-xs\" />\n                      </div>\n                    </div>\n\n                    <div className=\"flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        name=\"approachRoadType\"\n                        className=\"flex items-center\"\n                        onChange={handleChange}\n                        value={YES_NO.NO}\n                        checked={pageObj?.approachRoadType === YES_NO.NO}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <div className=\"ml-2 flex items-top\">\n                        {/* <Text label={\"label.radioButton.no\"} className=\"text-xs\" /> */}\n                        <Text label={\"label.section.propertyDetails.pakka\"} className=\"text-xs\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"h-4 flex justify-start  items-center\">\n                    <InputError\n                      validation={simpleValidator?.current?.message(\n                        `approachRoadType`,\n                        pageObj?.approachRoadType,\n                        \"mandatory\"\n                      )}\n                    />\n                  </div>\n                </div>\n\n                <div />\n\n                <div className=\"col-span-1\">\n                  <InputBox\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    label={\"label.section.propertyDetails.approachRoadWidth*\"}\n                    name=\"approachRoadWidth\"\n                    className=\"text-right\"\n                    value={pageObj?.approachRoadWidth}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    validation={simpleValidator?.current?.message(\n                      `approachRoadWidth`,\n                      pageObj?.approachRoadWidth,\n                      \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n                    )}\n                  />\n                </div>\n                <div />\n\n                <div className=\"col-span-1 flex flex-col justify-start items-start space-y-1\">\n                  <div className=\"flex items-top\">\n                    <Text\n                      label={\"label.section.propertyDetails.propertySituatedNearHighTensionLine*\"}\n                      className=\"text-xs\"\n                    />\n                  </div>\n\n                  <div className=\"flex justify-start items-center space-x-8\">\n                    <div className=\"flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        name=\"propertyNearHighTensionLine\"\n                        className=\"flex items-center\"\n                        onChange={handleChange}\n                        value={YES_NO.YES}\n                        checked={pageObj?.propertyNearHighTensionLine === YES_NO.YES}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <div className=\"ml-2 flex items-top\">\n                        <Text label={\"label.radioButton.yes\"} className=\"text-xs\" />\n                      </div>\n                    </div>\n\n                    <div className=\"flex\">\n                      <RadioButton\n                        hideLabel\n                        hideErrorRow\n                        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                        name=\"propertyNearHighTensionLine\"\n                        className=\"flex items-center\"\n                        onChange={handleChange}\n                        value={YES_NO.NO}\n                        checked={pageObj?.propertyNearHighTensionLine === YES_NO.NO}\n                        disabled={pageMode === PAGE_MODE.VIEW}\n                      />\n                      <div className=\"ml-2 flex items-top\">\n                        <Text label={\"label.radioButton.no\"} className=\"text-xs\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"h-4 flex justify-start  items-center\">\n                    <InputError\n                      validation={simpleValidator?.current?.message(\n                        `propertyNearHighTensionLine`,\n                        pageObj?.propertyNearHighTensionLine,\n                        \"mandatory\"\n                      )}\n                    />\n                  </div>\n                </div>\n\n                <div />\n\n                {pageObj.propertyNearHighTensionLine === YES_NO.YES ? (\n                  <div className=\"col-span-1\">\n                    <InputBox\n                      variant={INPUT_STYLE_TYPE.SECONDARY}\n                      label={\"label.section.propertyDetails.distance*\"}\n                      name=\"distanceFromHighTensionLine\"\n                      className=\"text-right\"\n                      value={pageObj?.distanceFromHighTensionLine}\n                      onChange={handleChange}\n                      onBlur={validate}\n                      validation={simpleValidator?.current?.message(\n                        `distanceFromHighTensionLine`,\n                        pageObj?.distanceFromHighTensionLine,\n                        \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n                      )}\n                    />\n                  </div>\n                ) : (\n                  <div />\n                )}\n\n                <div className=\"col-span-2\">\n                  <InputTextArea\n                    name=\"marketFeedback\"\n                    className=\"!h-40\"\n                    label={\"label.section.propertyDetails.marketFeedback*\"}\n                    placeholder={\"\"}\n                    variant={INPUT_STYLE_TYPE.SECONDARY}\n                    maxCount={300}\n                    onChange={handleChange}\n                    value={pageObj?.marketFeedback}\n                    autoResize\n                    validation={simpleValidator?.current?.message(\n                      `marketFeedback`,\n                      pageObj?.marketFeedback,\n                      \"mandatory\"\n                    )}\n                    onBlur={validate}\n                  />\n                </div>\n\n                <div className=\"col-span-1\">\n                  <SimpleDropDown\n                    label={\"label.section.propertyDetails.marketability*\"}\n                    name=\"marketability\"\n                    value={pageObj?.marketability}\n                    onChange={handleChange}\n                    onBlur={validate}\n                    options={dropDownOptions?.marketability}\n                    optionLabel=\"label\"\n                    optionValue=\"value\"\n                    validation={simpleValidator?.current?.message(\n                      `marketability`,\n                      pageObj?.marketability,\n                      \"mandatory\"\n                    )}\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex flex-col justify-center items-start\">\n                <div className=\"flex justify-between items-center\">\n                  <TextData\n                    label={\"label.section.propertyDetails.buildingParameters\"}\n                    titleClass=\"text-primary-sideBarBgColor text-xs font-bold \"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-4 gap-x-4 gap-y-5 mt-5 w-full\">\n                  <div className=\"col-span-1 flex flex-col justify-start items-start space-y-1\">\n                    <div className=\"flex items-top\">\n                      <Text\n                        label={\"label.section.propertyDetails.planAsPerDCRNorms*\"}\n                        className=\"text-xs\"\n                      />\n                    </div>\n\n                    <div className=\"flex justify-start items-center space-x-8\">\n                      <div className=\"flex\">\n                        <RadioButton\n                          hideLabel\n                          hideErrorRow\n                          variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                          name=\"planAsPerDcrNorms\"\n                          className=\"flex items-center\"\n                          onChange={handleChange}\n                          value={YES_NO.YES}\n                          checked={pageObj?.planAsPerDcrNorms === YES_NO.YES}\n                          disabled={pageMode === PAGE_MODE.VIEW}\n                        />\n                        <div className=\"ml-2 flex items-top\">\n                          <Text label={\"label.radioButton.yes\"} className=\"text-xs\" />\n                        </div>\n                      </div>\n\n                      <div className=\"flex\">\n                        <RadioButton\n                          hideLabel\n                          variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                          hideErrorRow\n                          name=\"planAsPerDcrNorms\"\n                          className=\"flex items-center\"\n                          onChange={handleChange}\n                          value={YES_NO.NO}\n                          checked={pageObj?.planAsPerDcrNorms === YES_NO.NO}\n                          disabled={pageMode === PAGE_MODE.VIEW}\n                        />\n                        <div className=\"ml-2 flex items-top\">\n                          <Text label={\"label.radioButton.no\"} className=\"text-xs\" />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"h-4 flex justify-start  items-center\">\n                      <InputError\n                        validation={simpleValidator?.current?.message(\n                          `planAsPerDcrNorms`,\n                          pageObj?.planAsPerDcrNorms,\n                          \"mandatory\"\n                        )}\n                      />\n                    </div>\n                    <div />\n                  </div>\n\n                  <div className=\"col-span-1\">\n                    <InputBox\n                      variant={INPUT_STYLE_TYPE.SECONDARY}\n                      label={\"label.section.propertyDetails.numberOfFloorsPermitted*\"}\n                      name=\"noOfFloorsPermitted\"\n                      className=\"text-right\"\n                      value={pageObj?.noOfFloorsPermitted}\n                      onChange={handleChange}\n                      onBlur={validate}\n                      validation={simpleValidator?.current?.message(\n                        `noOfFloorsPermitted`,\n                        pageObj?.noOfFloorsPermitted,\n                        \"mandatory|checkNumber|onlyPositive|onlyInteger\"\n                      )}\n                    />\n                  </div>\n\n                  <div className=\"col-span-1\">\n                    <InputBox\n                      variant={INPUT_STYLE_TYPE.SECONDARY}\n                      label={\"label.section.propertyDetails.numberOfFloorsConstructed*\"}\n                      name=\"numberOfFloorConstructed\"\n                      className=\"text-right\"\n                      value={pageObj?.numberOfFloorConstructed}\n                      onChange={handleChange}\n                      onBlur={validate}\n                      validation={simpleValidator?.current?.message(\n                        `numberOfFloorConstructed`,\n                        pageObj?.numberOfFloorConstructed,\n                        \"mandatory|checkNumber|onlyPositive|onlyInteger\"\n                      )}\n                    />\n                  </div>\n\n                  <div className=\"col-span-1\">\n                    <InputBox\n                      variant={INPUT_STYLE_TYPE.SECONDARY}\n                      label={\"label.section.propertyDetails.FSIAchieved*\"}\n                      name=\"fsiAchieved\"\n                      value={pageObj?.fsiAchieved}\n                      onChange={handleChange}\n                      onBlur={validate}\n                      validation={simpleValidator?.current?.message(\n                        `fsiAchieved`,\n                        pageObj?.fsiAchieved,\n                        \"mandatory\"\n                      )}\n                    />\n                  </div>\n\n                  <div className=\"col-span-1\">\n                    <SimpleDropDown\n                      label={\"label.section.propertyDetails.riskOfDemolition*\"}\n                      name=\"riskOfDemolition\"\n                      value={pageObj?.riskOfDemolition}\n                      onChange={handleChange}\n                      onBlur={validate}\n                      options={dropDownOptions?.riskOfDemolition}\n                      optionLabel=\"name\"\n                      optionValue=\"code\"\n                      validation={simpleValidator?.current?.message(\n                        `riskOfDemolition`,\n                        pageObj?.riskOfDemolition,\n                        \"mandatory\"\n                      )}\n                    />\n                  </div>\n\n                  <div className=\"col-span-1\">\n                    <InputBox\n                      variant={INPUT_STYLE_TYPE.SECONDARY}\n                      label={\"label.section.propertyDetails.setbackDeviation*\"}\n                      name=\"setbackDeviation\"\n                      className=\"text-right\"\n                      value={pageObj?.setbackDeviation}\n                      onChange={handleChange}\n                      onBlur={validate}\n                      validation={simpleValidator?.current?.message(\n                        `setbackDeviation`,\n                        pageObj?.setbackDeviation,\n                        \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n                      )}\n                    />\n                  </div>\n\n                  <div className=\"col-span-1\">\n                    <InputBox\n                      variant={INPUT_STYLE_TYPE.SECONDARY}\n                      label={\"label.section.propertyDetails.horizontalDeviation*\"}\n                      name=\"horizontalDeviation\"\n                      className=\"text-right\"\n                      value={pageObj?.horizontalDeviation}\n                      onChange={handleChange}\n                      onBlur={validate}\n                      validation={simpleValidator?.current?.message(\n                        `horizontalDeviation`,\n                        pageObj?.horizontalDeviation,\n                        \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n                      )}\n                    />\n                  </div>\n                </div>\n              </div>\n            </React.Fragment>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </React.Fragment>\n  );\n});\n\nexport default PropertyDetails;\n","import React, { ReactNode, useEffect, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  IUploadedDocumentSection,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport TextData from \"components/TextData/TextData\";\nimport ToastCustom from \"components/Toast\";\n\n// --------- ---------- //\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport { parseStandardAPIErrorMessage, validatePutAPIResponse } from \"utils/CommonUtil\";\nimport {\n  DOCUMENT_CATEGORY,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\ninterface IProps {\n  isLoading: boolean;\n  data: IPropertyPhotosData;\n  getDataOnCancel: () => void;\n  payloadInfo: { loanUid: string; stageUid: string; technicalUid: string };\n}\n\nexport interface IPropertyPhotosData {\n  savedDocuments: any[];\n}\n\nexport const initialPropertyPhotosData: IPropertyPhotosData = {\n  savedDocuments: [],\n};\n\nconst PropertyPhotos: React.FC<any> = (props: IProps) => {\n  const { isLoading, payloadInfo, getDataOnCancel, data } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IPropertyPhotosData>(data);\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [id, setId] = useState<string>(\"1\"); // to re-mount doc uploader by changing its key everytime the cancel button is hit and get api is called through getDataOnCancel() to fetch the previous saved data\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const propertyPhotosUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    ------------------------------------------------------------------------------------------------------------------------------------------------------useEffect:\n    ------------------------------------------------------------------------------------------------------------------------------------------------------\n   */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n\n      setId(Math.random().toString());\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n   */\n\n  const onSave = async () => {\n    const unSavedDocuments: IDocumentInfo | undefined =\n      propertyPhotosUploaderRef.current?.getUploadedData();\n\n    if (!unSavedDocuments) {\n      return;\n    }\n\n    const payload = enrichForSavePropertyPhotos(unSavedDocuments);\n\n    try {\n      const res = await TechnicalSevice.updatePropertyPhotos(payload);\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const enrichForSavePropertyPhotos = (unSavedDocument: IDocumentInfo) => {\n    const prepareDocSectionsForPayload = (documentSections: IUploadedDocumentSection[]) => {\n      const sections = documentSections.map((docSection: any) => ({\n        uid: docSection.uid ? docSection.uid : null,\n        section: docSection.code,\n        fileName: docSection.fileName,\n        fileType: docSection.contentType,\n        thumbUrl: docSection.thumbUrl,\n        url: docSection.url,\n        isActive: docSection.isActive,\n      }));\n      return sections;\n    };\n\n    const payloadData = {\n      uid: payloadInfo.technicalUid, // technical uid,\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      loanDocuments: [\n        {\n          docType: {\n            uid: unSavedDocument.documentUid,\n          },\n          docCategory: unSavedDocument.documentCategory,\n          documentSections: prepareDocSectionsForPayload(unSavedDocument.documentSectionUrls),\n        },\n      ],\n    };\n    return payloadData;\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n   */\n\n  const renderContent = (): ReactNode => {\n    return (\n      <div className=\"flex flex-col gap-3\">\n        <TextData\n          label={\"\"}\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n        <DocumentUploader\n          key={id}\n          ref={propertyPhotosUploaderRef}\n          savedDocument={data.savedDocuments?.[0] ? data.savedDocuments?.[0] : {}}\n          mode={pageMode === PAGE_MODE.VIEW ? DOC_UPLOADER_MODE.VIEW : DOC_UPLOADER_MODE.EDIT}\n          queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_PROPERTY_PICTURES}\n          mandatoryDocUpload\n        />\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render:  Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        pageMode={pageMode}\n        title={\"\"}\n        onSave={onSave}\n        onEdit={onEdit}\n        onCancel={onCancel}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\nexport default React.memo(PropertyPhotos);\n","import AclGuard from \"components/AclGuard\";\nimport ButtonBox from \"components/ButtonBox\";\nimport EditableTableV2, { Column, EditableComponentRef } from \"components/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport TextData from \"components/TextData/TextData\";\nimport ToastCustom from \"components/Toast\";\nimport { RouteProps } from \"hoc/withRouter\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport { numberFormatter } from \"locale\";\nimport { DropdownChangeParams } from \"primereact/dropdown\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport React, {\n  BaseSyntheticEvent,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  currencyFormatToNumber,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  DROPDOWN_LIST_CODE,\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\nexport interface IPropertyValuationAndAmenitiesRef {\n  props: IProps;\n  save: () => any;\n  editableTableRef: () => any;\n}\n\nexport interface IPropertyValuationAndAmenities {\n  fairMarketValue: string;\n  totalPropertyValueOnCompletion: string;\n  forcedSaleValue: string;\n  stagePropertyValuations: IPropertyValuationTableRowData[];\n  stagePropertyAmenities: IAmenitiesTableRowData[];\n}\n\ninterface IPropertyValuationTableRowData {\n  uid: string;\n  smAreaType: string;\n  smConstructionType: string;\n  valuationAsPerPlan: string;\n  valuationAsPerSite: string;\n  deviationPct: string;\n  rate: string;\n  completedPct: string;\n  recommendedPct: string;\n  totalValuation: string;\n  isActive: boolean;\n}\n\ninterface IAmenitiesTableRowData {\n  uid: string;\n  smAmenityType: string;\n  rate: string;\n  completedPct: string;\n  recommendedPct: string;\n  totalValuation: string;\n  isActive: boolean;\n}\n\ninterface IProps extends RouteProps {\n  isLoading: boolean;\n  data: IPropertyValuationAndAmenities;\n  getDataOnCancel: () => void;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n}\n\nconst initialPropertyValuationTableRowData: IPropertyValuationTableRowData = {\n  uid: \"\",\n  smAreaType: \"\",\n  smConstructionType: \"\",\n  valuationAsPerPlan: \"\",\n  valuationAsPerSite: \"\",\n  deviationPct: \"\",\n  rate: \"\",\n  completedPct: \"\",\n  recommendedPct: \"\",\n  totalValuation: \"\",\n  isActive: true,\n};\n\nconst initialAmenitiesTableRowData: IAmenitiesTableRowData = {\n  uid: \"\",\n  smAmenityType: \"\",\n  rate: \"\",\n  completedPct: \"\",\n  recommendedPct: \"\",\n  totalValuation: \"\",\n  isActive: true,\n};\n\nexport const initialPropertyValuationAndAmenitiesData: IPropertyValuationAndAmenities = {\n  fairMarketValue: \"0\",\n  totalPropertyValueOnCompletion: \"\",\n  forcedSaleValue: \"\",\n  stagePropertyValuations: [],\n  stagePropertyAmenities: [],\n};\n\nconst PropertyValuationAndAmenities = forwardRef<IPropertyValuationAndAmenitiesRef, IProps>(\n  \n  (props, ref) => {\n    const { data, isLoading, payloadInfo, getDataOnCancel } = props;\n\n    // --------------------- states ---------------------- //\n    const [pageObj, setPageObj] = useState<IPropertyValuationAndAmenities>(data);\n    const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n    const [areaTypeOptions, setAreaTypeOptions] = useState<any[]>([]);\n    const [constructionTypeOptions, setConstructionTypeOptions] = useState<any[]>([]);\n\n    // error handling states\n    const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n    const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n    const [toastMessage, setToastMessage] = useState(\"\");\n    const [triggerToast, setTriggerToast] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n    // --------------------- ref ---------------------------- //\n    const propertyValuationTableRef = React.useRef<EditableComponentRef>(null);\n    const amenitiesTableRef = React.useRef<EditableComponentRef>(null);\n    const toastMessageRef = useRef(null);\n\n    // --------------------- custom hooks ---------------------------- //\n    const textConverter = useTextConverter();\n\n    // --------------------------- validator initialization ---------------------- //\n    const [, forceUpdate] = useState<boolean>(false);\n    const [, forceUpdateAmenitiesRow] = useState<boolean>(false);\n\n    const simpleValidator = useRef(\n      new SimpleReactValidator({\n        validators: { ...getStandardValidator() },\n        ...messageReplace(),\n        autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n      })\n    );\n\n    const simpleValidatorAmenities = useRef(\n      new SimpleReactValidator({\n        validators: { ...getStandardValidator() },\n        ...messageReplace(),\n        autoForceUpdate: { forceUpdate: () => forceUpdateAmenitiesRow((prev) => !prev) },\n      })\n    );\n\n    /*------------------global variables------------------- */\n\n    /*\n    --------------------------------------------------------------------------------------------------\n    useEffect: \n    --------------------------------------------------------------------------------------------------\n  */\n\n    useEffect(() => {\n      if (data && Object.keys(data).length > 0) {\n        setPageObj(() => {\n          return {\n            ...data,\n          };\n        });\n      }\n    }, [data]);\n\n    useEffect(() => {\n      init();\n      onTableSearch();\n    }, []);\n\n    useEffect(() => {\n      if (toastMessageRef?.current && toastMessage !== \"\") {\n        // @ts-ignore: will be fixed in future\n        toastMessageRef?.current?.showFunction();\n        setToastMessage(\"\");\n      }\n    }, [toastMessage, triggerToast]);\n\n    useEffect(() => {\n      if (errorMessage) {\n        setShowDialogAPIError(true);\n      }\n    }, [errorMessage]);\n\n    /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n    useImperativeHandle(ref, () => ({\n      props: props,\n      save: onSave,\n      editableTableRef: onTableSearch,\n    }));\n\n    /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n    const getAreaTypeOptions = async () => {\n      try {\n        const res = await StaticMasterDataService.getAll(\n          0,\n          1000,\n          `staticMasterType.code=${DROPDOWN_LIST_CODE.AREA_TYPE}&`\n        );\n        if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n          setAreaTypeOptions([...res.data.results]);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    };\n\n    const getConstructionTypeOptions = async () => {\n      try {\n        const res = await StaticMasterDataService.getAll(\n          0,\n          1000,\n          `staticMasterType.code=${DROPDOWN_LIST_CODE.CONSTRUCTION_TYPE}&`\n        );\n        if (validateGetAPIResponse(res) && !!res.data?.totalRecords) {\n          setConstructionTypeOptions([...res.data.results]);\n        }\n      } catch (error) {\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    };\n\n    /* \n    ---------------------------------------------------------------------------------------------------\n    Validators:\n    ---------------------------------------------------------------------------------------------------\n   */\n\n    const validate = (e: any) => {\n      simpleValidator?.current?.showMessageFor(e?.target?.name);\n    };\n\n    const validateForm = () => {\n      let isValid = false;\n\n      isValid = simpleValidator?.current?.allValid();\n      if (isValid) {\n        return isValid;\n      } else {\n        forceUpdate((prev) => !prev);\n        simpleValidator?.current?.showMessages();\n        forceUpdate((prev) => !prev);\n        return false;\n      }\n    };\n\n    const resetValidator = () => {\n      simpleValidator.current = new SimpleReactValidator({\n        validators: { ...getStandardValidator() },\n        ...messageReplace(),\n        autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n      });\n      simpleValidator?.current?.hideMessages();\n    };\n\n    const validateAmenities = (e: any) => {\n      simpleValidatorAmenities?.current?.showMessageFor(e?.target?.name);\n    };\n\n    const validateFormAmenities = () => {\n      let isValid = false;\n\n      isValid = simpleValidatorAmenities?.current?.allValid();\n      if (isValid) {\n        return isValid;\n      } else {\n        forceUpdateAmenitiesRow((prev) => !prev);\n        simpleValidatorAmenities?.current?.showMessages();\n        forceUpdateAmenitiesRow((prev) => !prev);\n        return false;\n      }\n    };\n\n    const resetValidatorAmenitiesTable = () => {\n      simpleValidatorAmenities.current = new SimpleReactValidator({\n        validators: { ...getStandardValidator() },\n        ...messageReplace(),\n        autoForceUpdate: { forceUpdate: () => forceUpdateAmenitiesRow((prev) => !prev) },\n      });\n      simpleValidatorAmenities?.current?.hideMessages();\n    };\n\n    /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n    const handlePropertyAreaTypeChange = (e: DropdownChangeParams, rowData: any) => {\n      const rowDataObj = { ...rowData };\n      rowDataObj.smAreaType = e.target.value;\n      propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n    };\n\n    const handleConstructionTypeChange = (e: DropdownChangeParams, rowData: any) => {\n      const rowDataObj = { ...rowData };\n      rowDataObj.smConstructionType = e.target.value;\n      propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n    };\n\n    const handleAmountInputChange = (e: any) => {\n      const unformattedValue: number = currencyFormatToNumber(e.target.value);\n      setPageObj((prevPageObj: any) => {\n        return {\n          ...prevPageObj,\n          [e.target.name]: !unformattedValue ? \"\" : numberFormatter(unformattedValue, \"en-IN\", 0),\n        };\n      });\n    };\n\n    /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n    const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n    const onCancel = () => {\n      getDataOnCancel?.();\n      resetValidator();\n      setPageMode(PAGE_MODE.VIEW);\n      propertyValuationTableRef?.current?.clearAll();\n      amenitiesTableRef?.current?.clearAll();\n      propertyValuationTableRef?.current?.search();\n      amenitiesTableRef?.current?.search();\n    };\n\n    const onSave = async () => {\n      if (!validateForm() || !validateFormAmenities()) {\n        return;\n      }\n\n      const structurePayloadData: any = {\n        ...pageObj,\n        propertyValuations: [\n          ...(propertyValuationTableRef.current?.getAddedRecords() ?? []),\n          ...(propertyValuationTableRef.current?.getDeletedRecords() ?? []),\n          ...(propertyValuationTableRef.current?.getUpdatedRecords() ?? []),\n        ],\n\n        propertyAmenities: [\n          ...(amenitiesTableRef.current?.getAddedRecords() ?? []),\n          ...(amenitiesTableRef.current?.getDeletedRecords() ?? []),\n          ...(amenitiesTableRef.current?.getUpdatedRecords() ?? []),\n        ],\n      };\n\n      if (structurePayloadData.propertyValuations.length === 0) {\n        structurePayloadData.propertyValuations = [...data.stagePropertyValuations];\n      }\n\n      if (structurePayloadData.propertyAmenities.length === 0) {\n        structurePayloadData.propertyAmenities = [...data.stagePropertyAmenities];\n      }\n\n      const payload = enrichPropertyValuationAndAmenities(structurePayloadData);\n\n      try {\n        const res = await TechnicalSevice.updatePropertyValuationAndAmenities(payload);\n\n        if (validatePutAPIResponse(res)) {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setPageMode(PAGE_MODE.VIEW);\n\n          propertyValuationTableRef?.current?.clearAll();\n          amenitiesTableRef?.current?.clearAll();\n          propertyValuationTableRef?.current?.search();\n          amenitiesTableRef?.current?.search();\n          getDataOnCancel?.();\n        }\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(parseStandardAPIErrorMessage(error));\n      }\n    };\n\n    const onAddPropertyValuation = () => {\n      propertyValuationTableRef?.current?.addRow(initialPropertyValuationTableRowData);\n      resetValidator();\n    };\n    const onDeletePropertyTableRow = (rowData?: any) => {\n      propertyValuationTableRef.current?.deleteRow(rowData);\n      resetValidator();\n    };\n\n    const onAddAmenites = () => {\n      if (amenitiesTableRef?.current?.getCurrentRecords().length === 0) {\n        amenitiesTableRef?.current?.addRow(initialAmenitiesTableRowData);\n        resetValidator();\n      }\n    };\n\n    const onDeleteAmenitiesTableRow = (rowData?: any) => {\n      amenitiesTableRef.current?.deleteRow(rowData);\n      resetValidator();\n    };\n\n    const onTableSearch = () => {\n      propertyValuationTableRef.current?.search();\n      amenitiesTableRef.current?.search();\n    };\n\n    /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n    const init = async () => {\n      getAreaTypeOptions();\n      getConstructionTypeOptions();\n    };\n\n    const getValue = (val: number) => {\n      return numberFormatter(val, \"en-IN\", 0);\n    };\n\n    const enableValidationForRow = (rowData: any) => {\n      const totalValuation =\n        typeof rowData?.totalValuations === \"number\"\n          ? rowData?.totalValuations\n          : currencyFormatToNumber(rowData?.totalValuation);\n\n      const rate =\n        typeof rowData?.rate === \"number\" ? rowData?.rate : currencyFormatToNumber(rowData?.rate);\n\n      const fieldValidation =\n        rate || rowData?.completedPct || rowData?.recommendedPct || Number(totalValuation) > 0;\n\n      if (fieldValidation === false) {\n        resetValidatorAmenitiesTable();\n      }\n      return fieldValidation;\n    };\n\n    const enrichPropertyValuationAndAmenities = (structurePayloadData: any) => {\n      const preparePropertyValuations = () => {\n        const preparedData = structurePayloadData.propertyValuations?.map(\n          (propertyValuation: IPropertyValuationTableRowData) => {\n            return {\n              uid: propertyValuation.uid ?? null,\n              smAreaType: propertyValuation.smAreaType,\n              smConstructionType: propertyValuation.smConstructionType,\n              valuationAsPerPlan: propertyValuation.valuationAsPerPlan,\n              valuationAsPerSite: propertyValuation.valuationAsPerSite,\n              deviationPct: Number(propertyValuation.deviationPct ?? 0),\n              rate: Number(propertyValuation.rate ?? 0),\n              completedPct: Number(propertyValuation?.completedPct ?? 0),\n              recommendedPct: Number(propertyValuation.recommendedPct ?? 0),\n              totalValuation: Number(currencyFormatToNumber(propertyValuation.totalValuation) ?? 0),\n              isActive: propertyValuation.isActive,\n            };\n          }\n        );\n        return preparedData;\n      };\n\n      const preparePropertyAmenities = () => {\n        const preparedData = structurePayloadData.propertyAmenities?.map(\n          (amenity: IAmenitiesTableRowData) => {\n            return {\n              uid: amenity?.uid ?? null,\n              smAmenityType: \"AREA_TYPE_AMENITIES\",\n              rate: amenity?.rate === \"\" ? null : Number(amenity?.rate ?? 0),\n              completedPct:\n                amenity?.completedPct === \"\" ? null : Number(amenity?.completedPct ?? 0),\n              recommendedPct:\n                amenity?.recommendedPct === \"\" ? null : Number(amenity?.recommendedPct ?? 0),\n              totalValuation: Number(currencyFormatToNumber(amenity?.totalValuation) ?? 0),\n              isActive: amenity?.isActive,\n            };\n          }\n        );\n        return preparedData;\n      };\n\n      const payloadData = {\n        uid: payloadInfo.technicalUid, // technical uid\n        loan: {\n          uid: payloadInfo.loanUid,\n        },\n        stage: {\n          uid: payloadInfo.stageUid,\n        },\n        fairMarketValue: Number(currencyFormatToNumber(pageObj.fairMarketValue)),\n        totalMarketValueOnCompletion: Number(\n          currencyFormatToNumber(pageObj.totalPropertyValueOnCompletion)\n        ),\n        forcedSaleValue: Number(currencyFormatToNumber(pageObj.forcedSaleValue)),\n        stagePropertyAmenities: preparePropertyAmenities(),\n        stagePropertyValuations: preparePropertyValuations(),\n      };\n\n      return payloadData;\n    };\n\n    /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n    const renderPropertyAreaType = (rowData: any) => {\n      return (\n        <SimpleDropDown\n          name={`smAreaType${rowData?.uid}`}\n          className=\"!w-32\"\n          options={areaTypeOptions}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          value={rowData.smAreaType ?? \"\"}\n          onChange={(e: DropdownChangeParams) => {\n            handlePropertyAreaTypeChange(e, rowData);\n          }}\n          onBlur={validate}\n          validation={simpleValidator?.current?.message(\n            `smAreaType${rowData?.uid}`,\n            rowData?.smAreaType,\n            \"mandatory\"\n          )}\n        />\n      );\n    };\n\n    const renderConstructionType = (rowData: any) => {\n      return (\n        <SimpleDropDown\n          name={`smConstructionType${rowData.uid}`}\n          className=\"!w-32\"\n          options={constructionTypeOptions}\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          value={rowData.smConstructionType ?? \"\"}\n          onChange={(e: DropdownChangeParams) => {\n            handleConstructionTypeChange(e, rowData);\n          }}\n          onBlur={validate}\n          validation={simpleValidator?.current?.message(\n            `smConstructionType${rowData.uid}`,\n            rowData?.smConstructionType,\n            \"mandatory\"\n          )}\n        />\n      );\n    };\n\n    const renderAsPerPlan = (rowData: any) => {\n      return (\n        <InputBox\n          name={`valuationAsPerPlan${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.valuationAsPerPlan === \"number\"\n              ? getValue(rowData?.valuationAsPerPlan)\n              : rowData?.valuationAsPerPlan\n          }\n          onBlur={validate}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.valuationAsPerPlan = e.target.value;\n            propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={simpleValidator?.current?.message(\n            `valuationAsPerPlan${rowData.uid}`,\n            rowData?.valuationAsPerPlan,\n            \"mandatory|checkNumber|maxDecimal:2\"\n          )}\n        />\n      );\n    };\n\n    const renderAsPerSite = (rowData: any) => {\n      return (\n        <InputBox\n          name={`valuationAsPerSite${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.valuationAsPerSite === \"number\"\n              ? getValue(rowData?.valuationAsPerSite)\n              : rowData?.valuationAsPerSite\n          }\n          onBlur={validate}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.valuationAsPerSite = e.target.value;\n            propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={simpleValidator?.current?.message(\n            `valuationAsPerSite${rowData.uid}`,\n            rowData?.valuationAsPerSite,\n            \"mandatory|checkNumber|maxDecimal:2\"\n          )}\n        />\n      );\n    };\n\n    const renderDeviation = (rowData: any) => {\n      return (\n        <InputBox\n          name={`deviationPct${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.deviationPct === \"number\"\n              ? getValue(rowData?.deviationPct)\n              : rowData?.deviationPct\n          }\n          onBlur={validate}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.deviationPct = e.target.value;\n            propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={simpleValidator?.current?.message(\n            `deviationPct${rowData.uid}`,\n            rowData?.deviationPct,\n            \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n          )}\n        />\n      );\n    };\n\n    const renderPropertyRate = (rowData: any) => {\n      return (\n        <InputBox\n          name={`rate${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={typeof rowData?.rate === \"number\" ? getValue(rowData?.rate) : rowData?.rate}\n          onBlur={validate}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.rate = e.target.value;\n            propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={simpleValidator?.current?.message(\n            `rate${rowData.uid}`,\n            rowData?.rate,\n            \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n          )}\n        />\n      );\n    };\n\n    const renderPropertyCompleted = (rowData: any) => {\n      return (\n        <InputBox\n          name={`completedPct${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.completedPct === \"number\"\n              ? getValue(rowData?.completedPct)\n              : rowData?.completedPct\n          }\n          onBlur={validate}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.completedPct = e.target.value;\n            propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={simpleValidator?.current?.message(\n            `completedPct${rowData.uid}`,\n            rowData?.completedPct,\n            \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n          )}\n        />\n      );\n    };\n\n    const renderPropertyRecommended = (rowData: any) => {\n      return (\n        <InputBox\n          name={`recommendedPct${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.recommendedPct === \"number\"\n              ? getValue(rowData?.recommendedPct)\n              : rowData?.recommendedPct\n          }\n          onBlur={validate}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.recommendedPct = e.target.value;\n            propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={simpleValidator?.current?.message(\n            `recommendedPct${rowData.uid}`,\n            rowData?.recommendedPct,\n            \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n          )}\n        />\n      );\n    };\n\n    const renderPropertyValuation = (rowData: any) => {\n      return (\n        <InputBox\n          name={`totalValuation${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.totalValuation === \"number\"\n              ? getValue(rowData?.totalValuation)\n              : rowData?.totalValuation\n          }\n          onBlur={validate}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            const amt = currencyFormatToNumber(e.target.value);\n            rowDataObj.totalValuation = amt < 0 ? \"\" : numberFormatter(amt, \"en-IN\", 0);\n            propertyValuationTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={simpleValidator?.current?.message(\n            `totalValuation${rowData.uid}`,\n            rowData?.totalValuation,\n            \"mandatory|onlyInteger\"\n          )}\n        />\n      );\n    };\n\n    const renderPropertyValuationActions = (rowData: any) => {\n      return (\n        <IconButton\n          buttonType={BUTTON_TYPES.DELETE}\n          onClick={() => onDeletePropertyTableRow(rowData)}\n          disabled={pageMode === PAGE_MODE.VIEW}\n        />\n      );\n    };\n\n    const renderAmenitiesType = (rowData: any) => {\n      return <Text className=\"\" label={\"Amenities\"} />;\n    };\n\n    const renderAmenitiesRate = (rowData: any) => {\n      return (\n        <InputBox\n          name={`rate${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={typeof rowData?.rate === \"number\" ? getValue(rowData?.rate) : rowData?.rate}\n          onBlur={enableValidationForRow(rowData) ? validateAmenities : undefined}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.rate = e.target.value;\n            amenitiesTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={\n            enableValidationForRow(rowData)\n              ? simpleValidatorAmenities?.current?.message(\n                  `rate${rowData.uid}`,\n                  rowData?.rate,\n                  \"mandatory|checkNumber|onlyPositive|maxDecimal:2\"\n                )\n              : undefined\n          }\n        />\n      );\n    };\n\n    const renderAmenitiesCompleted = (rowData: any) => {\n      return (\n        <InputBox\n          name={`completedPct${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.completedPct === \"number\"\n              ? getValue(rowData?.completedPct)\n              : rowData?.completedPct\n          }\n          onBlur={enableValidationForRow(rowData) ? validateAmenities : undefined}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.completedPct = e.target.value;\n            amenitiesTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={\n            enableValidationForRow(rowData)\n              ? simpleValidatorAmenities?.current?.message(\n                  `completedPct${rowData.uid}`,\n                  rowData?.completedPct,\n                  \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n                )\n              : undefined\n          }\n        />\n      );\n    };\n\n    const renderAmenitiesRecommended = (rowData: any) => {\n      return (\n        <InputBox\n          name={`recommendedPct${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.recommendedPct === \"number\"\n              ? getValue(rowData?.recommendedPct)\n              : rowData?.recommendedPct\n          }\n          onBlur={enableValidationForRow(rowData) ? validateAmenities : undefined}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            rowDataObj.recommendedPct = e.target.value;\n            amenitiesTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={\n            enableValidationForRow(rowData)\n              ? simpleValidatorAmenities?.current?.message(\n                  `recommendedPct${rowData.uid}`,\n                  rowData?.recommendedPct,\n                  \"mandatory|checkNumber|min:0,num|max:100,num|maxDecimal:2\"\n                )\n              : undefined\n          }\n        />\n      );\n    };\n\n    const renderAmenitiesValuation = (rowData: any) => {\n      return (\n        <InputBox\n          name={`totalValuation${rowData.uid}`}\n          className=\"!w-44 text-right\"\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          value={\n            typeof rowData?.totalValuation === \"number\"\n              ? getValue(rowData?.totalValuation)\n              : rowData?.totalValuation\n          }\n          onBlur={enableValidationForRow(rowData) ? validateAmenities : undefined}\n          onChange={(e: BaseSyntheticEvent) => {\n            const rowDataObj = { ...rowData };\n            const amt = currencyFormatToNumber(e.target.value);\n            rowDataObj.totalValuation = amt < 0 ? \"\" : numberFormatter(amt, \"en-IN\", 0);\n            amenitiesTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          validation={\n            enableValidationForRow(rowData)\n              ? simpleValidatorAmenities?.current?.message(\n                  `totalValuation${rowData.uid}`,\n                  rowData?.totalValuation,\n                  \"mandatory|onlyInteger\"\n                )\n              : undefined\n          }\n        />\n      );\n    };\n\n    const renderAmenitiesActions = (rowData: any) => {\n      return (\n        <IconButton\n          buttonType={BUTTON_TYPES.DELETE}\n          onClick={() => onDeleteAmenitiesTableRow(rowData)}\n          disabled\n        />\n      );\n    };\n\n    const renderPropertyValuationTable = () => {\n      return (\n        <div className=\"mt-3 flex flex-col gap-5 w-full\">\n          <div className=\"flex justify-between items-center\">\n            <TextData\n              label={\"label.section.propertyValuation*\"}\n              titleClass=\"text-primary-sideBarBgColor text-xs font-bold \"\n            />\n\n            <div className=\"self-end\">\n              <ButtonBox buttonType={BUTTON_TYPE.ADD_ASSET} onClick={onAddPropertyValuation} />\n            </div>\n          </div>\n\n          {payloadInfo.loanUid && payloadInfo.stageUid && (\n            <div>\n              <EditableTableV2\n                ref={propertyValuationTableRef}\n                uniqueKey=\"uid\"\n                mode={\"UPDATE\"}\n                standardDataFormatPromise={TechnicalSevice.getPropertyValuation}\n                search={`&loan.uid=${payloadInfo.loanUid}&stage.uid=${\n                  payloadInfo.stageUid\n                }&isActive=${true}`}\n                className={`selected-existing-doc-read-table`}\n              >\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.areaType\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderPropertyAreaType}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.constructionType\")}\n                  className=\"text-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                  body={renderConstructionType}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.asPerPlan\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderAsPerPlan}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.asPerSite\")}\n                  className=\"text-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                  body={renderAsPerSite}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.deviationIn\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderDeviation}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.rate\")}\n                  className=\"text-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                  body={renderPropertyRate}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.completed\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderPropertyCompleted}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.recommended\")}\n                  className=\"text-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                  body={renderPropertyRecommended}\n                />\n                <Column\n                  header={textConverter(\"label.section.propertyValuation.valuation\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderPropertyValuation}\n                />\n                <Column\n                  header={textConverter(\"label.investmentInfo.table.colTitle.action\")}\n                  className=\"text-primary-ptext-1000 text-center text-xs h-12 px-6\"\n                  style={{ minWidth: \"50px\", width: \"50px\" }}\n                  body={renderPropertyValuationActions}\n                />\n              </EditableTableV2>\n            </div>\n          )}\n        </div>\n      );\n    };\n\n    const renderAmenitiesTable = () => {\n      return (\n        <div className=\"mt-3 flex flex-col gap-5 w-full\">\n          <div className=\"flex justify-between items-center\">\n            <TextData\n              label={\"label.section.amenities*\"}\n              titleClass=\"text-primary-sideBarBgColor text-xs font-bold \"\n            />\n\n            <div className=\"self-end\">\n              <ButtonBox\n                buttonType={BUTTON_TYPE.ADD_ASSET}\n                onClick={onAddAmenites}\n                disabled={!!amenitiesTableRef?.current?.getCurrentRecords()?.length}\n              />\n            </div>\n          </div>\n\n          {payloadInfo.loanUid && payloadInfo.stageUid && (\n            <div>\n              <EditableTableV2\n                ref={amenitiesTableRef}\n                uniqueKey=\"uid\"\n                mode={\"UPDATE\"}\n                standardDataFormatPromise={TechnicalSevice.getPropertyAmenities}\n                search={`&loan.uid=${payloadInfo.loanUid}&stage.uid=${\n                  payloadInfo.stageUid\n                }&isActive=${true}`}\n                className={` selected-existing-doc-read-table `}\n                onUpdateCallback={() => {\n                  forceUpdate((prev) => !prev);\n                }}\n              >\n                <Column\n                  header={textConverter(\"label.section.amenities.areaType\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderAmenitiesType}\n                />\n                <Column\n                  header={textConverter(\"label.section.amenities.rate\")}\n                  className=\"text-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                  body={renderAmenitiesRate}\n                />\n                <Column\n                  header={textConverter(\"label.section.amenities.completed\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderAmenitiesCompleted}\n                />\n                <Column\n                  header={textConverter(\"label.section.amenities.recommended\")}\n                  className=\"text-right text-primary-ptext-1000 text-xs h-12 pl-6\"\n                  body={renderAmenitiesRecommended}\n                />\n                <Column\n                  header={textConverter(\"label.section.amenities.valuation\")}\n                  className=\"text-primary-ptext-1000 text-right text-xs h-12 pl-6\"\n                  body={renderAmenitiesValuation}\n                />\n                <Column\n                  header={textConverter(\"label.investmentInfo.table.colTitle.action\")}\n                  className=\"text-primary-ptext-1000 text-center text-xs h-12 px-6\"\n                  style={{ minWidth: \"50px\", width: \"50px\" }}\n                  body={renderAmenitiesActions}\n                />\n              </EditableTableV2>\n            </div>\n          )}\n        </div>\n      );\n    };\n\n    const renderContent = () => {\n      return (\n        <div className=\"flex flex-col justify-center items-center space-y-6 w-full\">\n          {renderPropertyValuationTable()}\n          {renderAmenitiesTable()}\n\n          <div className=\"mt-5 w-full flex flex-wrap items-center gap-x-4 gap-y-5\">\n            <div className=\"\">\n              <InputBox\n                label={\"label.section.amenities.fairMarketValue\"}\n                name={\"fairMarketValue\"}\n                className=\"!w-64 text-right\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                value={pageObj?.fairMarketValue}\n                disabled\n              />\n            </div>\n\n            <div className=\"\">\n              <InputBox\n                label={\"label.section.amenities.totalPropertyCompletion*\"}\n                name={\"totalPropertyValueOnCompletion\"}\n                className=\"!w-64 text-right\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                value={pageObj?.totalPropertyValueOnCompletion}\n                onChange={handleAmountInputChange}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(\n                  `totalPropertyValueOnCompletion`,\n                  pageObj?.totalPropertyValueOnCompletion,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n\n            <div className=\"\">\n              <InputBox\n                label={\"label.section.amenities.forcedSaleValue*\"}\n                name={\"forcedSaleValue\"}\n                className=\"!w-64 text-right\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                value={pageObj?.forcedSaleValue}\n                onChange={handleAmountInputChange}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(\n                  `forcedSaleValue`,\n                  pageObj?.forcedSaleValue,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n    return (\n      <>\n        <SaveComponent\n          title={\"heading.section.valuation*\"}\n          pageMode={pageMode}\n          disabled={isLoading}\n          onSave={onSave}\n          onCancel={onCancel}\n          onEdit={onEdit}\n        >\n          {isLoading ? (\n            <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n          ) : (\n            <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n          )}\n        </SaveComponent>\n\n        <ToastCustom\n          position={position}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n        />\n\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </>\n    );\n  }\n);\n\nexport default PropertyValuationAndAmenities;\n","import { RouteProps } from \"hoc/withRouter\";\nimport { BaseSyntheticEvent, ReactNode, useEffect, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport ToastCustom from \"components/Toast\";\n\n// --------- ---------- //\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  INPUT_STYLE_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\nexport interface IStageOfConstructionData {\n  uid: string;\n  structureDescription: string;\n  descriptionOfStage: string;\n  technicalPct: string;\n  recommendedPct: string;\n}\n\ninterface IProps extends RouteProps {\n  isLoading: boolean;\n  data: IStageOfConstructionData;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n  getDataOnCancel: () => void;\n}\nexport const initialStageOfConstructionData: IStageOfConstructionData = {\n  uid: \"\",\n  structureDescription: \"\",\n  descriptionOfStage: \"\",\n  technicalPct: \"\",\n  recommendedPct: \"\",\n};\n\nconst StageOfConstruction = (props: IProps) => {\n  const { isLoading, payloadInfo, getDataOnCancel, data } = props;\n\n  // --------------------- states ---------------------- //\n  const [pageObj, setPageObj] = useState<IStageOfConstructionData>({\n    ...initialStageOfConstructionData,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    useEffect: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: For creating and returning properties\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    ---------------------------------------------------------------------------------------------------\n    Validators:\n    ---------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: BaseSyntheticEvent) => {\n    setPageObj((prev: IStageOfConstructionData) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  const onSave = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    const payload = enrichForSaveStageOfConstruction();\n    try {\n      const res = await TechnicalSevice.updateStageOfConstruction(payload);\n\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const enrichForSaveStageOfConstruction = () => {\n    const payloadData = {\n      uid: payloadInfo.technicalUid,\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      stageConstructionDetail: {\n        uid: pageObj.uid ? pageObj.uid : null,\n        constructionStructureDescription: pageObj.structureDescription,\n        constructionStageDescription: pageObj.descriptionOfStage,\n        technicalPct: Number(pageObj.technicalPct),\n        recommendedPct: Number(pageObj.recommendedPct),\n      },\n    };\n\n    return payloadData;\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderContent = (): ReactNode => {\n    return (\n      <div className=\" w-full grid grid-cols-4 gap-x-4 gap-y-5\">\n        <div className=\"col-span-1\">\n          <InputBox\n            label={\"label.technical.stageOfConstruction.structureDescription*\"}\n            name={`structureDescription`}\n            className=\"\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            value={pageObj.structureDescription}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `structureDescription`,\n              pageObj.structureDescription,\n              \"mandatory\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            label={\"label.technical.stageOfConstruction.descriptionOfStage*\"}\n            name={`descriptionOfStage`}\n            className=\"\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            value={pageObj.descriptionOfStage}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `descriptionOfStage`,\n              pageObj.descriptionOfStage,\n              \"mandatory\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            label={\"label.technical.stageOfConstruction.technical*\"}\n            name={`technicalPct`}\n            className=\"text-right\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            value={pageObj.technicalPct}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `technicalPct`,\n              pageObj.technicalPct,\n              \"mandatory|checkNumber|min:1,num|max:100,num|maxDecimal:2\"\n            )}\n          />\n        </div>\n\n        <div className=\"col-span-1\">\n          <InputBox\n            label={\"label.technical.stageOfConstruction.recommended*\"}\n            name={`recommendedPct`}\n            className=\"text-right\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            value={pageObj.recommendedPct}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(\n              `recommendedPct`,\n              pageObj.recommendedPct,\n              \"mandatory|checkNumber|min:1,num|max:100,num|maxDecimal:2\"\n            )}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <>\n      <SaveComponent\n        title={\"heading.technical.stageOfConstruction\"}\n        pageMode={pageMode}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </>\n  );\n};\n\nexport default StageOfConstruction;\n","import React, { useEffect, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport CheckBox from \"components/CheckBox\";\nimport InputBox from \"components/InputBox\";\nimport RichTextEditor from \"components/RichTextEditor\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\n\n// --------- ---------- //\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport { PAGE_MODE, STATIC_MASTER_TYPE_TOAST_TEXT, TOAST_STYLE_TYPE } from \"utils/Constant\";\nimport { ITechnicalDropdownList } from \"../../PageReport/PageReport\";\n\nexport interface ITechnicalStatusData {\n  status: string;\n  remarks: string;\n  declaration: boolean;\n  engineerName: string;\n}\n\ninterface IProps {\n  data?: ITechnicalStatusData;\n  className?: string;\n  isLoading?: boolean;\n  dropdownOptions?: ITechnicalDropdownList;\n  payloadInfo: { technicalUid: string; loanUid: string; stageUid: string };\n  getDataOnCancel?: () => void;\n}\n\nexport const initialTechnicalStatusData = {\n  status: \"\",\n  remarks: \"\",\n  declaration: false,\n  engineerName: \"\",\n};\n\nconst TechnicalStatus = (props: IProps) => {\n  const {\n    data = initialTechnicalStatusData,\n    isLoading,\n    className,\n    dropdownOptions,\n    payloadInfo,\n    getDataOnCancel,\n  } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<ITechnicalStatusData>(data);\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [editorValidation, setEditorValidation] = useState<any>({\n    remarkValidation: {\n      errorMessage: \"\",\n    },\n  });\n\n  // error handling states\n\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n\n  const toastMessageRef = useRef(null);\n  const remarkEditorRef = useRef<any>(null);\n\n  // --------------------- validator initialization ---------------------- //\n\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev: boolean) => !prev) },\n    })\n  );\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    use Effect\n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => ({\n        ...data,\n      }));\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /* \n    --------------------------------------------------------------------------------------------------\n    Validators:\n    --------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const validateEditor = (editorRef: any, name: string, validationRule: any[]) => {\n    const wordcount = editorRef?.current?.editor?.plugins?.wordcount?.body.getCharacterCount();\n\n    if (validationRule.includes(\"Mandatory\")) {\n      if (wordcount < 1) {\n        setEditorValidation((prevState: any) => {\n          return {\n            ...prevState,\n            [name]: {\n              ...prevState[name],\n              errorMessage: \"Mandatory\",\n            },\n          };\n        });\n\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n    simpleValidator?.current?.hideMessages();\n\n    setEditorValidation((prevState: any) => {\n      return {\n        ...prevState,\n        remarkValidation: {\n          errorMessage: \"\",\n        },\n      };\n    });\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: any) => {\n    // common state update\n    setPageObj((prevPageObj: any) => {\n      return {\n        ...prevPageObj,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const handleCheckBoxChange = (e: any) => {\n    setPageObj((prevState: ITechnicalStatusData) => {\n      return {\n        ...prevState,\n        [e.target.name]: e.checked,\n      };\n    });\n  };\n\n  const handleRemarksEditorValidation = (e: any, editorRef: any) => {\n    if (validateEditor(editorRef, \"remarkValidation\", [\"Mandatory\"])) {\n      if (editorValidation?.remarkValidation?.errorMessage) {\n        setEditorValidation((prevState: any) => {\n          return {\n            ...prevState,\n            remarkValidation: {\n              ...prevState.remarkValidation,\n              errorMessage: \"\",\n            },\n          };\n        });\n      }\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    const formValidation = validateForm();\n    const editorValidation = validateEditor(remarkEditorRef, \"remarkValidation\", [\"Mandatory\"]);\n    if (!formValidation || !editorValidation) {\n      return;\n    }\n\n    try {\n      if (remarkEditorRef.current?.editor?.getContent()) {\n        const payload = enrichForSaveTechnicalStatus();\n        const res = await TechnicalSevice.updateTechnicalStatus(payload);\n\n        if (validatePutAPIResponse(res)) {\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setPageMode(PAGE_MODE.VIEW);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    resetValidator();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const enrichForSaveTechnicalStatus = () => {\n    const payloadData = {\n      uid: payloadInfo.technicalUid ?? \"\", // technical uid\n      loan: {\n        uid: payloadInfo.loanUid ?? \"\",\n      },\n      stage: {\n        uid: payloadInfo.stageUid ?? \"\",\n      },\n      smTechnicalStatus: pageObj.status,\n      overallTechnicalRemarks: remarkEditorRef.current?.editor?.getContent(),\n      inspectionEngineerName: pageObj.engineerName,\n      isDeclarationChecked: pageObj.declaration,\n    };\n\n    return payloadData;\n  };\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n  */\n\n  const renderDeclarationContent = () => {\n    return (\n      <React.Fragment>\n        <ol className=\"text-xs list-decimal flex flex-col gap-3\">\n          <li className=\"\">\n            <div className=\"flex items-start\">\n              <Text className=\"inline mr-2\" label={\"label.technical.declaration.content1\"} />\n              <div className=\"!w-62.5 inline-input\">\n                <InputBox\n                  className={`!h-6`}\n                  name=\"engineerName\"\n                  value={pageObj?.engineerName}\n                  onChange={handleChange}\n                  onBlur={validate}\n                  validation={simpleValidator?.current?.message(\n                    `engineerName`,\n                    pageObj?.engineerName,\n                    \"mandatory\"\n                  )}\n                  hideLabel\n                />\n              </div>\n\n              <Text className=\"inline ml-2\" label={\"label.technical.declaration.content2\"} />\n            </div>\n          </li>\n          <li>\n            <Text className=\"\" label={\"label.technical.declaration.content3\"} />\n          </li>\n          <li>\n            <Text className=\"\" label={\"label.technical.declaration.content4\"} />\n          </li>\n          <li>\n            <Text className=\"\" label={\"label.technical.declaration.content5\"} />\n          </li>\n        </ol>\n\n        {/* <div className=\"h-4 flex justify-start  items-center\">\n          <InputError\n            validation={\n              pageObj?.declaration\n                ? simpleValidator?.current?.message(\n                    `declaration`,\n                    pageObj?.declaration,\n                    \"mandatory\"\n                  )\n                : \"\"\n              // : !pageObj?.declaration\n              // ? \"mandatory\"\n              // : \"\"\n            }\n          />\n        </div> */}\n      </React.Fragment>\n    );\n  };\n\n  const renderContent = () => {\n    const { status, remarks, declaration } = pageObj;\n\n    return (\n      <div className=\"flex flex-col justify-center items-start w-full gap-y-3 mt-3\">\n        <div className=\"w-62.5 \">\n          <SimpleDropDown\n            label={\"label.technical.status.mandatory\"}\n            placeholder=\"placeholder.legal.status*\"\n            name=\"status\"\n            value={status}\n            onChange={handleChange}\n            onBlur={validate}\n            validation={simpleValidator?.current?.message(`status`, status, \"mandatory\")}\n            options={dropdownOptions?.status}\n            optionLabel=\"label\"\n            optionValue=\"value\"\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n\n        <div className=\"w-full flex flex-col justify-center items-start space-y-2\">\n          <Text\n            label={\"label.technical.overall.remarks*\"}\n            className=\"text-primary-sideBarBgColor text-xs font-bold mb-1\"\n          />\n\n          <RichTextEditor\n            disabled={pageMode === PAGE_MODE.VIEW}\n            ref={remarkEditorRef}\n            initialValue={remarks}\n            onChange={(e: any) => handleRemarksEditorValidation(e, remarkEditorRef)}\n            validation={editorValidation?.remarkValidation}\n          />\n        </div>\n\n        <div className=\"w-full flex flex-col justify-center items-start space-y-2\">\n          <Text\n            label={\"label.technical.declaration\"}\n            className=\"text-primary-sideBarBgColor text-xs font-bold mb-1\"\n          />\n\n          <div className=\"w-full flex justify-start items-start space-x-6\">\n            <CheckBox\n              name=\"declaration\"\n              value={declaration}\n              checked={declaration}\n              onChange={handleCheckBoxChange}\n              validation={simpleValidator?.current?.message(`declaration`, declaration, \"checked\")}\n              hideLabel\n              hideErrorRow\n            />\n\n            <div>{renderDeclarationContent()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        pageMode={pageMode}\n        title={\"heading.technical.status\"}\n        onCancel={onCancel}\n        onEdit={onEdit}\n        onSave={onSave}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default TechnicalStatus;\n","import React, { ReactNode, useEffect, useRef, useState } from \"react\";\n\n// --------- ---------- //\nimport AclGuard from \"components/AclGuard\";\nimport DocumentUploader, {\n  DOC_UPLOADER_MODE,\n  IDocumentInfo,\n  IDocumentUploaderRef,\n  IUploadedDocumentSection,\n} from \"components/DocumentUploader/DocumentUploader\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton\";\nimport TextData from \"components/TextData/TextData\";\nimport ToastCustom from \"components/Toast\";\n\n// --------- ---------- //\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport { parseStandardAPIErrorMessage, validatePutAPIResponse } from \"utils/CommonUtil\";\nimport {\n  DOCUMENT_CATEGORY,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\ninterface IProps {\n  isLoading: boolean;\n  data: IUploadTechnicalReportData;\n  getDataOnCancel: () => void;\n  payloadInfo: { loanUid: string; stageUid: string; technicalUid: string };\n}\n\nexport interface IUploadTechnicalReportData {\n  savedDocuments: any[];\n}\n\nexport const initialTechnicalUploadReportData: IUploadTechnicalReportData = {\n  savedDocuments: [],\n};\n\nconst UploadTecnicalReport: React.FC<any> = (props: IProps) => {\n  const { isLoading, payloadInfo, getDataOnCancel, data } = props;\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IUploadTechnicalReportData>(data);\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n  const [id, setId] = useState<string>(\"1\"); // to re-mount doc uploader by changing its key everytime the cancel button is hit and get api is called through getDataOnCancel() to fetch the previous saved data\n\n  // error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const toastMessageRef = useRef(null);\n  const technicalReportUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  // --------------------- global variables ---------------------- //\n\n  /*\n    ------------------------------------------------------------------------------------------------------------------------------------------------------useEffect:\n    ------------------------------------------------------------------------------------------------------------------------------------------------------\n   */\n\n  useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      setPageObj(() => {\n        return {\n          ...data,\n        };\n      });\n\n      setId(Math.random().toString());\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n   */\n\n  const onSave = async () => {\n    const unSavedDocuments: IDocumentInfo | undefined =\n      technicalReportUploaderRef.current?.getUploadedData();\n\n    if (!unSavedDocuments) {\n      return;\n    }\n\n    const payload = enrichForTechnicalUploadReport(unSavedDocuments);\n\n    try {\n      const res = await TechnicalSevice.updateUploadReport(payload);\n      if (validatePutAPIResponse(res)) {\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        setPageMode(PAGE_MODE.VIEW);\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n\n  const enrichForTechnicalUploadReport = (unSavedDocument: IDocumentInfo) => {\n    const prepareDocSectionsForPayload = (documentSections: IUploadedDocumentSection[]) => {\n      const sections = documentSections.map((docSection: any) => ({\n        uid: docSection.uid ? docSection.uid : null,\n        section: docSection.code,\n        fileName: docSection.fileName,\n        fileType: docSection.contentType,\n        thumbUrl: docSection.thumbUrl,\n        url: docSection.url,\n        isActive: docSection.isActive,\n      }));\n      return sections;\n    };\n\n    const payloadData = {\n      uid: payloadInfo.technicalUid, // technical uid,\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      loanDocuments: [\n        {\n          docType: {\n            uid: unSavedDocument.documentUid,\n          },\n          docCategory: unSavedDocument.documentCategory,\n          documentSections: prepareDocSectionsForPayload(unSavedDocument.documentSectionUrls),\n        },\n      ],\n    };\n    return payloadData;\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    ---------------------------------------------------------------------------------------------\n   */\n\n  const renderContent = (): ReactNode => {\n    return (\n      <div className=\"flex flex-col gap-3\">\n        <TextData\n          label={\"\"}\n          value=\"Attach Documents (PDF, JPG, JPEG or PNG)\"\n          titleClass=\"text-primary-sideBarBgColor text-sm font-bold mb-1\"\n        />\n        <DocumentUploader\n          key={id}\n          mandatoryDocUpload\n          ref={technicalReportUploaderRef}\n          savedDocument={data.savedDocuments?.[0] ? data.savedDocuments?.[0] : {}}\n          mode={pageMode === PAGE_MODE.VIEW ? DOC_UPLOADER_MODE.VIEW : DOC_UPLOADER_MODE.EDIT}\n          queryParamForDocList={DOCUMENT_CATEGORY.DOCUMENT_CATEGORY_TECHNICAL_DOCUMENT}\n        />\n      </div>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render:  Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        pageMode={pageMode}\n        title={\"heading.technical.upload.technical.report\"}\n        onSave={onSave}\n        onEdit={onEdit}\n        onCancel={onCancel}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>{renderContent()}</AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\nexport default React.memo(UploadTecnicalReport);\n","import AclGuard from \"components/AclGuard/AclGuard\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport Info from \"components/Info/Info\";\nimport Section from \"components/Section/Section\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport StageService from \"services/transaction/DDE/StageService\";\nimport TechnicalSevice from \"services/transaction/DDE/TechnicalService\";\nimport { parseStandardAPIErrorMessage, validateGetAPIResponse } from \"utils/CommonUtil\";\nimport {\n  CURRENT_STAGE_STATUS,\n  LOAN_STAGE_STATUS,\n  SAHAYYA_USER_TYPE,\n  YES_NO_OPTIONS,\n} from \"utils/Constant\";\nimport { IDropDownOptions } from \"views/transaction/PageDDE/Login/Helper\";\nimport {\n  updateDocumentDetailsPageObj,\n  updateGeneralDetailsPageObj,\n  updateGovernmentGuideLinePageObj,\n  updateLocalityDetailsPageObj,\n  updateOccupancyDetailsPageObj,\n  updatePropertyDetailsPageObj,\n  updatePropertyPhotos,\n  updatePropertyValuationAndAmenities,\n  updateStageOfConstructionPageObj,\n  updateTechnicalInitiationInfoPageObj,\n  updateTechnicalStatusPageObj,\n  updateTechnicalUploadReport,\n} from \"../Helper\";\nimport DocumentDetails, {\n  ITechnicalDocumentDetailsPageObj,\n  initialTechnicalDocumentDetailsPageObj,\n} from \"../Sections/DocumentDetails/DocumentDetails\";\nimport { initialTechnicalGeneralDetailsPageObj } from \"../Sections/GeneralDetails\";\nimport GeneralDetails, {\n  ITechnicalGeneralDetailsPageObj,\n} from \"../Sections/GeneralDetails/GeneralDetails\";\nimport GovernmentGuideLines, {\n  IGovernmentRateData,\n  initialGovernmentRateData,\n} from \"../Sections/GovernmentGuideLines/GovernmentGuideLines\";\nimport InitiationInfo, { ITechnicalInitiationInfo } from \"../Sections/InitiationInfo\";\nimport { initialTechnicalInitiationInfoPageObj } from \"../Sections/InitiationInfo/InitiationInfo\";\nimport LocalityDetails, {\n  ITechnicalLocalityDetailsPageObj,\n  initialTechnicalLocalityDetailsPageObj,\n} from \"../Sections/LocalityDetails/LocalityDetails\";\nimport OccupancyDetails, {\n  IOccupancyData,\n  initialOccupancyData,\n} from \"../Sections/OccupancyDetails/OccupancyDetails\";\nimport PropertyDetails, {\n  ITechnicalPropertyDetailsPageObj,\n  initialTechnicalPropertyDetailsPageObj,\n} from \"../Sections/PropertyDetails/PropertyDetails\";\nimport PropertyPhotos, {\n  IPropertyPhotosData,\n  initialPropertyPhotosData,\n} from \"../Sections/PropertyPhotos/PropertyPhotos\";\nimport PropertyValuationAndAmenities, {\n  IPropertyValuationAndAmenities,\n  initialPropertyValuationAndAmenitiesData,\n} from \"../Sections/PropertyValuationAndAmenities/PropertyValuationAndAmenities\";\nimport StageOfConstruction, {\n  IStageOfConstructionData,\n  initialStageOfConstructionData,\n} from \"../Sections/StageOfConstruction/StageOfConstruction\";\nimport TechnicalStatus, {\n  ITechnicalStatusData,\n  initialTechnicalStatusData,\n} from \"../Sections/TechnicalStatus/TechnicalStatus\";\nimport UploadTechnicalReport, {\n  IUploadTechnicalReportData,\n  initialTechnicalUploadReportData,\n} from \"../Sections/UploadTechnicalReport/UploadTechnicalReport\";\nexport interface IRcuProps {\n  isLoading?: boolean;\n}\nexport interface ITechnicalDropdownList {\n  verificationStatus?: IDropDownOptions[];\n  vendorType?: IDropDownOptions[];\n  units?: IDropDownOptions[];\n  holdingType?: IDropDownOptions[];\n  status?: IDropDownOptions[];\n  occupancyStatus?: IDropDownOptions[];\n  classOfLocality?: IDropDownOptions[];\n  questions?: IDropDownOptions[];\n  marketability?: IDropDownOptions[];\n  riskOfDemolition?: IDropDownOptions[];\n  landOfUse?: IDropDownOptions[];\n  conditionOfProperty?: IDropDownOptions[];\n}\ninterface IPageObj {\n  showInfo: boolean;\n  loanUid: string;\n  stageUid: string;\n  stageInfo?: any;\n  technicalUid: string;\n  dropdownOptions: ITechnicalDropdownList;\n  isLoadingInitiationInfo: boolean;\n  isLoadingGeneralDetails: boolean;\n  isLoadingApplicantDetails: boolean;\n  isLoadingDocumentDetails: boolean;\n  isLoadingLocalityDetails: boolean;\n  isLoadingPropertyDetails: boolean;\n  isLoadingPropertyValuationAndAmenities: boolean;\n  isLoadingStageOfConstruction: boolean;\n  isLoadingGovernmentGuideLines: boolean;\n  isLoadingOccupancyDetails: boolean;\n  isLoadingPropertyPhotos: boolean;\n  isLoadingTechnicalStatus: boolean;\n  isLoadingUploadedTechnicalReport: boolean;\n  initiationInfo: ITechnicalInitiationInfo;\n  generalDetails: ITechnicalGeneralDetailsPageObj;\n  documentDetails: ITechnicalDocumentDetailsPageObj;\n  localityDetails: ITechnicalLocalityDetailsPageObj;\n  governmentGuideLine: IGovernmentRateData;\n  occupancyDetails: IOccupancyData;\n  propertyDetails: ITechnicalPropertyDetailsPageObj;\n  propertyValuationAndAmenities: IPropertyValuationAndAmenities;\n  stageOfConstruction: IStageOfConstructionData;\n  propertyPhotos: IPropertyPhotosData;\n  technicalStatus: ITechnicalStatusData;\n  uploadedTechnicalReport: IUploadTechnicalReportData;\n}\n\nconst initialPageOj: IPageObj = {\n  showInfo: true,\n  loanUid: \"\",\n  stageUid: \"\",\n  stageInfo: {},\n  technicalUid: \"\",\n  dropdownOptions: {\n    verificationStatus: [],\n    vendorType: [],\n    questions: [],\n    marketability: [],\n    riskOfDemolition: [],\n    landOfUse: [],\n    conditionOfProperty: [],\n    units: [],\n    holdingType: [],\n    occupancyStatus: [],\n    status: [],\n  },\n  initiationInfo: { ...initialTechnicalInitiationInfoPageObj },\n  generalDetails: { ...initialTechnicalGeneralDetailsPageObj },\n  documentDetails: { ...initialTechnicalDocumentDetailsPageObj },\n  localityDetails: { ...initialTechnicalLocalityDetailsPageObj },\n  propertyDetails: { ...initialTechnicalPropertyDetailsPageObj },\n  propertyValuationAndAmenities: { ...initialPropertyValuationAndAmenitiesData },\n  stageOfConstruction: { ...initialStageOfConstructionData },\n  governmentGuideLine: { ...initialGovernmentRateData },\n  occupancyDetails: { ...initialOccupancyData },\n  propertyPhotos: { ...initialPropertyPhotosData },\n  technicalStatus: { ...initialTechnicalStatusData },\n  uploadedTechnicalReport: {\n    ...initialTechnicalUploadReportData,\n  },\n  isLoadingInitiationInfo: true,\n  isLoadingGeneralDetails: true,\n  isLoadingDocumentDetails: true,\n  isLoadingLocalityDetails: true,\n  isLoadingApplicantDetails: false,\n  isLoadingPropertyDetails: true,\n  isLoadingPropertyValuationAndAmenities: true,\n  isLoadingStageOfConstruction: true,\n  isLoadingGovernmentGuideLines: true,\n  isLoadingOccupancyDetails: true,\n  isLoadingPropertyPhotos: true,\n  isLoadingTechnicalStatus: true,\n  isLoadingUploadedTechnicalReport: true,\n};\n\nconst PageReport = () => {\n  const params: { loanUid?: string; stageUid?: string } = useParams();\n\n  // --------------------- states ---------------------- //\n\n  const [pageObj, setPageObj] = useState<IPageObj>({ ...initialPageOj });\n  const [errorMessage, setErrorMessage] = useState<any>(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [isReadMode, setIsReadMode] = useState(false);\n  const userProfile = useSelector((state: any) => state.UserProfileReducers.profileObj);\n  const isPartnerUser = userProfile?.sahayyaUserType === SAHAYYA_USER_TYPE.PARTNER_USER;\n\n  // --------------------- global variables ---------------------- //\n\n  const payloadInfo = {\n    technicalUid: pageObj.technicalUid,\n    loanUid: pageObj.loanUid,\n    stageUid: pageObj.stageUid,\n  };\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n  useEffect(() => {\n    if (params.stageUid) {\n      init();\n    }\n  }, [params.stageUid]);\n\n  useEffect(() => {\n    if (pageObj.stageUid) {\n      getAllTechnicalStageDetails();\n    }\n  }, [pageObj.stageUid]);\n\n  useEffect(() => {\n    if (pageObj.technicalUid) {\n      getTechnicalReportGeneralDetails();\n      getTechnicalReportPropertyDetails();\n      getValuationAndAmenitiesDetails();\n      getTechnicalReportStageConstructionDetails();\n      getUploadedPropertyPhotos();\n      getUploadedTechnicalReport();\n    }\n  }, [pageObj.technicalUid]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (pageObj.stageInfo?.status === LOAN_STAGE_STATUS.IN_REVIEW) {\n      setIsReadMode(true);\n    } else if (!isPartnerUser) {\n      setIsReadMode(true);\n    } else if (pageObj.stageInfo?.status === LOAN_STAGE_STATUS.COMPLETED) {\n      setIsReadMode(true);\n    } else if (pageObj.stageInfo?.status === LOAN_STAGE_STATUS.CANCELLED) {\n      setIsReadMode(true);\n    } else {\n      setIsReadMode(false);\n    }\n  }, [pageObj.stageInfo?.status, isPartnerUser]);\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    Ref: Exposing essential functions for external control\n    --------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  const init = async () => {\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      loanUid: params.loanUid ?? \"\",\n      stageUid: params?.stageUid ?? \"\",\n    }));\n    getVendorTypeOptions();\n    getPropertyDetailsQuestionsList();\n    getConditionOfPropertyOptions();\n    getLandOfUseOptions();\n    getMarketabilityOptions();\n    getRiskOfDemolitionOptions();\n    getDocumentsUnitsTypeOptions();\n    getDocumentsHoldingTypeOptions();\n    getLocalityTypeOptions();\n    getOccupancyStatus();\n    getTechnicalStatusOptions();\n  };\n\n  const getAllTechnicalStageDetails = async (isReturnResponseOnly?: boolean) => {\n    try {\n      const res = await StageService.getStageDetails(pageObj.stageUid);\n\n      if (validateGetAPIResponse(res)) {\n        if (isReturnResponseOnly) return res?.data;\n\n        const stagePropertyAddress = await StageService.getPropertyDetails(\n          0,\n          10,\n          `uid=${res?.data?.stage?.address?.uid ?? \"\"}`\n        );\n\n        setPageObj((prev: IPageObj) => ({\n          ...prev,\n          stageInfo: res?.data.stage,\n          technicalUid: res?.data?.stage?.technical?.uid,\n          initiationInfo: {\n            ...prev.initiationInfo,\n            ...updateTechnicalInitiationInfoPageObj(\n              res?.data,\n              stagePropertyAddress?.data?.results?.[0]\n            ),\n          },\n          isLoadingInitiationInfo: false,\n\n          documentDetails: {\n            ...prev.documentDetails,\n            ...updateDocumentDetailsPageObj(res?.data),\n          },\n          isLoadingDocumentDetails: false,\n\n          localityDetails: {\n            ...prev.localityDetails,\n            ...updateLocalityDetailsPageObj(res?.data),\n          },\n          isLoadingLocalityDetails: false,\n\n          governmentGuideLine: {\n            ...prev.governmentGuideLine,\n            ...updateGovernmentGuideLinePageObj(res?.data),\n          },\n          isLoadingGovernmentGuideLines: false,\n\n          occupancyDetails: {\n            ...prev.occupancyDetails,\n            ...updateOccupancyDetailsPageObj(res?.data),\n          },\n          isLoadingOccupancyDetails: false,\n\n          technicalStatus: {\n            ...prev.technicalStatus,\n            ...updateTechnicalStatusPageObj(res?.data),\n          },\n          isLoadingTechnicalStatus: false,\n        }));\n      }\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n\n      setPageObj((prev) => ({\n        ...prev,\n        isLoadingInitiationInfo: false,\n        isLoadingDocumentDetails: false,\n        isLoadingLocalityDetails: false,\n        isLoadingGovernmentGuideLines: false,\n        isLoadingOccupancyDetails: false,\n        isLoadingTechnicalStatus: false,\n      }));\n    }\n  };\n\n  const getTechnicalReportGeneralDetails = async (isReturnResponseOnly?: boolean) => {\n    try {\n      const res = await TechnicalSevice.getGeneralDetails(pageObj.technicalUid);\n      if (validateGetAPIResponse(res)) {\n        if (isReturnResponseOnly) return res?.data;\n\n        setPageObj((prev: IPageObj) => ({\n          ...prev,\n          generalDetails: {\n            ...prev.generalDetails,\n            ...updateGeneralDetailsPageObj(res?.data),\n          },\n          isLoadingGeneralDetails: false,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n      setPageObj((prev: IPageObj) => ({\n        ...prev,\n        isLoadingGeneralDetails: false,\n      }));\n    }\n  };\n\n  const getTechnicalReportPropertyDetails = async (isReturnResponseOnly?: boolean) => {\n    try {\n      const res = await TechnicalSevice.getPropertyDetails(pageObj.technicalUid);\n\n      if (validateGetAPIResponse(res)) {\n        if (isReturnResponseOnly) return res?.data;\n\n        setPageObj((prev: IPageObj) => ({\n          ...prev,\n          propertyDetails: {\n            ...prev.propertyDetails,\n            ...updatePropertyDetailsPageObj(res?.data),\n          },\n          isLoadingPropertyDetails: false,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n      setPageObj((prev: IPageObj) => ({\n        ...prev,\n        isLoadingPropertyDetails: false,\n      }));\n    }\n  };\n\n  const getValuationAndAmenitiesDetails = async (isReturnResponseOnly?: boolean) => {\n    try {\n      const res = await TechnicalSevice.getValuationAndAmenities(pageObj.technicalUid);\n\n      if (validateGetAPIResponse(res)) {\n        if (isReturnResponseOnly) return res?.data;\n\n        setPageObj((prev: IPageObj) => ({\n          ...prev,\n          propertyValuationAndAmenities: {\n            ...prev.propertyValuationAndAmenities,\n            ...updatePropertyValuationAndAmenities(res?.data),\n          },\n          isLoadingPropertyValuationAndAmenities: false,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n      setPageObj((prev: IPageObj) => ({\n        ...prev,\n        isLoadingPropertyValuationAndAmenities: false,\n      }));\n    }\n  };\n\n  const getTechnicalReportStageConstructionDetails = async (isReturnResponseOnly?: boolean) => {\n    try {\n      const res = await TechnicalSevice.getStageOfConstruction(pageObj.technicalUid);\n      if (validateGetAPIResponse(res)) {\n        if (isReturnResponseOnly) return res?.data;\n\n        setPageObj((prev: IPageObj) => ({\n          ...prev,\n          stageOfConstruction: {\n            ...prev.stageOfConstruction,\n            ...updateStageOfConstructionPageObj(res?.data),\n          },\n          isLoadingStageOfConstruction: false,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n      setPageObj((prev: IPageObj) => ({\n        ...prev,\n        isLoadingStageOfConstruction: false,\n      }));\n    }\n  };\n\n  const getUploadedPropertyPhotos = async (isReturnResponseOnly?: boolean) => {\n    try {\n      const res = await TechnicalSevice.getPropertyPhotos(pageObj.technicalUid);\n\n      if (validateGetAPIResponse(res)) {\n        if (isReturnResponseOnly) return res?.data;\n\n        setPageObj((prev: IPageObj) => ({\n          ...prev,\n          propertyPhotos: {\n            ...prev.propertyPhotos,\n            ...updatePropertyPhotos(res?.data),\n          },\n          isLoadingPropertyPhotos: false,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n      setPageObj((prev: IPageObj) => ({\n        ...prev,\n        isLoadingPropertyPhotos: false,\n      }));\n    }\n  };\n\n  const getUploadedTechnicalReport = async (isReturnResponseOnly?: boolean) => {\n    try {\n      const res = await TechnicalSevice.getUploadReport(pageObj.technicalUid);\n\n      if (validateGetAPIResponse(res)) {\n        if (isReturnResponseOnly) return res?.data;\n\n        setPageObj((prev: IPageObj) => ({\n          ...prev,\n          uploadedTechnicalReport: {\n            ...prev.uploadedTechnicalReport,\n            ...updateTechnicalUploadReport(res?.data),\n          },\n          isLoadingUploadedTechnicalReport: false,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n      setPageObj((prev: IPageObj) => ({\n        ...prev,\n        isLoadingUploadedTechnicalReport: false,\n      }));\n    }\n  };\n\n  /*-----------Dropdowns From Master Data-------------- */\n  const getVendorTypeOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=VENDOR_TYPE&\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"vendorType\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getPropertyDetailsQuestionsList = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=PROPERTY_DETAIL_QUESTIONS\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"questions\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getMarketabilityOptions = () => {\n    updateDropdownOptions(\"marketability\", [...YES_NO_OPTIONS]);\n  };\n\n  const getRiskOfDemolitionOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=RISK_OF_DEMOLITION&\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"riskOfDemolition\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getLandOfUseOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=TECHNICAL_LAND_USE&\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"landOfUse\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getConditionOfPropertyOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=CONDITION_OF_PROPERTY&\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"conditionOfProperty\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getDocumentsUnitsTypeOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=UNIT&\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"units\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getDocumentsHoldingTypeOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=HOLDING_TYPE&\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"holdingType\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getLocalityTypeOptions = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=CLASS_OF_LOCALITY&\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"classOfLocality\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getOccupancyStatus = () => {\n    StaticMasterDataService.getAll(0, 1000, \"staticMasterType.code=STATUS_OF_OCCUPANCY\")\n      .then((res) => {\n        if (validateGetAPIResponse(res)) {\n          updateDropdownOptions(\"occupancyStatus\", res?.data?.results);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const getTechnicalStatusOptions = () => {\n    updateDropdownOptions(\"status\", [...CURRENT_STAGE_STATUS]);\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onCloseInfo = () => {\n    setPageObj((prevPageObj) => ({ ...prevPageObj, showInfo: false }));\n  };\n\n  const onCancelGeneralDetails = async () => {\n    const data = await getTechnicalReportGeneralDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      generalDetails: {\n        ...prev.generalDetails,\n        ...updateGeneralDetailsPageObj(data),\n      },\n    }));\n  };\n\n  const onCancelDocumentDetails = async () => {\n    const data = await getAllTechnicalStageDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      documentDetails: {\n        ...prev.documentDetails,\n        ...updateDocumentDetailsPageObj(data),\n      },\n    }));\n  };\n\n  const onCancelLocalityDetails = async () => {\n    const data = await getAllTechnicalStageDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      localityDetails: {\n        ...prev.localityDetails,\n        ...updateLocalityDetailsPageObj(data),\n      },\n    }));\n  };\n\n  const onCancelPropertyDetails = async () => {\n    const data = await getTechnicalReportPropertyDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      propertyDetails: {\n        ...prev.propertyDetails,\n        ...updatePropertyDetailsPageObj(data),\n      },\n    }));\n  };\n\n  const onCancelValuationAndAmenities = async () => {\n    const data = await getValuationAndAmenitiesDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      propertyValuationAndAmenities: {\n        ...prev.propertyValuationAndAmenities,\n        ...updatePropertyValuationAndAmenities(data),\n      },\n    }));\n  };\n\n  const onCancelStageOfConstruction = async () => {\n    const data = await getTechnicalReportStageConstructionDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      stageOfConstruction: {\n        ...prev.stageOfConstruction,\n        ...updateStageOfConstructionPageObj(data),\n      },\n    }));\n  };\n\n  const onCancelGovtGuidelines = async () => {\n    const data = await getAllTechnicalStageDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      governmentGuideLine: {\n        ...prev.governmentGuideLine,\n        ...updateGovernmentGuideLinePageObj(data),\n      },\n    }));\n  };\n\n  const onCancelOccupancyDetails = async () => {\n    const data = await getAllTechnicalStageDetails(true);\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      occupancyDetails: {\n        ...prev.occupancyDetails,\n        ...updateOccupancyDetailsPageObj(data),\n      },\n    }));\n  };\n\n  const onCancelPropertyPhotos = async () => {\n    const data = await getUploadedPropertyPhotos(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      propertyPhotos: {\n        ...prev.propertyPhotos,\n        ...updatePropertyPhotos(data),\n      },\n    }));\n  };\n\n  const onCancelTechnicalStatus = async () => {\n    const data = await getAllTechnicalStageDetails(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      technicalStatus: {\n        ...prev.technicalStatus,\n        ...updateTechnicalStatusPageObj(data),\n      },\n    }));\n  };\n\n  const onCancelUploadTechnicalReport = async () => {\n    const data = await getUploadedTechnicalReport(true);\n\n    setPageObj((prev: IPageObj) => ({\n      ...prev,\n      uploadedTechnicalReport: {\n        ...prev.uploadedTechnicalReport,\n        ...updateTechnicalUploadReport(data),\n      },\n    }));\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const updateDropdownOptions = (key: keyof ITechnicalDropdownList, options: any[]) => {\n    setPageObj((prevState: any) => ({\n      ...prevState,\n      dropdownOptions: {\n        ...prevState?.dropdownOptions,\n        [key]: options ?? [],\n      },\n    }));\n  };\n\n  const getInitiationInfoDropdownOptions = () => {\n    return {\n      vendorType: pageObj.dropdownOptions?.vendorType,\n    };\n  };\n\n  const getDocumentDetailsDropdownOptions = () => {\n    return {\n      units: pageObj.dropdownOptions?.units,\n      holdingType: pageObj.dropdownOptions?.holdingType,\n    };\n  };\n\n  const getPropertyDetailsQuestions = () => {\n    return {\n      questions: pageObj.dropdownOptions?.questions,\n      marketability: pageObj.dropdownOptions?.marketability,\n      landOfUse: pageObj.dropdownOptions?.landOfUse,\n      riskOfDemolition: pageObj.dropdownOptions?.riskOfDemolition,\n      conditionOfProperty: pageObj.dropdownOptions?.conditionOfProperty,\n    };\n  };\n\n  const getLocalityDetailsDropdownOptions = () => {\n    return {\n      classOfLocality: pageObj.dropdownOptions?.classOfLocality,\n    };\n  };\n\n  const getOccupancyDetailsDropdownOptions = () => {\n    return {\n      occupancyStatus: pageObj.dropdownOptions?.occupancyStatus,\n    };\n  };\n\n  const getTechnicalStatusDropdownOptions = () => {\n    return {\n      status: pageObj.dropdownOptions?.status,\n    };\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Renders\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Renders\n    -------------------------------------------------------\n  */\n  return (\n    <div className=\"flex flex-col gap-4\">\n      {pageObj?.showInfo ? <Info description=\"description.rcu.info\" onClose={onCloseInfo} /> : null}\n\n      <InitiationInfo\n        isLoadingInitial={pageObj.isLoadingInitiationInfo}\n        data={pageObj.initiationInfo}\n        dropdownOptions={getInitiationInfoDropdownOptions()}\n      />\n\n      <AclGuard override={{ read: isReadMode }}>\n        <Section title={\"heading.technical.technicalReport\"}>\n          <>\n            <GeneralDetails\n              isLoading={pageObj.isLoadingGeneralDetails}\n              data={pageObj.generalDetails}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelGeneralDetails}\n            />\n            <DocumentDetails\n              isLoading={pageObj.isLoadingDocumentDetails}\n              data={pageObj?.documentDetails}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelDocumentDetails}\n              dropDownOptions={getDocumentDetailsDropdownOptions()}\n            />\n            <LocalityDetails\n              isLoading={pageObj.isLoadingLocalityDetails}\n              data={pageObj.localityDetails}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelLocalityDetails}\n              dropDownOptions={getLocalityDetailsDropdownOptions()}\n            />\n            <PropertyDetails\n              isLoading={pageObj.isLoadingPropertyValuationAndAmenities}\n              data={pageObj.propertyDetails}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelPropertyDetails}\n              dropDownOptions={getPropertyDetailsQuestions()}\n            />\n    \n              <PropertyValuationAndAmenities\n                isLoading={pageObj.isLoadingPropertyValuationAndAmenities}\n                data={pageObj.propertyValuationAndAmenities}\n                payloadInfo={payloadInfo}\n                getDataOnCancel={onCancelValuationAndAmenities}\n              />\n         \n            <StageOfConstruction\n              isLoading={pageObj.isLoadingStageOfConstruction}\n              data={pageObj.stageOfConstruction}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelStageOfConstruction}\n            />{\" \"}\n            <GovernmentGuideLines\n              isLoading={pageObj.isLoadingGovernmentGuideLines}\n              data={pageObj.governmentGuideLine}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelGovtGuidelines}\n            />{\" \"}\n            <OccupancyDetails\n              isLoading={pageObj.isLoadingOccupancyDetails}\n              data={pageObj.occupancyDetails}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelOccupancyDetails}\n              dropDownOptions={getOccupancyDetailsDropdownOptions()}\n            />\n          </>\n        </Section>\n\n        <Section title={\"heading.technical.property.photos\"}>\n          <>\n            <PropertyPhotos\n              isLoading={pageObj.isLoadingPropertyPhotos}\n              data={pageObj.propertyPhotos}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelPropertyPhotos}\n            />\n\n            <TechnicalStatus\n              isLoading={pageObj.isLoadingTechnicalStatus}\n              data={pageObj.technicalStatus}\n              dropdownOptions={getTechnicalStatusDropdownOptions()}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelTechnicalStatus}\n            />\n\n            <UploadTechnicalReport\n              isLoading={pageObj.isLoadingUploadedTechnicalReport}\n              data={pageObj.uploadedTechnicalReport}\n              payloadInfo={payloadInfo}\n              getDataOnCancel={onCancelUploadTechnicalReport}\n            />\n          </>\n        </Section>\n      </AclGuard>\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default PageReport;\n"],"names":["updateTechnicalInitiationInfoPageObj","data","addressData","ADDRESS_TYPES","ccEmail","_a","_b","_d","_c","_f","_e","_h","_g","_i","_j","_k","_l","_m","_o","_n","_p","_r","_q","document","updateGeneralDetailsPageObj","_s","_t","_u","_v","updateDocumentDetailsPageObj","updateLocalityDetailsPageObj","updatePropertyDetailsPageObj","updatePropertyValuationAndAmenities","fairMarketValue","numberFormatter","totalPropertyValueOnCompletion","forcedSaleValue","updateStageOfConstructionPageObj","updateGovernmentGuideLinePageObj","circleRateOfLand","circleRateOfBuilding","landValue","totalValuationOfProperty","flatOrAptValue","updateOccupancyDetailsPageObj","updatePropertyPhotos","prepareDocumentSectionStructure","sections","preparedStructure","docSection","documents","doc","updateTechnicalStatusPageObj","updateTechnicalUploadReport","initialTechnicalDocumentDetailsPageObj","IS_TRUE","DocumentDetails","props","isLoading","getDataOnCancel","payloadInfo","dropDownOptions","pageObj","setPageObj","useState","pageMode","setPageMode","PAGE_MODE","toastMessage","setToastMessage","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","useRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","handleChange","e","prevObj","validate","validateForm","isValid","onSave","payload","enrichForSaveDocumentDetails","res","TechnicalSevice","validatePutAPIResponse","STATIC_MASTER_TYPE_TOAST_TEXT","error","parseStandardAPIErrorMessage","onEdit","onCancel","resetValidator","approvingAuthority","approvalNo","areaOfProperty","constructionAsPerPlanned","holdingType","layoutPlanProvided","planProvided","units","jsx","SaveComponent","SkeletonCustom","AclGuard","jsxs","Text","RadioButton","CHECKBOX_STYLE_TYPE","InputError","InputBox","INPUT_STYLE_TYPE","SimpleDropDown","ToastCustom","TOAST_STYLE_TYPE","ErrorDialog","initialTechnicalGeneralDetailsPageObj","GeneralDetails","addressRef","enrichForSaveGeneralDetails","useMemo","address","city","state","latitude","longitude","pincode","propertyType","dateOfVisit","typeOfCase","customerName","ownershipName","SystemDatePicker","Address","VARIANTS","initialGovernmentRateData","GovernmentGuideLines","handleAmountInputChange","unformattedValue","currencyFormatToNumber","prevState","enrichForGovtGuidelines","renderContent","remarks","React","InputTextArea","initialTechnicalInitiationInfoPageObj","InitiationInfo","isLoadingInitial","dropdownOptions","showMediaGallery","setShowMediaGallery","currentItemToViewInGallery","setCurrentItemToViewInGallery","initialMediaGallerySectionInfo","chipRef","selectedDocsTableRef","textConverter","useTextConverter","onViewFile","rowData","preparedInfoInList","renderDocCategory","renderDocType","renderDocSection","renderAction","IconButton","BUTTON_TYPES","renderSelectedExistingDocs","ReadOnlyTable","Column","dateOfInitiation","vendorType","internalAssignee","externalVendor","CCEmails","description","addressType","Section","AutoComplete","VENDOR_TYPE_OPTIONS","ChipsBox","MediaGallery","initialTechnicalLocalityDetailsPageObj","LocalityDetails","enrichForSaveLocalityDetails","classOfLocality","developmentInVicinity","distanceFromCity","nearbyBusStop","initialOccupancyData","OccupancyDetails","enrichForSaveOccupancyDetails","stateOfOccupancy","occupiedBy","occupiedSince","personAtSite","BOUNDARY_DIRECTIONS","initialTechnicalPropertyDetailsPageObj","PropertyDetails","forwardRef","ref","questionTableRef","boundariesDetailsTableRef","useImperativeHandle","questions","currentPageObj","tableData","option","handleRadioButtonChange","questionIndex","question","prevPageObj","handleBoundariesDetails","name","boundaryIndex","boundary","enrichForSavePropertyDetails","structBoundariesTableDataForPayload","boundaryData","YES_NO","renderQuestion","renderYesOrNo","renderDirection","renderAsPerDoc","renderActualOnSite","renderQuestionTable","renderBoundariesTable","TextData","_w","_x","initialPropertyPhotosData","PropertyPhotos","id","setId","propertyPhotosUploaderRef","unSavedDocuments","enrichForSavePropertyPhotos","unSavedDocument","prepareDocSectionsForPayload","documentSections","DocumentUploader","DOC_UPLOADER_MODE","DOCUMENT_CATEGORY","PropertyPhotos$1","initialPropertyValuationTableRowData","initialAmenitiesTableRowData","initialPropertyValuationAndAmenitiesData","PropertyValuationAndAmenities","areaTypeOptions","setAreaTypeOptions","constructionTypeOptions","setConstructionTypeOptions","position","setPosition","toastMessageVariant","setToastMessageVariant","propertyValuationTableRef","amenitiesTableRef","forceUpdateAmenitiesRow","simpleValidatorAmenities","init","onTableSearch","getAreaTypeOptions","StaticMasterDataService","DROPDOWN_LIST_CODE","validateGetAPIResponse","getConstructionTypeOptions","validateAmenities","validateFormAmenities","resetValidatorAmenitiesTable","handlePropertyAreaTypeChange","rowDataObj","handleConstructionTypeChange","structurePayloadData","enrichPropertyValuationAndAmenities","onAddPropertyValuation","onDeletePropertyTableRow","onAddAmenites","onDeleteAmenitiesTableRow","getValue","val","enableValidationForRow","totalValuation","fieldValidation","preparePropertyValuations","propertyValuation","preparePropertyAmenities","amenity","renderPropertyAreaType","renderConstructionType","renderAsPerPlan","renderAsPerSite","renderDeviation","renderPropertyRate","renderPropertyCompleted","renderPropertyRecommended","renderPropertyValuation","amt","renderPropertyValuationActions","renderAmenitiesType","renderAmenitiesRate","renderAmenitiesCompleted","renderAmenitiesRecommended","renderAmenitiesValuation","renderAmenitiesActions","renderPropertyValuationTable","ButtonBox","BUTTON_TYPE","EditableTableV2","renderAmenitiesTable","Fragment","initialStageOfConstructionData","StageOfConstruction","enrichForSaveStageOfConstruction","initialTechnicalStatusData","TechnicalStatus","className","editorValidation","setEditorValidation","remarkEditorRef","validateEditor","editorRef","validationRule","wordcount","handleCheckBoxChange","handleRemarksEditorValidation","formValidation","enrichForSaveTechnicalStatus","renderDeclarationContent","status","declaration","RichTextEditor","CheckBox","initialTechnicalUploadReportData","UploadTecnicalReport","technicalReportUploaderRef","enrichForTechnicalUploadReport","UploadTechnicalReport","initialPageOj","PageReport","params","useParams","isReadMode","setIsReadMode","userProfile","useSelector","isPartnerUser","SAHAYYA_USER_TYPE","getAllTechnicalStageDetails","getTechnicalReportGeneralDetails","getTechnicalReportPropertyDetails","getValuationAndAmenitiesDetails","getTechnicalReportStageConstructionDetails","getUploadedPropertyPhotos","getUploadedTechnicalReport","LOAN_STAGE_STATUS","getVendorTypeOptions","getPropertyDetailsQuestionsList","getConditionOfPropertyOptions","getLandOfUseOptions","getMarketabilityOptions","getRiskOfDemolitionOptions","getDocumentsUnitsTypeOptions","getDocumentsHoldingTypeOptions","getLocalityTypeOptions","getOccupancyStatus","getTechnicalStatusOptions","isReturnResponseOnly","StageService","stagePropertyAddress","updateDropdownOptions","err","YES_NO_OPTIONS","CURRENT_STAGE_STATUS","onCloseInfo","onCancelGeneralDetails","onCancelDocumentDetails","onCancelLocalityDetails","onCancelPropertyDetails","onCancelValuationAndAmenities","onCancelStageOfConstruction","onCancelGovtGuidelines","onCancelOccupancyDetails","onCancelPropertyPhotos","onCancelTechnicalStatus","onCancelUploadTechnicalReport","key","options","getInitiationInfoDropdownOptions","getDocumentDetailsDropdownOptions","getPropertyDetailsQuestions","getLocalityDetailsDropdownOptions","getOccupancyDetailsDropdownOptions","getTechnicalStatusDropdownOptions","Info"],"mappings":"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"}