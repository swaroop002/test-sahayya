{"version":3,"file":"PageStages-01b07634.js","sources":["../../src/views/transaction/PageDDE/StageAndStatus/PageStages/PageStages.tsx"],"sourcesContent":["import AutoComplete from \"components/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport DialogBox from \"components/Dialog\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport IconButton, { BUTTON_TYPES } from \"components/IconButton/IconButton\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport MenuBox from \"components/MenuBox\";\nimport ReadOnlyTable from \"components/ReadOnlyTable\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast\";\nimport WarningDialog from \"components/WarningDialog/WarningDialog\";\nimport ChipsBox from \"components/base/BaseChips/BaseChips\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { useTextConverter } from \"hook/CustomHooks\";\nimport { Column } from \"primereact/column\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { linkAuthRoute, linkBasePath } from \"routes\";\nimport ProfileService from \"services/ProfileService\";\nimport StageService from \"services/transaction/DDE/StageService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  formatDate,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  validateGetAPIResponse,\n  validatePutAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  INPUT_STYLE_TYPE,\n  LOAN_STATUS_ITEM,\n  SORT_DIRECTION,\n  STAGE_OPTIONS,\n  STAGE_STATUS,\n  STAGE_TYPE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport {\n  LINK_CAM,\n  LINK_DDE_CREDIT_QUERY,\n  LINK_DDE_LOGIN,\n  LINK_DDE_QC,\n  LINK_DDE_STAGES_INITIATE,\n  LINK_DDE_STAGE_AND_STATUS,\n  LINK_DEDUPE,\n  LINK_FEES_SCREEN,\n  LINK_FINAL_APPROVAL,\n  LINK_FINANCIAL_APPROVAL,\n  LINK_IN_PRINCIPLE_APPROVAL,\n  LINK_LEGAL,\n  LINK_LOAN_DETAIL,\n  LINK_PD,\n  LINK_RCU,\n  LINK_RE_APPEAL,\n  LINK_TECHNICAL,\n} from \"../../../../../transactionRoutes\";\n\n// --------------------------------- page interface ---------------------------------------------- //\n\ninterface IAssignee {\n  uid: string;\n  name: string;\n  email: string;\n  reason: string;\n  userType: string;\n  description: string;\n  isActive: boolean;\n}\n\ninterface IStageAction {\n  rowUid: string;\n  stageUid: string;\n  assignee: IAssignee;\n  stageName: string;\n  smStageType: string;\n  loanStatus: string; //loan status\n  status: string; //stage status\n  stageCompletionDate: string;\n  delegate: IAutoComplete;\n  remarks: string;\n  ccEmail: string[];\n  stageActionName: string;\n  isActive: boolean;\n}\n\ninterface IAutoComplete {\n  name: string;\n  uid: string;\n  code?: string;\n}\n\nconst actionNameOnStage = {\n  DELEGATE: \"Delegate\",\n  STOP_DELEGATE: \"Stop Delegation\",\n  RE_OPEN: \"Re-Open\",\n  RE_OPEN_EDIT: \"Re-Open And Edit\",\n  CANCELLED: \"Cancelled\",\n};\n\n// ----------------------------------------- Functional component ------------------------------------- //\nconst PageStages = (props: RouteProps) => {\n  const params = useParams();\n  const loanId = params.loanUid ?? \"\";\n\n  // ----------------- states ---------------------- //\n  // main page functionality states\n\n  const [showStageActionDialog, setShowStageActionDialog] = useState<boolean>(false);\n  const [stageActionInfo, setStageActionInfo] = useState<IStageAction>({\n    rowUid: \"\",\n    stageUid: \"\",\n    assignee: {\n      uid: \"\",\n      name: \"\",\n      email: \"\",\n      reason: \"\",\n      userType: \"\",\n      description: \"\",\n      isActive: true,\n    },\n    stageName: \"\",\n    smStageType: \"\",\n    loanStatus: \"\",\n    status: \"\",\n    stageCompletionDate: \"\",\n    delegate: {\n      name: \"\",\n      uid: \"\",\n      code: \"\",\n    },\n    remarks: \"\",\n    ccEmail: [],\n    stageActionName: \"\",\n    isActive: true,\n  });\n\n  const [dataTable, setDataTable] = useState({\n    limit: 10,\n    loading: false,\n    totalRecords: 0,\n    start: 0,\n    search: `&loan.uid=${loanId}&isActive=true`,\n    runCustomQuery: false,\n    records: [],\n  });\n  const [initiatedOnSortDirection, setInitiatedOnSortDirection] = useState<null | string>(null);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<IAutoComplete[]>([]);\n  const [isDelegateLoading, setIsDelegateLoading] = useState<boolean>(false);\n  const [isCancelledStagePopupVisible, setIsCancelledStagePopupVisible] = useState<boolean>(false);\n  const [isStopDelegatePopUpVisible, setIsStopDelegatePopUpVisible] = useState<boolean>(false);\n  const userProfile = useSelector((state: any) => state.UserProfileReducers.profileObj);\n\n  // --------------------- custom hooks ---------------------------- //\n  const textConverter = useTextConverter();\n\n  // --------------------------- validator initialization ---------------------- //\n  const [, forceUpdate] = useState<boolean>(false); //NOSONAR\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // error handling states\n  const [chipsErrorMessage, setChipsErrorMessage] = useState<string>(\"\"); //NOSONAR\n  const [chipsHasError, setChipsHasError] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n\n  // --------------------- ref ---------------------------- //\n  const dataTableRef = useRef<any>(null);\n  const actionMenuRef = useRef<any>(null);\n  const chipRef = useRef<any>(null);\n  const toastMessageRef = useRef(null);\n\n  // --------------------------- global variables ---------------------- //\n  const actionMenuModel: any[] = [\n    {\n      items: [],\n    },\n  ];\n\n  /*\n    --------------------------------------------------------------------------------------------------\n    LifeCycle Methods: \n    --------------------------------------------------------------------------------------------------\n  */\n\n  useEffect(() => {\n    dataTableRef?.current?.search();\n  }, [dataTable?.search]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (\n      stageActionInfo.stageActionName === actionNameOnStage.DELEGATE ||\n      stageActionInfo.stageActionName === actionNameOnStage.RE_OPEN\n    ) {\n      setShowStageActionDialog(true);\n    } else if (stageActionInfo.stageActionName === actionNameOnStage.CANCELLED) {\n      setIsCancelledStagePopupVisible(true);\n    } else if (stageActionInfo.stageActionName === actionNameOnStage.STOP_DELEGATE) {\n      setIsStopDelegatePopUpVisible(true);\n    } else if (stageActionInfo.stageActionName === actionNameOnStage.RE_OPEN_EDIT) {\n      onSubmitStageAction();\n    }\n  }, [stageActionInfo]);\n\n  /*\n\n  \n    -------------------------------------------------------------------------------------------------------\n    Service Calls: For Getting Data from service/API\n    -------------------------------------------------------------------------------------------------------\n  */\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    Handlers: Event handler for onChange, onBlur etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const handleChange = (e: React.BaseSyntheticEvent) => {\n    setStageActionInfo((prev: IStageAction) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleCCChange = (e: any) => {\n    setStageActionInfo((prev: IStageAction) => ({\n      ...prev,\n      ccEmail: e.value,\n    }));\n\n    setChipsErrorMessage(\"\");\n    setChipsHasError(false);\n  };\n\n  const handleDelegateChange = (event: any) => {\n    const { name, value } = event.target;\n    if (typeof value === \"object\") {\n      setStageActionInfo((prev: IStageAction) => ({\n        ...prev,\n        [name]: value,\n      }));\n    } else {\n      setStageActionInfo((prev: IStageAction) => ({\n        ...prev,\n        [name]: { name: value },\n      }));\n    }\n  };\n\n  /*\n    -----------------------------------------------------------------------------------------------\n    on-Handlers: Event handler for onClick, onToggle etc\n    -----------------------------------------------------------------------------------------------\n  */\n\n  const onInitiateNewStage = () => {\n    const URL =\n      LINK_LOAN_DETAIL + LINK_DDE_STAGE_AND_STATUS + \"/\" + loanId + LINK_DDE_STAGES_INITIATE;\n\n    props?.navigate(URL);\n  };\n\n  const onAction = (event: any, rowData: any) => {\n    // dynamic menu options array\n    const dynamicActionMenuOptions: any[] = [];\n\n    if (\n      rowData?.stage?.delegate?.name &&\n      rowData?.stage?.status !== STAGE_STATUS.COMPLETED.name &&\n      rowData?.stage?.status === STAGE_STATUS.APPROVED.name\n    ) {\n      dynamicActionMenuOptions.push(\n        // --------------------Stop Delegation ------------------------  //\n        {\n          label: actionNameOnStage.STOP_DELEGATE,\n          //icon: //JSX element,\n          className:\n            \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n          command: () => {\n            prepareStageActionInfo(rowData, actionNameOnStage.STOP_DELEGATE);\n          },\n        }\n      );\n    } else if (\n      rowData?.stage?.status !== STAGE_STATUS.CANCELED.name &&\n      rowData?.stage?.status !== STAGE_STATUS.REJECTED.name &&\n      rowData?.stage?.status !== STAGE_STATUS.COMPLETED.name\n    ) {\n      dynamicActionMenuOptions.push(\n        // -------------------- Delegate ------------------------  //\n        {\n          label: `${actionNameOnStage.DELEGATE} Stage`,\n          //icon: //JSX element,\n          className:\n            \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n          command: () => {\n            prepareStageActionInfo(rowData, actionNameOnStage.DELEGATE);\n          },\n        }\n      );\n    }\n\n    if (\n      rowData?.stage?.status === STAGE_STATUS.COMPLETED.name ||\n      rowData?.stage?.status === STAGE_STATUS.CANCELED.name ||\n      rowData?.stage?.status === STAGE_STATUS.APPROVED.name ||\n      rowData?.stage?.status === STAGE_STATUS.REJECTED.name\n    ) {\n      dynamicActionMenuOptions.push(\n        // -------------------- Re-Open ------------------------  //\n        {\n          label: actionNameOnStage.RE_OPEN,\n          //icon: //JSX element,\n          className:\n            \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n          command: () => {\n            prepareStageActionInfo(rowData, actionNameOnStage.RE_OPEN);\n          },\n        },\n\n        // -------------------- Re-Open and Edit ------------------------  //\n        {\n          label: actionNameOnStage.RE_OPEN_EDIT,\n          //icon: //JSX element,\n          className:\n            \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n          command: () => {\n            prepareStageActionInfo(rowData, actionNameOnStage.RE_OPEN_EDIT);\n          },\n        }\n      );\n    }\n\n    if (rowData?.stage?.status !== STAGE_STATUS.CANCELED.name) {\n      if (\n        rowData?.stage?.status !== STAGE_STATUS.COMPLETED.name &&\n        rowData?.stage?.status !== STAGE_STATUS.APPROVED.name &&\n        rowData?.stage?.status !== STAGE_STATUS.REJECTED.name\n      )\n        dynamicActionMenuOptions.push(\n          // --------------------Cancel Stage------------------------  //\n          {\n            label: `Cancel Stage`,\n            //icon: //JSX element,\n            className:\n              \"px-1.5 text-xs text-primary-labelColor h-6.5 hover:bg-primary-sapphireBlue-100\",\n            command: () => {\n              prepareStageActionInfo(rowData, actionNameOnStage.CANCELLED);\n            },\n          }\n        );\n    }\n\n    // common menu options\n    const menu: any[] = [...dynamicActionMenuOptions];\n\n    actionMenuModel[0].items = [...menu];\n    actionMenuRef?.current?.show(event);\n  };\n\n  const onCancelStageAction = () => {\n    setShowStageActionDialog(false);\n    resetValidator();\n  };\n\n  const submitAction = async () => {\n    const payload = enrichStageAction(stageActionInfo, stageActionInfo.stageActionName);\n    try {\n      const res = await StageService.updateStage(payload);\n      if (validatePutAPIResponse(res)) {\n        setShowStageActionDialog(false);\n        setIsCancelledStagePopupVisible(false);\n        setIsStopDelegatePopUpVisible(false);\n        dataTableRef?.current?.search();\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n        resetValidator();\n        // provide the respective landing stage screen nav link here if action was re-open and edit\n\n        if (stageActionInfo.stageActionName === actionNameOnStage.RE_OPEN_EDIT) {\n          let moduleURL = \"\";\n\n          if (stageURLConfig[stageActionInfo?.stageName]) {\n            moduleURL = stageURLConfig[stageActionInfo?.stageName](\n              loanId,\n              stageActionInfo?.stageUid\n            );\n          }\n\n          const URL: string = linkBasePath + linkAuthRoute + LINK_LOAN_DETAIL + moduleURL;\n          window.location.href = URL;\n\n          return;\n        }\n        window.location.reload();\n      }\n    } catch (error) {\n      setErrorMessage(parseStandardAPIErrorMessage(error));\n      setShowStageActionDialog(false);\n      setIsCancelledStagePopupVisible(false);\n      setIsStopDelegatePopUpVisible(false);\n      resetValidator();\n    }\n  };\n\n  const onSubmitStageAction = async () => {\n    //don't validate if stage is going to be re-open and edit or cancelled\n    if (\n      stageActionInfo.stageActionName === actionNameOnStage.RE_OPEN_EDIT ||\n      stageActionInfo.stageActionName === actionNameOnStage.CANCELLED\n    ) {\n      return submitAction();\n    } else {\n      if (!validateForm() || chipsHasError) return;\n      return submitAction();\n    }\n  };\n\n  const onSortInitiatedOn = () => {\n    let search = `&loan.uid=${loanId}&isActive=true`;\n    if (initiatedOnSortDirection === null || initiatedOnSortDirection === SORT_DIRECTION.DESC) {\n      search = search + `&sort={\"stage.createdAt\":\"ASC\"}`;\n      setInitiatedOnSortDirection(SORT_DIRECTION.ASC);\n    } else {\n      search = search + `&sort={\"stage.createdAt\":\"DESC\"}`;\n      setInitiatedOnSortDirection(SORT_DIRECTION.DESC);\n    }\n\n    setDataTable((prevState: any) => {\n      return { ...prevState, search };\n    });\n  };\n\n  /* \n    ---------------------------------------------------------------------------------------------------\n    Validators:\n    ---------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid();\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const resetValidator = () => {\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n\n  /* \n    -------------------------------------------------------------------------------------------------\n    Helper Functions:\n    -------------------------------------------------------------------------------------------------\n  */\n  const stageURLConfig: Record<string, (loanId: string, stageUid?: string) => string> = {\n    [STAGE_TYPE.FEES_AND_RECEIPT]: (loanId, stageUid) => `${LINK_FEES_SCREEN}/${loanId}`,\n    [STAGE_TYPE.CREDIT_AND_QUERY]: (loanId, stageUid) => `${LINK_DDE_CREDIT_QUERY}/${loanId}`,\n    [STAGE_TYPE.QC]: (loanId, stageUid) => `${LINK_DDE_QC}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.LOGIN]: (loanId, stageUid) => `${LINK_DDE_LOGIN}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.PD]: (loanId, stageUid) => `${LINK_PD}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.LEGAL_REPORT]: (loanId, stageUid) => `${LINK_LEGAL}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.RCU_REPORT]: (loanId, stageUid) => `${LINK_RCU}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.TECHNICAL_REPORT]: (loanId, stageUid) => `${LINK_TECHNICAL}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.IN_PRINCIPAL_APPROVAL]: (loanId, stageUid) =>\n      `${LINK_IN_PRINCIPLE_APPROVAL}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.FINANCIAL_APPROVAL]: (loanId, stageUid) =>\n      `${LINK_FINANCIAL_APPROVAL}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.FINAL_APPROVAL]: (loanId, stageUid) =>\n      `${LINK_FINAL_APPROVAL}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.CAM_AND_RECOMMENDATION]: (loanId, stageUid) => `${LINK_CAM}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.DEDUPE]: (loanId, stageUid) => `${LINK_DEDUPE}/${loanId}/${stageUid}`,\n    [STAGE_TYPE.REAPPEAL]: (loanId, stageUid) => `${LINK_RE_APPEAL}/${loanId}/${stageUid}`,\n    // Add other mappings as needed\n  };\n\n  const selectSubmitBtnVariant = () => {\n    switch (stageActionInfo.stageActionName) {\n      case actionNameOnStage.DELEGATE:\n        return `DELEGATE`;\n      case actionNameOnStage.RE_OPEN:\n        return `RE_OPEN`;\n    }\n  };\n\n  const prepareStageActionInfo = (rowData: any, actionName: string) => {\n    const stageActionObj: IStageAction = {\n      rowUid: rowData.uid,\n      stageUid: rowData.stage?.uid,\n      assignee: {\n        uid: rowData.stage?.assignee?.uid ?? \"\",\n        name: rowData.stage?.assignee?.name ?? \"\",\n        email: rowData.stage?.assignee?.email ?? \"\",\n        reason: rowData.stage?.assignee?.reason ?? \"\",\n        userType: rowData.stage?.assignee?.userType ?? \"\",\n        description: rowData.stage?.assignee?.description ?? \"\",\n        isActive: true,\n      },\n      stageName: rowData.stage?.stageName ?? \"\",\n      smStageType: rowData.stage?.smStageType ?? \"\",\n      loanStatus: rowData.loan.loanStatus ?? \"\",\n      status: rowData.stage?.status ?? \"\",\n      stageCompletionDate: rowData.stage?.stageCompletionDate ?? \"\",\n      delegate: rowData.stage?.delegate ?? {\n        name: \"\",\n        uid: \"\",\n        parent: {\n          name: \"\",\n          uid: \"\",\n        },\n        code: \"\",\n      },\n      remarks: rowData.remarks ?? \"\",\n      ccEmail: rowData.ccEmail ? JSON.parse(rowData.ccEmail) ?? [] : [],\n      stageActionName: actionName,\n      isActive: true,\n    };\n    setStageActionInfo({ ...stageActionObj });\n  };\n\n  const searchAutoCompleteDelegate = async (event: any) => {\n    let suggestionsTemplate = [];\n    setIsDelegateLoading(true);\n\n    const searchObj = {\n      loanId: loanId,\n      stageName: stageActionInfo.stageName,\n      name: event.query,\n    };\n\n    try {\n      await ProfileService.findDelegateByName(searchObj).then((res) => {\n        if (validateGetAPIResponse(res)) {\n          suggestionsTemplate = [...res.data];\n          setIsDelegateLoading(false);\n        }\n      });\n    } catch (error) {\n      setIsDelegateLoading(false);\n    }\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ name: \"\", uid: \"\" });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const enrichStageAction = (stageActionInfo: IStageAction, requiredPayload: string) => {\n    if (requiredPayload === actionNameOnStage.DELEGATE) {\n      const payloadDelegate = {\n        uid: stageActionInfo.stageUid, //stage uid\n        delegate: stageActionInfo.delegate.uid\n          ? {\n              uid: stageActionInfo.delegate.uid,\n            }\n          : {},\n        remarks: stageActionInfo.remarks, // send text in description box\n        stageInitiationDetail: {\n          uid: stageActionInfo.rowUid,\n          ccEmail: stageActionInfo.ccEmail.length ? JSON.stringify(stageActionInfo.ccEmail) : \"\",\n        },\n      };\n      return payloadDelegate;\n    } else if (requiredPayload === actionNameOnStage.STOP_DELEGATE) {\n      const payloadStopDelegate = {\n        uid: stageActionInfo.stageUid, //stage uid\n        delegate: null,\n      };\n      return payloadStopDelegate;\n    } else if (requiredPayload === actionNameOnStage.RE_OPEN) {\n      const payloadReOpen = {\n        uid: stageActionInfo.stageUid, //stage uid\n        delegate: stageActionInfo.delegate.uid\n          ? {\n              uid: stageActionInfo.delegate.uid,\n            }\n          : null,\n        remarks: stageActionInfo.remarks, // send text in description box\n        status: STAGE_STATUS.RE_OPEN.name, // send re-open code\n        stageInitiationDetail: {\n          uid: stageActionInfo.rowUid,\n          ccEmail: stageActionInfo.ccEmail.length ? JSON.stringify(stageActionInfo.ccEmail) : \"\",\n        },\n      };\n      return payloadReOpen;\n    } else if (requiredPayload === actionNameOnStage.RE_OPEN_EDIT) {\n      const currentLoginUserUid = userProfile?.uid ?? \"\";\n      const assigneeUid = stageActionInfo?.assignee?.uid ?? \"\";\n      const payloadReopenAndEdit = {\n        uid: stageActionInfo.stageUid, //stage uid\n        delegate: currentLoginUserUid === assigneeUid ? null : { uid: currentLoginUserUid },\n        remarks: \"\", // send it as empty\n        status: STAGE_STATUS.RE_OPEN.name, // send re-open code\n        stageInitiationDetail: {\n          uid: stageActionInfo.rowUid,\n          ccEmail: \"\",\n        },\n      };\n      return payloadReopenAndEdit;\n    } else if (requiredPayload === actionNameOnStage.CANCELLED) {\n      const payloadCancelled = {\n        uid: stageActionInfo.stageUid, //stage uid\n        delegate: null,\n        remarks: \"\",\n        status: STAGE_STATUS.CANCELED.name,\n        stageInitiationDetail: {\n          uid: stageActionInfo.rowUid,\n          ccEmail: \"\",\n        },\n      };\n      return payloadCancelled;\n    }\n  };\n\n  /* \n    ------------------------------------------------------------------------------------------------\n    Sectional Render Functions: For Sub components / section wise renders\n    ------------------------------------------------------------------------------------------------\n  */\n\n  const itemDelegateTemplate = (item: any) => {\n    return itemTemplate(item, `${item?.name}`);\n  };\n\n  const itemTemplate = (item: any, title: any, subTitle?: any) => {\n    if (item?.name === undefined || item?.name.length < 1) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39 pointer-events-none cursor-default\">\n          <Text className=\"text-primary-labelColor mt-2\" label=\"label.noDataFound\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={title} />\n        {subTitle ? <Text className=\"text-secondary-gray-500 text-xxs\" label={subTitle} /> : null}\n      </div>\n    );\n  };\n\n  const renderStage = (rowData: any) => {\n    return (\n      <div className=\"flex items-center w-max\">\n        {STAGE_OPTIONS[rowData?.stage?.stageName as keyof typeof STAGE_OPTIONS]?.label ?? \"-\"}\n      </div>\n    );\n  };\n\n  const renderCurrentStatus = (rowData: any) => {\n    return <div className=\"flex items-center w-max\">{rowData?.stage?.status ?? \"-\"}</div>;\n  };\n\n  const renderInitiatedBy = (rowData: any) => {\n    return (\n      <div className=\"flex items-center justify-start w-max\">\n        {rowData?.stage?.createdByUserName ?? \"-\"}\n      </div>\n    );\n  };\n\n  const renderAssignedTo = (rowData: any) => {\n    return <div className=\"flex items-center w-max\">{rowData?.stage?.assignee?.name ?? \"-\"}</div>;\n  };\n\n  const renderDelegatedTo = (rowData: any) => {\n    return <div className=\"flex items-center w-max\">{rowData?.stage?.delegate?.name ?? \"-\"}</div>;\n  };\n\n  const renderExternalVendor = (rowData: any) => {\n    return <div className=\"flex items-center w-max\">{rowData?.stage?.partner?.name ?? \"-\"}</div>;\n  };\n\n  const renderCompletedBy = (rowData: any) => {\n    return (\n      <div className=\"flex items-center w-max\">\n        {rowData?.stage?.status === STAGE_STATUS.COMPLETED.name\n          ? rowData?.stage?.updatedByUserName ?? \"-\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderInitiatedOnHeader = () => {\n    return (\n      <div className=\"flex justify-start items-center gap-2\">\n        <Text label={\"label.stages.initiated.on\"} className=\"\" />\n        <IconButton\n          buttonType={\n            initiatedOnSortDirection === SORT_DIRECTION.ASC\n              ? BUTTON_TYPES.SORT_DESC\n              : initiatedOnSortDirection === SORT_DIRECTION.DESC\n              ? BUTTON_TYPES.SORT_ASC\n              : BUTTON_TYPES.SORT\n          }\n          onClick={onSortInitiatedOn}\n        />\n      </div>\n    );\n  };\n\n  const renderInitiatedOn = (rowData: any) => {\n    return (\n      <div className=\"flex items-center w-max\">\n        {formatDate(rowData?.stage?.createdAtSystemDate) ?? \"-\"}\n      </div>\n    );\n  };\n\n  const renderCompletedOn = (rowData: any) => {\n    return (\n      <div className=\"flex items-center w-max\">\n        {rowData?.stage?.status === STAGE_STATUS.COMPLETED.name\n          ? formatDate(rowData?.stage?.stageCompletionDate) ?? \"-\"\n          : \"-\"}\n      </div>\n    );\n  };\n\n  const renderActions = (rowData: any) => {\n    return (\n      <div>\n        <ButtonBox\n          buttonType={BUTTON_TYPE.MENU}\n          onClick={(event: any) => onAction(event, rowData)}\n          disabled={rowData.loan?.loanStatus === LOAN_STATUS_ITEM.REJECTED}\n        />\n      </div>\n    );\n  };\n\n  const renderTable = () => {\n    return (\n      <ReadOnlyTable\n        standardDataFormatPromise={StageService.getStages}\n        dataKey=\"id\"\n        search={dataTable.search}\n        ref={dataTableRef}\n      >\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.stage\")}\n          body={renderStage}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.current.status\")}\n          body={renderCurrentStatus}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.initiated.by\")}\n          body={renderInitiatedBy}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.assigned.to\")}\n          body={renderAssignedTo}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.delegated.to\")}\n          body={renderDelegatedTo}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.external.vendor\")}\n          body={renderExternalVendor}\n        />\n\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.completed.by\")}\n          body={renderCompletedBy}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n          header={renderInitiatedOnHeader()}\n          body={renderInitiatedOn}\n        />\n        <Column\n          className=\"text-primary-ptext-1000 text-left text-xs p-1 h-12 pl-6\"\n          header={textConverter(\"label.stages.completed.on\")}\n          body={renderCompletedOn}\n        />\n        <Column\n          frozen\n          className=\"text-primary-ptext-1000 text-center text-xs p-1 h-12 px-6\"\n          header={textConverter(\"label.stages.actions\")}\n          body={renderActions}\n        />\n      </ReadOnlyTable>\n    );\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------\n    render: The Main return()\n    -----------------------------------------------------------------------------------------\n  */\n\n  return (\n    <React.Fragment>\n      <div className=\"p-3 rounded-masterDataPageRadius bg-white flex flex-col gap-3 overflow-auto\">\n        <div className=\"flex w-full justify-between items-center\">\n          <Text\n            label={\"heading.transaction.stages\"}\n            className=\"text-xl font-bold text-primary-ptext-1000\"\n          />\n\n          <div className=\"\">\n            <ButtonBox\n              buttonType={BUTTON_TYPE.ICON_TEXT_ROW}\n              customLabel={\"Initiate New Stage\"}\n              onClick={onInitiateNewStage}\n            />\n          </div>\n        </div>\n\n        {renderTable()}\n      </div>\n\n      <DialogBox className=\"!w-137 !p-0\" visible={showStageActionDialog} closable={false}>\n        <div className=\"py-3 px-6 flex flex-col gap-0\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"font-bold text-base text-primary-primaryTextColor\">\n              <Text className=\"\" label={stageActionInfo.stageActionName} />\n            </div>\n\n            <div className=\"flex items-center gap-5 text-xs text-primary-ptext-1000\">\n              <div>\n                <ButtonBox\n                  className=\"\"\n                  buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n                  onClick={onCancelStageAction}\n                />\n              </div>\n              <div>\n                <ButtonBox\n                  className=\"\"\n                  buttonType={selectSubmitBtnVariant()}\n                  onClickWithLoader={onSubmitStageAction}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex flex-wrap justify-between items-center text-xs text-primary-ptext-1000\">\n            <div className=\"w-56\">\n              <InputBox\n                className=\"!h-6\"\n                name={`stage`}\n                label={\"Stage*\"}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(\n                  `stage`,\n                  stageActionInfo.stageName,\n                  \"mandatory\"\n                )}\n                value={stageActionInfo.stageName}\n                disabled\n              />\n            </div>\n\n            <div className=\"w-56\">\n              <AutoComplete\n                className=\"!h-6\"\n                loader={isDelegateLoading}\n                label={`${\n                  stageActionInfo?.stageActionName === actionNameOnStage.RE_OPEN\n                    ? \"label.stages.delegate.delegateTo\"\n                    : \"label.stages.delegate.delegateTo*\"\n                }`}\n                name=\"delegate\"\n                value={stageActionInfo.delegate?.name}\n                variant={INPUT_STYLE_TYPE.PRIMARY}\n                suggestions={suggestionsTemplate}\n                completeMethod={searchAutoCompleteDelegate}\n                onChange={handleDelegateChange}\n                itemTemplate={itemDelegateTemplate}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(\n                  \"delegate\",\n                  stageActionInfo.delegate?.uid,\n                  `${\n                    stageActionInfo?.stageActionName === actionNameOnStage.RE_OPEN\n                      ? \"optional\"\n                      : \"mandatory\"\n                  }`\n                )}\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full\">\n            <ChipsBox\n              className={\"\"}\n              name=\"ccEmail\"\n              value={stageActionInfo.ccEmail}\n              label={\"CC\"}\n              onChange={handleCCChange}\n              placeholder={stageActionInfo?.ccEmail?.length !== 0 ? \"\" : \"Enter email(s)\"}\n              ref={chipRef}\n              setParentError={setChipsErrorMessage}\n              setHasError={setChipsHasError}\n            />\n          </div>\n\n          <div className=\"h-30\">\n            <InputTextArea\n              autoResize\n              name=\"remarks\"\n              label={`Description`}\n              placeholder=\"Enter Description\"\n              value={stageActionInfo.remarks}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n      </DialogBox>\n\n      <WarningDialog\n        visible={isStopDelegatePopUpVisible}\n        className=\"w-76 !px-14\"\n        title={\"Stop Delegation\"}\n        warningMessage={`Are you sure you want to stop delegation for this stage?`}\n        onCancel={() => setIsStopDelegatePopUpVisible(false)}\n        onConfirm={() => {\n          return onSubmitStageAction();\n        }}\n        onHide={() => {\n          //\n        }}\n      />\n\n      <WarningDialog\n        visible={isCancelledStagePopupVisible}\n        className=\"w-76 !px-14\"\n        title={\"Cancel Stage\"}\n        warningMessage={`Are you sure you want to cancel this stage?`}\n        onCancel={() => setIsCancelledStagePopupVisible(false)}\n        onConfirm={() => {\n          return onSubmitStageAction();\n        }}\n        onHide={() => {\n          //\n        }}\n      />\n\n      <MenuBox\n        ref={actionMenuRef}\n        model={actionMenuModel}\n        variant=\"SECONDARY\"\n        buttonClassName=\"!bg-transparent\"\n        className=\"width-full-menubox bg-white  w-max p-1.5 rounded-xl mt-0.5 border shadow-autoCompletePanel\"\n      />\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(PageStages);\n"],"names":["actionNameOnStage","PageStages","props","loanId","useParams","showStageActionDialog","setShowStageActionDialog","useState","stageActionInfo","setStageActionInfo","dataTable","setDataTable","initiatedOnSortDirection","setInitiatedOnSortDirection","suggestionsTemplate","setSuggestionsTemplate","isDelegateLoading","setIsDelegateLoading","isCancelledStagePopupVisible","setIsCancelledStagePopupVisible","isStopDelegatePopUpVisible","setIsStopDelegatePopUpVisible","userProfile","useSelector","state","textConverter","useTextConverter","forceUpdate","simpleValidator","useRef","SimpleReactValidator","getStandardValidator","messageReplace","prev","chipsErrorMessage","setChipsErrorMessage","chipsHasError","setChipsHasError","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","dataTableRef","actionMenuRef","chipRef","toastMessageRef","actionMenuModel","useEffect","_a","onSubmitStageAction","handleChange","handleCCChange","handleDelegateChange","event","name","value","onInitiateNewStage","URL","LINK_LOAN_DETAIL","LINK_DDE_STAGE_AND_STATUS","LINK_DDE_STAGES_INITIATE","onAction","rowData","dynamicActionMenuOptions","_b","_c","STAGE_STATUS","_d","prepareStageActionInfo","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","menu","_p","onCancelStageAction","resetValidator","submitAction","payload","enrichStageAction","res","StageService","validatePutAPIResponse","STATIC_MASTER_TYPE_TOAST_TEXT","moduleURL","stageURLConfig","linkBasePath","linkAuthRoute","error","parseStandardAPIErrorMessage","validateForm","onSortInitiatedOn","search","SORT_DIRECTION","prevState","validate","isValid","STAGE_TYPE","stageUid","LINK_FEES_SCREEN","LINK_DDE_CREDIT_QUERY","LINK_DDE_QC","LINK_DDE_LOGIN","LINK_PD","LINK_LEGAL","LINK_RCU","LINK_TECHNICAL","LINK_IN_PRINCIPLE_APPROVAL","LINK_FINANCIAL_APPROVAL","LINK_FINAL_APPROVAL","LINK_CAM","LINK_DEDUPE","LINK_RE_APPEAL","selectSubmitBtnVariant","actionName","stageActionObj","_q","_r","searchAutoCompleteDelegate","searchObj","ProfileService","validateGetAPIResponse","requiredPayload","currentLoginUserUid","assigneeUid","itemDelegateTemplate","item","itemTemplate","title","subTitle","jsx","Text","jsxs","renderStage","STAGE_OPTIONS","renderCurrentStatus","renderInitiatedBy","renderAssignedTo","renderDelegatedTo","renderExternalVendor","renderCompletedBy","renderInitiatedOnHeader","IconButton","BUTTON_TYPES","renderInitiatedOn","renderCompletedOn","formatDate","renderActions","ButtonBox","BUTTON_TYPE","LOAN_STATUS_ITEM","renderTable","ReadOnlyTable","Column","React","DialogBox","InputBox","AutoComplete","INPUT_STYLE_TYPE","ChipsBox","InputTextArea","WarningDialog","MenuBox","ToastCustom","ErrorDialog","PageStages$1","withRouter"],"mappings":"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"}