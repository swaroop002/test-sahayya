{"version":3,"file":"PageStaticMasterDataCreateViewEdit-79411283.js","sources":["../../src/views/masterData/staticMaster/PageStaticMasterDataCreateViewEdit/PageStaticMasterDataCreateViewEdit.tsx"],"sourcesContent":["/**\n * Author : Waseem\n * Created on : 21 June, 2023\n **/\n\n/*\n  -------------------------------------------------------\n   Imports:\n  -------------------------------------------------------\n*/\nimport LoadingIcon from \"assets/img/common/Loading.svg\";\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport AutoComplete from \"components/AutoComplete/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport PageTitle from \"components/PageTitle/PageTitle\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text\";\nimport ToastCustom from \"components/Toast/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { CalendarChangeParams } from \"primereact/calendar\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport queryString from \"query-string\";\nimport { ChangeEvent, useEffect, useRef, useState } from \"react\";\nimport { linkStaticMasterData } from \"routes\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport StaticMasterTypeService from \"services/masterdata/StaticMaster/StaticMasterTypeService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  stringifyObject,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  DROPDOWN_STYLE_TYPE,\n  ENTITY,\n  INPUT_STYLE_TYPE,\n  OPERATION_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  STATUS_LIST,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\n/*\n  -------------------------------------------------------\n  PROPS:\n  -------------------------------------------------------\n*/\n\nconst PageStaticMasterDataCreateViewEdit = (props: RouteProps) => {\n  /*\n    -------------------------------------------------------\n      States\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState<any>({\n    masterType: {\n      name: \"\",\n      uid: \"\",\n    },\n    displayName: \"\",\n    systemCode: \"\",\n    sequence: \"\",\n    description: \"\",\n    reasons: \"\",\n    isActive: \"\",\n  });\n\n  const [initialObj, setInitialObj] = useState<any>({});\n  const [isNameDuplicated, setIsNameDuplicated] = useState(false);\n  const [isCodeDuplicated, setIsCodeDuplicated] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const [navigateBack, setNavigateBack] = useState(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [uid, setUid] = useState<string | undefined>(undefined);\n  const toastMessageRef = useRef(null);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState<\n    {\n      pinCode?: string | undefined;\n      state?: string | undefined;\n      city?: string | undefined;\n    }[]\n  >([]);\n  // what is this for ?\n\n  /*\n      -------------------------------------------------------\n        Hooks: useEffect\n      -------------------------------------------------------\n    */\n\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n    } = queryString.parse(props.location.search);\n\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n    if (parsed?.uid && parsed?.uid !== undefined) {\n      setUid(parsed.uid);\n      console.log(parsed.uid);\n      StaticMasterDataService.findById(parsed.uid)\n        .then((res: any) => {\n          if (validateGetAPIResponse(res)) {\n            console.log(res);\n            if (res.data) {\n              setPageObj({\n                masterType: res?.data?.staticMasterType,\n                displayName: res?.data?.name ?? \"\",\n                systemCode: res?.data?.code ?? \"\",\n                sequence: res?.data?.sequence,\n                description: res?.data?.description ?? \"\",\n                reasons: res?.data?.reason ?? \"\",\n                isActive: res?.data?.isActive ? \"ACTIVE\" : \"IN_ACTIVE\",\n              });\n              setInitialObj({ ...res?.data });\n            }\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n      -------------------------------------------------------\n        Handlers: Event handler for onChange, onBlur etc\n      -------------------------------------------------------\n    */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj: any) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  const handleFilterChange = (event: ChangeEvent<HTMLInputElement> | CalendarChangeParams) => {\n    const { name, value } = event.target;\n    if (typeof value === \"object\") {\n      setPageObj((prevPageObj: any) => ({\n        ...prevPageObj,\n        [name]: value,\n      }));\n    } else {\n      setPageObj({ ...pageObj, masterType: { name: value, uid: \"\" } });\n    }\n  };\n\n  const itemTemplate = (item: any) => {\n    if (item.name === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39\">\n          <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n          <Text className=\"text-primary-labelColor mt-2\" label=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item.name} />\n        <Text className=\"text-secondary-gray-500 text-xxs\" label={item.code} />\n      </div>\n    );\n  };\n\n  const searchAutoCompleteName = async (event: any) => {\n    let suggestionsTemplate = [];\n\n    setIsLoading(true);\n    await StaticMasterTypeService.getAll(0, 10, `name:lk=${event.query}&`).then((res) => {\n      if (res.status === 200) {\n        suggestionsTemplate = [...res.data.results];\n        setIsLoading(false);\n      }\n    });\n\n    if (suggestionsTemplate.length === 0) {\n      suggestionsTemplate.push({ pinCode: undefined, city: undefined, state: undefined });\n    }\n\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n\n  const validateForm = async () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid() && !isCodeDuplicated && !isNameDuplicated;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /* \n      -------------------------------------------------------\n        ButtonClick Functions:\n      -------------------------------------------------------\n    */\n  const prepareToSave = () => {\n    const enrichForSave = {\n      staticMasterType: {\n        uid: pageObj.masterType?.uid,\n      },\n      name: pageObj.displayName,\n      code: pageObj.systemCode,\n      sequence: pageObj.sequence,\n      reason: pageObj.reasons,\n      description: pageObj.description,\n    };\n    return enrichForSave;\n  };\n\n  const prepareToApprove = () => {\n    let enrichForSave;\n    if (pageMode === PAGE_MODE.CREATE) {\n      const finalJsonObject = {\n        name: pageObj.displayName,\n        code: pageObj.systemCode,\n        reason: pageObj.reasons,\n        description: pageObj.description,\n      };\n      enrichForSave = {\n        name: pageObj.displayName,\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.STATIC_MASTER_DATA,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    } else {\n      const initialJsonObject = {\n        name: initialObj?.name,\n        code: initialObj.code,\n        reason: initialObj.reason,\n        description: initialObj.description,\n        createdAt: initialObj.createdAt,\n        createdBy: initialObj.createdBy,\n        id: initialObj.id,\n        isActive: initialObj.isActive,\n        requestId: initialObj.requestId,\n        uid: initialObj.uid,\n        updatedAt: initialObj.updatedAt,\n        updatedBy: initialObj.updatedBy,\n      };\n      const finalJsonObject = {\n        ...initialJsonObject,\n        name: pageObj.displayName,\n        code: pageObj.systemCode,\n        reason: pageObj.reasons,\n        description: pageObj.description,\n      };\n      enrichForSave = {\n        name: pageObj.displayName,\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.STATIC_MASTER_DATA,\n        initialStateJson: stringifyObject(initialJsonObject),\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    }\n    return enrichForSave;\n  };\n\n  const onSaveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n    if (pageMode === PAGE_MODE.EDIT && uid !== undefined) {\n      const enrichedObj = prepareToSave();\n      return StaticMasterDataService.update(uid, enrichedObj)\n        .then((res) => {\n          setPosition(\"bottom-right\");\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    } else {\n      const enrichedObj = prepareToSave();\n      return StaticMasterDataService.save(enrichedObj)\n        .then((res) => {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    }\n  };\n\n  const onNameValidation = (event: any) => {\n    let search = `name=${event.target.value.toUpperCase()}&staticMasterType.uid=${\n      pageObj.masterType.uid\n    }`;\n    if (pageMode === PAGE_MODE.EDIT) {\n      search = `name=${event.target.value.toUpperCase()}&uid:nq=${uid}&staticMasterType.uid=${\n        pageObj.masterType.uid\n      }`;\n    }\n    StaticMasterDataService.getAll(0, 1, `${search}`)\n      .then((res) => {\n        if (res.status === 200) {\n          res.data.results.length > 0 ? setIsNameDuplicated(true) : setIsNameDuplicated(false);\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onCodeValidation = (event: any) => {\n    let search = `code=${event.target.value.toUpperCase()}&staticMasterType.uid=${\n      pageObj.masterType.uid\n    }`;\n    if (pageMode === PAGE_MODE.EDIT) {\n      search = `code=${event.target.value}&uid:nq=${uid}&staticMasterType.uid=${pageObj.masterType.uid}`;\n    }\n\n    StaticMasterDataService.getAll(0, 1, `${search}`)\n      .then((res) => {\n        if (res.status === 200) {\n          res.data.results.length > 0 ? setIsCodeDuplicated(true) : setIsCodeDuplicated(false);\n        }\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onCancelClick = () => {\n    props.navigate(linkStaticMasterData);\n  };\n\n  const onApproveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      return;\n    }\n    const enrichedObj = prepareToApprove();\n    return StaticMasterDataService.approve(enrichedObj)\n      .then((res) => {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SENT_FOR_APPROVAL);\n        setTriggerToast(!triggerToast);\n        setNavigateBack(true);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkStaticMasterData);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  /* \n      -------------------------------------------------------\n        Helper Functions:\n      -------------------------------------------------------\n    */\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.masterData.data.create\";\n      case PAGE_MODE.VIEW:\n        return \"heading.masterData.data.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.masterData.data.edit\";\n      default:\n        return \"heading.masterData.data.create\";\n    }\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n  const { masterType, displayName, systemCode, description, reasons, sequence, isActive } = pageObj;\n\n  return (\n    <AclGuard>\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex w-full justify-between items-center\">\n          <PageTitle title={getPageTitle()} />\n          <div className=\"flex\">\n            {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <div className=\"flex gap-10\">\n                <div className=\"flex gap-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancelClick} />\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                    onClickWithLoader={onSaveClick}\n                  />\n                </div>\n                <div>\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                    onClickWithLoader={onApproveClick}\n                  />\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n                </div>\n                <div className=\"\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                    className=\"blue-primary\"\n                    onClick={onEditClick}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <AclGuard override={{ read: PAGE_MODE.VIEW === pageMode }}>\n          <div className=\"grid grid-cols-4 gap-3 mt-3\">\n            <div className=\"col-span-1\">\n              <AutoComplete\n                label=\"input.staticMaster.data.masterType\"\n                name=\"masterType\"\n                field=\"masterType\"\n                value={masterType.name}\n                variant={INPUT_STYLE_TYPE.PRIMARY}\n                suggestions={suggestionsTemplate}\n                completeMethod={searchAutoCompleteName}\n                onChange={handleFilterChange}\n                onBlur={validate}\n                itemTemplate={itemTemplate}\n                loader={isLoading}\n                validation={simpleValidator?.current?.message(\n                  \"masterType\",\n                  masterType.uid,\n                  \"autocomplete\"\n                )}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.staticMaster.data.displayName\"\n                name=\"displayName\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={displayName}\n                onBlur={(e) => {\n                  onNameValidation(e);\n                  validate(e);\n                }}\n                validation={\n                  isNameDuplicated\n                    ? \"Duplicate Entry Found\"\n                    : simpleValidator?.current?.message(\"displayName\", displayName, \"mandatory\")\n                }\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.staticMaster.data.systemCode\"\n                name=\"systemCode\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={systemCode}\n                onBlur={(e) => {\n                  onCodeValidation(e);\n                  validate(e);\n                }}\n                validation={\n                  isCodeDuplicated\n                    ? \"Duplicate Entry Found\"\n                    : simpleValidator?.current?.message(\n                        \"systemCode\",\n                        systemCode,\n                        \"onlyAlphaNumUnderscoreUpperScore|mandatory\"\n                      )\n                }\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.staticMaster.data.sequence\"\n                name=\"sequence\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={sequence}\n                onBlur={validate}\n                validation={simpleValidator?.current?.message(\n                  \"sequence\",\n                  sequence,\n                  \"mandatory|onlyInteger\"\n                )}\n              />\n            </div>\n            {pageMode !== PAGE_MODE.CREATE && (\n              <>\n                <div className=\"col-span-1\">\n                  <SimpleDropDown\n                    label=\"input.masterData.staticMaster.isActive\"\n                    name=\"isActive\"\n                    variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                    onChange={handleInputChange}\n                    value={isActive}\n                    options={STATUS_LIST}\n                    disabled\n                  />\n                </div>\n                <div className=\"col-span-3\"></div>\n              </>\n            )}\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.staticMaster.description\"\n                name=\"description\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={description}\n              />\n            </div>\n            {pageMode !== PAGE_MODE.VIEW && (\n              <div className=\"col-span-2\">\n                <InputTextArea\n                  label=\"input.staticMaster.reasons\"\n                  name=\"reasons\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  maxCount={200}\n                  onChange={handleInputChange}\n                  value={reasons}\n                  validation={simpleValidator?.current?.message(\"reasons\", reasons, \"mandatory\")}\n                />\n              </div>\n            )}\n            <div className=\"\">\n              <ToastCustom\n                position={position}\n                ref={toastMessageRef}\n                toastText={toastMessage}\n                variant={toastMessageVariant}\n                onRemove={() => {\n                  if (navigateBack) {\n                    props.navigate(linkStaticMasterData);\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </AclGuard>\n      </div>\n      <ErrorDialog\n        onHide={() => setShowDialogAPIError(false)}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </AclGuard>\n  );\n};\n\nexport default withRouter(PageStaticMasterDataCreateViewEdit);\n"],"names":["PageStaticMasterDataCreateViewEdit","props","pageObj","setPageObj","useState","initialObj","setInitialObj","isNameDuplicated","setIsNameDuplicated","isCodeDuplicated","setIsCodeDuplicated","isLoading","setIsLoading","position","setPosition","errorMessage","setErrorMessage","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","pageMode","setPageMode","PAGE_MODE","navigateBack","setNavigateBack","showDialogAPIError","setShowDialogAPIError","uid","setUid","toastMessageRef","useRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","suggestionsTemplate","setSuggestionsTemplate","useEffect","parsed","queryString","StaticMasterDataService","res","validateGetAPIResponse","_a","_b","_c","_d","_e","_f","_g","err","handleInputChange","event","name","value","prevPageObj","handleFilterChange","itemTemplate","item","jsxs","jsx","LoadingIcon","Text","searchAutoCompleteName","StaticMasterTypeService","validate","e","validateForm","isValid","prepareToSave","prepareToApprove","enrichForSave","finalJsonObject","OPERATION_TYPE","ENTITY","stringifyObject","initialJsonObject","onSaveClick","STATIC_MASTER_TYPE_TOAST_TEXT","enrichedObj","parseStandardAPIErrorMessage","onNameValidation","search","onCodeValidation","onCancelClick","linkStaticMasterData","onApproveClick","onBackClick","onEditClick","getPageTitle","masterType","displayName","systemCode","description","reasons","sequence","isActive","AclGuard","PageTitle","ButtonBox","BUTTON_TYPE","Fragment","AutoComplete","INPUT_STYLE_TYPE","InputBox","SimpleDropDown","DROPDOWN_STYLE_TYPE","STATUS_LIST","InputTextArea","ToastCustom","ErrorDialog","PageStaticMasterDataCreateViewEdit$1","withRouter"],"mappings":"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"}