{"version":3,"file":"PageStaticMasterTypesCreateViewEdit-1148b08b.js","sources":["../../src/views/masterData/staticMaster/PageStaticMasterTypesCreateViewEdit/PageStaticMasterTypesCreateViewEdit.tsx"],"sourcesContent":["/**\n * Author : Kaviraj RM\n * Created on : 3 June, 2023\n **/\n\n/*\n  -------------------------------------------------------\n   Imports:\n  -------------------------------------------------------\n*/\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport ButtonBox from \"components/ButtonBox\";\nimport ErrorDialog from \"components/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport PageTitle from \"components/PageTitle\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport ToastCustom from \"components/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkStaticMasterTypes, linkStaticMasterTypesCreateViewEdit } from \"routes\";\nimport ApprovalRequestService from \"services/masterdata/Approval/ApprovalRequestService\";\nimport StaticMasterTypeService from \"services/masterdata/StaticMaster/StaticMasterTypeService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  stringifyObject,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  ACTIVE_TYPE,\n  BUTTON_TYPE,\n  DROPDOWN_STYLE_TYPE,\n  ENTITY,\n  INPUT_STYLE_TYPE,\n  OPERATION_TYPE,\n  PAGE_MODE,\n  REVIEW_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  STATUS_LIST,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\n/*\n  -------------------------------------------------------\n  PROPS:\n  -------------------------------------------------------\n*/\n\nfunction PageStaticMasterTypesCreateViewEdit(props: RouteProps) {\n  /*\n    -------------------------------------------------------\n      States\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState({\n    displayName: \"\",\n    systemCode: \"\",\n    description: \"\",\n    reasons: \"\",\n    isActive: \"\",\n  });\n  const [initialObj, setInitialObj] = useState<any>({});\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const [uid, setUid] = useState<string | undefined>(undefined);\n  const [reviewMode, setReviewMode] = useState<string | undefined>(undefined);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [displayNameDuplicateError, setDisplayNameDuplicateError] = useState(false);\n  const [systemCodeDuplicateError, setSystemCodeDuplicateError] = useState(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [navigateBack, setNavigateBack] = useState(false);\n  const toastMessageRef = useRef(null);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    -------------------------------------------------------\n      Hooks: useEffect\n    -------------------------------------------------------\n  */\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n      reviewMode?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n\n    if (parsed?.reviewMode && parsed?.reviewMode !== undefined) {\n      setReviewMode(parsed.reviewMode);\n    }\n    if (parsed?.uid && parsed?.uid !== undefined) {\n      setUid(parsed.uid);\n      if (parsed?.mode == PAGE_MODE.REVIEW) {\n        ApprovalRequestService.getByUid(parsed.uid)\n          .then((res: any) => {\n        \n            if (validateGetAPIResponse(res)) {\n              if (Object.keys(res.data).length > 0 || res.data.id) {\n                let jsonObject: any;\n\n                if (parsed.reviewMode == REVIEW_MODE.NEW) {\n                  jsonObject = JSON.parse(res.data.finalStateJson);\n                } else {\n                  jsonObject = JSON.parse(res.data.initialStateJson);\n                }\n                console.log(reviewMode);\n                console.log(jsonObject);\n\n                setPageObj((prev) => {\n                  return {\n                    ...prev,\n                    displayName: jsonObject?.name ?? \"\",\n                    systemCode: jsonObject?.code ?? \"\",\n                    description: jsonObject?.description ?? \"\",\n                    reasons: jsonObject?.reason ?? \"\",\n                    isActive: jsonObject?.isActive ? ACTIVE_TYPE.ACTIVE : ACTIVE_TYPE.INACTIVE,\n                  };\n                });\n                setInitialObj({ ...jsonObject });\n              }\n            }\n          })\n          .catch((err) => {\n            // IF API fails to load, show the error message\n          });\n      } else {\n        StaticMasterTypeService.findById(parsed.uid)\n          .then((res: any) => {\n            if (validateGetAPIResponse(res)) {\n              console.log(res);\n              \n              if (Object.keys(res.data).length > 0 || res.data.id) {\n                setPageObj((prev) => {\n                  return {\n                    ...prev,\n                    displayName: res?.data?.name ?? \"\",\n                    systemCode: res?.data?.code ?? \"\",\n                    description: res?.data?.description ?? \"\",\n                    reasons: res?.data?.reason ?? \"\",\n                    isActive: res?.data?.isActive ? ACTIVE_TYPE.ACTIVE : ACTIVE_TYPE.INACTIVE,\n                  };\n                });\n                setInitialObj({ ...res?.data });\n              }\n            }\n          })\n          .catch((err) => {\n            // IF API fails to load, show the error message\n          });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will fix it later\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n \n  /* \n    -----------------------------------------------------------------------------------------------------------------------\n    Validators:\n    -----------------------------------------------------------------------------------------------------------------------\n  */\n  const validateField = async (e: any) => {\n    if (e.target.name === \"displayName\") {\n      let search = `name=${e.target.value}`;\n      if (pageMode === PAGE_MODE.EDIT) {\n        search = `name=${e.target.value}&uid:nq=${uid}`;\n      }\n      await StaticMasterTypeService.getAll(0, 10, `${search}&`).then((res: any) => {\n        if (res.data?.results && res.data?.results.length > 0) {\n          setDisplayNameDuplicateError(true);\n        } else {\n          setDisplayNameDuplicateError(false);\n        }\n      });\n    }\n    if (e.target.name === \"systemCode\") {\n      let search = `code=${e.target.value}`;\n      if (pageMode === PAGE_MODE.EDIT) {\n        search = `code=${e.target.value}&uid:nq=${uid}`;\n      }\n      await StaticMasterTypeService.getAll(0, 10, `${search}&`).then((res: any) => {\n        if (res.data?.results && res.data?.results.length > 0) {\n          setSystemCodeDuplicateError(true);\n        } else {\n          setSystemCodeDuplicateError(false);\n        }\n      });\n    }\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n  const validateForm = async () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  /*\n    -------------------------------------------------------\n      Handlers: Event handler for onChange, onBlur etc\n    -------------------------------------------------------\n  */\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  /* \n    -------------------------------------------------------\n      ButtonClick Functions:\n    -------------------------------------------------------\n  */\n\n  const onSaveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      return;\n    }\n    if (pageMode === PAGE_MODE.CREATE) {\n      const enrichedObj = prepareToSave();\n      return StaticMasterTypeService.save(enrichedObj)\n        .then((res) => {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    } else {\n      const enrichedObj = prepareToUpdate();\n      return StaticMasterTypeService.update(enrichedObj, uid)\n        .then((res) => {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    }\n  };\n\n  const onCancelClick = () => {\n    props.navigate(linkStaticMasterTypes);\n  };\n\n  const onApproveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      return;\n    }\n    const enrichedObj = prepareToApprove();\n    return StaticMasterTypeService.approve(enrichedObj)\n      .then((res) => {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SENT_FOR_APPROVAL);\n        setTriggerToast(!triggerToast);\n        setNavigateBack(true);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkStaticMasterTypes);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n    props.navigate(`${linkStaticMasterTypesCreateViewEdit}?mode=${PAGE_MODE.EDIT}&uid=${uid}`);\n  };\n\n  /* \n    -------------------------------------------------------\n      Helper Functions:\n    -------------------------------------------------------\n  */\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.masterData.types.create\";\n      case PAGE_MODE.REVIEW:\n        return \"heading.masterData.types.review\";\n      case PAGE_MODE.VIEW:\n        return \"heading.masterData.types.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.masterData.types.edit\";\n      default:\n        return \"heading.masterData.types.create\";\n    }\n  };\n\n  const prepareToSave = () => {\n    const enrichForSave = {\n      name: pageObj.displayName,\n      code: pageObj.systemCode,\n      reason: pageObj.reasons,\n      description: pageObj.description,\n    };\n    return enrichForSave;\n  };\n  const prepareToUpdate = () => {\n    const enrichedObj = {\n      ...initialObj,\n      name: pageObj.displayName,\n      code: pageObj.systemCode,\n      reason: pageObj.reasons,\n      description: pageObj.description,\n    };\n\n    return enrichedObj;\n  };\n  const prepareToApprove = () => {\n    let enrichForSave;\n    if (pageMode === PAGE_MODE.CREATE) {\n      const finalJsonObject = {\n        name: pageObj.displayName,\n        code: pageObj.systemCode,\n        reason: pageObj.reasons,\n        description: pageObj.description,\n        \n      };\n      enrichForSave = {\n        name: pageObj.displayName,\n        operationType: OPERATION_TYPE.CREATE,\n        entity: ENTITY.STATIC_MASTER_TYPE,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    } else {\n      const initialJsonObject = {\n        name: initialObj?.name,\n        code: initialObj.code,\n        reason: initialObj.reason,\n        description: initialObj.description,\n        createdAt: initialObj.createdAt,\n        createdBy: initialObj.createdBy,\n        id: initialObj.id,\n        isActive: initialObj.isActive,\n        requestId: initialObj.requestId,\n        uid: initialObj.uid,\n        updatedAt: initialObj.updatedAt,\n        updatedBy: initialObj.updatedBy,\n      };\n      const finalJsonObject = {\n        ...initialJsonObject,\n        name: pageObj.displayName,\n        code: pageObj.systemCode,\n        reason: pageObj.reasons,\n        description: pageObj.description,\n      };\n      enrichForSave = {\n        name: pageObj.displayName,\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.STATIC_MASTER_TYPE,\n        initialStateJson: stringifyObject(initialJsonObject),\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    }\n    return enrichForSave;\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n  const { displayName, systemCode, description, reasons, isActive } = pageObj;\n  console.log(pageObj, \"here\");\n  return (\n    <AclGuard>\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex w-full justify-between items-center\">\n          <PageTitle title={getPageTitle()} />\n          <div className=\"flex \">\n            {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <div className=\"flex gap-10\">\n                <div className=\"flex gap-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancelClick} />\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                    onClickWithLoader={onSaveClick}\n                  />\n                </div>\n                <div>\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                    onClickWithLoader={onApproveClick}\n                  />\n                </div>\n              </div>\n            ) : pageMode === PAGE_MODE.VIEW ? (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n                </div>\n                <div className=\"\">\n                  <ButtonBox buttonType={BUTTON_TYPE.EDIT_OUTLINE} onClick={onEditClick} />\n                </div>\n              </>\n            ) : (\n              <div className=\"h-18\"></div>\n            )}\n          </div>\n        </div>\n        <AclGuard override={{ read: [PAGE_MODE.VIEW, PAGE_MODE.REVIEW].includes(pageMode) }}>\n          <div className=\"grid grid-cols-4 gap-3\">\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.staticMaster.displayName\"\n                name=\"displayName\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                value={displayName}\n                onChange={handleInputChange}\n                onBlur={validateField}\n                validation={\n                  displayNameDuplicateError\n                    ? \"Duplicate Entry Found\"\n                    : simpleValidator?.current?.message(\"displayName\", displayName, \"mandatory\")\n                }\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.staticMaster.systemCode\"\n                name=\"systemCode\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                value={systemCode}\n                onBlur={validateField}\n                onChange={handleInputChange}\n                validation={\n                  systemCodeDuplicateError\n                    ? \"Duplicate Entry Found\"\n                    : simpleValidator?.current?.message(\n                        \"systemCode\",\n                        systemCode,\n                        \"mandatory|alphaNumericUnderscore|capitalLetters\"\n                      )\n                }\n              />\n            </div>\n            {pageMode !== PAGE_MODE.CREATE ? (\n              <div className=\"col-span-1\">\n                <SimpleDropDown\n                  disabled\n                  label=\"input.masterData.staticMaster.isActive\"\n                  name=\"isActive\"\n                  variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                  value={isActive}\n                  options={STATUS_LIST}\n                  onChange={handleInputChange}\n                />\n              </div>\n            ) : (\n              <div className=\"col-span-2\" />\n            )}\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.staticMaster.description\"\n                name=\"description\"\n                value={description}\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                //onBlur={validate}\n                onChange={handleInputChange}\n                //validation={simpleValidator?.current?.message(\"description\", description, \"mandatory\")}\n              />\n            </div>\n            {pageMode !== PAGE_MODE.VIEW && (\n              <div className=\"col-span-2\">\n                <InputTextArea\n                  label=\"input.staticMaster.reasons\"\n                  name=\"reasons\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  value={reasons}\n                  onChange={handleInputChange}\n                  onBlur={validateField}\n                  validation={simpleValidator?.current?.message(\"reasons\", reasons, \"mandatory\")}\n                />\n              </div>\n            )}\n          </div>\n        </AclGuard>\n      </div>\n      <ToastCustom\n        position=\"bottom-right\"\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={toastMessageVariant}\n        onRemove={() => {\n          if (navigateBack) {\n            props.navigate(linkStaticMasterTypes);\n          }\n        }}\n      />\n      <ErrorDialog\n        onHide={() => setShowDialogAPIError(false)}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </AclGuard>\n  );\n}\n\nexport default withRouter(PageStaticMasterTypesCreateViewEdit);\n"],"names":["PageStaticMasterTypesCreateViewEdit","props","pageObj","setPageObj","useState","initialObj","setInitialObj","pageMode","setPageMode","PAGE_MODE","uid","setUid","reviewMode","setReviewMode","forceUpdate","displayNameDuplicateError","setDisplayNameDuplicateError","systemCodeDuplicateError","setSystemCodeDuplicateError","showDialogAPIError","setShowDialogAPIError","toastMessage","setToastMessage","errorMessage","setErrorMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","navigateBack","setNavigateBack","toastMessageRef","useRef","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","parsed","queryString","ApprovalRequestService","res","validateGetAPIResponse","jsonObject","REVIEW_MODE","ACTIVE_TYPE","err","StaticMasterTypeService","_a","_b","_c","_d","_e","validateField","search","validateForm","isValid","handleInputChange","event","name","value","prevPageObj","onSaveClick","enrichedObj","prepareToSave","STATIC_MASTER_TYPE_TOAST_TEXT","parseStandardAPIErrorMessage","prepareToUpdate","onCancelClick","linkStaticMasterTypes","onApproveClick","prepareToApprove","onBackClick","onEditClick","linkStaticMasterTypesCreateViewEdit","getPageTitle","enrichForSave","finalJsonObject","OPERATION_TYPE","ENTITY","stringifyObject","initialJsonObject","displayName","systemCode","description","reasons","isActive","AclGuard","jsxs","jsx","PageTitle","ButtonBox","BUTTON_TYPE","Fragment","InputBox","INPUT_STYLE_TYPE","SimpleDropDown","DROPDOWN_STYLE_TYPE","STATUS_LIST","InputTextArea","ToastCustom","ErrorDialog","PageStaticMasterTypesCreateViewEdit$1","withRouter"],"mappings":"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"}