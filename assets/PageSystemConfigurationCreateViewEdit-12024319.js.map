{"version":3,"file":"PageSystemConfigurationCreateViewEdit-12024319.js","sources":["../../src/views/masterData/SystemConfig/PageSystemConfigurationCreateViewEdit/PageSystemConfigurationCreateViewEdit.tsx"],"sourcesContent":["/**\n * Author : Waseem Akram\n * Created on : 21 June, 2023\n * updated by sachin pandey\n **/\n\n/*\n  -------------------------------------------------------\n   Imports:\n  -------------------------------------------------------\n*/\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport ButtonBox from \"components/ButtonBox\";\nimport CheckBox from \"components/CheckBox/CheckBox\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport PageTitle from \"components/PageTitle/PageTitle\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport { ToastPositionType } from \"primereact/toast\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkSystemConfig } from \"routes\";\nimport ToastCustom from \"components/Toast/Toast\";\nimport SystemConfigService from \"services/masterdata/SystemConfig\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  stringifyObject,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  CHECKBOX_STYLE_TYPE,\n  ENTITY,\n  INPUT_STYLE_TYPE,\n  OPERATION_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport StaticMasterTypeService from \"services/masterdata/StaticMaster/StaticMasterTypeService\";\n\n/*\n  -------------------------------------------------------\n  PROPS:\n  -------------------------------------------------------\n*/\n\nconst SystemConfigurationCreateViewDelete = (props: RouteProps) => {\n  /*\n    -------------------------------------------------------\n      States\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState({\n    masterType: {\n      uid: \"\",\n    },\n    displayName: \"\",\n    systemCode: \"\",\n    encrypted: false,\n    value: \"\",\n    description: \"\",\n    reasons: \"\",\n    isActive: \"\",\n  });\n\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const [initialObj, setInitialObj] = useState<any>({});\n  const [isNameDuplicated, setIsNameDuplicated] = useState(false);\n  const [isCodeDuplicated, setIsCodeDuplicated] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [position, setPosition] = useState<ToastPositionType | undefined>(\"bottom-right\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [navigateBack, setNavigateBack] = useState(false);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [uid, setUid] = useState<string | undefined>(undefined);\n  const toastMessageRef = useRef(null);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  /*\n    -------------------------------------------------------\n      Hooks: useEffect\n    -------------------------------------------------------\n  */\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n  }, []);\n\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n    if (parsed?.uid && parsed?.uid !== undefined) {\n      setUid(parsed.uid);\n      console.log(parsed.uid);\n      SystemConfigService.findById(parsed.uid)\n        .then((res: any) => {\n          if (validateGetAPIResponse(res)) {\n            console.log(res);\n            if (res.data) {\n              setPageObj({\n                masterType: {\n                  uid: \"\",\n                },\n                displayName: res?.data?.name ?? \"\",\n                systemCode: res?.data?.code ?? \"\",\n                value: res?.data?.value ?? \"\",\n                encrypted: res?.data?.isEncrypted ?? \"\",\n                description: res?.data?.description ?? \"\",\n                reasons: res?.data?.reason ?? \"\",\n                isActive: res?.data?.isActive ? \"ACTIVE\" : \"IN_ACTIVE\",\n              });\n              setInitialObj({ ...res?.data });\n            }\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, []);\n  /*\n    -------------------------------------------------------\n      Handlers: Event handler for onChange, onBlur etc\n    -------------------------------------------------------\n  */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  /* \n    -------------------------------------------------------\n      ButtonClick Functions:\n    -------------------------------------------------------\n  */\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  const validateForm = async () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid() && !isCodeDuplicated && !isNameDuplicated;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n  const prepareToApprove = () => {\n    const payloadForApprove = {\n      uid: uid,\n      staticMasterType: {\n        uid: pageObj.masterType?.uid,\n      },\n      name: pageObj.displayName,\n      code: pageObj.systemCode,\n      value: pageObj.value,\n      isEncrypted: pageObj.encrypted,\n      description: pageObj.description,\n      reason: pageObj.reasons,\n    };\n    let enrichForSave;\n    const finalJsonObject = payloadForApprove;\n    const initialJsonObject = initialObj;\n\n    if (pageMode === PAGE_MODE.CREATE) {\n      enrichForSave = {\n        name: pageObj.displayName,\n\n        operationType: OPERATION_TYPE.CREATE,\n        entity: ENTITY.SYSTEM_CONFIGURATION,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    } else {\n      enrichForSave = {\n        name: pageObj.displayName,\n\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.SYSTEM_CONFIGURATION,\n        initialStateJson: stringifyObject(initialJsonObject),\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    }\n    return enrichForSave;\n  };\n  const onSaveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n    const prepareToSave = () => {\n      const enrichForSave = {\n        staticMasterType: {\n          uid: pageObj.masterType?.uid,\n        },\n        name: pageObj.displayName,\n        code: pageObj.systemCode,\n        value: pageObj.value,\n        isEncrypted: pageObj.encrypted,\n        description: pageObj.description,\n        reason: pageObj.reasons,\n      };\n      return enrichForSave;\n    };\n\n    if (pageMode === PAGE_MODE.EDIT && uid !== undefined) {\n      const enrichedObj = prepareToSave();\n      return SystemConfigService.update(enrichedObj, uid)\n        .then((res) => {\n          setPosition(\"bottom-right\");\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    } else {\n      const enrichedObj = prepareToSave();\n      return SystemConfigService.save(enrichedObj)\n\n        .then((res) => {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    }\n  };\n  const [isChecked, setIsChecked] = useState(false);\n  const handleCheckbox = () => {\n    const newCheckedState = !isChecked;\n    setIsChecked(newCheckedState);\n\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      encrypted: newCheckedState,\n    }));\n  };\n  useEffect(() => {\n    \"this is to check\";\n  }, [isChecked]);\n\n  const onCancelClick = () => {\n    props.navigate(linkSystemConfig);\n  };\n\n  const onApproveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      return;\n    }\n    const enrichedObj = prepareToApprove();\n    return StaticMasterTypeService.approve(enrichedObj)\n      .then((res) => {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SENT_FOR_APPROVAL);\n        setTriggerToast(!triggerToast);\n        setNavigateBack(true);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkSystemConfig);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  /* \n    -------------------------------------------------------\n      Helper Functions:\n    -------------------------------------------------------\n  */\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.systemConfiguration.create\";\n      case PAGE_MODE.VIEW:\n        return \"heading.systemConfiguration.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.systemConfiguration.edit\";\n      default:\n        return \"heading.systemConfiguration.create\";\n    }\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n  const { displayName, systemCode, value, encrypted, description, reasons, isActive } = pageObj;\n  return (\n    <AclGuard>\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex items-center justify-between w-full\">\n          <PageTitle title={getPageTitle()} />\n\n          <div className=\"flex\">\n            {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <div className=\"flex gap-10\">\n                <div className=\"flex gap-5\">\n                  <ButtonBox\n                    className=\"reset-red\"\n                    buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n                    onClick={onCancelClick}\n                  />\n\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                    onClickWithLoader={onSaveClick}\n                  />\n                </div>\n                <div>\n                  <ButtonBox\n                    className=\"approve-primary\"\n                    buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                    onClickWithLoader={onApproveClick}\n                  />\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n                </div>\n                <div className=\"\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                    className=\"blue-primary\"\n                    onClick={onEditClick}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <AclGuard override={{ read: [PAGE_MODE.VIEW, PAGE_MODE.REVIEW].includes(pageMode) }}>\n          <div className=\"grid grid-cols-4 gap-3 mt-3\">\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.systemConfiguration.displayName\"\n                name=\"displayName\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={displayName}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                validation={simpleValidator?.current?.message(\n                  \"displayName\",\n                  displayName,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <InputBox\n                label=\"input.systemConfiguration.systemCode\"\n                name=\"systemCode\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={systemCode}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                validation={simpleValidator?.current?.message(\n                  \"systemCode\",\n                  systemCode,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n            <div className=\"col-span-1\">\n              <CheckBox\n                checked={encrypted}\n                label=\"input.systemConfiguration.encrypted\"\n                name=\"encrypted\"\n                variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n                onChange={handleCheckbox}\n                value={encrypted}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-4 gap-3\">\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.systemConfiguration.value\"\n                name=\"value\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={value}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                validation={simpleValidator?.current?.message(\"value\", value, \"mandatory\")}\n              />\n            </div>\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.systemConfiguration.description\"\n                name=\"description\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={description}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-4 gap-3\">\n            <div className=\"col-span-2\">\n              <InputTextArea\n                label=\"input.systemConfiguration.reasons\"\n                name=\"reasons\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={reasons}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                validation={simpleValidator?.current?.message(\"reasons\", reasons, \"mandatory\")}\n              />\n            </div>\n          </div>\n        </AclGuard>\n        <ToastCustom\n          position={position}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n          onRemove={() => {\n            if (navigateBack) {\n              props.navigate(linkSystemConfig);\n            }\n          }}\n        />\n      </div>\n    </AclGuard>\n  );\n};\n\nexport default withRouter(SystemConfigurationCreateViewDelete);\n"],"names":["SystemConfigurationCreateViewDelete","props","pageObj","setPageObj","useState","pageMode","setPageMode","PAGE_MODE","initialObj","setInitialObj","isNameDuplicated","setIsNameDuplicated","isCodeDuplicated","setIsCodeDuplicated","position","setPosition","errorMessage","setErrorMessage","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","navigateBack","setNavigateBack","uid","setUid","toastMessageRef","useRef","forceUpdate","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","useEffect","parsed","queryString","SystemConfigService","res","validateGetAPIResponse","_a","_b","_c","_d","_e","_f","_g","err","handleInputChange","event","name","value","prevPageObj","validateForm","isValid","prepareToApprove","payloadForApprove","enrichForSave","finalJsonObject","initialJsonObject","OPERATION_TYPE","ENTITY","stringifyObject","onSaveClick","STATIC_MASTER_TYPE_TOAST_TEXT","prepareToSave","enrichedObj","parseStandardAPIErrorMessage","isChecked","setIsChecked","handleCheckbox","newCheckedState","onCancelClick","linkSystemConfig","onApproveClick","StaticMasterTypeService","onBackClick","onEditClick","getPageTitle","displayName","systemCode","encrypted","description","reasons","isActive","jsx","AclGuard","jsxs","PageTitle","ButtonBox","BUTTON_TYPE","Fragment","InputBox","INPUT_STYLE_TYPE","CheckBox","CHECKBOX_STYLE_TYPE","InputTextArea","ToastCustom","PageSystemConfigurationCreateViewEdit","withRouter"],"mappings":"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"}