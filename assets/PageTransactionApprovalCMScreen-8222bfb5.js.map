{"version":3,"file":"PageTransactionApprovalCMScreen-8222bfb5.js","sources":["../../src/views/masterData/productConfiguration/productConfigTransaction/PageTransactionApprovalCMScreen/PageTransactionApprovalCMScreen.tsx"],"sourcesContent":["/**\n * Author : Waseem Shaikh\n * Created on : 8 July, 2023\n **/\n\n/*\n  -------------------------------------------------------\n   Imports:\n  -------------------------------------------------------\n*/\nimport LoadingIcon from \"assets/img/common/Loading.svg\";\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport ButtonBox from \"components/ButtonBox\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport PageTitle from \"components/PageTitle/PageTitle\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport ToastCustom from \"components/Toast\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport BusinessRuleService from \"services/masterdata/ProductConfig/BusinessRuleService\";\nimport AutoComplete from \"components/AutoComplete/AutoComplete\";\nimport CheckBox from \"components/CheckBox/CheckBox\";\nimport EditableTableV2, {\n  Column,\n  EditableComponentRef,\n} from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport Text from \"components/Text/Text\";\nimport { linkProductConfigurationTransaction } from \"routes\";\nimport TransactionApproval from \"services/masterdata/ProductConfig/TransactionApproval\";\nimport StaticMasterTypeService from \"services/masterdata/StaticMaster/StaticMasterTypeService\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  stringifyObject,\n} from \"utils/CommonUtil\";\nimport {\n  AUTOCOMPLETE_MESSAGES,\n  BUTTON_TYPE,\n  CHECKBOX_STYLE_TYPE,\n  DROPDOWN_STYLE_TYPE,\n  ENTITY,\n  INPUT_STYLE_TYPE,\n  OPERATION_TYPE,\n  PAGE_MODE,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport ProductConfigProductService from \"services/masterdata/ProductConfig/ProductConfigProductService\";\nimport IncomeSchemeService from \"services/masterdata/ProductConfig/IncomeSchemeService\";\nimport MenuBox from \"components/MenuBox/MenuBox\";\n/*\n  -------------------------------------------------------\n  PROPS:\n  -------------------------------------------------------\n*/\n\nconst PageTransactionApprovalCMScreen = (props: RouteProps) => {\n  /*\n    -------------------------------------------------------\n      InterFaces\n    -------------------------------------------------------\n  */\n  interface InitialData {\n    name: string;\n    ruleApplied: string;\n    productConfigType: string;\n    productName: string;\n    productScheme: string;\n    description: string;\n    reasons: string;\n  }\n\n  interface PageObjectInterFace {\n    name: string;\n    ruleApplied: string;\n    productConfigType: string;\n    productName: string;\n    productScheme: string;\n    description: string;\n    reasons: string;\n    attachments: any[];\n  }\n  /*\n    -------------------------------------------------------\n      States\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState<PageObjectInterFace>({\n    name: \"\",\n    ruleApplied: \"\",\n    productConfigType: \"\",\n    productName: \"\",\n    productScheme: \"\",\n    description: \"\",\n    reasons: \"\",\n    attachments: [],\n  });\n\n  const initialObj = {\n    isActive: true,\n\n    user: {\n      uid: \"\",\n    },\n  };\n  const [initialData, setInitData] = useState<InitialData>({\n    name: \"\",\n    ruleApplied: \"\",\n    productConfigType: \"\",\n    productName: \"\",\n    productScheme: \"\",\n    description: \"\",\n    reasons: \"\",\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined);\n  const [productList, setProductList] = useState<any>([]);\n  const [incomeList, setIncomeList] = useState<any>([]);\n  const [ruleList, setRuleList] = useState<any>([]);\n  const [uid, setUid] = useState<any>(\"\");\n  const dataTableRef = useRef<EditableComponentRef>(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [position, setPosition] = useState<any>(\"bottom-right\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [navigateBack, setNavigateBack] = useState(false);\n  const toastMessageRef = useRef(null);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const [userList, setUserList] = useState<any>([]);\n  const [timeOutLocal, setTimeOutLocal] = useState<any>(undefined);\n  const [renderFirst, setRenderFirst] = useState(true);\n  const deleteTableRowRef = useRef(null);\n  /*\n    -------------------------------------------------------\n      Hooks: useEffect\n    -------------------------------------------------------\n  */\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n    setUid(parsed.uid);\n    getProductList();\n    getIncomeSchemeList();\n    getRuleList();\n\n    if (renderFirst && parsed.mode == \"CREATE\") {\n      dataTableRef?.current?.addRow(initialObj);\n      setRenderFirst(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (uid) {\n      getInitialData();\n    }\n  }, [uid]);\n\n  useEffect(() => {\n    console.log(\"object\");\n  }, [pageObj]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Handlers: Event handler for onChange, onBlur etc\n    -------------------------------------------------------\n  */\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n\n    setPageObj((prevPageObj: any) => {\n      let updatedObj = {\n        ...prevPageObj,\n        [name]: value,\n      };\n\n      if (name === \"productName\") {\n        // If a productName is selected, set productScheme to null\n        updatedObj = {\n          ...updatedObj,\n          productScheme: null,\n          productConfigType: \" PRODUCT\", // take it from constants\n        };\n      } else if (name === \"productScheme\") {\n        // If a productScheme is selected, set productName to null\n        updatedObj = {\n          ...updatedObj,\n          productName: null,\n          productConfigType: \"PRODUCT_INCOME_SCHEME\",\n        };\n      }\n\n      return updatedObj;\n    });\n  };\n\n  /* \n    -------------------------------------------------------\n      ButtonClick Functions:\n    -------------------------------------------------------\n  */\n  const validateForm = async () => {\n    let isValid = false;\n    isValid = simpleValidator?.current?.allValid() ?? false;\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n\n  const prepareToSaveCreate = () => {\n    const addedRecords = [...(dataTableRef.current?.getAddedRecords() ?? [])];\n\n    const enrichForSave: any = {\n      name: pageObj.name,\n      rule: {\n        uid: pageObj.ruleApplied,\n      },\n      productConfigType: \"\",\n      product: {\n        uid: pageObj.productName,\n      },\n      incomeSchemeProduct: {\n        uid: pageObj.productScheme,\n      },\n      reason: pageObj.reasons,\n      description: pageObj.description,\n      users: [\n        {\n          user: {\n            uid: \"\",\n          },\n          isActive: false,\n        },\n      ],\n    };\n    const transformedUsers = addedRecords.map((record) => ({\n      user: {\n        uid: record.user.uid,\n      },\n      isActive: record.isActive,\n    }));\n    if (enrichForSave?.product.uid) {\n      enrichForSave.productConfigType = \"PRODUCT\";\n    } else if (enrichForSave?.incomeSchemeProduct?.uid) {\n      enrichForSave.productConfigType = \"PRODUCT_INCOME_SCHEME\";\n    } else {\n      enrichForSave.productConfigType = null;\n    }\n\n    if (pageObj?.productName) {\n      enrichForSave.incomeSchemeProduct = null;\n    } else if (pageObj?.productScheme) {\n      enrichForSave.product = null;\n    } else {\n      enrichForSave.incomeSchemeProduct = null;\n      enrichForSave.product = null;\n    }\n\n    // this will return an array objects of users which i will add in the enrichForSave because it had lot of unusable chunks\n    enrichForSave.users = transformedUsers;\n\n    return enrichForSave;\n  };\n\n  const prepareToUpdate = () => {\n    const addedRecords = [\n      ...(dataTableRef.current?.getAddedRecords() ?? []),\n      ...(dataTableRef.current?.getDeletedRecords() ?? []),\n      ...(dataTableRef.current?.getUpdatedRecords() ?? []),\n    ];\n\n    const enrichForUpdate: any = {\n      uid: uid,\n      name: pageObj.name,\n      rule: {\n        uid: pageObj.ruleApplied,\n      },\n      productConfigType: \"\",\n      product: {\n        uid: pageObj.productName,\n      },\n      incomeSchemeProduct: {\n        uid: pageObj.productScheme,\n      },\n      reason: pageObj.reasons,\n      description: pageObj.description,\n      users: [\n        {\n          user: {\n            uid: \"\",\n          },\n          isActive: false,\n        },\n      ],\n    };\n\n    const transformedUsers = addedRecords.map((record) => ({\n      user: {\n        uid: record.user.uid,\n      },\n      isActive: record.isActive,\n      uid: record.uid,\n    }));\n\n    // this will return an array objects of users which i will add in the enrichForUpdate because it had lot of unusable chunks\n    enrichForUpdate.users = transformedUsers;\n\n    if (enrichForUpdate?.product.uid) {\n      enrichForUpdate.productConfigType = \"PRODUCT\";\n    } else if (enrichForUpdate?.incomeSchemeProduct?.uid) {\n      enrichForUpdate.productConfigType = \"PRODUCT_INCOME_SCHEME\";\n    } else {\n      enrichForUpdate.productConfigType = null;\n    }\n\n    if (pageObj?.productName) {\n      enrichForUpdate.incomeSchemeProduct = null;\n    } else if (pageObj?.productScheme) {\n      enrichForUpdate.product = null;\n    } else {\n      enrichForUpdate.incomeSchemeProduct = null;\n      enrichForUpdate.product = null;\n    }\n\n    return enrichForUpdate;\n  };\n\n  const prepareToApprove = () => {\n    const addedRecords = [\n      ...(dataTableRef.current?.getAddedRecords() ?? []),\n      ...(dataTableRef.current?.getDeletedRecords() ?? []),\n      ...(dataTableRef.current?.getUpdatedRecords() ?? []),\n    ];\n\n    const payloadForApprove: any = {\n      name: pageObj.name,\n      uid:uid,\n      rule: {\n        uid: pageObj.ruleApplied,\n      },\n      productConfigType: \"\",\n      product: {\n        uid: pageObj.productName,\n      },\n      incomeSchemeProduct: {\n        uid: pageObj.productScheme,\n      },\n      reason: pageObj.reasons,\n      description: pageObj.description,\n      users: [\n        {\n          user: {\n            uid: \"\",\n          },\n          isActive: false,\n        },\n      ],\n    };\n    const transformedUsers = addedRecords.map((record) => ({\n      user: {\n        uid: record.user.uid,\n      },\n      isActive: record.isActive,\n    }));\n    if (payloadForApprove?.product.uid) {\n      payloadForApprove.productConfigType = \"PRODUCT\";\n    } else if (payloadForApprove?.incomeSchemeProduct?.uid) {\n      payloadForApprove.productConfigType = \"PRODUCT_INCOME_SCHEME\";\n    } else {\n      payloadForApprove.productConfigType = null;\n    }\n\n    if (pageObj?.productName) {\n      payloadForApprove.incomeSchemeProduct = null;\n    } else if (pageObj?.productScheme) {\n      payloadForApprove.product = null;\n    } else {\n      payloadForApprove.incomeSchemeProduct = null;\n      payloadForApprove.product = null;\n    }\n\n    // this will return an array objects of users which i will add in the payloadForApprove because it had lot of unusable chunks\n    payloadForApprove.users = transformedUsers;\n    let enrichForSave;\n    const finalJsonObject = payloadForApprove;\n    const initialJsonObject = initialData;\n\n    if (pageMode === PAGE_MODE.CREATE) {\n      enrichForSave = {\n        name: pageObj.name,\n\n        operationType: OPERATION_TYPE.CREATE,\n        entity: ENTITY.TRANSACTION_APPROVAL_RULE,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    } else {\n      enrichForSave = {\n        name: pageObj.name,\n        uid: uid,\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.TRANSACTION_APPROVAL_RULE,\n        initialStateJson: stringifyObject(initialJsonObject),\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reasons,\n      };\n    }\n    return enrichForSave;\n  };\n\n  const onSaveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n    if (pageMode === PAGE_MODE.CREATE) {\n      const enrichedObj = prepareToSaveCreate();\n\n      return TransactionApproval.save(enrichedObj)\n        .then((res) => {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    } else {\n      const enrichedObj: any = prepareToUpdate();\n\n      return TransactionApproval.update(uid, enrichedObj)\n        .then((res) => {\n          setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n          setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n          setTriggerToast(!triggerToast);\n          setNavigateBack(true);\n        })\n        .catch((err) => {\n          setErrorMessage(parseStandardAPIErrorMessage(err));\n        });\n    }\n  };\n\n  const onCancelClick = () => {\n    props.navigate(linkProductConfigurationTransaction);\n  };\n\n  const onApproveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n    const enrichedObj = prepareToApprove();\n    return StaticMasterTypeService.approve(enrichedObj)\n      .then((res) => {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SENT_FOR_APPROVAL);\n        setTriggerToast(!triggerToast);\n        setNavigateBack(true);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkProductConfigurationTransaction);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  const onAddRow = () => {\n    // @ts-ignore : will do it later\n    dataTableRef?.current?.addRow(initialObj);\n  };\n\n  /* \n    -------------------------------------------------------\n      Helper Functions:\n    -------------------------------------------------------\n  */\n\n  const getInitialData = () => {\n    TransactionApproval.getProductInfo(uid)\n      .then((res: any) => {\n        console.log(res.data, \"response\");\n\n        setPageObj({\n          ...pageObj,\n          name: res.data.name,\n          ruleApplied: res.data?.rule?.uid ?? \"\",\n          productName: res.data.product?.uid,\n          productScheme: res.data.incomeSchemeProduct?.uid,\n          description: res.data.description,\n          reasons: res.data.reason,\n        });\n\n        setInitData({\n          ...pageObj,\n          name: res.data.name,\n          ruleApplied: res.data?.rule?.uid ?? \"\",\n          productName: res.data.product?.uid,\n          productScheme: res.data.incomeSchemeProduct?.uid,\n          description: res.data.description,\n          reasons: res.data.reason,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const validateField = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.productConfiguration.transaction.create\";\n      case PAGE_MODE.VIEW:\n        return \"heading.productConfiguration.transaction.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.productConfiguration.transaction.edit\";\n      default:\n        return \"heading.productConfiguration.transaction.create\";\n    }\n  };\n  const getUserList = (searchTerm: string) => {\n    const startValue = 0;\n    const limit = 30;\n    const searchParam = `&sahayyaUserType=EMPLOYEE_USER&name:lk=${searchTerm}`;\n    const totalRecords = 100;\n    if (totalRecords >= startValue) {\n      TransactionApproval.getAllUsers(startValue, limit, searchParam).then((res) => {\n        const results = res.data?.results?.length > 0 ? [...res.data.results] : [];\n\n        if (results.length === 0) {\n          setUserList([{ name: AUTOCOMPLETE_MESSAGES.NO_Banks }]);\n        } else {\n          setUserList([...results]);\n        }\n      });\n    }\n  };\n  const debounce = (func: any, delay: any) => {\n    clearTimeout(timeOutLocal);\n    setTimeOutLocal(setTimeout(func, delay));\n  };\n  const searchUsers = (event: any) => {\n    const searchTerm = event.query;\n    if (event.query.length >= 1) {\n      // note this will later change into 3 cause rn i don't see any users\n      debounce(getUserList(searchTerm), 1200);\n    } else {\n      setUserList([]);\n    }\n  };\n  const itemTemplate = (item: any) => {\n    if (item.name === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39\">\n          <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n          <Text className=\"text-primary-labelColor mt-2\" label=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item.name} />\n        <Text className=\"text-secondary-gray-500 text-xxs\" label={item.code} />\n        {/* <Text className=\"text-secondary-gray-500 text-xxs\" label={item.emailId} /> */}\n      </div>\n    );\n  };\n\n  // this is for editable table\n  const renderUser = (rowData: any) => {\n    return (\n      <div className=\"w-40 relative  \">\n        <AutoComplete\n          value={rowData?.user.name}\n          variant={DROPDOWN_STYLE_TYPE.PRIMARY}\n          suggestions={userList}\n          completeMethod={searchUsers}\n          onChange={(e) => {\n            const selectedUser = e.target.value;\n            const rowDataObj = { ...rowData };\n            if (typeof e.target.value === \"object\") {\n              rowDataObj.user.uid = selectedUser.uid;\n            }\n            rowDataObj.user.name = selectedUser;\n            dataTableRef.current?.reportDataChange(rowDataObj);\n          }}\n          itemTemplate={itemTemplate}\n          field=\"name\"\n          onBlur={validate}\n          disabled={pageMode === PAGE_MODE.VIEW}\n          hideLabel\n          name={`user-${rowData.uid}`}\n          validation={simpleValidator?.current?.message(\n            `user-${rowData.uid}`,\n            rowData?.user.name,\n            \"autocomplete\"\n          )}\n          errorClassNames=\"!m-0 !p-0 !text-xxs !h-2.5\"\n        />\n      </div>\n    );\n  };\n  const [editModuleCardMenu, setEditModuleCardMenu] = useState([\n    {\n      items: [\n        {\n          label: \"Delete\",\n          className: \"\",\n        },\n      ],\n    },\n  ]);\n  const deleteRow = (rowData: any, props: any) => {\n    // @ts-ignore: will fix later\n    dataTableRef?.current?.deleteRow(rowData);\n    setTimeout(() => {\n      // @ts-ignore: will fix later\n      const records = dataTableRef?.current?.getAddedRecords();\n      // @ts-ignore: will fix later\n      const deletedRecords = dataTableRef?.current?.getDeletedRecords();\n      // setLoanRecordsDeleted(deletedRecords);\n      // setLoanRecordsAdded(records);\n    }, 2);\n  };\n  const onToggleMenu = (rowData: any, props: any, e: any) => {\n    console.log(editModuleCardMenu);\n    setEditModuleCardMenu((prevState) => [\n      {\n        ...prevState[0], // Retain the other properties of the first object\n        items: [\n          {\n            ...prevState[0].items[0], // Retain the other properties of the first item\n            command: () => {\n              deleteRow(rowData, props);\n            }, // Add the new key-value pair\n          },\n        ],\n      },\n    ]);\n\n    // @ts-ignore: will fix later\n    deleteTableRowRef?.current?.toggle(e);\n    console.log(editModuleCardMenu);\n  };\n  const renderIsUserActive = (rowData: any, props: any) => {\n    return (\n      <CheckBox\n        name=\"isActive\"\n        variant={CHECKBOX_STYLE_TYPE.PRIMARY}\n        onChange={(e) => {\n          const rowDataObj = { ...rowData };\n          rowDataObj.isActive = e.target.checked;\n          dataTableRef.current?.reportDataChange(rowDataObj);\n        }}\n        checked={rowData.isActive}\n        disabled={pageMode === PAGE_MODE.VIEW}\n      />\n    );\n  };\n  const renderActions = (rowData: any, props: any) => {\n    return (\n      <div className=\"w-20 flex items-center justify-center ml-2\">\n        <ButtonBox\n          buttonType={BUTTON_TYPE.MENU}\n          onClick={(e: any) => onToggleMenu(rowData, props, e)}\n          className=\"!rounded-none bg-transparent !hover:bg-primary-gray-300\"\n        />\n      </div>\n    );\n  };\n  const getProductList = () => {\n    ProductConfigProductService.getAll()\n      .then((res: any) => {\n        setProductList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  const getIncomeSchemeList = () => {\n    IncomeSchemeService.getAll()\n      .then((res: any) => {\n        setIncomeList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  const getRuleList = () => {\n    BusinessRuleService.getAll()\n      .then((res: any) => {\n        setRuleList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  /* \n    -------------------------------------------------------\n      validation :\n    -------------------------------------------------------\n  */\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e.target.name);\n  };\n\n  /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n\n  const { name, ruleApplied, productName, productScheme, description, reasons } = pageObj;\n\n  return (\n    <AclGuard>\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex w-full justify-between  items-center\">\n          <PageTitle title={getPageTitle()} />\n\n          <div className=\"flex\">\n            {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <div className=\"flex gap-10\">\n                <div className=\"flex gap-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancelClick} />\n\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                    onClickWithLoader={onSaveClick}\n                  />\n                </div>\n                <div>\n                  <ButtonBox\n                    className=\"approve-primary\"\n                    buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                    onClickWithLoader={onApproveClick}\n                  />\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n                </div>\n                <div className=\"\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                    className=\"blue-primary\"\n                    onClick={onEditClick}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <AclGuard override={{ read: [PAGE_MODE.VIEW, PAGE_MODE.REVIEW].includes(pageMode) }}>\n          <div className=\"grid grid-cols-4 gap-3\">\n            <div className=\"col-span-4  md:col-span-1\">\n              <InputBox\n                label=\"input.productConfiguration.transaction.name\"\n                name=\"name\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={name}\n                disabled={pageMode === PAGE_MODE.VIEW}\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\"name\", name, \"mandatory|max:50\")}\n              />\n            </div>\n            <div className=\"col-span-4  md:col-span-1\">\n              <SimpleDropDown\n                label=\"input.productConfiguration.transaction.rule\"\n                name=\"ruleApplied\"\n                variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                options={ruleList}\n                onChange={handleInputChange}\n                value={ruleApplied}\n                optionLabel=\"name\"\n                optionValue=\"uid\"\n                disabled={pageMode === PAGE_MODE.VIEW}\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\n                  \"ruleApplied\",\n                  ruleApplied,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            {/* <div className=\"\"></div> */}\n            {/* <div className=\"sm:hidden\"></div> */}\n\n            <div className=\"col-span-4 md:col-span-2 flex w-full gap-2 \">\n              <div className=\"w-1/2\">\n                <SimpleDropDown\n                  label=\"input.productConfiguration.transaction.product\"\n                  name=\"productName\"\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  options={productList}\n                  onChange={handleInputChange}\n                  value={productName}\n                  optionLabel=\"name\"\n                  optionValue=\"uid\"\n                  disabled={pageMode === PAGE_MODE.VIEW}\n                />\n              </div>\n              <div>\n                <div className=\"flex  justify-center items-center h-full\">or</div>\n              </div>\n              <div className=\"w-1/2\">\n                <SimpleDropDown\n                  label=\"input.productConfiguration.transaction.productScheme\"\n                  name=\"productScheme\"\n                  options={incomeList}\n                  variant={INPUT_STYLE_TYPE.SECONDARY}\n                  onChange={handleInputChange}\n                  value={productScheme}\n                  optionLabel=\"name\"\n                  optionValue=\"uid\"\n                  disabled={pageMode === PAGE_MODE.VIEW}\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:hidden md:col-span-2 md:block\"></div>\n            <div className=\"sm:hidden\"></div>\n\n            <div className=\"col-span-8 sm:col-span-4 md:col-span-2\">\n              <InputTextArea\n                label=\"input.productConfiguration.transaction.description\"\n                name=\"description\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={description}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n            <div className=\"col-span-8  sm:col-span-4 md:col-span-2\">\n              <InputTextArea\n                label=\"input.productConfiguration.transaction.reasons\"\n                name=\"reasons\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={reasons}\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\"reasons\", reasons, \"mandatory\")}\n                disabled={pageMode === PAGE_MODE.VIEW}\n              />\n            </div>\n          </div>\n          <div className=\"mt-3 flex w-full justify-between\">\n            <Text\n              label=\"Approvals\"\n              className=\"text-primary-ptext-1000 text-base font-Roboto font-bold flex\"\n            />\n            <ButtonBox buttonType={BUTTON_TYPE.ICON_TEXT_ROW} onClick={onAddRow} />\n          </div>\n          <div className=\"w-full \">\n            <EditableTableV2\n              uniqueKey=\"uid\"\n              standardDataFormatPromise={TransactionApproval.getListById}\n              ref={dataTableRef}\n              search={`&transactionApprovalRule.uid=${uid}`}\n              mode={pageMode === PAGE_MODE.CREATE ? \"CREATE\" : \"UPDATE\"}\n            >\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/3 pt-1 h-12 pl-6\"\n                header={\"User*\"}\n                body={renderUser}\n              />\n              <Column\n                className=\"text-primary-ptext-1000 text-left text-xs w-1/3 p-1 h-12 pl-6\"\n                header=\"Active\"\n                body={renderIsUserActive}\n              />\n              <Column\n                className=\"text-primary-ptext-1000  text-right text-xs w-1/3 h-12 px-6\"\n                header={\"Actions\"}\n                style={{ minWidth: \"50px\", width: \"50px\" }}\n                body={renderActions}\n              />\n            </EditableTableV2>\n          </div>\n        </AclGuard>\n        <div className=\"\">\n          <ToastCustom\n            position={position}\n            ref={toastMessageRef}\n            toastText={toastMessage}\n            variant={toastMessageVariant}\n            onRemove={() => {\n              if (navigateBack) {\n                props.navigate(linkProductConfigurationTransaction);\n              }\n            }}\n          />\n        </div>\n        <MenuBox\n          className=\"w-20 bg-white  font-Roboto text-xs text-primary-pText-1300 pt-2 rounded-lg mt-0.5 flex justify-center align-center shadow-autoCompletePanel\"\n          model={editModuleCardMenu}\n          ref={deleteTableRowRef}\n        />\n        <ErrorDialog\n          onHide={() => setShowDialogAPIError(false)}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </div>\n    </AclGuard>\n  );\n};\n\nexport default withRouter(PageTransactionApprovalCMScreen);\n"],"names":["PageTransactionApprovalCMScreen","props","pageObj","setPageObj","useState","initialObj","initialData","setInitData","pageMode","setPageMode","PAGE_MODE","forceUpdate","productList","setProductList","incomeList","setIncomeList","ruleList","setRuleList","uid","setUid","dataTableRef","useRef","errorMessage","setErrorMessage","position","setPosition","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","toastMessage","setToastMessage","triggerToast","setTriggerToast","navigateBack","setNavigateBack","toastMessageRef","showDialogAPIError","setShowDialogAPIError","userList","setUserList","timeOutLocal","setTimeOutLocal","renderFirst","setRenderFirst","deleteTableRowRef","useEffect","parsed","queryString","getProductList","getIncomeSchemeList","getRuleList","_a","getInitialData","handleInputChange","event","name","value","prevPageObj","updatedObj","validateForm","isValid","simpleValidator","prev","_b","prepareToSaveCreate","addedRecords","enrichForSave","transformedUsers","record","prepareToUpdate","_c","enrichForUpdate","_d","prepareToApprove","payloadForApprove","finalJsonObject","initialJsonObject","OPERATION_TYPE","ENTITY","stringifyObject","onSaveClick","STATIC_MASTER_TYPE_TOAST_TEXT","enrichedObj","TransactionApproval","res","err","parseStandardAPIErrorMessage","onCancelClick","linkProductConfigurationTransaction","onApproveClick","StaticMasterTypeService","onBackClick","onEditClick","onAddRow","_f","_e","_g","_h","validateField","getPageTitle","getUserList","searchTerm","searchParam","results","AUTOCOMPLETE_MESSAGES","debounce","func","delay","searchUsers","itemTemplate","item","jsxs","jsx","LoadingIcon","Text","renderUser","rowData","AutoComplete","DROPDOWN_STYLE_TYPE","e","selectedUser","rowDataObj","validate","editModuleCardMenu","setEditModuleCardMenu","deleteRow","onToggleMenu","prevState","renderIsUserActive","CheckBox","CHECKBOX_STYLE_TYPE","renderActions","ButtonBox","BUTTON_TYPE","ProductConfigProductService","IncomeSchemeService","BusinessRuleService","SimpleReactValidator","getStandardValidator","messageReplace","ruleApplied","productName","productScheme","description","reasons","AclGuard","PageTitle","Fragment","InputBox","INPUT_STYLE_TYPE","SimpleDropDown","InputTextArea","EditableTableV2","Column","ToastCustom","MenuBox","ErrorDialog","PageTransactionApprovalCMScreen$1","withRouter"],"mappings":"mxCA6DA,MAAMA,GAAmCC,GAAsB,cA+B7D,KAAM,CAACC,EAASC,CAAU,EAAIC,WAA8B,CAC1D,KAAM,GACN,YAAa,GACb,kBAAmB,GACnB,YAAa,GACb,cAAe,GACf,YAAa,GACb,QAAS,GACT,YAAa,CAAC,CAAA,CACf,EAEKC,EAAa,CACjB,SAAU,GAEV,KAAM,CACJ,IAAK,EACP,CAAA,EAEI,CAACC,GAAaC,EAAW,EAAIH,WAAsB,CACvD,KAAM,GACN,YAAa,GACb,kBAAmB,GACnB,YAAa,GACb,cAAe,GACf,YAAa,GACb,QAAS,EAAA,CACV,EACK,CAACI,EAAUC,CAAW,EAAIL,EAAAA,SAASM,EAAU,MAAM,EACnD,CAAG,CAAAC,CAAW,EAAIP,WAA8B,MAAS,EACzD,CAACQ,GAAaC,EAAc,EAAIT,EAAA,SAAc,CAAE,CAAA,EAChD,CAACU,GAAYC,EAAa,EAAIX,EAAA,SAAc,CAAE,CAAA,EAC9C,CAACY,GAAUC,EAAW,EAAIb,EAAA,SAAc,CAAE,CAAA,EAC1C,CAACc,EAAKC,EAAM,EAAIf,WAAc,EAAE,EAChCgB,EAAeC,SAA6B,IAAI,EAChD,CAACC,EAAcC,CAAe,EAAInB,WAAS,EAAE,EAC7C,CAACoB,GAAUC,CAAW,EAAIrB,WAAc,cAAc,EACtD,CAACsB,EAAqBC,CAAsB,EAAIvB,EAAAA,SAASwB,EAAiB,OAAO,EACjF,CAACC,EAAcC,CAAe,EAAI1B,WAAS,EAAE,EAC7C,CAAC2B,EAAcC,CAAe,EAAI5B,WAAS,EAAK,EAChD,CAAC6B,GAAcC,CAAe,EAAI9B,WAAS,EAAK,EAChD+B,EAAkBd,SAAO,IAAI,EAC7B,CAACe,GAAoBC,CAAqB,EAAIjC,WAAS,EAAK,EAC5D,CAACkC,GAAUC,CAAW,EAAInC,EAAA,SAAc,CAAE,CAAA,EAC1C,CAACoC,GAAcC,EAAe,EAAIrC,EAAAA,SAAc,MAAS,EACzD,CAACsC,GAAaC,EAAc,EAAIvC,WAAS,EAAI,EAC7CwC,EAAoBvB,SAAO,IAAI,EAMrCwB,EAAAA,UAAU,IAAM,OACd,MAAMC,EAGFC,GAAY,MAAM9C,EAAM,SAAS,MAAM,EACvC6C,GAAA,MAAAA,EAAQ,OAAQA,GAAA,YAAAA,EAAQ,QAAS,QACnCrC,EAAYqC,EAAO,IAAI,EAEzB3B,GAAO2B,EAAO,GAAG,EACFE,KACKC,KACRC,KAERR,IAAeI,EAAO,MAAQ,YAClBK,EAAA/B,GAAA,YAAAA,EAAA,UAAA,MAAA+B,EAAS,OAAO9C,GAC9BsC,GAAe,EAAK,EAExB,EAAG,CAAE,CAAA,EAELE,EAAAA,UAAU,IAAM,CACV3B,GACakC,IACjB,EACC,CAAClC,CAAG,CAAC,EAER2B,EAAAA,UAAU,IAAM,CACd,QAAQ,IAAI,QAAQ,CAAA,EACnB,CAAC3C,CAAO,CAAC,EAEZ2C,EAAAA,UAAU,IAAM,OACVV,GAAA,MAAAA,EAAiB,SAAWN,IAAiB,MAE/CsB,EAAAhB,GAAA,YAAAA,EAAiB,UAAjB,MAAAgB,EAA0B,eAE3B,EAAA,CAACtB,EAAcH,EAAqBK,CAAY,CAAC,EAEpDc,EAAAA,UAAU,IAAM,CACVvB,GACFe,EAAsB,EAAI,CAC5B,EACC,CAACf,CAAY,CAAC,EAOX,MAAA+B,EAAqBC,GAAe,CACxC,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAA,EAAUF,EAAM,OAE9BnD,EAAYsD,GAAqB,CAC/B,IAAIC,EAAa,CACf,GAAGD,EACH,CAACF,CAAI,EAAGC,CAAA,EAGV,OAAID,IAAS,cAEEG,EAAA,CACX,GAAGA,EACH,cAAe,KACf,kBAAmB,UAAA,EAEZH,IAAS,kBAELG,EAAA,CACX,GAAGA,EACH,YAAa,KACb,kBAAmB,uBAAA,GAIhBA,CAAA,CACR,CAAA,EAQGC,EAAe,SAAY,SAC/B,IAAIC,EAAU,GAEd,OADUA,IAAAT,EAAAU,GAAA,YAAAA,EAAiB,UAAjB,YAAAV,EAA0B,aAAc,GAC9CS,IAGUjD,EAACmD,GAAS,CAACA,CAAI,GAC3BC,EAAAF,GAAA,YAAAA,EAAiB,UAAjB,MAAAE,EAA0B,eACdpD,EAACmD,GAAS,CAACA,CAAI,EACpB,GACT,EAGIE,GAAsB,IAAM,SAC1B,MAAAC,EAAe,CAAC,KAAId,EAAA/B,EAAa,UAAb,YAAA+B,EAAsB,oBAAqB,CAAA,CAAG,EAElEe,EAAqB,CACzB,KAAMhE,EAAQ,KACd,KAAM,CACJ,IAAKA,EAAQ,WACf,EACA,kBAAmB,GACnB,QAAS,CACP,IAAKA,EAAQ,WACf,EACA,oBAAqB,CACnB,IAAKA,EAAQ,aACf,EACA,OAAQA,EAAQ,QAChB,YAAaA,EAAQ,YACrB,MAAO,CACL,CACE,KAAM,CACJ,IAAK,EACP,EACA,SAAU,EACZ,CACF,CAAA,EAEIiE,EAAmBF,EAAa,IAAKG,IAAY,CACrD,KAAM,CACJ,IAAKA,EAAO,KAAK,GACnB,EACA,SAAUA,EAAO,QACjB,EAAA,EACE,OAAAF,GAAA,MAAAA,EAAe,QAAQ,IACzBA,EAAc,kBAAoB,WACzBH,EAAAG,GAAA,YAAAA,EAAe,sBAAf,MAAAH,EAAoC,IAC7CG,EAAc,kBAAoB,wBAElCA,EAAc,kBAAoB,KAGhChE,GAAA,MAAAA,EAAS,YACXgE,EAAc,oBAAsB,MAC3BhE,GAAA,MAAAA,EAAS,gBAGlBgE,EAAc,oBAAsB,MACpCA,EAAc,QAAU,MAI1BA,EAAc,MAAQC,EAEfD,CAAA,EAGHG,GAAkB,IAAM,aAC5B,MAAMJ,EAAe,CACnB,KAAId,EAAA/B,EAAa,UAAb,YAAA+B,EAAsB,oBAAqB,CAAC,EAChD,KAAIY,EAAA3C,EAAa,UAAb,YAAA2C,EAAsB,sBAAuB,CAAC,EAClD,KAAIO,EAAAlD,EAAa,UAAb,YAAAkD,EAAsB,sBAAuB,CAAC,CAAA,EAG9CC,EAAuB,CAC3B,IAAArD,EACA,KAAMhB,EAAQ,KACd,KAAM,CACJ,IAAKA,EAAQ,WACf,EACA,kBAAmB,GACnB,QAAS,CACP,IAAKA,EAAQ,WACf,EACA,oBAAqB,CACnB,IAAKA,EAAQ,aACf,EACA,OAAQA,EAAQ,QAChB,YAAaA,EAAQ,YACrB,MAAO,CACL,CACE,KAAM,CACJ,IAAK,EACP,EACA,SAAU,EACZ,CACF,CAAA,EAGIiE,EAAmBF,EAAa,IAAKG,IAAY,CACrD,KAAM,CACJ,IAAKA,EAAO,KAAK,GACnB,EACA,SAAUA,EAAO,SACjB,IAAKA,EAAO,GACZ,EAAA,EAGF,OAAAG,EAAgB,MAAQJ,EAEpBI,GAAA,MAAAA,EAAiB,QAAQ,IAC3BA,EAAgB,kBAAoB,WAC3BC,EAAAD,GAAA,YAAAA,EAAiB,sBAAjB,MAAAC,EAAsC,IAC/CD,EAAgB,kBAAoB,wBAEpCA,EAAgB,kBAAoB,KAGlCrE,GAAA,MAAAA,EAAS,YACXqE,EAAgB,oBAAsB,MAC7BrE,GAAA,MAAAA,EAAS,gBAGlBqE,EAAgB,oBAAsB,MACtCA,EAAgB,QAAU,MAGrBA,CAAA,EAGHE,GAAmB,IAAM,cAC7B,MAAMR,EAAe,CACnB,KAAId,EAAA/B,EAAa,UAAb,YAAA+B,EAAsB,oBAAqB,CAAC,EAChD,KAAIY,EAAA3C,EAAa,UAAb,YAAA2C,EAAsB,sBAAuB,CAAC,EAClD,KAAIO,EAAAlD,EAAa,UAAb,YAAAkD,EAAsB,sBAAuB,CAAC,CAAA,EAG9CI,EAAyB,CAC7B,KAAMxE,EAAQ,KACd,IAAAgB,EACA,KAAM,CACJ,IAAKhB,EAAQ,WACf,EACA,kBAAmB,GACnB,QAAS,CACP,IAAKA,EAAQ,WACf,EACA,oBAAqB,CACnB,IAAKA,EAAQ,aACf,EACA,OAAQA,EAAQ,QAChB,YAAaA,EAAQ,YACrB,MAAO,CACL,CACE,KAAM,CACJ,IAAK,EACP,EACA,SAAU,EACZ,CACF,CAAA,EAEIiE,EAAmBF,EAAa,IAAKG,KAAY,CACrD,KAAM,CACJ,IAAKA,GAAO,KAAK,GACnB,EACA,SAAUA,GAAO,QACjB,EAAA,EACEM,GAAA,MAAAA,EAAmB,QAAQ,IAC7BA,EAAkB,kBAAoB,WAC7BF,GAAAE,GAAA,YAAAA,EAAmB,sBAAnB,MAAAF,GAAwC,IACjDE,EAAkB,kBAAoB,wBAEtCA,EAAkB,kBAAoB,KAGpCxE,GAAA,MAAAA,EAAS,YACXwE,EAAkB,oBAAsB,MAC/BxE,GAAA,MAAAA,EAAS,gBAGlBwE,EAAkB,oBAAsB,MACxCA,EAAkB,QAAU,MAI9BA,EAAkB,MAAQP,EACtB,IAAAD,EACJ,MAAMS,EAAkBD,EAClBE,EAAoBtE,GAEtB,OAAAE,IAAaE,EAAU,OACTwD,EAAA,CACd,KAAMhE,EAAQ,KAEd,cAAe2E,GAAe,OAC9B,OAAQC,GAAO,0BACf,iBAAkB,GAClB,eAAgBC,EAAgBJ,CAAe,EAC/C,WAAYI,EAAgBJ,CAAe,EAC3C,gBAAiBzE,EAAQ,OAAA,EAGXgE,EAAA,CACd,KAAMhE,EAAQ,KACd,IAAAgB,EACA,cAAe2D,GAAe,OAC9B,OAAQC,GAAO,0BACf,iBAAkBC,EAAgBH,CAAiB,EACnD,eAAgBG,EAAgBJ,CAAe,EAC/C,WAAYI,EAAgBJ,CAAe,EAC3C,gBAAiBzE,EAAQ,OAAA,EAGtBgE,CAAA,EAGHc,GAAc,SAAY,CAC9BzD,EAAgB,EAAE,EAClB,IAAIqC,EAAU,GAGd,GAFAA,EAAU,MAAMD,IAEZ,CAACC,EAAS,CACZnC,EAAY,WAAW,EACvBE,EAAuBC,EAAiB,UAAU,EAClDE,EAAgBmD,EAA8B,KAAK,EACnDjD,EAAgB,CAACD,CAAY,EAC7B,OAEE,GAAAvB,IAAaE,EAAU,OAAQ,CACjC,MAAMwE,EAAclB,KAEpB,OAAOmB,EAAoB,KAAKD,CAAW,EACxC,KAAME,GAAQ,CACbzD,EAAuBC,EAAiB,OAAO,EAC/CE,EAAgBmD,EAA8B,KAAK,EACnDjD,EAAgB,CAACD,CAAY,EAC7BG,EAAgB,EAAI,CAAA,CACrB,EACA,MAAOmD,GAAQ,CACE9D,EAAA+D,EAA6BD,CAAG,CAAC,CAAA,CAClD,MACE,CACL,MAAMH,EAAmBb,KAEzB,OAAOc,EAAoB,OAAOjE,EAAKgE,CAAW,EAC/C,KAAME,GAAQ,CACbzD,EAAuBC,EAAiB,OAAO,EAC/CE,EAAgBmD,EAA8B,KAAK,EACnDjD,EAAgB,CAACD,CAAY,EAC7BG,EAAgB,EAAI,CAAA,CACrB,EACA,MAAOmD,GAAQ,CACE9D,EAAA+D,EAA6BD,CAAG,CAAC,CAAA,CAClD,EACL,EAGIE,GAAgB,IAAM,CAC1BtF,EAAM,SAASuF,CAAmC,CAAA,EAG9CC,GAAiB,SAAY,CACjClE,EAAgB,EAAE,EAClB,IAAIqC,EAAU,GAGd,GAFAA,EAAU,MAAMD,IAEZ,CAACC,EAAS,CACZnC,EAAY,WAAW,EACvBE,EAAuBC,EAAiB,UAAU,EAClDE,EAAgBmD,EAA8B,KAAK,EACnDjD,EAAgB,CAACD,CAAY,EAC7B,OAEF,MAAMmD,EAAcT,KACpB,OAAOiB,GAAwB,QAAQR,CAAW,EAC/C,KAAME,GAAQ,CACbzD,EAAuBC,EAAiB,OAAO,EAC/CE,EAAgBmD,EAA8B,iBAAiB,EAC/DjD,EAAgB,CAACD,CAAY,EAC7BG,EAAgB,EAAI,CAAA,CACrB,EACA,MAAOmD,GAAQ,CACE9D,EAAA+D,EAA6BD,CAAG,CAAC,CAAA,CAClD,CAAA,EAGCM,GAAc,IAAM,CACxB1F,EAAM,SAASuF,CAAmC,CAAA,EAG9CI,GAAc,IAAM,CACxBnF,EAAYC,EAAU,IAAI,CAAA,EAGtBmF,GAAW,IAAM,QAEP1C,EAAA/B,GAAA,YAAAA,EAAA,UAAA,MAAA+B,EAAS,OAAO9C,EAAU,EASpC+C,GAAiB,IAAM,CAC3B+B,EAAoB,eAAejE,CAAG,EACnC,KAAMkE,GAAa,qBACV,QAAA,IAAIA,EAAI,KAAM,UAAU,EAErBjF,EAAA,CACT,GAAGD,EACH,KAAMkF,EAAI,KAAK,KACf,cAAarB,GAAAZ,EAAAiC,EAAI,OAAJ,YAAAjC,EAAU,OAAV,YAAAY,EAAgB,MAAO,GACpC,aAAaO,EAAAc,EAAI,KAAK,UAAT,YAAAd,EAAkB,IAC/B,eAAeE,EAAAY,EAAI,KAAK,sBAAT,YAAAZ,EAA8B,IAC7C,YAAaY,EAAI,KAAK,YACtB,QAASA,EAAI,KAAK,MAAA,CACnB,EAEW7E,GAAA,CACV,GAAGL,EACH,KAAMkF,EAAI,KAAK,KACf,cAAaU,GAAAC,EAAAX,EAAI,OAAJ,YAAAW,EAAU,OAAV,YAAAD,EAAgB,MAAO,GACpC,aAAaE,EAAAZ,EAAI,KAAK,UAAT,YAAAY,EAAkB,IAC/B,eAAeC,EAAAb,EAAI,KAAK,sBAAT,YAAAa,EAA8B,IAC7C,YAAab,EAAI,KAAK,YACtB,QAASA,EAAI,KAAK,MAAA,CACnB,CAAA,CACF,EACA,MAAOC,GAAQ,CACd,QAAQ,IAAIA,CAAG,CAAA,CAChB,CAAA,EAECa,EAAiB,GAAW,UAChCnC,EAAAF,GAAA,YAAAA,EAAiB,UAAjB,MAAAE,EAA0B,gBAAeZ,EAAA,iBAAG,SAAH,YAAAA,EAAW,KAAI,EAEpDgD,GAAe,IAAM,CACzB,OAAQ3F,EAAU,CAChB,KAAKE,EAAU,OACN,MAAA,kDACT,KAAKA,EAAU,KACN,MAAA,gDACT,KAAKA,EAAU,KACN,MAAA,gDACT,QACS,MAAA,iDACX,CAAA,EAEI0F,GAAeC,GAAuB,CAG1C,MAAMC,EAAc,0CAA0CD,IAG5DlB,EAAoB,YAAY,EAAY,GAAOmB,CAAW,EAAE,KAAMlB,GAAQ,SAC5E,MAAMmB,IAAUxC,GAAAZ,EAAAiC,EAAI,OAAJ,YAAAjC,EAAU,UAAV,YAAAY,EAAmB,QAAS,EAAI,CAAC,GAAGqB,EAAI,KAAK,OAAO,EAAI,CAAA,EAEpEmB,EAAQ,SAAW,EACrBhE,EAAY,CAAC,CAAE,KAAMiE,GAAsB,QAAA,CAAU,CAAC,EAE1CjE,EAAA,CAAC,GAAGgE,CAAO,CAAC,CAC1B,CACD,CACH,EAEIE,GAAW,CAACC,EAAWC,IAAe,CAC1C,aAAanE,EAAY,EACTC,GAAA,WAAWiE,EAAMC,CAAK,CAAC,CAAA,EAEnCC,GAAetD,GAAe,CAClC,MAAM+C,EAAa/C,EAAM,MACrBA,EAAM,MAAM,QAAU,EAEfmD,GAAAL,GAAYC,CAAU,EAAG,IAAI,EAEtC9D,EAAY,CAAE,CAAA,CAChB,EAEIsE,GAAgBC,GAChBA,EAAK,OAAS,OAEdC,EAAA,KAAC,MAAI,CAAA,UAAU,iDACb,SAAA,CAAAC,MAAC,OAAI,IAAKC,GAAa,IAAI,cAAc,UAAU,WAAW,EAC7DD,EAAA,IAAAE,EAAA,CAAK,UAAU,+BAA+B,MAAM,aAAa,CACpE,CAAA,CAAA,EAIFH,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAA,IAACE,EAAK,CAAA,UAAU,0BAA0B,MAAOJ,EAAK,KAAM,QAC3DI,EAAK,CAAA,UAAU,mCAAmC,MAAOJ,EAAK,KAAM,CAEvE,CAAA,CAAA,EAKEK,GAAcC,GAAiB,OAEjC,OAAAJ,EAAAA,IAAC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAACK,GAAA,CACC,MAAOD,GAAA,YAAAA,EAAS,KAAK,KACrB,QAASE,GAAoB,QAC7B,YAAahF,GACb,eAAgBsE,GAChB,SAAWW,GAAM,OACT,MAAAC,EAAeD,EAAE,OAAO,MACxBE,EAAa,CAAE,GAAGL,GACpB,OAAOG,EAAE,OAAO,OAAU,WACjBE,EAAA,KAAK,IAAMD,EAAa,KAErCC,EAAW,KAAK,KAAOD,GACVrE,EAAA/B,EAAA,UAAA,MAAA+B,EAAS,iBAAiBsE,EACzC,EACA,aAAAZ,GACA,MAAM,OACN,OAAQa,GACR,SAAUlH,IAAaE,EAAU,KACjC,UAAS,GACT,KAAM,QAAQ0G,EAAQ,MACtB,YAAYjE,EAAAU,GAAA,YAAAA,EAAiB,UAAjB,YAAAV,EAA0B,QACpC,QAAQiE,EAAQ,MAChBA,GAAA,YAAAA,EAAS,KAAK,KACd,gBAEF,gBAAgB,4BAAA,CAEpB,CAAA,CAAA,CAAA,EAGE,CAACO,EAAoBC,EAAqB,EAAIxH,WAAS,CAC3D,CACE,MAAO,CACL,CACE,MAAO,SACP,UAAW,EACb,CACF,CACF,CAAA,CACD,EACKyH,GAAY,CAACT,EAAcnH,IAAe,QAEhCkD,EAAA/B,GAAA,YAAAA,EAAA,UAAA,MAAA+B,EAAS,UAAUiE,GACjC,WAAW,IAAM,UAECjE,EAAA/B,GAAA,YAAAA,EAAc,UAAd,MAAA+B,EAAuB,mBAEhBY,EAAA3C,GAAA,YAAAA,EAAc,UAAd,MAAA2C,EAAuB,qBAG7C,CAAC,CAAA,EAEA+D,GAAe,CAACV,EAAcnH,EAAYsH,IAAW,OACzD,QAAQ,IAAII,CAAkB,EAC9BC,GAAuBG,GAAc,CACnC,CACE,GAAGA,EAAU,CAAC,EACd,MAAO,CACL,CACE,GAAGA,EAAU,CAAC,EAAE,MAAM,CAAC,EACvB,QAAS,IAAM,CACbF,GAAUT,CAAc,CAC1B,CACF,CACF,CACF,CAAA,CACD,GAGkBjE,EAAAP,GAAA,YAAAA,EAAA,UAAA,MAAAO,EAAS,OAAOoE,GACnC,QAAQ,IAAII,CAAkB,CAAA,EAE1BK,GAAqB,CAACZ,EAAcnH,IAEtC+G,EAAA,IAACiB,GAAA,CACC,KAAK,WACL,QAASC,GAAoB,QAC7B,SAAWX,GAAM,OACT,MAAAE,EAAa,CAAE,GAAGL,GACbK,EAAA,SAAWF,EAAE,OAAO,SAClBpE,EAAA/B,EAAA,UAAA,MAAA+B,EAAS,iBAAiBsE,EACzC,EACA,QAASL,EAAQ,SACjB,SAAU5G,IAAaE,EAAU,IAAA,CAAA,EAIjCyH,GAAgB,CAACf,EAAcnH,IAEjC+G,EAAAA,IAAC,MAAI,CAAA,UAAU,6CACb,SAAAA,EAAA,IAACoB,EAAA,CACC,WAAYC,EAAY,KACxB,QAAUd,GAAWO,GAAaV,EAASnH,EAAOsH,CAAC,EACnD,UAAU,yDAAA,CAEd,CAAA,CAAA,EAGEvE,GAAiB,IAAM,CAC3BsF,GAA4B,OAAO,EAChC,KAAMlD,GAAa,CAClBvE,GAAe,CAAC,GAAGuE,EAAI,KAAK,OAAO,CAAO,CAAA,CAC3C,EACA,MAAOC,GAAQ,CACd,QAAQ,IAAI,KAAK,CAAA,CAClB,CAAA,EAECpC,GAAsB,IAAM,CAChCsF,GAAoB,OAAO,EACxB,KAAMnD,GAAa,CAClBrE,GAAc,CAAC,GAAGqE,EAAI,KAAK,OAAO,CAAO,CAAA,CAC1C,EACA,MAAOC,GAAQ,CACd,QAAQ,IAAI,KAAK,CAAA,CAClB,CAAA,EAECnC,GAAc,IAAM,CACxBsF,GAAoB,OAAO,EACxB,KAAMpD,GAAa,CAClBnE,GAAY,CAAC,GAAGmE,EAAI,KAAK,OAAO,CAAO,CAAA,CACxC,EACA,MAAOC,GAAQ,CACd,QAAQ,IAAI,KAAK,CAAA,CAClB,CAAA,EAOCxB,EAAkBxC,EAAA,OACtB,IAAIoH,GAAqB,CACvB,WAAY,CAAE,GAAGC,IAAuB,EACxC,GAAGC,GAAe,EAClB,gBAAiB,CAAE,YAAa,IAAMhI,EAAamD,GAAS,CAACA,CAAI,CAAE,CAAA,CACpE,CAAA,EAGG4D,GAAY,GAAW,QAC3BvE,EAAAU,GAAA,YAAAA,EAAiB,UAAjB,MAAAV,EAA0B,eAAe,EAAE,OAAO,KAAI,EASlD,CAAE,KAAAI,EAAM,YAAAqF,EAAa,YAAAC,GAAa,cAAAC,GAAe,YAAAC,GAAa,QAAAC,EAAY,EAAA9I,EAEhF,OACG8G,EAAA,IAAAiC,GAAA,CACC,SAAClC,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,4CACb,SAAA,CAACC,EAAAA,IAAAkC,GAAA,CAAU,MAAO/C,GAAgB,CAAA,CAAA,EAEjCa,EAAA,IAAA,MAAA,CAAI,UAAU,OACZ,SAAaxG,IAAAE,EAAU,QAAUF,IAAaE,EAAU,KACtDqG,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAC,EAAA,IAACoB,EAAU,CAAA,WAAYC,EAAY,eAAgB,QAAS9C,GAAe,EAE3EyB,EAAA,IAACoB,EAAA,CACC,WAAYC,EAAY,aACxB,kBAAmBrD,EAAA,CACrB,CAAA,EACF,QACC,MACC,CAAA,SAAAgC,EAAA,IAACoB,EAAA,CACC,UAAU,kBACV,WAAYC,EAAY,kBACxB,kBAAmB5C,EAAA,CAAA,EAEvB,CAAA,CAAA,CACF,EAGEsB,EAAAA,KAAAoC,EAAA,SAAA,CAAA,SAAA,CAACnC,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAACA,EAAAA,IAAAoB,EAAA,CAAU,WAAYC,EAAY,aAAc,QAAS1C,EAAA,CAAa,CACzE,CAAA,EACAqB,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAACoB,EAAA,CACC,WAAYC,EAAY,aACxB,UAAU,eACV,QAASzC,EAAA,CAAA,EAEb,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,EACF,EACCmB,EAAAA,KAAAkC,GAAA,CAAS,SAAU,CAAE,KAAM,CAACvI,EAAU,KAAMA,EAAU,MAAM,EAAE,SAASF,CAAQ,GAC9E,SAAA,CAACuG,EAAAA,KAAA,MAAA,CAAI,UAAU,yBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,4BACb,SAAAA,EAAA,IAACoC,GAAA,CACC,MAAM,8CACN,KAAK,OACL,QAASC,EAAiB,UAC1B,SAAUhG,EACV,MAAOE,EACP,SAAU/C,IAAaE,EAAU,KACjC,OAAQwF,EACR,YAAY/C,GAAAU,GAAA,YAAAA,EAAiB,UAAjB,YAAAV,GAA0B,QAAQ,OAAQI,EAAM,mBAAkB,CAAA,EAElF,EACAyD,EAAAA,IAAC,MAAI,CAAA,UAAU,4BACb,SAAAA,EAAA,IAACsC,EAAA,CACC,MAAM,8CACN,KAAK,cACL,QAAShC,GAAoB,UAC7B,QAAStG,GACT,SAAUqC,EACV,MAAOuF,EACP,YAAY,OACZ,YAAY,MACZ,SAAUpI,IAAaE,EAAU,KACjC,OAAQwF,EACR,YAAYnC,GAAAF,GAAA,YAAAA,EAAiB,UAAjB,YAAAE,GAA0B,QACpC,cACA6E,EACA,YACF,CAAA,EAEJ,EAEA5B,EAAAA,IAAC,MAAI,CAAA,UAAU,EAAG,CAAA,EAClBA,EAAAA,IAAC,MAAI,CAAA,UAAU,EAAG,CAAA,EAIlBD,EAAAA,KAAC,MAAI,CAAA,UAAU,8CACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,QACb,SAAAA,EAAA,IAACsC,EAAA,CACC,MAAM,iDACN,KAAK,cACL,QAASD,EAAiB,UAC1B,QAASzI,GACT,SAAUyC,EACV,MAAOwF,GACP,YAAY,OACZ,YAAY,MACZ,SAAUrI,IAAaE,EAAU,IAAA,CAAA,EAErC,QACC,MACC,CAAA,SAAAsG,EAAA,IAAC,OAAI,UAAU,2CAA2C,cAAE,CAC9D,CAAA,EACAA,EAAAA,IAAC,MAAI,CAAA,UAAU,QACb,SAAAA,EAAA,IAACsC,EAAA,CACC,MAAM,uDACN,KAAK,gBACL,QAASxI,GACT,QAASuI,EAAiB,UAC1B,SAAUhG,EACV,MAAOyF,GACP,YAAY,OACZ,YAAY,MACZ,SAAUtI,IAAaE,EAAU,IAAA,CAAA,EAErC,CAAA,EACF,EAEAsG,EAAAA,IAAC,MAAI,CAAA,UAAU,kCAAmC,CAAA,EAClDA,EAAAA,IAAC,MAAI,CAAA,UAAU,WAAY,CAAA,EAE3BA,EAAAA,IAAC,MAAI,CAAA,UAAU,yCACb,SAAAA,EAAA,IAACuC,GAAA,CACC,MAAM,qDACN,KAAK,cACL,QAASF,EAAiB,UAC1B,SAAU,IACV,SAAUhG,EACV,MAAO0F,GACP,SAAUvI,IAAaE,EAAU,IAAA,CAAA,EAErC,EACAsG,EAAAA,IAAC,MAAI,CAAA,UAAU,0CACb,SAAAA,EAAA,IAACuC,GAAA,CACC,MAAM,iDACN,KAAK,UACL,QAASF,EAAiB,UAC1B,SAAU,IACV,SAAUhG,EACV,MAAO2F,GACP,OAAQ9C,EACR,YAAY5B,GAAAT,GAAA,YAAAA,EAAiB,UAAjB,YAAAS,GAA0B,QAAQ,UAAW0E,GAAS,aAClE,SAAUxI,IAAaE,EAAU,IAAA,CAAA,EAErC,CAAA,EACF,EACAqG,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAC,EAAA,IAACE,EAAA,CACC,MAAM,YACN,UAAU,8DAAA,CACZ,QACCkB,EAAU,CAAA,WAAYC,EAAY,cAAe,QAASxC,GAAU,CAAA,EACvE,EACAmB,EAAAA,IAAC,MAAI,CAAA,UAAU,UACb,SAAAD,EAAA,KAACyC,GAAA,CACC,UAAU,MACV,0BAA2BrE,EAAoB,YAC/C,IAAK/D,EACL,OAAQ,gCAAgCF,IACxC,KAAMV,IAAaE,EAAU,OAAS,SAAW,SAEjD,SAAA,CAAAsG,EAAA,IAACyC,EAAA,CACC,UAAU,iEACV,OAAQ,QACR,KAAMtC,EAAA,CACR,EACAH,EAAA,IAACyC,EAAA,CACC,UAAU,gEACV,OAAO,SACP,KAAMzB,EAAA,CACR,EACAhB,EAAA,IAACyC,EAAA,CACC,UAAU,8DACV,OAAQ,UACR,MAAO,CAAE,SAAU,OAAQ,MAAO,MAAO,EACzC,KAAMtB,EAAA,CACR,CAAA,CAAA,CAAA,EAEJ,CAAA,EACF,EACAnB,EAAAA,IAAC,MAAI,CAAA,UAAU,GACb,SAAAA,EAAA,IAAC0C,GAAA,CACC,SAAAlI,GACA,IAAKW,EACL,UAAWN,EACX,QAASH,EACT,SAAU,IAAM,CACVO,IACFhC,EAAM,SAASuF,CAAmC,CAEtD,CAAA,CAAA,EAEJ,EACAwB,EAAA,IAAC2C,GAAA,CACC,UAAU,8IACV,MAAOhC,EACP,IAAK/E,CAAA,CACP,EACAoE,EAAA,IAAC4C,GAAA,CACC,OAAQ,IAAMvH,EAAsB,EAAK,EACzC,QAASD,GACT,aAAAd,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EAEeuI,GAAAC,GAAW9J,EAA+B"}