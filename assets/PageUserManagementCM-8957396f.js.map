{"version":3,"file":"PageUserManagementCM-8957396f.js","sources":["../../src/views/masterData/UserManagement/UserManagementCreateViewEdit/PageUserManagementCM.tsx"],"sourcesContent":["import LoadingIcon from \"assets/img/common/Loading.svg\";\nimport AclGuard from \"components/AclGuard/AclGuard\";\nimport AutoComplete from \"components/AutoComplete/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox\";\nimport EditableTableV2, { Column } from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox\";\nimport InputTextArea from \"components/InputTextArea\";\nimport MenuBox from \"components/MenuBox/MenuBox\";\nimport PageTitle from \"components/PageTitle/PageTitle\";\nimport SimpleDropDown from \"components/SimpleDropDown/SimpleDropDown\";\nimport Text from \"components/Text/Text\";\nimport ToastCustom from \"components/Toast/Toast\";\nimport { withRouter } from \"hoc/withRouter\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkUserManagement } from \"routes\";\nimport RolesService from \"services/AccessControl/RolesService\";\nimport OrgStructureApprovalService from \"services/masterdata/OrgStruct/Approval/Approval\";\nimport OrgStructureBranchService from \"services/masterdata/OrgStruct/Branch/Branch\";\nimport OrgStructureDepartmentService from \"services/masterdata/OrgStruct/Department/Department\";\nimport OrgStructureDesignationService from \"services/masterdata/OrgStruct/Designation/Designation\";\nimport OrgStructureLevelService from \"services/masterdata/OrgStruct/Level/Level\";\nimport StaticMasterDataService from \"services/masterdata/StaticMaster/StaticMasterDataService\";\nimport StaticMasterTypeService from \"services/masterdata/StaticMaster/StaticMasterTypeService\";\nimport UserService from \"services/masterdata/User/UserService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n  stringifyObject,\n  validateGetAPIResponse,\n} from \"utils/CommonUtil\";\nimport {\n  AUTOCOMPLETE_MESSAGES,\n  BUTTON_TYPE,\n  DROPDOWN_STYLE_TYPE,\n  ENTITY,\n  INPUT_STYLE_TYPE,\n  OPERATION_TYPE,\n  PAGE_MODE,\n  REPORTING_TYPES,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\n\nconst UserManagementCreateViewEdit = (props: any) => {\n  const [uid, setUid] = useState<any>(\"\");\n  const [timeOutLocal, setTimeOutLocal] = useState<any>(undefined);\n  const [pageMode, setPageMode] = useState<any>(PAGE_MODE.CREATE);\n  const [, forceUpdate] = useState<undefined | boolean>(undefined); //NOSONAR\n  const [reportingList, setReportingList] = useState<any>([]);\n  const [reportingToList, setReportingToList] = useState<any>([]);\n  const userManagementRef = useRef<any>(null);\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n  const initialObj: any = {\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    designation: \"\",\n    department: \"\",\n    reportingManager: \"\",\n    description: \"\",\n    reason: \"\",\n  };\n\n  const [pageObj, setPageObj] = useState<any>(initialObj);\n  const [initialPageObj, setInitPageObj] = useState({\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    designation: {\n      uid: \"\",\n    },\n    department: {\n      uid: \"\",\n    },\n    parent: {\n      uid: \"\",\n    },\n    description: \"\",\n    reason: \"\",\n    uid: uid,\n    sahayyaUserType: \"EMPLOYEE_USER\", // fixed\n  });\n  const [designationList, setDesignationList] = useState<any>([]);\n  const [departmentList, setDepartmentList] = useState<any>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [suggestionsTemplate, setSuggestionsTemplate] = useState([]);\n  const [firstTimeRendering, setFirstTimeRendering] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [navigateBack, setNavigateBack] = useState(false);\n  const [roleList, setRoleLIst] = useState<any>([]);\n  const [deviationDepartmentList, setDeviationDepartmentList] = useState<any>([]);\n  const [deviationDepartmentApprovalList, setDeviationDepartmentApprovalList] = useState<any>([]);\n\n  const [position, setPosition] = useState<any>(\"bottom-right\");\n  const toastMessageRef = useRef(null);\n  const simpleValidator = useRef(\n    new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    })\n  );\n\n  // INITIAL OBJECTS FOR TABLE ROWS\n\n  const initialObjForOrganisationReporting = {\n    reporting: {\n      uid: \"\",\n    },\n\n    branch: {\n      uid: \"\",\n    },\n    orgRepLevel: {\n      uid: \"\",\n    },\n    roleId: \"\",\n    deviationDepartment: {\n      uid: \"\",\n    },\n    deviationApprovalLevel: {\n      uid: \"\",\n    },\n\n    isActive: true,\n  };\n\n  /*\n    ----------- HOOKS -----------\n  */\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n    } = queryString.parse(props.location?.search);\n    setUid(parsed.uid);\n\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n      if (parsed.mode === PAGE_MODE.CREATE && firstTimeRendering) {\n        userManagementRef?.current?.addRow(initialObjForOrganisationReporting);\n        setFirstTimeRendering(false);\n      }\n    }\n\n    getReportingList();\n\n    getDeviationDepartmentList();\n    getDeviationDepartmentApprovalList();\n    getDepartmentList();\n    getDesignationList();\n    getRoleList();\n  }, []);\n\n  useEffect(() => {\n    if (uid) {\n      getInitialData();\n    }\n  }, [uid]);\n  useEffect(() => {\n    console.log(\"first\");\n  }, [pageMode]);\n  const getInitialData = async () => {\n    UserService.getPartnerUserByID(uid)\n\n      .then((res: any) => {\n        setPageObj({\n          ...pageObj,\n          uid: uid,\n          name: res.data?.name,\n          lastName: res.data?.lastName,\n          email: res.data?.email,\n          designation: res.data?.designation.uid,\n          reportingManager: res.data?.parent ?? \"\",\n          department: res.data.designation.department.uid,\n\n          sahayyaUserType: \"EMPLOYEE_USER\", // fixed\n          reason: res.data?.reason,\n          description: res.data?.description,\n        });\n        setInitPageObj({\n          ...initialPageObj,\n          uid: uid,\n          name: res.data?.name,\n          lastName: res.data?.lastName,\n          email: res.data?.email,\n          designation: res.data?.designation.uid,\n          parent: res.data?.parent.uid ?? null,\n          sahayyaUserType: \"EMPLOYEE_USER\", // fixed\n          reason: res.data?.reason,\n          description: res.data?.description,\n        });\n        // alert(res.data.product.name);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n  /*\n    ----------- Initial API Call -----------\n  */\n\n  const getReportingList = () => {\n    StaticMasterDataService.getAll(0, 1000, \"isActive=true&staticMasterType.code=REPORT\")\n      .then((res: any) => {\n        setReportingList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  const getDepartmentList = () => {\n    OrgStructureDepartmentService.getAll(0, 1000)\n      .then((res: any) => {\n        setDepartmentList([...res.data.results] ?? []);\n        console.log(res, \"check\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const getDesignationList = () => {\n    OrgStructureDesignationService.getAll(0, 1000)\n      .then((res: any) => {\n        setDesignationList([...res.data.results] ?? []);\n        console.log(res, \"check\");\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n\n  /*\n    ----------- Handler -----------\n  */\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n\n    setPageObj((prevPageObj: any) => {\n      const updatedObj = {\n        ...prevPageObj,\n        [name]: value,\n      };\n      return updatedObj;\n    });\n  };\n\n  /*\n    ----------- Button click -----------\n  */\n  const onCancelClick = () => {\n    props.navigate(linkUserManagement);\n  };\n  const onBackClick = () => {\n    props.navigate(linkUserManagement);\n  };\n\n  const onApproveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n    isValid = await validateForm();\n    if (!isValid) {\n      return;\n    }\n    const enrichedObj = prepareToApprove();\n    return StaticMasterTypeService.approve(enrichedObj)\n      .then((res) => {\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SENT_FOR_APPROVAL);\n        setTriggerToast(!triggerToast);\n        setNavigateBack(true);\n      })\n      .catch((err) => {\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      });\n  };\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will fix later\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  const prepareToApprove = () => {\n    const addedRecordForUserMaNAGEMENT = [\n      ...(userManagementRef.current?.getAddedRecords() ?? []),\n      ...(userManagementRef.current?.getDeletedRecords() ?? []),\n      ...(userManagementRef.current?.getUpdatedRecords() ?? []),\n    ];\n    const simplifiedArray = addedRecordForUserMaNAGEMENT.map((item) => {\n      let simplifiedUid;\n\n      if (item.deviationApprovalLevel?.uid === \"\") {\n        item.deviationApprovalLevel = null;\n      }\n      if (item.deviationDepartment?.uid === \"\") {\n        item.deviationDepartment = null;\n      }\n\n      if (item.branch && item.branch.uid) {\n        simplifiedUid = {\n          uid: item.branch.uid,\n        };\n        return {\n          ...item,\n          branch: simplifiedUid,\n        };\n      } else if (item.orgRepLevel && item.orgRepLevel.uid) {\n        simplifiedUid = {\n          uid: item.orgRepLevel.uid,\n        };\n        return {\n          ...item,\n          orgRepLevel: simplifiedUid,\n        };\n      }\n      // Handle the case where both branch and orgRepLevel or their uid properties are undefined or null\n      return { ...item };\n    });\n\n    const objectForSave: any = {\n      uid: uid,\n      name: pageObj?.name,\n      lastName: pageObj?.lastName,\n      email: pageObj?.email,\n      designation: {\n        uid: pageObj?.designation,\n      },\n      parent: {\n        uid: pageObj?.reportingManager?.uid,\n      },\n      sahayyaUserType: \"EMPLOYEE_USER\", // fixed\n      reason: pageObj?.reason,\n      description: pageObj?.description,\n    };\n    if (pageObj?.reportingManager.uid == \"\") {\n      objectForSave.parent = null;\n    }\n\n    // validated\n\n    objectForSave.roles = simplifiedArray;\n\n    let enrichForSave;\n    const finalJsonObject = objectForSave;\n    const initialJsonObject = initialObj;\n\n    if (pageMode === PAGE_MODE.CREATE) {\n      enrichForSave = {\n        name: pageObj.name,\n        operationType: OPERATION_TYPE.CREATE,\n        entity: ENTITY.USER_PROFILE,\n        initialStateJson: \"\",\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reason,\n      };\n    } else {\n      enrichForSave = {\n        name: pageObj.name,\n        uid: uid,\n        operationType: OPERATION_TYPE.UPDATE,\n        entity: ENTITY.USER_PROFILE,\n        initialStateJson: stringifyObject(initialJsonObject),\n        finalStateJson: stringifyObject(finalJsonObject),\n        reqPayload: stringifyObject(finalJsonObject),\n        reasonForChange: pageObj.reason,\n      };\n    }\n    return enrichForSave;\n  };\n  const prepareForSave = () => {\n    const addedRecordForUserMaNAGEMENT = [\n      ...(userManagementRef.current?.getAddedRecords() ?? []),\n      ...(userManagementRef.current?.getDeletedRecords() ?? []),\n      ...(userManagementRef.current?.getUpdatedRecords() ?? []),\n    ];\n\n    const simplifiedArray = addedRecordForUserMaNAGEMENT.map((item) => {\n      let simplifiedUid;\n\n      if (item.deviationApprovalLevel?.uid === \"\") {\n        item.deviationApprovalLevel = null;\n      }\n      if (item.deviationDepartment?.uid === \"\") {\n        item.deviationDepartment = null;\n      }\n      if (item.branch && item.branch.uid) {\n        simplifiedUid = {\n          uid: item.branch.uid,\n        };\n        return {\n          ...item,\n          branch: simplifiedUid,\n        };\n      } else if (item.orgRepLevel && item.orgRepLevel.uid) {\n        simplifiedUid = {\n          uid: item.orgRepLevel.uid,\n        };\n        return {\n          ...item,\n          orgRepLevel: simplifiedUid,\n        };\n      }\n\n      // Handle the case where both branch and orgRepLevel or their uid properties are undefined or null\n      return { ...item };\n    });\n\n    const objectForSave: any = {\n      uid: uid,\n      name: pageObj?.name,\n      lastName: pageObj?.lastName,\n      email: pageObj?.email,\n      designation: {\n        uid: pageObj?.designation,\n      },\n      parent: {\n        uid: pageObj?.reportingManager.uid,\n      },\n      sahayyaUserType: \"EMPLOYEE_USER\", // fixed\n      reason: pageObj?.reason,\n      description: pageObj?.description,\n    };\n\n    if (pageObj?.reportingManager.uid === undefined) {\n      objectForSave.parent = null;\n    }\n\n    // validated\n\n    objectForSave.roles = simplifiedArray;\n    return objectForSave;\n  };\n  const validateForm = async () => {\n    let isValid = false;\n\n    isValid = simpleValidator?.current?.allValid() ?? false;\n\n    if (isValid) {\n      return isValid;\n    } else {\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n      return false;\n    }\n  };\n  const onSaveClick = async () => {\n    setErrorMessage(\"\");\n    let isValid = false;\n\n    isValid = await validateForm();\n\n    if (!isValid) {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      return;\n    }\n\n    if (simpleValidator?.current?.allValid()) {\n      const enrichedObj = prepareForSave();\n      if (pageMode === PAGE_MODE.CREATE) {\n        return UserService.save(enrichedObj)\n          .then((res) => {\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setToastMessage(\"Saved Successfully\");\n            setTriggerToast(!triggerToast);\n            setNavigateBack(true);\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n          });\n      } else {\n        return UserService.update(uid, enrichedObj)\n          .then((res) => {\n            setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n            setToastMessage(\"Saved Successfully\");\n            setTriggerToast(!triggerToast);\n            setNavigateBack(true);\n          })\n          .catch((err) => {\n            setErrorMessage(parseStandardAPIErrorMessage(err));\n            setNavigateBack(false);\n          });\n      }\n    } else {\n      setPosition(\"top-right\");\n      setToastMessageVariant(TOAST_STYLE_TYPE.QUATERNARY);\n      setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.ERROR);\n      setTriggerToast(!triggerToast);\n      forceUpdate((prev) => !prev);\n      simpleValidator?.current?.showMessages();\n      forceUpdate((prev) => !prev);\n    }\n  };\n\n  const onAddRoles = () => {\n    userManagementRef?.current?.addRow(initialObjForOrganisationReporting);\n  };\n  /*\n    ----------- Validators -----------\n  */\n  const validateField = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n  const validate = (e: any) => {\n    simpleValidator?.current?.showMessageFor(e?.target?.name);\n  };\n  /*\n    ----------- HELPER FUNCTIONS -----------\n  */\n\n  const searchAutoCompleteReportingManager = async (event: any) => {\n    let suggestionsTemplate: any = [];\n    setIsLoading(true);\n    await UserService.getAllReportingManager(\n      0,\n      10,\n      `&isActive=true&sahayyaUserType=EMPLOYEE_USER&name:lk=${event.query}`\n    ).then((res) => {\n      if (validateGetAPIResponse(res)) {\n        suggestionsTemplate = [...res.data.results];\n        setIsLoading(false);\n      }\n    });\n    setSuggestionsTemplate(suggestionsTemplate);\n  };\n\n  const itemTemplateForReportingManager = (item: any) => {\n    if (item.name === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39\">\n          <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n          <Text className=\"mt-2 text-primary-labelColor\" label=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item.name} />\n      </div>\n    );\n  };\n\n  const itemTemplate = (item: any) => {\n    if (item.name === undefined) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-39\">\n          <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n          <Text className=\"mt-2 text-primary-labelColor\" label=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"flex flex-col\">\n        <Text className=\"text-primary-labelColor\" label={item.name} />\n        <Text className=\"text-secondary-gray-500 text-xxs\" label={item.code} />\n        <Text className=\"text-secondary-gray-500 text-xxs\" label={item.emailId} />\n      </div>\n    );\n  };\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"label.userManagement.create\";\n      case PAGE_MODE.VIEW:\n        return \"label.userManagement.view\";\n      case PAGE_MODE.EDIT:\n        return \"label.userManagement.edit\";\n      default:\n        return \"label.userManagement.create\";\n    }\n  };\n  const debounce = (func: any, delay: any) => {\n    clearTimeout(timeOutLocal);\n    setTimeOutLocal(setTimeout(func, delay));\n  };\n\n  // helpers Actions\n  const onDeleteCommonFunctionForEveryTable = (ref: any, rowData: any) => {\n    ref.current?.deleteRow(rowData);\n    simpleValidator.current = new SimpleReactValidator({\n      validators: { ...getStandardValidator() },\n      ...messageReplace(),\n      autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n    });\n  };\n\n  const getReportingToList = (event: any, rowData: any, start?: any, totalRecords?: any) => {\n    const selectedReporting = reportingList.find((key: any) => key.uid == rowData.reporting.uid);\n    const startValue = start ?? 0;\n    const limit = 500;\n    const searchParam = `isActive=true&name:lk=${event.query}&`;\n    totalRecords = totalRecords ?? 100;\n    if (selectedReporting.code === REPORTING_TYPES.REPORT_ORGANIZATION_REPORTING_LEVELS) {\n      // organisation reporting level\n      if (totalRecords >= startValue) {\n        OrgStructureLevelService.getAll(startValue, limit, searchParam).then((res) => {\n          const results = res.data?.results?.length > 0 ? [...res.data.results] : [];\n\n          if (results.length === 0) {\n            setReportingToList([{ name: AUTOCOMPLETE_MESSAGES.NO_OrgReportingLevel }]);\n          } else {\n            setReportingToList([...results]);\n          }\n        });\n      }\n    } else {\n      // Branches\n      if (totalRecords >= startValue) {\n        OrgStructureBranchService.getAll(startValue, limit, searchParam).then((res) => {\n          const results = res.data?.results?.length > 0 ? [...res.data.results] : [];\n\n          if (results.length === 0) {\n            setReportingToList([{ name: AUTOCOMPLETE_MESSAGES.NO_Branch }]);\n          } else {\n            setReportingToList([...results]);\n          }\n        });\n      }\n    }\n  };\n\n  const searchReportingTo = (event: any, rowData: any) => {\n    if (event.query.length >= 1) {\n      debounce(() => getReportingToList(event, rowData), 1200);\n    } else {\n      setReportingList([]);\n    }\n  };\n\n  // ----------------- TABLE COLUMN RENDERING FUNCTIONS -----------------\n\n  const getRoleList = () => {\n    RolesService.getAll(0, 1000, \"isActive=true&\")\n      .then((res: any) => {\n        setRoleLIst([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  const getDeviationDepartmentList = () => {\n    OrgStructureDepartmentService.getAll(0, 1000, \"&isActive=true\")\n      .then((res: any) => {\n        setDeviationDepartmentList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  const getDeviationDepartmentApprovalList = () => {\n    OrgStructureApprovalService.getAll(0, 1000, \"&isActive=true\")\n      .then((res: any) => {\n        setDeviationDepartmentApprovalList([...res.data.results] ?? []);\n      })\n      .catch((err) => {\n        console.log(\"err\");\n      });\n  };\n  const renderReporting = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`reporting${rowData.uid}`}\n        options={reportingList}\n        optionLabel=\"name\"\n        optionValue=\"uid\"\n        value={rowData?.reporting.uid}\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        onChange={(e) => {\n          const rowDataObj = { ...rowData };\n          rowDataObj.reporting.uid = e.target.value;\n\n          const selectedReporting = reportingList.find(\n            (key: any) => key.uid == rowDataObj.reporting.uid\n          );\n          //\n          rowDataObj.selectedReportType = selectedReporting.code;\n          if (selectedReporting.code === REPORTING_TYPES.REPORT_ORGANIZATION_REPORTING_LEVELS) {\n            rowDataObj.branch = null;\n            rowDataObj.orgRepLevel = { uid: \"\", name: \"\" };\n          } else {\n            rowDataObj.orgRepLevel = null;\n            rowDataObj.branch = { uid: \"\", name: \"\" };\n          }\n          //  here when we change the reporting then reporting to will be empty\n          userManagementRef.current?.reportDataChange(rowDataObj);\n        }}\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `reporting${rowData.uid}`,\n          rowData.reporting.uid,\n          \"autocomplete\"\n        )}\n      />\n    );\n  };\n  const renderReportingTo = (rowData: any) => {\n    const key = rowData.branch ? \"branch\" : \"orgRepLevel\";\n    const validationRuleName = rowData.temp\n      ? rowData.selectedReportType === REPORTING_TYPES.REPORT_ORGANIZATION_REPORTING_LEVELS\n        ? \"orgRepLevel\"\n        : rowData.selectedReportType === REPORTING_TYPES.REPORT_BRANCH\n        ? \"branch\"\n        : \"\"\n      : rowData?.branch\n      ? \"branch\"\n      : rowData.orgRepLevel\n      ? \"orgRepLevel\"\n      : \"\";\n\n    return (\n      <AutoComplete\n        name={`${validationRuleName}-${rowData.uid}`}\n        value={rowData[validationRuleName]?.name}\n        variant={DROPDOWN_STYLE_TYPE.PRIMARY}\n        suggestions={reportingToList}\n        completeMethod={(event) => searchReportingTo(event, rowData)}\n        onChange={(e: any) => {\n          const rowDataObj = { ...rowData };\n          if (typeof e.target.value === \"object\") {\n            rowDataObj[validationRuleName] = e.target.value;\n          } else {\n            rowDataObj[validationRuleName] = {};\n            rowDataObj[validationRuleName].name = e.target.value;\n          }\n          userManagementRef.current?.reportDataChange(rowDataObj);\n        }}\n        itemTemplate={itemTemplate}\n        field=\"name\"\n        onBlur={validate}\n        validation={\n          validationRuleName\n            ? simpleValidator?.current?.message(\n                `${validationRuleName}-${rowData.uid}`,\n                rowData[validationRuleName]?.uid,\n                \"autocomplete\"\n              )\n            : false\n        }\n      />\n    );\n  };\n  const renderRoles = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`roleId-${rowData.uid}`}\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        onChange={(e) => {\n          const rowDataObj = { ...rowData };\n          rowDataObj.roleId = e.target.value;\n          userManagementRef.current?.reportDataChange(rowDataObj);\n        }}\n        value={rowData.roleId}\n        options={roleList}\n        optionLabel=\"name\"\n        optionValue=\"id\"\n        onBlur={validate}\n        validation={simpleValidator?.current?.message(\n          `roleId-${rowData.uid}`,\n          rowData.roleId,\n          \"mandatory\"\n        )}\n      />\n    );\n  };\n  const renderDeviationApprovalLevel = (rowData: any) => {\n    return (\n      <SimpleDropDown\n        name={`deviationApprovalLevel-${rowData.uid}`}\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        onChange={(e) => {\n          const rowDataObj = { ...rowData };\n          rowDataObj.deviationApprovalLevel.uid = e.target.value;\n          userManagementRef.current?.reportDataChange(rowDataObj);\n        }}\n        value={rowData?.deviationApprovalLevel?.uid}\n        options={deviationDepartmentApprovalList}\n        optionLabel=\"name\"\n        optionValue=\"uid\"\n        // onBlur={validate}\n        // validation={simpleValidator?.current?.message(\n        //   `deviationApprovalLevel-${rowData.uid}`,\n        //   rowData.deviationApprovalLevel.uid,\n        //   \"mandatory\"\n        // )}\n      />\n    );\n  };\n  const renderDeviationDepartment = (rowData: any) => {\n    console.log(rowData);\n    return (\n      <SimpleDropDown\n        name={`deviationDepartment-${rowData.uid}`}\n        variant={INPUT_STYLE_TYPE.SECONDARY}\n        onChange={(e) => {\n          const rowDataObj = { ...rowData };\n          if (!rowDataObj.deviationDepartment) {\n            rowDataObj.deviationDepartment = { uid: \"\" };\n          }\n          rowDataObj.deviationDepartment.uid = e.target.value;\n          userManagementRef.current?.reportDataChange(rowDataObj);\n        }}\n        value={rowData?.deviationDepartment?.uid ?? \"\"}\n        options={deviationDepartmentList}\n        optionLabel=\"name\"\n        optionValue=\"uid\"\n        // onBlur={validate}\n        // validation={simpleValidator?.current?.message(\n        //   `deviationDepartment-${rowData.uid}`,\n        //   rowData?.deviationDepartment?.uid,\n        //   \"mandatory\"\n        // )}\n      />\n    );\n  };\n  const renderIsUserActive = (rowData: any) => {\n    return <>{rowData.isActive ? \"Yes\" : \"No\"}</>;\n  };\n\n  const onToggleMenu = (rowData: any, e: any) => {\n    const isActive = {\n      label: \"Deactivate\",\n      command: () => {\n        if (pageMode !== PAGE_MODE.CREATE) {\n          const rowDataObj = { ...rowData };\n          console.log(rowDataObj);\n          rowDataObj.isActive = false;\n          userManagementRef.current?.reportDataChange(rowDataObj);\n        }\n      },\n    };\n\n    const isNotActive = {\n      label: \"Activate\",\n      command: () => {\n        if (pageMode !== PAGE_MODE.CREATE) {\n          const rowDataObj = { ...rowData };\n          console.log(rowDataObj);\n          rowDataObj.isActive = true;\n          userManagementRef.current?.reportDataChange(rowDataObj);\n        }\n      },\n    };\n\n    const deleteOption = {\n      label: \"Delete\",\n      command: () => {\n        onDeleteCommonFunctionForEveryTable(userManagementRef, rowData);\n      },\n    };\n\n    const item = rowData.isActive ? isActive : isNotActive;\n\n    // Merge the delete option with existing menu options\n    const list = [\n      {\n        items: pageMode !== PAGE_MODE.CREATE ? [item, deleteOption] : [deleteOption],\n      },\n    ];\n    setEditModuleCardMenu(list);\n\n    // @ts-ignore: Will fix later\n    activeRowRef?.current?.toggle(e);\n  };\n  // Existing state initialization (assuming editModuleCardMenu is a state)\n  const [editModuleCardMenu, setEditModuleCardMenu] = useState<any>([\n    {\n      items: [\n        {\n          label: \"Activate\",\n          className: \"\",\n        },\n        {\n          label: \"Deactivate\",\n          className: \"\",\n        },\n      ],\n    },\n  ]);\n  // Toggler Render all details here\n  const renderActions = (rowData: any) => {\n    return (\n      <div className=\"\">\n        <ButtonBox\n          buttonType={BUTTON_TYPE.MENU}\n          onClick={(e) => {\n            onToggleMenu(rowData, e);\n          }}\n          className=\"!rounded-none bg-transparent !hover:bg-primary-gray-300 \"\n        />\n      </div>\n    );\n  };\n  const activeRowRef = useRef(null);\n  const {\n    name,\n    lastName,\n    designation,\n    department,\n    email,\n    reportingManager,\n    reason,\n    city,\n    description,\n  } = pageObj;\n  return (\n    <AclGuard>\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex items-center justify-between w-full\">\n          <PageTitle title={getPageTitle()} />\n\n          <div className=\"flex\">\n            {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <div className=\"flex gap-10\">\n                <div className=\"flex gap-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.CANCEL_OUTLINE} onClick={onCancelClick} />\n\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.SAVE_OUTLINE}\n                    onClickWithLoader={onSaveClick}\n                  />\n                </div>\n                <div>\n                  <ButtonBox\n                    className=\"approve-primary\"\n                    buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                    onClickWithLoader={onApproveClick}\n                  />\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"mr-5\">\n                  <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n                </div>\n                <div className=\"\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                    className=\"blue-primary\"\n                    onClick={onEditClick}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <AclGuard override={{ read: [PAGE_MODE.VIEW, PAGE_MODE.REVIEW].includes(pageMode) }}>\n          <div className=\"grid grid-cols-8 gap-3\">\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-2\">\n              <InputBox\n                label=\"input.userManagement.name\"\n                name=\"name\"\n                placeholder=\"Enter name\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={name}\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\"name\", name, \"mandatory\")}\n              />\n            </div>\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-2\">\n              <InputBox\n                label=\"input.userManagement.lastName\"\n                name=\"lastName\"\n                placeholder=\"Enter Last name\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={lastName}\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\"lastName\", lastName, \"mandatory\")}\n              />\n            </div>\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-2\">\n              <InputBox\n                label=\"input.userManagement.email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                onChange={handleInputChange}\n                value={email}\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\"email\", email, \"mandatory\")}\n                disabled={pageMode === PAGE_MODE.EDIT}\n              />\n            </div>\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-2\">\n              <SimpleDropDown\n                label=\"label.userManagement.designation\"\n                name=\"designation\"\n                placeholder=\"Select\"\n                variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                options={designationList}\n                onChange={handleInputChange}\n                value={designation}\n                optionLabel=\"name\"\n                optionValue=\"uid\"\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\n                  \"designation\",\n                  designation,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-2\">\n              <SimpleDropDown\n                label=\"label.userManagement.department\"\n                name=\"department\"\n                placeholder=\"Select\"\n                variant={DROPDOWN_STYLE_TYPE.SECONDARY}\n                options={departmentList}\n                onChange={handleInputChange}\n                value={department}\n                optionLabel=\"name\"\n                optionValue=\"uid\"\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\n                  \"department\",\n                  department,\n                  \"mandatory\"\n                )}\n              />\n            </div>\n\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-2\">\n              <AutoComplete\n                label=\"input.userManagement.reportingManager\"\n                name=\"reportingManager\"\n                placeholder=\"Type to search\"\n                field=\"name\"\n                value={reportingManager}\n                variant={INPUT_STYLE_TYPE.PRIMARY}\n                suggestions={suggestionsTemplate}\n                completeMethod={searchAutoCompleteReportingManager}\n                onChange={handleInputChange}\n                itemTemplate={itemTemplateForReportingManager}\n                loader={isLoading}\n              />\n            </div>\n            <div></div>\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-4\">\n              <InputTextArea\n                label=\"input.productConfiguration.transaction.description\"\n                name=\"description\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={description}\n              />\n            </div>\n            <div className=\"col-span-8 sm:col-span-8 md:col-span-4\">\n              <InputTextArea\n                label=\"input.productConfiguration.transaction.reasons\"\n                name=\"reason\"\n                variant={INPUT_STYLE_TYPE.SECONDARY}\n                maxCount={200}\n                onChange={handleInputChange}\n                value={reason}\n                onBlur={validateField}\n                validation={simpleValidator?.current?.message(\"reason\", reason, \"mandatory\")}\n              />\n            </div>\n          </div>\n\n          <div className=\"flex flex-col gap-3 \">\n            <div className=\"flex justify-between w-full\">\n              <Text label={\"label.userManagement.roles\"} className=\"font-bold\" />\n              <ButtonBox buttonType={BUTTON_TYPE.ICON_TEXT_ROW} onClick={onAddRoles} />\n            </div>\n            <EditableTableV2\n              uniqueKey=\"uid\"\n              standardDataFormatPromise={UserService.getAllUsers}\n              ref={userManagementRef}\n              search={`&userProfile.uid=${uid}`}\n              mode={pageMode === PAGE_MODE.CREATE ? \"CREATE\" : \"UPDATE\"}\n            >\n              <Column\n                className=\"w-1/6 h-12 pl-6 text-xs text-left text-primary-ptext-1000\"\n                header={\"Reporting*\"}\n                body={renderReporting}\n              />\n              <Column\n                className=\"w-1/6 h-12 pl-6 text-xs text-left text-primary-ptext-1000\"\n                header={\"Reporting To*\"}\n                body={renderReportingTo}\n              />\n              <Column\n                className=\"w-1/6 h-12 pl-6 text-xs text-left text-primary-ptext-1000\"\n                header={\"Role*\"}\n                body={renderRoles}\n              />\n              <Column\n                className=\"w-1/6 h-12 pl-6 text-xs text-left text-primary-ptext-1000\"\n                header=\"Deviation Department\"\n                body={renderDeviationDepartment}\n              />\n              <Column\n                className=\"w-1/6 h-12 pl-6 text-xs text-left text-primary-ptext-1000\"\n                header=\"Deviation Approval Level\"\n                body={renderDeviationApprovalLevel}\n              />\n              <Column\n                className=\"w-2/12 h-12 text-xs text-left text-primary-ptext-1000 pl-18\"\n                header=\"IsActive\"\n                body={renderIsUserActive}\n              />\n              <Column\n                className=\"w-1/6 h-12 -ml-5 text-xs text-left text-primary-ptext-1000 \"\n                header=\"Actions\"\n                body={renderActions}\n              />\n            </EditableTableV2>\n          </div>\n        </AclGuard>\n        <div className=\"\">\n          <ToastCustom\n            position={position}\n            ref={toastMessageRef}\n            toastText={toastMessage}\n            variant={toastMessageVariant}\n            onRemove={() => {\n              if (navigateBack) {\n                props.navigate(linkUserManagement);\n              }\n            }}\n          />\n          <ErrorDialog\n            onHide={() => setShowDialogAPIError(false)}\n            visible={showDialogAPIError}\n            errorMessage={errorMessage}\n          />\n          <MenuBox\n            className=\"w-20 bg-white font-Roboto text-xs text-primary-pText-1300 pt-2 rounded-lg mt-0.5 flex justify-center align-center shadow-autoCompletePanel\"\n            model={editModuleCardMenu}\n            ref={activeRowRef}\n          />\n        </div>\n      </div>\n    </AclGuard>\n  );\n};\n\nexport default withRouter(UserManagementCreateViewEdit);\n"],"names":["UserManagementCreateViewEdit","props","uid","setUid","useState","timeOutLocal","setTimeOutLocal","pageMode","setPageMode","PAGE_MODE","forceUpdate","reportingList","setReportingList","reportingToList","setReportingToList","userManagementRef","useRef","showDialogAPIError","setShowDialogAPIError","initialObj","pageObj","setPageObj","initialPageObj","setInitPageObj","designationList","setDesignationList","departmentList","setDepartmentList","isLoading","setIsLoading","suggestionsTemplate","setSuggestionsTemplate","firstTimeRendering","setFirstTimeRendering","errorMessage","setErrorMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","toastMessage","setToastMessage","triggerToast","setTriggerToast","navigateBack","setNavigateBack","roleList","setRoleLIst","deviationDepartmentList","setDeviationDepartmentList","deviationDepartmentApprovalList","setDeviationDepartmentApprovalList","position","setPosition","toastMessageRef","simpleValidator","SimpleReactValidator","getStandardValidator","messageReplace","prev","initialObjForOrganisationReporting","useEffect","parsed","queryString","_a","_b","getReportingList","getDeviationDepartmentList","getDeviationDepartmentApprovalList","getDepartmentList","getDesignationList","getRoleList","getInitialData","UserService","res","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","err","StaticMasterDataService","OrgStructureDepartmentService","OrgStructureDesignationService","handleInputChange","event","name","value","prevPageObj","onCancelClick","linkUserManagement","onBackClick","onApproveClick","isValid","validateForm","enrichedObj","prepareToApprove","StaticMasterTypeService","STATIC_MASTER_TYPE_TOAST_TEXT","parseStandardAPIErrorMessage","onEditClick","simplifiedArray","item","simplifiedUid","objectForSave","enrichForSave","finalJsonObject","initialJsonObject","OPERATION_TYPE","ENTITY","stringifyObject","prepareForSave","onSaveClick","onAddRoles","validateField","validate","searchAutoCompleteReportingManager","validateGetAPIResponse","itemTemplateForReportingManager","jsxs","jsx","LoadingIcon","Text","itemTemplate","getPageTitle","debounce","func","delay","onDeleteCommonFunctionForEveryTable","ref","rowData","getReportingToList","start","totalRecords","selectedReporting","key","startValue","limit","searchParam","REPORTING_TYPES","OrgStructureLevelService","results","AUTOCOMPLETE_MESSAGES","OrgStructureBranchService","searchReportingTo","RolesService","OrgStructureApprovalService","renderReporting","SimpleDropDown","INPUT_STYLE_TYPE","e","rowDataObj","renderReportingTo","validationRuleName","AutoComplete","DROPDOWN_STYLE_TYPE","renderRoles","renderDeviationApprovalLevel","renderDeviationDepartment","renderIsUserActive","Fragment","onToggleMenu","isActive","isNotActive","deleteOption","list","setEditModuleCardMenu","activeRowRef","editModuleCardMenu","renderActions","ButtonBox","BUTTON_TYPE","lastName","designation","department","email","reportingManager","reason","city","description","AclGuard","PageTitle","InputBox","InputTextArea","EditableTableV2","Column","ToastCustom","ErrorDialog","MenuBox","PageUserManagementCM","withRouter"],"mappings":"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"}