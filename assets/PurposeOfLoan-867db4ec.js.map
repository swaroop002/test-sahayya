{"version":3,"file":"PurposeOfLoan-867db4ec.js","sources":["../../src/views/transaction/PageCAM/Sections/OverallComments/OverallComments.tsx","../../src/views/transaction/PageCAM/Sections/PurposeOfLoan/PurposeOfLoan.tsx"],"sourcesContent":["import AclGuard from \"components/AclGuard\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport RichTextEditor from \"components/RichTextEditor/RichTextEditor\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport ToastCustom from \"components/Toast\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport CamService from \"services/transaction/CamService\";\nimport { parseStandardAPIErrorMessage, validatePutAPIResponse } from \"utils/CommonUtil\";\nimport { PAGE_MODE, STATIC_MASTER_TYPE_TOAST_TEXT, TOAST_STYLE_TYPE } from \"utils/Constant\";\n\ninterface IProps {\n  isLoading: boolean;\n  data: IOverallCommentsPageObj;\n  payloadInfo: { loanUid: string; stageUid: string };\n  getDataOnCancel: () => void;\n}\n\nexport interface IOverallCommentsPageObj {\n  camUid: string;\n  editorText: string;\n  errorMessage: string;\n}\n\nexport const intialOverallCommentsTextEditorPageObj: IOverallCommentsPageObj = {\n  camUid: \"\",\n  editorText: \"\",\n  errorMessage: \"\",\n};\n\ninterface IEditorRef {\n  editor: {\n    getContent: () => void;\n    plugins: {\n      wordcount: {\n        body: {\n          getCharacterCount: () => any;\n        };\n      };\n    };\n  };\n}\n\nconst OverallComments: React.FC<IProps> = (props: IProps) => {\n  const { data, payloadInfo, isLoading, getDataOnCancel } = props;\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState<IOverallCommentsPageObj>({\n    ...intialOverallCommentsTextEditorPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  //error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // ref\n  const toastMessageRef = useRef(null);\n  const editorRef = useRef<IEditorRef>(null);\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      ...data,\n    }));\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n  const handleEditorValidation = (e: any) => {\n    if (validateEditor()) {\n      if (pageObj?.errorMessage) {\n        setPageObj((prevPageObj) => ({ ...prevPageObj, errorMessage: \"\" }));\n      }\n    }\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validateEditor = () => {\n    const wordcount = editorRef?.current?.editor?.plugins?.wordcount?.body.getCharacterCount();\n\n    if (wordcount < 1) {\n      setPageObj((prevState) => {\n        return {\n          ...prevState,\n          errorMessage: \"Mandatory\",\n        };\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (validateEditor()) {\n      try {\n        if (editorRef.current?.editor?.getContent()) {\n          const payload = enrichForOverallComments();\n          const res = await CamService.updateOverallComments(payload);\n\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setTriggerToast(!triggerToast);\n            setPageMode(PAGE_MODE.VIEW);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const enrichForOverallComments = () => {\n    const payloadData = {\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      remarksOverall: editorRef.current?.editor?.getContent() ?? \"\",\n    };\n    return payloadData;\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Renders\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Renders\n    -------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        title={\"\"}\n        pageMode={pageMode}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\"grid grid-cols-4 gap-3 \">\n              <div className=\"col-span-4\">\n                <RichTextEditor\n                  ref={editorRef}\n                  validation={{ errorMessage: pageObj.errorMessage }}\n                  initialValue={pageObj.editorText}\n                  onChange={handleEditorValidation}\n                  height={\"400x\"}\n                  disabled={pageMode === PAGE_MODE.VIEW}\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default OverallComments;\n","import AclGuard from \"components/AclGuard\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport RichTextEditor from \"components/RichTextEditor/RichTextEditor\";\nimport SaveComponent from \"components/Save/SaveComponent\";\nimport SkeletonCustom from \"components/Skeleton/Skeleton\";\nimport ToastCustom from \"components/Toast\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport CamService from \"services/transaction/CamService\";\nimport { parseStandardAPIErrorMessage, validatePutAPIResponse } from \"utils/CommonUtil\";\nimport { PAGE_MODE, STATIC_MASTER_TYPE_TOAST_TEXT, TOAST_STYLE_TYPE } from \"utils/Constant\";\n\ninterface IProps {\n  isLoading: boolean;\n  data: IPurposeOfLoanPageObj;\n  payloadInfo: { loanUid: string; stageUid: string };\n  getDataOnCancel: () => void;\n}\n\nexport interface IPurposeOfLoanPageObj {\n  camUid: string;\n  editorText: string;\n  errorMessage: string;\n}\n\nexport const initialPurposeOfLoanTextEditorPageObj: IPurposeOfLoanPageObj = {\n  camUid: \"\",\n  editorText: \"\",\n  errorMessage: \"\",\n};\n\ninterface IEditorRef {\n  editor: {\n    getContent: () => void;\n    plugins: {\n      wordcount: {\n        body: {\n          getCharacterCount: () => any;\n        };\n      };\n    };\n  };\n}\n\nconst PurposeOfLoan: React.FC<IProps> = (props: IProps) => {\n  const { data, payloadInfo, isLoading, getDataOnCancel } = props;\n  /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n  const [pageObj, setPageObj] = useState<IPurposeOfLoanPageObj>({\n    ...initialPurposeOfLoanTextEditorPageObj,\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.VIEW);\n\n  //error handling states\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n\n  // ref\n  const toastMessageRef = useRef(null);\n  const editorRef = useRef<IEditorRef>(null);\n\n  // --------------------------- global variables ---------------------- //\n\n  /*\n     -------------------------------------------------------\n       useEffect\n     -------------------------------------------------------\n   */\n\n  useEffect(() => {\n    setPageObj((prevObj) => ({\n      ...prevObj,\n      ...data,\n    }));\n  }, [data]);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore: will be fixed in future\n      toastMessageRef?.current?.showFunction();\n      setToastMessage(\"\");\n    }\n  }, [toastMessage, triggerToast]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setShowDialogAPIError(true);\n    }\n  }, [errorMessage]);\n\n  /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n      Handlers\n    -------------------------------------------------------\n  */\n  const handleEditorValidation = (e: any) => {\n    if (validateEditor()) {\n      if (pageObj?.errorMessage) {\n        setPageObj((prevPageObj) => ({ ...prevPageObj, errorMessage: \"\" }));\n      }\n    }\n  };\n\n  /* \n    --------------------------------------------------------\n    Validators:\n    --------------------------------------------------------\n  */\n\n  const validateEditor = () => {\n    const wordcount = editorRef?.current?.editor?.plugins?.wordcount?.body.getCharacterCount();\n\n    if (wordcount < 1) {\n      setPageObj((prevState) => {\n        return {\n          ...prevState,\n          errorMessage: \"Mandatory\",\n        };\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  /*\n    -------------------------------------------------------\n      Button Click Handlers\n    -------------------------------------------------------\n  */\n\n  const onSave = async () => {\n    if (validateEditor()) {\n      try {\n        if (editorRef.current?.editor?.getContent()) {\n          const payload = enrichForPurposeOfLoan();\n          const res = await CamService.updateLoanPurpose(payload);\n\n          if (validatePutAPIResponse(res)) {\n            setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n            setTriggerToast(!triggerToast);\n            setPageMode(PAGE_MODE.VIEW);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    }\n  };\n\n  const onEdit = () => setPageMode(PAGE_MODE.EDIT);\n\n  const onCancel = () => {\n    getDataOnCancel?.();\n    setPageMode(PAGE_MODE.VIEW);\n  };\n\n  /*\n    -------------------------------------------------------\n      Helper Functions\n    -------------------------------------------------------\n  */\n\n  const enrichForPurposeOfLoan = () => {\n    const payloadData = {\n      loan: {\n        uid: payloadInfo.loanUid,\n      },\n      stage: {\n        uid: payloadInfo.stageUid,\n      },\n      purposeOfLoanEndUse: editorRef.current?.editor?.getContent() ?? \"\",\n    };\n    return payloadData;\n  };\n\n  /*\n    -------------------------------------------------------\n      Sectional Renders\n    -------------------------------------------------------\n  */\n\n  /*\n    -------------------------------------------------------\n    Main Renders\n    -------------------------------------------------------\n  */\n\n  return (\n    <div>\n      <SaveComponent\n        title={\"\"}\n        pageMode={pageMode}\n        onSave={onSave}\n        onCancel={onCancel}\n        onEdit={onEdit}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <SkeletonCustom height=\"19.375rem\" width=\"100%\" borderRadius=\"8px\" animation=\"wave\" />\n        ) : (\n          <AclGuard override={{ read: pageMode === PAGE_MODE.VIEW }}>\n            <div className=\"grid grid-cols-4 gap-3 \">\n              <div className=\"col-span-4\">\n                <RichTextEditor\n                  ref={editorRef}\n                  validation={{ errorMessage: pageObj.errorMessage }}\n                  initialValue={pageObj.editorText}\n                  onChange={handleEditorValidation}\n                  height={\"400x\"}\n                  disabled={pageMode === PAGE_MODE.VIEW}\n                />\n              </div>\n            </div>\n          </AclGuard>\n        )}\n      </SaveComponent>\n\n      <ToastCustom\n        position={\"bottom-right\"}\n        ref={toastMessageRef}\n        toastText={toastMessage}\n        variant={TOAST_STYLE_TYPE.PRIMARY}\n      />\n\n      <ErrorDialog\n        onHide={() => {\n          setShowDialogAPIError(false);\n          setErrorMessage(\"\");\n        }}\n        visible={showDialogAPIError}\n        errorMessage={errorMessage}\n      />\n    </div>\n  );\n};\n\nexport default PurposeOfLoan;\n"],"names":["intialOverallCommentsTextEditorPageObj","OverallComments","props","data","payloadInfo","isLoading","getDataOnCancel","pageObj","setPageObj","useState","pageMode","setPageMode","PAGE_MODE","toastMessage","setToastMessage","triggerToast","setTriggerToast","errorMessage","setErrorMessage","showDialogAPIError","setShowDialogAPIError","toastMessageRef","useRef","editorRef","useEffect","prevObj","_a","handleEditorValidation","e","validateEditor","prevPageObj","_d","_c","_b","prevState","onSave","payload","enrichForOverallComments","res","CamService","validatePutAPIResponse","STATIC_MASTER_TYPE_TOAST_TEXT","err","parseStandardAPIErrorMessage","onEdit","onCancel","jsx","SaveComponent","SkeletonCustom","AclGuard","RichTextEditor","ToastCustom","TOAST_STYLE_TYPE","ErrorDialog","initialPurposeOfLoanTextEditorPageObj","PurposeOfLoan","enrichForPurposeOfLoan"],"mappings":"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"}