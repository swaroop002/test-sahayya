{"version":3,"file":"SharePaymentDetails-7d6fd6f2.js","sources":["../../src/assets/img/buttonIcons/copy-disabled.svg","../../src/assets/img/buttonIcons/copy.svg","../../src/assets/img/buttonIcons/mail-disabled.svg","../../src/assets/img/buttonIcons/mail.svg","../../src/assets/img/buttonIcons/sms-disabled.svg","../../src/assets/img/buttonIcons/sms.svg","../../src/components/SmallIconTextButton/SmallIconTextButton.tsx","../../src/components/SharePaymentDetailsDialog/SharePaymentDetails.tsx"],"sourcesContent":["export default \"__VITE_ASSET__b8955dbb__\"","export default \"__VITE_ASSET__5bf06bc3__\"","export default \"__VITE_ASSET__801ebc8f__\"","export default \"__VITE_ASSET__8b3f8749__\"","export default \"__VITE_ASSET__850e0678__\"","export default \"__VITE_ASSET__93b4897a__\"","import copyDisabledIcon from \"assets/img/buttonIcons/copy-disabled.svg\";\nimport copyIcon from \"assets/img/buttonIcons/copy.svg\";\nimport mailDisabledIcon from \"assets/img/buttonIcons/mail-disabled.svg\";\nimport mailIcon from \"assets/img/buttonIcons/mail.svg\";\nimport smsDisabledIcon from \"assets/img/buttonIcons/sms-disabled.svg\";\nimport linkIcon from \"assets/img/buttonIcons/link.svg\";\nimport smsIcon from \"assets/img/buttonIcons/sms.svg\";\nimport primaryLoader from \"assets/img/common/Loading.svg\";\nimport BaseButton, { IBaseButtonProps } from \"components/base/BaseButton\";\nimport { IButtonCommonStyleProps } from \"components/interface/Button\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SHARE_BUTTON } from \"utils/Constant\";\n\ninterface IButtonBoxProps extends IBaseButtonProps, IButtonCommonStyleProps {\n  buttonType: keyof typeof SHARE_BUTTON;\n  buttonLabel?: string;\n}\n\nconst SimpleButton: React.FC<IButtonBoxProps> = (props: IButtonBoxProps) => {\n  const BUTTON_OBJECT = {\n    COPY: {\n      label: props?.buttonLabel ?? \"Copy\",\n      icon: copyIcon,\n      disabledIcon: copyDisabledIcon,\n    },\n    MAIL: {\n      label: props?.buttonLabel ?? \"Mail\",\n      icon: mailIcon,\n      disabledIcon: mailDisabledIcon,\n    },\n    SMS: {\n      label: props?.buttonLabel ?? \"SMS\",\n      icon: smsIcon,\n      disabledIcon: smsDisabledIcon,\n    },\n    LINK: {\n      label: props?.buttonLabel ?? \"Link\",\n      icon: linkIcon,\n      disabledIcon: linkIcon,\n      iconPos: props?.iconPos ?? \"right\",\n    },\n  };\n\n  const _loadingIcon = <img src={primaryLoader} className=\"animate-spin absolute right-4\" />;\n\n  const { t } = useTranslation();\n\n  const { buttonType, onClickWithLoader, ...primeReactProps } = props;\n  const { label, onClick, disabled, loadingIcon } = primeReactProps;\n  const [showLoader, setShowLoader] = useState(false);\n\n  const button: any = BUTTON_OBJECT?.[buttonType];\n  const translatedLabel: string = t(button?.label ?? \"\");\n\n  const getClassNames = () => {\n    return `flex-row-reverse text-xs ${\n      disabled\n        ? \" text-secondary-steelBlue-400\"\n        : \" text-primary-ptext-1000  hover:text-primary-buttonPrimaryHoverColor \"\n    }  ${props?.className}`;\n  };\n\n  const onButtonClick = (e: any) => {\n    if (onClick) {\n      onClick(e);\n    } else if (onClickWithLoader) {\n      const res = onClickWithLoader();\n      if (Promise.resolve(res) === res) {\n        setShowLoader(true);\n        res\n          .then((message: any) => {\n            setShowLoader(false);\n          })\n          .catch(() => {\n            setShowLoader(false);\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"relative text-xs \">\n      <BaseButton\n        {...primeReactProps}\n        className={getClassNames()}\n        label={translatedLabel}\n        loadingIcon={loadingIcon ?? _loadingIcon}\n        iconPos={button?.iconPos ?? \"right\"}\n        icon={<img src={!disabled ? button?.icon : button?.disabledIcon} className=\" ml-0.5 \" />}\n        onClick={onButtonClick}\n        loading={showLoader}\n        disabled={showLoader || disabled}\n      />\n    </div>\n  );\n};\n\n// Memoization\n\nexport default React.memo(SimpleButton);\n// redux wiring\n","import LoadingIcon from \"assets/img/common/Loading.svg\";\nimport { IBankAutoComplete } from \"components/AddNewReceiptDialog/AddNewReceiptDialog\";\nimport AutoComplete from \"components/AutoComplete\";\nimport ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport DialogBox from \"components/Dialog/Dialog\";\nimport { Column } from \"components/EditableTableV2/EditableTableV2\";\nimport ErrorDialog from \"components/ErrorDialog/ErrorDialog\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport LinkButton from \"components/LinkButton/LinkButton\";\nimport ReadOnlyTable from \"components/ReadOnlyTable/ReadOnlyTable\";\nimport SimpleDropDown from \"components/SimpleDropDown\";\nimport SmallIconTextButton from \"components/SmallIconTextButton/SmallIconTextButton\";\nimport Text from \"components/Text/Text\";\nimport { ChangeEvent, forwardRef, useEffect, useRef, useState } from \"react\";\nimport DepositAccountService from \"services/transaction/DDE/DepositAccountService\";\nimport FeeService from \"services/transaction/FeeService\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  copyData,\n  getStandardValidator,\n  messageReplace,\n  parseStandardAPIErrorMessage,\n} from \"utils/CommonUtil\";\nimport {\n  BUTTON_TYPE,\n  FEE_MODE,\n  INPUT_STYLE_TYPE,\n  SHARE_BUTTON,\n  STATIC_MASTER_TYPE_TOAST_TEXT,\n  TOAST_STYLE_TYPE,\n} from \"utils/Constant\";\nimport { IDropDownOptions } from \"views/transaction/PageDDE/Login/Helper\";\nimport ToastCustom from \"components/Toast\";\n\nexport interface ISharePaymentDetailsRef {\n  save?: () => any;\n}\n\ninterface ISharePaymentDetailsDialog {\n  onHide: () => void;\n  visible: boolean;\n  emailService?: any;\n  instrumentTypeOptions: IDropDownOptions[];\n}\n\nexport interface ISharePaymentData {\n  instrumentType: string;\n  sahayyaBankAccount: IBankAutoComplete;\n  upi: { qr: string; link: string };\n}\nconst initialsSharePaymentData = {\n  instrumentType: \"\",\n  sahayyaBankAccount: {\n    name: \"\",\n    uid: \"\",\n    branch: \"\",\n    accountNo: \"\",\n    holderName: \"\",\n    ifscCode: \"\",\n  },\n  upi: { qr: \"\", link: \"\" },\n};\n\nconst SharePaymentDetailsDialog = forwardRef<ISharePaymentDetailsRef, ISharePaymentDetailsDialog>(\n  (props, ref) => {\n    const { onHide, visible, instrumentTypeOptions, emailService } = props;\n\n    /*\n    -------------------------------------------------------\n      State\n    -------------------------------------------------------\n  */\n    const [suggestionsTemplate, setSuggestionsTemplate] = useState<IBankAutoComplete[]>([]);\n    const [pageObj, setPageObj] = useState<ISharePaymentData>({ ...initialsSharePaymentData });\n    const [, forceUpdate] = useState<undefined | boolean>(undefined);\n    const [showDialogAPIError, setShowDialogAPIError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [toastMessage, setToastMessage] = useState(\"\");\n    const [toastMessageVariant, setToastMessageVariant] = useState(TOAST_STYLE_TYPE.PRIMARY);\n    const [triggerToast, setTriggerToast] = useState(false);\n    const simpleValidator = useRef(\n      new SimpleReactValidator({\n        validators: { ...getStandardValidator() },\n        ...messageReplace(),\n        autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n      })\n    );\n    const [isTextCopied, setIsTextCopied] = useState(false);\n    const bankAccountDetailsTableRef = useRef<any>(null);\n    const toastMessageRef = useRef(null);\n\n    /*\n    -------------------------------------------------------\n      useEffect\n    -------------------------------------------------------\n  */\n\n    useEffect(() => {\n      resetValidator();\n    }, [visible]);\n\n    useEffect(() => {\n      if (pageObj.sahayyaBankAccount.upiHandle && pageObj.instrumentType === FEE_MODE.UPI) {\n        getUpiQrAndLink();\n      }\n    }, [pageObj.sahayyaBankAccount.upiHandle]);\n\n    useEffect(() => {\n      if (errorMessage) {\n        setShowDialogAPIError(true);\n      }\n    }, [errorMessage]);\n\n    useEffect(() => {\n      if (toastMessageRef?.current && toastMessage !== \"\") {\n        // @ts-ignore: will be fixed in future\n        toastMessageRef?.current?.showFunction();\n        setToastMessage(\"\");\n      }\n    }, [toastMessage, toastMessageVariant, triggerToast]);\n\n    useEffect(() => {\n      simpleValidator.current.visibleFields = [];\n      simpleValidator?.current?.purgeFields();\n    }, [pageObj?.instrumentType]);\n\n    /*\n    -------------------------------------------------------\n      Service Calls\n    -------------------------------------------------------\n  */\n    const getUpiQrAndLink = async () => {\n      try {\n        const res = await FeeService.getDdeUpiQrAndLink(\n          pageObj?.sahayyaBankAccount?.upiHandle ?? \"\"\n        );\n        setPageObj((prevObj) => ({\n          ...prevObj,\n          upi: { ...prevObj.upi, qr: res.data.upiQr, link: res.data.upiLink },\n        }));\n      } catch (err) {\n        console.error(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n    };\n\n    /* \n  -------------------------------------------------------\n    Handlers\n  -------------------------------------------------------\n  */\n\n    const handleAutoCompleteBankChange = (event: ChangeEvent<HTMLInputElement> | any) => {\n      const { name, value } = event.target;\n      if (typeof value === \"object\") {\n        setPageObj((prevPageObj: any) => ({\n          ...prevPageObj,\n          [name]: {\n            name: value?.name,\n            uid: value?.uid,\n            branch: value?.branch,\n            accountNo: value?.accountNo,\n            holderName: value?.holderName,\n            ifscCode: value?.ifscCode,\n            upiHandle: value?.upiHandle,\n          },\n        }));\n      } else {\n        setPageObj((prevPageObj) => ({\n          ...prevPageObj,\n          [name]: {\n            name: value,\n            uid: \"\",\n            branch: \"\",\n            accountNo: \"\",\n            holderName: \"\",\n            ifscCode: \"\",\n            upiHandle: \"\",\n          },\n          upi: { ...prevPageObj.upi, link: \"\", qr: \"\" },\n        }));\n      }\n    };\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement> | any) => {\n      setPageObj((prevPageObj: any) => ({\n        ...prevPageObj,\n        ...initialsSharePaymentData,\n        [e.target.name]: e.target.value,\n      }));\n    };\n\n    const onClose = () => {\n      // debugger;\n      setPageObj((prevPageObj) => ({ ...prevPageObj, ...initialsSharePaymentData }));\n      onHide();\n    };\n\n    /* \n    -------------------------------------------------------\n    Validators\n    -------------------------------------------------------\n  */\n    const validate = (e: any) => {\n      simpleValidator?.current?.showMessageFor(e?.target?.name);\n    };\n\n    const validateForm =  () => {\n      let isValid = false;\n      isValid = simpleValidator?.current?.allValid() ?? false;\n      if (isValid) {\n        return isValid;\n      } else {\n        forceUpdate((prev) => !prev);\n        simpleValidator?.current?.showMessages();\n        forceUpdate((prev) => !prev);\n        return false;\n      }\n    };\n\n    /*\n    -------------------------------------------------------\n    Button Click Handlers\n    -------------------------------------------------------\n  */\n    const onCopy = () => {\n      setIsTextCopied(true);\n      setTimeout(() => {\n        setIsTextCopied(false);\n      }, 2000);\n      if (pageObj) {\n        const { holderName, name, branch, accountNo, ifscCode } = pageObj.sahayyaBankAccount;\n        const paymentDetails = ` Payment Details \\n\\n \\t\\u2022 Pay to : ${holderName} \\n \\t\\u2022 Bank Name : ${name} \\n \\t\\u2022 Branch : ${branch} \\n \\t\\u2022 Bank Account no : ${accountNo} \\n \\t\\u2022 IFSC Code : ${ifscCode}`;\n        console.log(paymentDetails);\n\n        copyData(paymentDetails);\n      }\n    };\n\n    const onSendEmail = async () => {\n      // const payload = enrichForNewReceipt(data);\n      // if (payload) {\n        if(!validateForm()){\n           return;\n        }\n      try {\n        await emailService?.(pageObj?.sahayyaBankAccount?.uid);\n        setToastMessageVariant(TOAST_STYLE_TYPE.PRIMARY);\n        setToastMessage(STATIC_MASTER_TYPE_TOAST_TEXT.SAVED);\n        setTriggerToast(!triggerToast);\n      } catch (err) {\n        console.log(err);\n        setErrorMessage(parseStandardAPIErrorMessage(err));\n      }\n      // }\n    };\n    /* \n -------------------------------------------------------\n   Helper Functions\n -------------------------------------------------------\n  */\n\n    const resetValidator = () => {\n      simpleValidator.current = new SimpleReactValidator({\n        validators: { ...getStandardValidator() },\n        ...messageReplace(),\n        autoForceUpdate: { forceUpdate: () => forceUpdate((prev) => !prev) },\n      });\n      simpleValidator?.current?.hideMessages();\n    };\n\n    const searchBank = async (event: any) => {\n      let suggestionsTemplate = [];\n      // setIsLoading(true);\n      try {\n        await DepositAccountService.getBankAccount(0, 50, event.query).then((res) => {\n          const options = res.data.results?.map((item: any) => ({\n            name: item.bank.name,\n            accountNo: item.accountNumber,\n            branch: item.ifsc.branch,\n            uid: item.uid,\n            holderName: item.holderName,\n            ifscCode: item.ifsc?.ifscCode,\n            upiHandle: item.upiHandle,\n          }));\n          if (res.status === 200) {\n            suggestionsTemplate = [...(options ?? [])];\n            // setIsLoading(false);\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      if (suggestionsTemplate.length === 0) {\n        suggestionsTemplate.push({ name: \"\", uid: \"\", accountNo: \"\", branch: \"\" });\n      }\n\n      setSuggestionsTemplate(suggestionsTemplate);\n    };\n\n    /* \n    -------------------------------------------------------\n      Sectional Render Functions: For Sub components / section wise renders\n    -------------------------------------------------------\n  */\n\n    const renderHolderName = (rowData: IBankAutoComplete) => {\n      return <span>{rowData?.holderName}</span>;\n    };\n\n    const renderBankName = (rowData: IBankAutoComplete) => {\n      return <span>{rowData?.uid ? rowData?.name : \"\"}</span>;\n    };\n\n    const renderBranch = (rowData: IBankAutoComplete) => {\n      return <span>{rowData?.branch}</span>;\n    };\n\n    const renderBankAccountNo = (rowData: IBankAutoComplete) => {\n      return <span>{rowData?.accountNo}</span>;\n    };\n\n    const renderIfscCode = (rowData: IBankAutoComplete) => {\n      return <span>{rowData?.ifscCode}</span>;\n    };\n\n    const renderTable = () => {\n      const { sahayyaBankAccount } = pageObj;\n      return (\n        <div className=\"px-6 pb-6\">\n          <div className=\"mb-1.5\">\n            <Text\n              label={\"label.dde.bankAccountDetails\"}\n              className=\"text-base  text-primary-sideBarBgColor font-medium\"\n            />\n          </div>\n          <ReadOnlyTable\n            // standardDataFormatPromise={FeeService.getBalance}\n            value={[\n              {\n                uid: sahayyaBankAccount.uid ?? \"\",\n                holderName: sahayyaBankAccount.holderName ?? \"\",\n                name: sahayyaBankAccount.name ?? \"\",\n                branch: sahayyaBankAccount.branch ?? \"\",\n                accountNo: sahayyaBankAccount.accountNo ?? \"\",\n                ifscCode: sahayyaBankAccount.ifscCode ?? \"\",\n              },\n            ]}\n            className=\" share-payment-details-table\"\n            // search={`&loan.uid=${params.loanUid}`}\n            ref={bankAccountDetailsTableRef}\n            dataKey=\"uid\"\n          >\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"Pay To\"}\n              body={renderHolderName}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"Bank Name\"}\n              body={renderBankName}\n              style={{ minWidth: \"300px\" }}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"Branch\"}\n              body={renderBranch}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"Bank Account No\"}\n              body={renderBankAccountNo}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"IFSC Code\"}\n              body={renderIfscCode}\n            />\n          </ReadOnlyTable>\n        </div>\n      );\n    };\n    const renderBankDetails = () => {\n      const { sahayyaBankAccount } = pageObj;\n      return (\n        <>\n          {\" \"}\n          <div>\n            <AutoComplete\n              label=\"label.dde.sahayyaBankAccount\"\n              name=\"sahayyaBankAccount\"\n              value={sahayyaBankAccount?.name}\n              variant={INPUT_STYLE_TYPE.PRIMARY}\n              suggestions={suggestionsTemplate}\n              completeMethod={searchBank}\n              onChange={handleAutoCompleteBankChange}\n              itemTemplate={itemTemplateBank}\n              onBlur={validate}\n              // loader={isLoading}\n              validation={simpleValidator?.current?.message(\n                \"sahayyaBankAccount\",\n                sahayyaBankAccount?.uid,\n                \"mandatory\"\n              )}\n            />\n          </div>\n          <div>\n            <InputBox\n              label=\"label.loanListing.branch\"\n              name=\"branch\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              // onChange={handleChange}\n              onBlur={validate}\n              value={sahayyaBankAccount?.branch}\n              disabled\n            />\n          </div>\n          <div>\n            <InputBox\n              label=\"label.dde.accountNo\"\n              name=\"accountNo\"\n              variant={INPUT_STYLE_TYPE.SECONDARY}\n              // onChange={handleChange}\n              onBlur={validate}\n              value={sahayyaBankAccount?.accountNo}\n              className=\"text-right\"\n              disabled\n            />\n          </div>\n        </>\n      );\n    };\n\n    const renderInstrumentFields = () => {\n      const { instrumentType } = pageObj;\n      if (instrumentType === FEE_MODE.CHEQUE) {\n        return <>{renderBankDetails()}</>;\n      }\n      if (instrumentType === FEE_MODE.UPI) {\n        return <>{renderBankDetails()}</>;\n      }\n      return <></>;\n    };\n    const itemTemplateBank = (item: any) => {\n      return itemTemplate(item, `${item?.name}`);\n    };\n\n    const itemTemplate = (item: any, title: any, subTitle?: any) => {\n      if (item?.name === undefined) {\n        return (\n          <div className=\"flex flex-col items-center justify-center h-39\">\n            <img src={LoadingIcon} alt=\"search-icon\" className=\" h-7 w-7\" />\n            <Text className=\"text-primary-labelColor mt-2\" label=\"Loading...\" />\n          </div>\n        );\n      }\n      return (\n        <div className=\"flex flex-col\">\n          <Text className=\"text-primary-labelColor\" label={title} />\n          {subTitle ? <Text className=\"text-secondary-gray-500 text-xxs\" label={subTitle} /> : null}\n        </div>\n      );\n    };\n\n    const renderQr = () => {\n      return (\n        <>\n          <div className=\"flex items-end px-6 pb-6\">\n            <div className=\"w-23 h-23\">\n              <img src={pageObj.upi.qr} />\n            </div>\n            <div className=\" ml-6\">\n              <LinkButton\n                path={pageObj.upi.link}\n                label={pageObj.upi.link}\n                target={pageObj.upi.link}\n              />\n            </div>\n          </div>\n        </>\n      );\n    };\n\n    /*\n    -------------------------------------------------------\n    Main Rendering\n    -------------------------------------------------------\n  */\n\n    const { instrumentType } = pageObj;\n\n    return (\n      <>\n        <DialogBox\n          onHide={onHide}\n          visible={visible}\n          modal\n          closable={false}\n          // dismissableMask={true}\n          variant={INPUT_STYLE_TYPE.SECONDARY}\n          className={\" w-[842px] !p-0\"}\n        >\n          <div className=\"flex justify-between items-center px-6 pt-3 pb-3 border-b border-primary-gray-600\">\n            <Text\n              className=\"text-primary-primaryTextColor text-base font-bold \"\n              label={\"label.dde.sharePaymentDetails\"}\n            />\n            <div className=\"flex items-center\">\n              <div className=\"mr-6\">\n                <SmallIconTextButton\n                  buttonType={SHARE_BUTTON.COPY}\n                  onClick={onCopy}\n                  buttonLabel={isTextCopied ? \"Copied!\" : \"Copy\"}\n                  disabled={\n                    instrumentType === \"\" || instrumentType === FEE_MODE.CASH || isTextCopied\n                  }\n                />\n              </div>\n              <div className=\"mr-6\">\n                <SmallIconTextButton\n                  buttonType={SHARE_BUTTON.MAIL}\n                  onClick={onSendEmail}\n                  disabled={instrumentType === \"\"}\n                />\n              </div>\n              <div className=\"mr-12\">\n                <SmallIconTextButton\n                  buttonType={SHARE_BUTTON.SMS}\n                  disabled={instrumentType === \"\"}\n                />\n              </div>\n              <div className=\"flex\">\n                <div className=\"mr-6\">\n                  <ButtonBox\n                    buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n                    onClick={onClose}\n                    className=\"w-8 h-8\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            className={`${\n              instrumentType === \"\" || instrumentType === FEE_MODE.CASH\n                ? \"h-[12.5rem]\"\n                : \"h-[26.25rem]\"\n            }   overflow-y-auto `}\n          >\n            <div className={`mt-7 grid grid-cols-3 gap-3 px-6 mb-5 `}>\n              <div>\n                <SimpleDropDown\n                  label=\"label.dde.instrumentType\"\n                  name=\"instrumentType\"\n                  placeholder=\"placeholder.dde.instrumentType\"\n                  value={instrumentType}\n                  variant={INPUT_STYLE_TYPE.PRIMARY}\n                  options={instrumentTypeOptions}\n                  optionLabel=\"name\"\n                  optionValue=\"value\"\n                  onChange={handleChange}\n                  onBlur={validate}\n                  // loader={isLoading}\n                  validation={simpleValidator?.current?.message(\n                    \"instrumentType\",\n                    instrumentType,\n                    \"mandatory\"\n                  )}\n                  // disabled={pageMode === PAGE_MODE.VIEW}\n                />\n              </div>\n              <div></div>\n              <div></div>\n\n              {renderInstrumentFields()}\n            </div>\n            {instrumentType === FEE_MODE.UPI || instrumentType === FEE_MODE.CHEQUE\n              ? renderTable()\n              : null}\n            {instrumentType === FEE_MODE.UPI ? renderQr() : null}\n          </div>\n        </DialogBox>\n        <ToastCustom\n          position={\"bottom-right\"}\n          ref={toastMessageRef}\n          toastText={toastMessage}\n          variant={toastMessageVariant}\n        />\n        <ErrorDialog\n          onHide={() => {\n            setShowDialogAPIError(false);\n            setErrorMessage(\"\");\n          }}\n          visible={showDialogAPIError}\n          errorMessage={errorMessage}\n        />\n      </>\n    );\n  }\n);\n\nexport default SharePaymentDetailsDialog;\n"],"names":["copyDisabledIcon","copyIcon","mailDisabledIcon","mailIcon","smsDisabledIcon","smsIcon","SimpleButton","props","BUTTON_OBJECT","linkIcon","_loadingIcon","jsx","primaryLoader","t","useTranslation","buttonType","onClickWithLoader","primeReactProps","label","onClick","disabled","loadingIcon","showLoader","setShowLoader","useState","button","translatedLabel","getClassNames","onButtonClick","e","res","message","BaseButton","SmallIconTextButton","React","initialsSharePaymentData","SharePaymentDetailsDialog","forwardRef","ref","onHide","visible","instrumentTypeOptions","emailService","suggestionsTemplate","setSuggestionsTemplate","pageObj","setPageObj","forceUpdate","showDialogAPIError","setShowDialogAPIError","errorMessage","setErrorMessage","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","TOAST_STYLE_TYPE","triggerToast","setTriggerToast","simpleValidator","useRef","SimpleReactValidator","getStandardValidator","messageReplace","prev","isTextCopied","setIsTextCopied","bankAccountDetailsTableRef","toastMessageRef","useEffect","resetValidator","FEE_MODE","getUpiQrAndLink","_a","FeeService","prevObj","err","parseStandardAPIErrorMessage","handleAutoCompleteBankChange","event","name","value","prevPageObj","handleChange","onClose","validate","_b","validateForm","isValid","onCopy","holderName","branch","accountNo","ifscCode","paymentDetails","copyData","onSendEmail","STATIC_MASTER_TYPE_TOAST_TEXT","searchBank","DepositAccountService","options","item","error","renderHolderName","rowData","renderBankName","renderBranch","renderBankAccountNo","renderIfscCode","renderTable","sahayyaBankAccount","jsxs","Text","ReadOnlyTable","Column","renderBankDetails","Fragment","AutoComplete","INPUT_STYLE_TYPE","itemTemplateBank","InputBox","renderInstrumentFields","instrumentType","itemTemplate","title","subTitle","LoadingIcon","renderQr","LinkButton","DialogBox","SHARE_BUTTON","ButtonBox","BUTTON_TYPE","SimpleDropDown","ToastCustom","ErrorDialog"],"mappings":"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"}