{"version":3,"file":"StateCreateViewEdit-11f0cae9.js","sources":["../../src/views/masterData/Location/State/StateCreateViewEdit/StateCreateViewEdit.tsx"],"sourcesContent":["import ButtonBox from \"components/ButtonBox/ButtonBox\";\nimport InputBox from \"components/InputBox/InputBox\";\nimport InputTextArea from \"components/InputTextArea/InputTextArea\";\nimport PageTitle from \"components/PageTitle/PageTitle\";\nimport { RouteProps, withRouter } from \"hoc/withRouter\";\nimport queryString from \"query-string\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { linkState } from \"routes\";\nimport { validateGetAPIResponse } from \"utils/CommonUtil\";\nimport {\n  ACTIVE_TYPE,\n  BUTTON_TYPE, INPUT_STYLE_TYPE, PAGE_MODE\n} from \"utils/Constant\";\nimport StateService from \"services/masterdata/Location/State\";\nimport AclGuard from \"components/AclGuard/AclGuard\";\n\n\nconst StateCreateViewEdit = (props: RouteProps) => {\n  /*\n      -------------------------------------------------------\n        States\n      -------------------------------------------------------\n    */\n  const [pageObj, setPageObj] = useState({\n    state: \"\",\n    country: \"\",\n    description: \"\",\n    reasons: \"\",\n    isActive: \"\",\n  });\n  const [initialObj, setInitialObj] = useState({\n    state: \"\",\n    country: \"\",\n    description: \"\",\n    reasons: \"\",\n    isActive: \"\",\n  });\n  const [pageMode, setPageMode] = useState(PAGE_MODE.CREATE);\n  const [uid, setUid] = useState<string>(\"\");\n  const toastMessageRef = useRef(null);\n\n  /*\n    -------------------------------------------------------\n      Hooks: useEffect\n    -------------------------------------------------------\n  */\n  useEffect(() => {\n    const parsed: {\n      mode?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n  }, []);useEffect(() => {\n    const parsed: {\n      mode?: string;\n      uid?: string;\n    } = queryString.parse(props.location.search);\n    if (parsed?.mode && parsed?.mode !== undefined) {\n      setPageMode(parsed.mode);\n    }\n    if (parsed?.uid && parsed?.uid !== undefined) {\n      setUid(parsed.uid);\n\n      StateService.findById(parsed.uid)\n        .then((res: any) => {\n          if (validateGetAPIResponse(res)) {\n            console.log(res);\n            if (Object.keys(res.data).length > 0 || res.data.id) {\n              setPageObj({\n                state: res?.data?.name || \"\",\n                country: res?.data?.country || \"\",\n                description: res?.data?.description || \"\",\n                reasons: res?.data.reason || \" \",\n                isActive: res?.data?.isActive ? ACTIVE_TYPE.ACTIVE : ACTIVE_TYPE.INACTIVE,\n              });\n              setInitialObj({ ...res?.data });\n            }\n          }\n        })\n        .catch((err) => {\n          // IF API fails to load, show the error message\n        });\n    }\n  }, []);\n\n  /*\n    -------------------------------------------------------\n      Handlers: Event handler for onChange, onBlur etc\n    -------------------------------------------------------\n  */\n\n  const handleInputChange = (event: any) => {\n    const { name, value } = event.target;\n    setPageObj((prevPageObj) => ({\n      ...prevPageObj,\n      [name]: value,\n    }));\n  };\n\n  /* \n    -------------------------------------------------------\n      ButtonClick Functions:\n    -------------------------------------------------------\n  */\n  const onSaveClick = () => {\n    console.log(\"clicked\")\n  };\n\n  const onCancelClick = () => {\n    props.navigate(linkState);\n  };\n\n  const onApproveClick = () => {\n    console.log(\"object\")\n  };\n\n  const onBackClick = () => {\n    props.navigate(linkState);\n  };\n\n  const onEditClick = () => {\n    setPageMode(PAGE_MODE.EDIT);\n  };\n\n  /* \n    -------------------------------------------------------\n      Helper Functions:\n    -------------------------------------------------------\n  */\n  const getPageTitle = () => {\n    switch (pageMode) {\n      case PAGE_MODE.CREATE:\n        return \"heading.state.create\";\n      case PAGE_MODE.VIEW:\n        return \"heading.state.view\";\n      case PAGE_MODE.EDIT:\n        return \"heading.state.edit\";\n      default:\n        return \"heading.state.create\";\n    }\n  };\n\n  const { state, country, description, reasons, isActive } = pageObj;\n\n  return (\n    <AclGuard override={{ read: [PAGE_MODE.VIEW, PAGE_MODE.REVIEW].includes(pageMode) }}>\n\n    <div className=\"flex flex-col gap-3\">\n      <div className=\"flex w-full justify-between  items-center\">\n         \n          <PageTitle title={getPageTitle()} />\n        \n        <div className=\"flex \">\n          {pageMode === PAGE_MODE.CREATE || pageMode === PAGE_MODE.EDIT ? (\n              <div className=\"flex gap-10\">\n                <div className=\"flex gap-5\">\n             \n                <ButtonBox\n                  className=\"reset-red\"\n                  buttonType={BUTTON_TYPE.CANCEL_OUTLINE}\n                  onClick={onCancelClick}\n                />\n             \n             \n                <ButtonBox buttonType={BUTTON_TYPE.SAVE_OUTLINE} onClick={onSaveClick} />\n                </div>\n              <div>\n                <ButtonBox\n                  className=\"approve-primary\"\n                  buttonType={BUTTON_TYPE.SEND_FOR_APPROVAL}\n                  onClick={onApproveClick}\n                />\n              </div>\n              </div>\n          ) : (\n            <>\n              <div className=\"mr-5\">\n                <ButtonBox buttonType={BUTTON_TYPE.BACK_OUTLINE} onClick={onBackClick} />\n              </div>\n              <div className=\"\">\n                <ButtonBox\n                  buttonType={BUTTON_TYPE.EDIT_OUTLINE}\n                  className=\"blue-primary\"\n                  onClick={onEditClick}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <div className=\"grid grid-cols-4 gap-3\">\n        <div className=\"col-span-1\">\n          <InputBox\n            label=\"input.state.state\"\n            name=\"state\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            onChange={handleInputChange}\n            value={state}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n        <div className=\"col-span-1\">\n          <InputBox\n            label=\"input.state.country\"\n            name=\"country\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            onChange={handleInputChange}\n            value={country}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n      </div>\n      <div className=\"grid grid-cols-4 gap-3\">\n        <div className=\"col-span-2\">\n          <InputTextArea\n            label=\"input.state.description\"\n            name=\"value\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            maxCount={200}\n            onChange={handleInputChange}\n            value={description}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n        <div className=\"col-span-2\">\n          <InputTextArea\n            label=\"input.state.reasons\"\n            name=\"reasons\"\n            variant={INPUT_STYLE_TYPE.SECONDARY}\n            maxCount={200}\n            onChange={handleInputChange}\n            value={reasons}\n            disabled={pageMode === PAGE_MODE.VIEW}\n          />\n        </div>\n      </div>\n    </div>\n    </AclGuard>\n\n  );\n};\n\nexport default withRouter(StateCreateViewEdit);\n"],"names":["StateCreateViewEdit","props","pageObj","setPageObj","useState","initialObj","setInitialObj","pageMode","setPageMode","PAGE_MODE","uid","setUid","useRef","useEffect","parsed","queryString","StateService","res","validateGetAPIResponse","_a","_b","_c","_d","ACTIVE_TYPE","err","handleInputChange","event","name","value","prevPageObj","onSaveClick","onCancelClick","linkState","onApproveClick","onBackClick","onEditClick","getPageTitle","state","country","description","reasons","isActive","AclGuard","jsxs","jsx","PageTitle","ButtonBox","BUTTON_TYPE","Fragment","InputBox","INPUT_STYLE_TYPE","InputTextArea","StateCreateViewEdit$1","withRouter"],"mappings":"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"}