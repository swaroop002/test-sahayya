{"version":3,"file":"View5-fe369db9.js","sources":["../../src/views/view5/View5.tsx"],"sourcesContent":["import { IDocumentUploaderRef } from \"components/DocumentUploader/DocumentUploader\";\nimport FileUploadCustom from \"components/FileUploadCustom/FileUploadCustom\";\nimport { IMediaInfo } from \"components/MediaGallery/MediaGallery\";\nimport ProfilePictureUpload from \"components/ProfilePictureUpload/ProfilePictureUpload\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport ReactCrop, {\n  Crop,\n  PixelCrop,\n  centerCrop,\n  convertToPixelCrop,\n  makeAspectCrop,\n} from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\nfunction centerAspectCrop(mediaWidth: number, mediaHeight: number, aspect: number) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: \"%\",\n        width: 90,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight\n    ),\n    mediaWidth,\n    mediaHeight\n  );\n}\n\nconst TO_RADIANS = Math.PI / 180;\n\nimport { DependencyList } from \"react\";\n\nexport function useDebounceEffect(fn: () => void, waitTime: number, deps?: DependencyList) {\n  useEffect(() => {\n    const t = setTimeout(() => {\n      // fn.apply(undefined, deps);\n    }, waitTime);\n\n    return () => {\n      clearTimeout(t);\n    };\n  }, deps);\n}\n\nexport async function canvasPreview(\n  image: HTMLImageElement,\n  canvas: HTMLCanvasElement,\n  crop: PixelCrop,\n  scale = 1,\n  rotate = 0\n) {\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    throw new Error(\"No 2d context\");\n  }\n\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  // devicePixelRatio slightly increases sharpness on retina devices\n  // at the expense of slightly slower render times and needing to\n  // size the image back down if you want to download/upload and be\n  // true to the images natural size.\n  const pixelRatio = window.devicePixelRatio;\n  // const pixelRatio = 1\n  canvas.width = Math.floor(crop.width * scaleX * pixelRatio);\n  canvas.height = Math.floor(crop.height * scaleY * pixelRatio);\n\n  ctx.scale(pixelRatio, pixelRatio);\n  ctx.imageSmoothingQuality = \"high\";\n\n  const cropX = crop.x * scaleX;\n  const cropY = crop.y * scaleY;\n\n  const rotateRads = rotate * TO_RADIANS;\n  const centerX = image.naturalWidth / 2;\n  const centerY = image.naturalHeight / 2;\n\n  ctx.save();\n\n  // 5) Move the crop origin to the canvas origin (0,0)\n  ctx.translate(-cropX, -cropY);\n  // 4) Move the origin to the center of the original position\n  ctx.translate(centerX, centerY);\n  // 3) Rotate around the origin\n  ctx.rotate(rotateRads);\n  // 2) Scale the image\n  ctx.scale(scale, scale);\n  // 1) Move the center of the image to the origin (0,0)\n  ctx.translate(-centerX, -centerY);\n  ctx.drawImage(\n    image,\n    0,\n    0,\n    image.naturalWidth,\n    image.naturalHeight,\n    0,\n    0,\n    image.naturalWidth,\n    image.naturalHeight\n  );\n\n  ctx.restore();\n}\n\nconst MyCropper = () => {\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const hiddenAnchorRef = useRef<HTMLAnchorElement>(null);\n  const blobUrlRef = useRef(\"\");\n  const [crop, setCrop] = useState<Crop>();\n  const [completedCrop, setCompletedCrop] = useState<PixelCrop>();\n  const [scale, setScale] = useState(1);\n  const [rotate, setRotate] = useState(0);\n  const [aspect, setAspect] = useState<number | undefined>(16 / 9);\n\n  function onSelectFile(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.files && e.target.files.length > 0) {\n      setCrop(undefined); // Makes crop preview update between images.\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => setImgSrc(reader.result?.toString() || \"\"));\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  function onImageLoad(e: React.SyntheticEvent<HTMLImageElement>) {\n    if (aspect) {\n      const { width, height } = e.currentTarget;\n      setCrop(centerAspectCrop(width, height, aspect));\n    }\n  }\n\n  useDebounceEffect(\n    async () => {\n      if (\n        completedCrop?.width &&\n        completedCrop?.height &&\n        imgRef.current &&\n        previewCanvasRef.current\n      ) {\n        // We use canvasPreview as it's much faster than imgPreview.\n        canvasPreview(imgRef.current, previewCanvasRef.current, completedCrop, scale, rotate);\n      }\n    },\n    100,\n    [completedCrop, scale, rotate]\n  );\n\n  console.log(crop, completedCrop);\n\n  function handleToggleAspectClick() {\n    if (aspect) {\n      setAspect(undefined);\n    } else {\n      setAspect(16 / 9);\n\n      if (imgRef.current) {\n        const { width, height } = imgRef.current;\n        const newCrop = centerAspectCrop(width, height, 16 / 9);\n        setCrop(newCrop);\n        // Updates the preview\n        setCompletedCrop(convertToPixelCrop(newCrop, width, height));\n      }\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Crop-Controls\">\n        <input type=\"file\" accept=\"image/*\" onChange={onSelectFile} />\n        <div>\n          <label htmlFor=\"scale-input\">Scale: </label>\n          <input\n            id=\"scale-input\"\n            type=\"number\"\n            step=\"0.1\"\n            value={scale}\n            disabled={!imgSrc}\n            onChange={(e) => setScale(Number(e.target.value))}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"rotate-input\">Rotate: </label>\n          <input\n            id=\"rotate-input\"\n            type=\"number\"\n            value={rotate}\n            disabled={!imgSrc}\n            onChange={(e) => setRotate(Math.min(180, Math.max(-180, Number(e.target.value))))}\n          />\n        </div>\n        <div>\n          <button onClick={handleToggleAspectClick}>Toggle aspect {aspect ? \"off\" : \"on\"}</button>\n        </div>\n      </div>\n      {!!imgSrc && (\n        <ReactCrop\n          crop={crop}\n          onChange={(_, percentCrop) => setCrop(percentCrop)}\n          onComplete={(c) => setCompletedCrop(c)}\n          aspect={aspect}\n          // minWidth={400}\n          minHeight={100}\n          // circularCrop\n        >\n          <img\n            ref={imgRef}\n            alt=\"Crop me\"\n            src={imgSrc}\n            style={{ transform: `scale(${scale}) rotate(${rotate}deg)` }}\n            onLoad={onImageLoad}\n          />\n        </ReactCrop>\n      )}\n      {!!completedCrop && (\n        <>\n          <div>\n            <canvas\n              ref={previewCanvasRef}\n              style={{\n                border: \"1px solid black\",\n                objectFit: \"contain\",\n                width: completedCrop.width,\n                height: completedCrop.height,\n              }}\n            />\n          </div>\n\n          {/* <div>\n            <button onClick={onDownloadCropClick}>Download Crop</button>\n            <div style={{ fontSize: 12, color: \"#666\" }}>\n              If you get a security error when downloading try opening the Preview in a new tab\n              (icon near top right).\n            </div>\n            <a\n              href=\"#hidden\"\n              ref={hiddenAnchorRef}\n              download\n              style={{\n                position: \"absolute\",\n                top: \"-200vh\",\n                visibility: \"hidden\",\n              }}\n            >\n              Hidden download\n            </a>\n          </div> */}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst View5: React.FC = () => {\n  const [showPopup, setShowPopup] = useState(false);\n  const toastMessageRef = useRef(null);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [toastMessageVariant, setToastMessageVariant] = useState(\"\");\n  const [triggerToast, setTriggerToast] = useState(false);\n  const [showMediaGallery, setShowMediaGallery] = useState(true);\n  const [mediaGalleryInfo, setMediaGalleryInfo] = useState<IMediaInfo>({\n    uid: \"\",\n    placeOfUpload: \"\",\n    name: \"\",\n    fileName: \"\",\n    category: \"\",\n    type: \"\",\n    sectionName: \"\",\n    fileType: \"\",\n    download: \"\",\n    url: \"\",\n  });\n  const docUploaderRef = useRef<IDocumentUploaderRef | null>(null);\n\n  useEffect(() => {\n    if (toastMessageRef?.current && toastMessage !== \"\") {\n      // @ts-ignore:fix\n      toastMessageRef?.current?.showFunction();\n    }\n  }, [toastMessage, toastMessageVariant, triggerToast]);\n\n  const toggleMediaGalleryVisibility = () => {\n    setShowMediaGallery((prev) => !prev);\n  };\n\n  const isMobile = window.innerWidth <= 768;\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-col gap-9\">\n        <div>\n          <ProfilePictureUpload\n            className=\"w-40\"\n            getUrl={(param) => {\n              console.log(param);\n            }}\n            editMode={false}\n          />\n        </div>\n\n        <div className=\"flex flex-col text-xs mb-10\">\n          <div>\n            <FileUploadCustom\n              footerTitle=\"DOC\"\n              getUrl={(info) => {\n                const galleryIfo = {\n                  ...mediaGalleryInfo,\n                  placeOfUpload: \"\",\n                  name: \"\",\n                  fileName: info.fileName,\n                  category: \"\",\n                  type: \"\",\n                  sectionName: \"\",\n                  fileType: info.contentType,\n                  download: \"\",\n                  url: info.url,\n                };\n                setMediaGalleryInfo({ ...galleryIfo });\n              }}\n              docInfoForMediaGallery={mediaGalleryInfo}\n            />\n          </div>\n        </div>\n\n        {/* <MediaGallery\n          visible={false}\n          containerClassNames={`asdasd`}\n          mediaInfo={{ src: \"\", fileType: \"\" }}\n          onToggleVisibility={toggleMediaGalleryVisibility}\n        /> */}\n\n        {/* media gallery */}\n\n        {/* <button\n          className=\"border rounded-xl w-40 h-12 bg-primary-cyan-100\"\n          onClick={() => toggleMediaGalleryVisibility()}\n        >\n          Open media gallery\n        </button> */}\n\n        {/* video player */}\n\n        {/* <div className=\"rounded-lg overflow-hidden\">\n          <VideoPlayer\n            mediaSource={\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"}\n            showRemainingTime\n            disableSeek={false}\n            onStart={() => console.log(\"Video started\")}\n          />\n        </div> */}\n\n        {/* audio player */}\n        {/* \n        <div className=\"w-[774px] h-[436px]\">\n          <AudioPlayer mediaSource={\"https://www.kozco.com/tech/piano2.wav\"} />\n        </div> */}\n\n        {/* <div className=\"w-full\">\n          <ReadOnlyTable\n            // ref={matchedResultsTableRef}\n            // standardDataFormatPromise={DedupeService.getSuggestionsForCustomerLinkSearch}\n            // search={tableObj.search ? tableObj.search : \"null\"}\n            values={[]}\n            className=\"!min-h-auto\"\n            dataKey=\"uid\"\n          >\n            <Column\n              className=\"text-primary-ptext-1000 text-xs p-1 h-12 px-3 flex justify-center items-center\"\n              header={\"label.search.selectOnlyOne\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.matchingList\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.loanApplicationNo\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.branch\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.applicantType\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.customerID\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.firstName\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.middleName\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.lastName\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.gender\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 pl-6\"\n              header={\"label.search.dob\"}\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n            />\n            <Column\n              className=\"text-primary-ptext-1000 text-left text-xs  p-1 h-12 px-6\"\n              header={\"label.search.mobileNo\"}\n              frozen={true}\n              alignFrozen=\"right\"\n              body={() => \"asdjklasjdklajskdjaskdj\"}\n              style={{ width: \"120px\" }}\n            />\n          </ReadOnlyTable>\n        </div> */}\n\n        <MyCropper />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default View5;\n"],"names":["centerAspectCrop","mediaWidth","mediaHeight","aspect","centerCrop","makeAspectCrop","TO_RADIANS","useDebounceEffect","fn","waitTime","deps","useEffect","t","canvasPreview","image","canvas","crop","scale","rotate","ctx","scaleX","scaleY","pixelRatio","cropX","cropY","rotateRads","centerX","centerY","MyCropper","imgSrc","setImgSrc","useState","previewCanvasRef","useRef","imgRef","setCrop","completedCrop","setCompletedCrop","setScale","setRotate","setAspect","onSelectFile","e","reader","_a","onImageLoad","width","height","handleToggleAspectClick","newCrop","convertToPixelCrop","jsxs","jsx","ReactCrop","_","percentCrop","c","Fragment","View5","toastMessageRef","toastMessage","setToastMessage","toastMessageVariant","setToastMessageVariant","triggerToast","setTriggerToast","mediaGalleryInfo","setMediaGalleryInfo","ProfilePictureUpload","param","FileUploadCustom","info","galleryIfo"],"mappings":"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"}